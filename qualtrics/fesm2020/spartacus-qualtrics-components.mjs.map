{"version":3,"file":"spartacus-qualtrics-components.mjs","sources":["../../../feature-libs/qualtrics/components/qualtrics-embedded-feedback/qualtrics-embedded-feedback.component.ts","../../../feature-libs/qualtrics/components/qualtrics-loader/config/default-qualtrics-config.ts","../../../feature-libs/qualtrics/components/qualtrics-loader/qualtrics-loader.service.ts","../../../feature-libs/qualtrics/components/qualtrics-loader/config/qualtrics-config.ts","../../../feature-libs/qualtrics/components/qualtrics-loader/qualtrics.component.ts","../../../feature-libs/qualtrics/components/qualtrics-components.module.ts","../../../feature-libs/qualtrics/components/qualtrics-loader/index.ts","../../../feature-libs/qualtrics/components/public_api.ts","../../../feature-libs/qualtrics/components/spartacus-qualtrics-components.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'cx-qualtrics-embedded-feedback',\n  template: '',\n})\nexport class QualtricsEmbeddedFeedbackComponent {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { QualtricsConfig } from './qualtrics-config';\n\nexport const defaultQualtricsConfig: QualtricsConfig = {\n  qualtrics: {},\n};\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport {\n  Inject,\n  Injectable,\n  isDevMode,\n  OnDestroy,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { ScriptLoader, WindowRef } from '@spartacus/core';\nimport { EMPTY, fromEvent, Observable, of, Subscription } from 'rxjs';\nimport { filter, map, switchMap, tap } from 'rxjs/operators';\n\nexport const QUALTRICS_EVENT_NAME = 'qsi_js_loaded';\n\ninterface QualtricsWindow extends Window {\n  QSI?: any;\n}\n\n/**\n * Service to integration Qualtrics.\n *\n * The integration observes the Qualtrics API, and when available, it runs the QSI API\n * to let Qualtrics evaluate the application.\n *\n * The service supports an additional _hook_ (`isDataLoaded()`) that can be used to load application\n * data before pulling the QSI API. This is beneficial in a single page application when additional\n * data is required before the Qualtrics _creatives_ run.\n *\n * This service also supports the creation of the Qualtrics deployment script. This is optional, as\n * the script can be added in alternatives ways.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class QualtricsLoaderService implements OnDestroy {\n  protected subscription = new Subscription();\n\n  /**\n   * Reference to the QSI API.\n   */\n  protected qsiApi: any;\n\n  /**\n   * QSI load event that happens when the QSI JS file is loaded.\n   */\n  private qsiLoaded$: Observable<any> =\n    isPlatformBrowser(this.platformId) && this.window\n      ? fromEvent(this.window, QUALTRICS_EVENT_NAME)\n      : of();\n\n  /**\n   * Emits the Qualtrics Site Intercept (QSI) JavaScript API whenever available.\n   *\n   * The API is emitted when the JavaScript resource holding this API is fully loaded.\n   * The API is also stored locally in the service, in case it's required later on.\n   */\n  protected qsi$: Observable<any> = this.qsiLoaded$.pipe(\n    switchMap(() => this.isDataLoaded()),\n    map((dataLoaded: boolean) => (dataLoaded ? this.window?.QSI : EMPTY)),\n    filter((qsi: any) => Boolean(qsi)),\n    tap((qsi: any) => (this.qsiApi = qsi))\n  );\n\n  get window(): QualtricsWindow | undefined {\n    return this.winRef.nativeWindow;\n  }\n\n  constructor(\n    protected winRef: WindowRef,\n    @Inject(PLATFORM_ID) protected platformId: any,\n    protected scriptLoader: ScriptLoader\n  ) {\n    this.initialize();\n  }\n\n  /**\n   * Adds the deployment script to the DOM.\n   *\n   * The script will not be added twice if it was loaded before. In that case, we use\n   * the Qualtrics API directly to _unload_ and _run_ the project.\n   */\n  addScript(scriptSource: string): void {\n    if (this.hasScript(scriptSource)) {\n      this.run(true);\n    } else {\n      this.scriptLoader.embedScript({\n        src: scriptSource,\n      });\n    }\n  }\n\n  /**\n   * Indicates if the script is already added to the DOM.\n   */\n  hasScript(source?: string): boolean {\n    return !!this.winRef.document.querySelector(`script[src=\"${source}\"]`);\n  }\n\n  /**\n   * Starts observing the Qualtrics integration. The integration is based on a\n   * Qualtrics specific event (`qsi_js_loaded`). As soon as this events happens,\n   * we run the API.\n   */\n  protected initialize(): void {\n    this.subscription.add(this.qsi$.subscribe(() => this.run()));\n  }\n\n  /**\n   * Evaluates the Qualtrics project code for the application.\n   *\n   * In order to reload the evaluation in Qualtrics, the API requires to unload the API before\n   * running it again. We don't do this by default, but offer a flag to conditionally unload the API.\n   */\n  protected run(reload = false): void {\n    if (!this.qsiApi?.API) {\n      if (isDevMode()) {\n        console.log('The QSI api is not available');\n      }\n      return;\n    }\n\n    if (reload) {\n      // Removes any currently displaying creatives\n      this.qsiApi.API.unload();\n    }\n\n    // Starts the intercept code evaluation right after loading the Site Intercept\n    // code for any defined intercepts or creatives\n    this.qsiApi.API.load().done(this.qsiApi.API.run());\n  }\n\n  /**\n   * This logic exist in order to let the client(s) add their own logic to wait for any kind of page data.\n   * You can observe any data in this method.\n   *\n   * Defaults to true.\n   */\n  protected isDataLoaded(): Observable<boolean> {\n    return of(true);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n/**\n * Configuration options for the Qualtrics integration, which allows you to\n * specify the qualtrics project and deployment script.\n */\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class QualtricsConfig {\n  /**\n   * Holds the qualtrics integration options.\n   */\n  qualtrics?: {\n    /**\n     * Deployment script, loaded from a resource, to integrate the deployment of the qualtrics project.\n     * You would typically store the file in the local assets folder.\n     *\n     */\n    scriptSource?: string;\n  };\n}\n\ndeclare module '@spartacus/core' {\n  interface Config extends QualtricsConfig {}\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Component, isDevMode } from '@angular/core';\nimport { QualtricsConfig } from './config/qualtrics-config';\nimport { QualtricsLoaderService } from './qualtrics-loader.service';\n/**\n * Adds the Qualtrics deployment script whenever the component is loaded. The\n * deployment script is loaded from the global configuration (`qualtrics.scriptSource`).\n */\n@Component({\n  selector: 'cx-qualtrics',\n  template: '',\n})\nexport class QualtricsComponent {\n  constructor(\n    protected qualtricsLoader: QualtricsLoaderService,\n    protected config: QualtricsConfig\n  ) {\n    if (this.config.qualtrics?.scriptSource) {\n      this.qualtricsLoader.addScript(this.config.qualtrics.scriptSource);\n    } else if (isDevMode()) {\n      console.warn(\n        `We're unable to add the Qualtrics deployment code as there is no script source defined in config.qualtrics.scriptSource.`\n      );\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { QualtricsEmbeddedFeedbackComponent } from './qualtrics-embedded-feedback/qualtrics-embedded-feedback.component';\nimport { defaultQualtricsConfig } from './qualtrics-loader/config/default-qualtrics-config';\nimport { QualtricsComponent } from './qualtrics-loader/qualtrics.component';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        QualtricsEmbeddedFeedbackComponent: {\n          component: QualtricsEmbeddedFeedbackComponent,\n        },\n        QualtricsComponent: {\n          component: QualtricsComponent,\n        },\n      },\n    }),\n    provideDefaultConfig(defaultQualtricsConfig),\n  ],\n  declarations: [QualtricsComponent, QualtricsEmbeddedFeedbackComponent],\n  exports: [QualtricsComponent, QualtricsEmbeddedFeedbackComponent],\n})\nexport class QualtricsComponentsModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './config/qualtrics-config';\nexport * from './qualtrics-loader.service';\nexport * from './qualtrics.component';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './qualtrics-components.module';\nexport * from './qualtrics-embedded-feedback/qualtrics-embedded-feedback.component';\nexport * from './qualtrics-loader/index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1.QualtricsLoaderService","i2.QualtricsConfig"],"mappings":"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"}