/*
 * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../assistive-technology-message/assistive-technology-message.directive";
import * as i3 from "../../../cms-components/misc/icon/icon.component";
import * as i4 from "../truncate-text-popover/truncate-text-popover.component";
import * as i5 from "../../../layout/a11y/keyboard-focus/focus.directive";
import * as i6 from "@spartacus/core";
export class CardComponent {
    constructor() {
        this.iconTypes = ICON_TYPE;
        this.deleteCard = new EventEmitter();
        this.setDefaultCard = new EventEmitter();
        this.sendCard = new EventEmitter();
        this.editCard = new EventEmitter();
        this.cancelCard = new EventEmitter();
        this.border = false;
        this.editMode = false;
        this.isDefault = false;
        this.fitToContainer = false;
        this.truncateText = false;
        this.charactersLimit = 100;
        // Intentional empty constructor
    }
    // ACTIONS
    setEditMode() {
        this.editMode = true;
    }
    cancelEdit() {
        this.editMode = false;
        this.cancelCard.emit(5);
    }
    delete() {
        this.deleteCard.emit(1);
    }
    setDefault() {
        this.isDefault = true;
        this.setDefaultCard.emit(2);
    }
    send() {
        this.sendCard.emit(3);
    }
    edit() {
        this.editCard.emit(4);
    }
    isCardAction(action) {
        return action.event !== undefined;
    }
    isCardLinkAction(action) {
        return action.link !== undefined;
    }
    ngOnInit() {
        // Intentional empty method
    }
}
CardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: CardComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
CardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.3", type: CardComponent, selector: "cx-card", inputs: { border: "border", editMode: "editMode", isDefault: "isDefault", content: "content", fitToContainer: "fitToContainer", truncateText: "truncateText", charactersLimit: "charactersLimit", index: "index" }, outputs: { deleteCard: "deleteCard", setDefaultCard: "setDefaultCard", sendCard: "sendCard", editCard: "editCard", cancelCard: "cancelCard" }, ngImport: i0, template: "<div\n  *ngIf=\"content\"\n  class=\"cx-card\"\n  [tabindex]=\"border ? 0 : -1\"\n  [attr.role]=\"content.role ?? null\"\n  [attr.aria-label]=\"\n    content.label ? (content.label | cxTranslate: { number: this.index }) : null\n  \"\n  [class.cx-card-border]=\"border\"\n  [class.cx-card-fit-to-container]=\"fitToContainer\"\n>\n  <!-- Card Header -->\n  <div\n    *ngIf=\"content.header && !editMode\"\n    class=\"card-header\"\n    [id]=\"'content-header' + (index >= 0 ? '-' + index : '')\"\n  >\n    {{ content.header }}\n  </div>\n  <!-- Card Body -->\n  <div class=\"card-body cx-card-body\" [class.cx-card-delete]=\"editMode\">\n    <!-- Edit message -->\n    <div *ngIf=\"editMode\" role=\"alert\" class=\"cx-card-delete-msg\">\n      {{ content.deleteMsg }}\n    </div>\n    <!-- Card title -->\n    <span *ngIf=\"content.title\" class=\"cx-card-title\">\n      {{ content.title }}\n    </span>\n    <!-- Card Content -->\n    <div class=\"cx-card-container\">\n      <!-- Card Label -->\n      <div class=\"cx-card-label-container\">\n        <div *ngIf=\"content.textBold\" class=\"cx-card-label-bold\">\n          {{ content.textBold }}\n        </div>\n        <div *ngFor=\"let line of content.text\">\n          <div *ngIf=\"!truncateText; else truncate\" class=\"cx-card-label\">\n            {{ line }}\n          </div>\n\n          <ng-template #truncate>\n            <cx-truncate-text-popover\n              [charactersLimit]=\"charactersLimit\"\n              [content]=\"line\"\n            ></cx-truncate-text-popover>\n          </ng-template>\n        </div>\n        <div class=\"cx-card-paragraph\" *ngFor=\"let item of content.paragraphs\">\n          <div class=\"cx-card-paragraph-title\">{{ item.title }}</div>\n          <div *ngFor=\"let text of item.text\">\n            <div class=\"cx-card-paragraph-text\">\n              {{ text }}\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- Image -->\n      <div *ngIf=\"content.img\" class=\"cx-card-img-container\">\n        <cx-icon [type]=\"content.img\"></cx-icon>\n      </div>\n    </div>\n    <!-- Edit Mode Actions -->\n    <div *ngIf=\"editMode\" class=\"row cx-card-body-delete\">\n      <div class=\"col-md-6\">\n        <button\n          [cxAtMessage]=\"'assistiveMessage.actionCancelled' | cxTranslate\"\n          class=\"btn btn-block btn-secondary\"\n          (click)=\"cancelEdit()\"\n        >\n          {{ 'common.cancel' | cxTranslate }}\n        </button>\n      </div>\n      <div class=\"col-md-6\" [cxFocus]=\"{ autofocus: true }\">\n        <button class=\"btn btn-block btn-primary\" (click)=\"delete()\">\n          {{ 'common.delete' | cxTranslate }}\n        </button>\n      </div>\n    </div>\n    <!-- Actions -->\n    <div *ngIf=\"content.actions && !editMode\" class=\"cx-card-actions\">\n      <div *ngFor=\"let action of content.actions\">\n        <div>\n          <ng-container *ngIf=\"isCardAction(action)\" [ngSwitch]=\"action.event\">\n            <button\n              type=\"button\"\n              *ngSwitchCase=\"'delete'\"\n              class=\"link cx-action-link\"\n              (click)=\"delete()\"\n            >\n              {{ action.name }}\n            </button>\n            <button\n              type=\"button\"\n              *ngSwitchCase=\"'default'\"\n              class=\"link cx-action-link\"\n              (click)=\"setDefault()\"\n            >\n              {{ action.name }}\n            </button>\n            <button\n              type=\"button\"\n              *ngSwitchCase=\"'send'\"\n              class=\"link cx-action-link\"\n              (click)=\"send()\"\n              [attr.aria-describedby]=\"\n                index >= 0 && content.header && !editMode\n                  ? 'content-header-' + index\n                  : null\n              \"\n            >\n              {{ action.name }}\n            </button>\n            <button\n              type=\"button\"\n              *ngSwitchCase=\"'edit'\"\n              class=\"link cx-action-link\"\n              (click)=\"edit()\"\n            >\n              {{ action.name }}\n            </button>\n          </ng-container>\n          <a\n            *ngIf=\"isCardLinkAction(action)\"\n            href=\"{{ action.link }}\"\n            class=\"link cx-action-link\"\n          >\n            {{ action.name }}\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n", dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { kind: "directive", type: i1.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { kind: "directive", type: i2.AtMessageDirective, selector: "[cxAtMessage]", inputs: ["cxAtMessage"] }, { kind: "component", type: i3.IconComponent, selector: "cx-icon,[cxIcon]", inputs: ["cxIcon", "type"] }, { kind: "component", type: i4.TruncateTextPopoverComponent, selector: "cx-truncate-text-popover", inputs: ["content", "charactersLimit"] }, { kind: "directive", type: i5.FocusDirective, selector: "[cxFocus]", inputs: ["cxFocus"] }, { kind: "pipe", type: i6.TranslatePipe, name: "cxTranslate" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: CardComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-card', template: "<div\n  *ngIf=\"content\"\n  class=\"cx-card\"\n  [tabindex]=\"border ? 0 : -1\"\n  [attr.role]=\"content.role ?? null\"\n  [attr.aria-label]=\"\n    content.label ? (content.label | cxTranslate: { number: this.index }) : null\n  \"\n  [class.cx-card-border]=\"border\"\n  [class.cx-card-fit-to-container]=\"fitToContainer\"\n>\n  <!-- Card Header -->\n  <div\n    *ngIf=\"content.header && !editMode\"\n    class=\"card-header\"\n    [id]=\"'content-header' + (index >= 0 ? '-' + index : '')\"\n  >\n    {{ content.header }}\n  </div>\n  <!-- Card Body -->\n  <div class=\"card-body cx-card-body\" [class.cx-card-delete]=\"editMode\">\n    <!-- Edit message -->\n    <div *ngIf=\"editMode\" role=\"alert\" class=\"cx-card-delete-msg\">\n      {{ content.deleteMsg }}\n    </div>\n    <!-- Card title -->\n    <span *ngIf=\"content.title\" class=\"cx-card-title\">\n      {{ content.title }}\n    </span>\n    <!-- Card Content -->\n    <div class=\"cx-card-container\">\n      <!-- Card Label -->\n      <div class=\"cx-card-label-container\">\n        <div *ngIf=\"content.textBold\" class=\"cx-card-label-bold\">\n          {{ content.textBold }}\n        </div>\n        <div *ngFor=\"let line of content.text\">\n          <div *ngIf=\"!truncateText; else truncate\" class=\"cx-card-label\">\n            {{ line }}\n          </div>\n\n          <ng-template #truncate>\n            <cx-truncate-text-popover\n              [charactersLimit]=\"charactersLimit\"\n              [content]=\"line\"\n            ></cx-truncate-text-popover>\n          </ng-template>\n        </div>\n        <div class=\"cx-card-paragraph\" *ngFor=\"let item of content.paragraphs\">\n          <div class=\"cx-card-paragraph-title\">{{ item.title }}</div>\n          <div *ngFor=\"let text of item.text\">\n            <div class=\"cx-card-paragraph-text\">\n              {{ text }}\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- Image -->\n      <div *ngIf=\"content.img\" class=\"cx-card-img-container\">\n        <cx-icon [type]=\"content.img\"></cx-icon>\n      </div>\n    </div>\n    <!-- Edit Mode Actions -->\n    <div *ngIf=\"editMode\" class=\"row cx-card-body-delete\">\n      <div class=\"col-md-6\">\n        <button\n          [cxAtMessage]=\"'assistiveMessage.actionCancelled' | cxTranslate\"\n          class=\"btn btn-block btn-secondary\"\n          (click)=\"cancelEdit()\"\n        >\n          {{ 'common.cancel' | cxTranslate }}\n        </button>\n      </div>\n      <div class=\"col-md-6\" [cxFocus]=\"{ autofocus: true }\">\n        <button class=\"btn btn-block btn-primary\" (click)=\"delete()\">\n          {{ 'common.delete' | cxTranslate }}\n        </button>\n      </div>\n    </div>\n    <!-- Actions -->\n    <div *ngIf=\"content.actions && !editMode\" class=\"cx-card-actions\">\n      <div *ngFor=\"let action of content.actions\">\n        <div>\n          <ng-container *ngIf=\"isCardAction(action)\" [ngSwitch]=\"action.event\">\n            <button\n              type=\"button\"\n              *ngSwitchCase=\"'delete'\"\n              class=\"link cx-action-link\"\n              (click)=\"delete()\"\n            >\n              {{ action.name }}\n            </button>\n            <button\n              type=\"button\"\n              *ngSwitchCase=\"'default'\"\n              class=\"link cx-action-link\"\n              (click)=\"setDefault()\"\n            >\n              {{ action.name }}\n            </button>\n            <button\n              type=\"button\"\n              *ngSwitchCase=\"'send'\"\n              class=\"link cx-action-link\"\n              (click)=\"send()\"\n              [attr.aria-describedby]=\"\n                index >= 0 && content.header && !editMode\n                  ? 'content-header-' + index\n                  : null\n              \"\n            >\n              {{ action.name }}\n            </button>\n            <button\n              type=\"button\"\n              *ngSwitchCase=\"'edit'\"\n              class=\"link cx-action-link\"\n              (click)=\"edit()\"\n            >\n              {{ action.name }}\n            </button>\n          </ng-container>\n          <a\n            *ngIf=\"isCardLinkAction(action)\"\n            href=\"{{ action.link }}\"\n            class=\"link cx-action-link\"\n          >\n            {{ action.name }}\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n" }]
        }], ctorParameters: function () { return []; }, propDecorators: { deleteCard: [{
                type: Output
            }], setDefaultCard: [{
                type: Output
            }], sendCard: [{
                type: Output
            }], editCard: [{
                type: Output
            }], cancelCard: [{
                type: Output
            }], border: [{
                type: Input
            }], editMode: [{
                type: Input
            }], isDefault: [{
                type: Input
            }], content: [{
                type: Input
            }], fitToContainer: [{
                type: Input
            }], truncateText: [{
                type: Input
            }], charactersLimit: [{
                type: Input
            }], index: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,