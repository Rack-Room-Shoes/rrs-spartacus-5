/*
 * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
export var InternalProfileTagEventNames;
(function (InternalProfileTagEventNames) {
    InternalProfileTagEventNames["CONSENT_REFERENCE_LOADED"] = "profiletag_consentReferenceLoaded";
    InternalProfileTagEventNames["DEBUG_FLAG_CHANGED"] = "profiletag_debugFlagChanged";
})(InternalProfileTagEventNames || (InternalProfileTagEventNames = {}));
export class NavigatedPushEvent {
    constructor(data) {
        this.name = 'Navigated';
        this.data = data;
    }
}
export class ConsentChangedPushEvent {
    constructor(granted) {
        this.name = 'ConsentChanged';
        this.data = { granted: undefined };
        this.data.granted = granted;
    }
}
export class KeywordSearchPushEvent {
    constructor(data) {
        this.name = 'KeywordSearch';
        this.data = data;
    }
}
export class ProductViewPushEvent {
    constructor(data) {
        this.name = 'ProductDetailsPageViewed';
        this.data = data;
    }
}
export class CategoryViewPushEvent {
    constructor(data) {
        this.name = 'CategoryPageViewed';
        this.data = data;
    }
}
// TODO:#cds - check the class name and the `name` property
export class BrandPageVisitedEvent {
    constructor(data) {
        this.name = 'BrandPageVisitedEvent';
        this.data = data;
    }
}
export class HomePageViewPushEvent {
    constructor(data) {
        this.name = 'HomePageViewed';
        this.data = data;
    }
}
export class OrderConfirmationPushEvent {
    constructor(data) {
        this.name = 'OrderConfirmationPageViewed';
        this.data = data;
    }
}
export class CartViewPushEvent {
    constructor(data) {
        this.name = 'CartPageViewed';
        this.data = data;
    }
}
export class AddedToCartPushEvent {
    constructor(data) {
        this.name = 'AddedToCart';
        this.data = data;
    }
}
export class RemovedFromCartPushEvent {
    constructor(data) {
        this.name = 'RemovedFromCart';
        this.data = data;
    }
}
export class ModifiedCartPushEvent {
    constructor(data) {
        this.name = 'ModifiedCart';
        this.data = data;
    }
}
export class CartSnapshotPushEvent {
    constructor(data) {
        this.name = 'CartSnapshot';
        this.data = data;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZmlsZS10YWcubW9kZWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9pbnRlZ3JhdGlvbi1saWJzL2Nkcy9zcmMvcHJvZmlsZXRhZy9tb2RlbC9wcm9maWxlLXRhZy5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBa0NILE1BQU0sQ0FBTixJQUFZLDRCQUdYO0FBSEQsV0FBWSw0QkFBNEI7SUFDdEMsOEZBQThELENBQUE7SUFDOUQsa0ZBQWtELENBQUE7QUFDcEQsQ0FBQyxFQUhXLDRCQUE0QixLQUE1Qiw0QkFBNEIsUUFHdkM7QUFXRCxNQUFNLE9BQU8sa0JBQWtCO0lBRzdCLFlBQVksSUFBSztRQUZqQixTQUFJLEdBQUcsV0FBVyxDQUFDO1FBR2pCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ25CLENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyx1QkFBdUI7SUFHbEMsWUFBWSxPQUFnQjtRQUY1QixTQUFJLEdBQUcsZ0JBQWdCLENBQUM7UUFDeEIsU0FBSSxHQUF5QixFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsQ0FBQztRQUVsRCxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7SUFDOUIsQ0FBQztDQUNGO0FBRUQsTUFBTSxPQUFPLHNCQUFzQjtJQUdqQyxZQUFZLElBQWdEO1FBRjVELFNBQUksR0FBRyxlQUFlLENBQUM7UUFHckIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDbkIsQ0FBQztDQUNGO0FBRUQsTUFBTSxPQUFPLG9CQUFvQjtJQUcvQixZQUFZLElBT1g7UUFURCxTQUFJLEdBQUcsMEJBQTBCLENBQUM7UUFVaEMsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDbkIsQ0FBQztDQUNGO0FBRUQsTUFBTSxPQUFPLHFCQUFxQjtJQUdoQyxZQUFZLElBQThEO1FBRjFFLFNBQUksR0FBRyxvQkFBb0IsQ0FBQztRQUcxQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNuQixDQUFDO0NBQ0Y7QUFFRCwyREFBMkQ7QUFDM0QsTUFBTSxPQUFPLHFCQUFxQjtJQUdoQyxZQUFZLElBQThDO1FBRjFELFNBQUksR0FBRyx1QkFBdUIsQ0FBQztRQUc3QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNuQixDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8scUJBQXFCO0lBR2hDLFlBQVksSUFBVTtRQUZ0QixTQUFJLEdBQUcsZ0JBQWdCLENBQUM7UUFHdEIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDbkIsQ0FBQztDQUNGO0FBRUQsTUFBTSxPQUFPLDBCQUEwQjtJQUdyQyxZQUFZLElBQVU7UUFGdEIsU0FBSSxHQUFHLDZCQUE2QixDQUFDO1FBR25DLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ25CLENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyxpQkFBaUI7SUFHNUIsWUFBWSxJQUFVO1FBRnRCLFNBQUksR0FBRyxnQkFBZ0IsQ0FBQztRQUd0QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNuQixDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sb0JBQW9CO0lBRy9CLFlBQVksSUFVWDtRQVpELFNBQUksR0FBRyxhQUFhLENBQUM7UUFhbkIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDbkIsQ0FBQztDQUNGO0FBRUQsTUFBTSxPQUFPLHdCQUF3QjtJQUduQyxZQUFZLElBUVg7UUFWRCxTQUFJLEdBQUcsaUJBQWlCLENBQUM7UUFXdkIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDbkIsQ0FBQztDQUNGO0FBRUQsTUFBTSxPQUFPLHFCQUFxQjtJQUdoQyxZQUFZLElBU1g7UUFYRCxTQUFJLEdBQUcsY0FBYyxDQUFDO1FBWXBCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ25CLENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyxxQkFBcUI7SUFHaEMsWUFBWSxJQUFvQjtRQUZoQyxTQUFJLEdBQUcsY0FBYyxDQUFDO1FBR3BCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ25CLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBTUERYLUZpbGVDb3B5cmlnaHRUZXh0OiAyMDIyIFNBUCBTcGFydGFjdXMgdGVhbSA8c3BhcnRhY3VzLXRlYW1Ac2FwLmNvbT5cbiAqXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuICovXG5cbmltcG9ydCB7IFBlcnNvbmFsaXphdGlvbkFjdGlvbiB9IGZyb20gJ0BzcGFydGFjdXMvdHJhY2tpbmcvcGVyc29uYWxpemF0aW9uL2NvcmUnO1xuaW1wb3J0IHsgQ2FydCB9IGZyb20gJ0BzcGFydGFjdXMvY2FydC9iYXNlL3Jvb3QnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFByb2ZpbGVUYWdXaW5kb3dPYmplY3QgZXh0ZW5kcyBXaW5kb3cge1xuICBZX1RSQUNLSU5HOiB7XG4gICAgcT86IFByb2ZpbGVUYWdKc0NvbmZpZ1tdW107XG4gICAgZXZlbnRMYXllcj86IFByb2ZpbGVUYWdQdXNoRXZlbnRbXTtcbiAgfTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBQcm9maWxlVGFnSnNDb25maWcge1xuICB0ZW5hbnQ/OiBzdHJpbmc7XG4gIHNpdGVJZD86IHN0cmluZztcbiAgc3BhOiBib29sZWFuO1xuICBqYXZhc2NyaXB0VXJsPzogc3RyaW5nO1xuICBjb25maWdVcmw/OiBzdHJpbmc7XG4gIGFsbG93SW5zZWN1cmVDb29raWVzPzogYm9vbGVhbjtcbiAgZ3RtSWQ/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29uc2VudFJlZmVyZW5jZUV2ZW50IGV4dGVuZHMgQ3VzdG9tRXZlbnQge1xuICBkZXRhaWw6IHtcbiAgICBjb25zZW50UmVmZXJlbmNlOiBzdHJpbmc7XG4gIH07XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGVidWdFdmVudCBleHRlbmRzIEN1c3RvbUV2ZW50IHtcbiAgZGV0YWlsOiB7XG4gICAgZGVidWc6IGJvb2xlYW47XG4gIH07XG59XG5cbmV4cG9ydCBlbnVtIEludGVybmFsUHJvZmlsZVRhZ0V2ZW50TmFtZXMge1xuICBDT05TRU5UX1JFRkVSRU5DRV9MT0FERUQgPSAncHJvZmlsZXRhZ19jb25zZW50UmVmZXJlbmNlTG9hZGVkJyxcbiAgREVCVUdfRkxBR19DSEFOR0VEID0gJ3Byb2ZpbGV0YWdfZGVidWdGbGFnQ2hhbmdlZCcsXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUHJvZmlsZVRhZ1B1c2hFdmVudCB7XG4gIG5hbWU6IHN0cmluZztcbiAgZGF0YT86IHtcbiAgICBzZWdtZW50cz86IHN0cmluZ1tdO1xuICAgIGFjdGlvbnM/OiBQZXJzb25hbGl6YXRpb25BY3Rpb25bXTtcbiAgICBbeDogc3RyaW5nXTogYW55O1xuICB9O1xufVxuXG5leHBvcnQgY2xhc3MgTmF2aWdhdGVkUHVzaEV2ZW50IGltcGxlbWVudHMgUHJvZmlsZVRhZ1B1c2hFdmVudCB7XG4gIG5hbWUgPSAnTmF2aWdhdGVkJztcbiAgZGF0YTogYW55O1xuICBjb25zdHJ1Y3RvcihkYXRhPykge1xuICAgIHRoaXMuZGF0YSA9IGRhdGE7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIENvbnNlbnRDaGFuZ2VkUHVzaEV2ZW50IGltcGxlbWVudHMgUHJvZmlsZVRhZ1B1c2hFdmVudCB7XG4gIG5hbWUgPSAnQ29uc2VudENoYW5nZWQnO1xuICBkYXRhOiB7IGdyYW50ZWQ6IGJvb2xlYW4gfSA9IHsgZ3JhbnRlZDogdW5kZWZpbmVkIH07XG4gIGNvbnN0cnVjdG9yKGdyYW50ZWQ6IGJvb2xlYW4pIHtcbiAgICB0aGlzLmRhdGEuZ3JhbnRlZCA9IGdyYW50ZWQ7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIEtleXdvcmRTZWFyY2hQdXNoRXZlbnQgaW1wbGVtZW50cyBQcm9maWxlVGFnUHVzaEV2ZW50IHtcbiAgbmFtZSA9ICdLZXl3b3JkU2VhcmNoJztcbiAgZGF0YTogYW55O1xuICBjb25zdHJ1Y3RvcihkYXRhOiB7IHNlYXJjaFRlcm06IHN0cmluZzsgbnVtUmVzdWx0czogTnVtYmVyIH0pIHtcbiAgICB0aGlzLmRhdGEgPSBkYXRhO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBQcm9kdWN0Vmlld1B1c2hFdmVudCBpbXBsZW1lbnRzIFByb2ZpbGVUYWdQdXNoRXZlbnQge1xuICBuYW1lID0gJ1Byb2R1Y3REZXRhaWxzUGFnZVZpZXdlZCc7XG4gIGRhdGE6IGFueTtcbiAgY29uc3RydWN0b3IoZGF0YToge1xuICAgIHByb2R1Y3RTa3U6IHN0cmluZztcbiAgICBwcm9kdWN0TmFtZTogc3RyaW5nO1xuICAgIHByb2R1Y3RQcmljZTogTnVtYmVyO1xuICAgIHByb2R1Y3RDYXRlZ29yeTogc3RyaW5nO1xuICAgIHByb2R1Y3RDYXRlZ29yeU5hbWU6IHN0cmluZztcbiAgICBjYXRlZ29yaWVzOiBBcnJheTxzdHJpbmc+O1xuICB9KSB7XG4gICAgdGhpcy5kYXRhID0gZGF0YTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgQ2F0ZWdvcnlWaWV3UHVzaEV2ZW50IGltcGxlbWVudHMgUHJvZmlsZVRhZ1B1c2hFdmVudCB7XG4gIG5hbWUgPSAnQ2F0ZWdvcnlQYWdlVmlld2VkJztcbiAgZGF0YTogYW55O1xuICBjb25zdHJ1Y3RvcihkYXRhOiB7IHByb2R1Y3RDYXRlZ29yeTogc3RyaW5nOyBwcm9kdWN0Q2F0ZWdvcnlOYW1lOiBzdHJpbmcgfSkge1xuICAgIHRoaXMuZGF0YSA9IGRhdGE7XG4gIH1cbn1cblxuLy8gVE9ETzojY2RzIC0gY2hlY2sgdGhlIGNsYXNzIG5hbWUgYW5kIHRoZSBgbmFtZWAgcHJvcGVydHlcbmV4cG9ydCBjbGFzcyBCcmFuZFBhZ2VWaXNpdGVkRXZlbnQgaW1wbGVtZW50cyBQcm9maWxlVGFnUHVzaEV2ZW50IHtcbiAgbmFtZSA9ICdCcmFuZFBhZ2VWaXNpdGVkRXZlbnQnO1xuICBkYXRhOiB7IGJyYW5kQ29kZTogc3RyaW5nOyBicmFuZE5hbWU6IHN0cmluZyB9O1xuICBjb25zdHJ1Y3RvcihkYXRhOiB7IGJyYW5kQ29kZTogc3RyaW5nOyBicmFuZE5hbWU6IHN0cmluZyB9KSB7XG4gICAgdGhpcy5kYXRhID0gZGF0YTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgSG9tZVBhZ2VWaWV3UHVzaEV2ZW50IGltcGxlbWVudHMgUHJvZmlsZVRhZ1B1c2hFdmVudCB7XG4gIG5hbWUgPSAnSG9tZVBhZ2VWaWV3ZWQnO1xuICBkYXRhOiBhbnk7XG4gIGNvbnN0cnVjdG9yKGRhdGE/OiBhbnkpIHtcbiAgICB0aGlzLmRhdGEgPSBkYXRhO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBPcmRlckNvbmZpcm1hdGlvblB1c2hFdmVudCBpbXBsZW1lbnRzIFByb2ZpbGVUYWdQdXNoRXZlbnQge1xuICBuYW1lID0gJ09yZGVyQ29uZmlybWF0aW9uUGFnZVZpZXdlZCc7XG4gIGRhdGE6IGFueTtcbiAgY29uc3RydWN0b3IoZGF0YT86IGFueSkge1xuICAgIHRoaXMuZGF0YSA9IGRhdGE7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIENhcnRWaWV3UHVzaEV2ZW50IGltcGxlbWVudHMgUHJvZmlsZVRhZ1B1c2hFdmVudCB7XG4gIG5hbWUgPSAnQ2FydFBhZ2VWaWV3ZWQnO1xuICBkYXRhOiBhbnk7XG4gIGNvbnN0cnVjdG9yKGRhdGE/OiBhbnkpIHtcbiAgICB0aGlzLmRhdGEgPSBkYXRhO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBBZGRlZFRvQ2FydFB1c2hFdmVudCBpbXBsZW1lbnRzIFByb2ZpbGVUYWdQdXNoRXZlbnQge1xuICBuYW1lID0gJ0FkZGVkVG9DYXJ0JztcbiAgZGF0YTogYW55O1xuICBjb25zdHJ1Y3RvcihkYXRhOiB7XG4gICAgcHJvZHVjdFF0eTogbnVtYmVyO1xuICAgIHByb2R1Y3RTa3U6IHN0cmluZztcbiAgICBwcm9kdWN0TmFtZTogc3RyaW5nO1xuICAgIGNhcnRJZDogc3RyaW5nO1xuICAgIGNhcnRDb2RlOiBzdHJpbmc7XG4gICAgY2F0ZWdvcmllczogQXJyYXk8c3RyaW5nPjtcbiAgICBwcm9kdWN0Q2F0ZWdvcnlOYW1lOiBzdHJpbmc7XG4gICAgcHJvZHVjdENhdGVnb3J5OiBzdHJpbmc7XG4gICAgcHJvZHVjdFByaWNlOiBOdW1iZXI7XG4gIH0pIHtcbiAgICB0aGlzLmRhdGEgPSBkYXRhO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBSZW1vdmVkRnJvbUNhcnRQdXNoRXZlbnQgaW1wbGVtZW50cyBQcm9maWxlVGFnUHVzaEV2ZW50IHtcbiAgbmFtZSA9ICdSZW1vdmVkRnJvbUNhcnQnO1xuICBkYXRhOiBhbnk7XG4gIGNvbnN0cnVjdG9yKGRhdGE6IHtcbiAgICBwcm9kdWN0U2t1OiBzdHJpbmc7XG4gICAgcHJvZHVjdE5hbWU6IHN0cmluZztcbiAgICBwcm9kdWN0Q2F0ZWdvcnk6IHN0cmluZztcbiAgICBjYXJ0SWQ6IHN0cmluZztcbiAgICBjYXJ0Q29kZTogc3RyaW5nO1xuICAgIHByb2R1Y3RDYXRlZ29yeU5hbWU6IHN0cmluZztcbiAgICBjYXRlZ29yaWVzOiBBcnJheTxzdHJpbmc+O1xuICB9KSB7XG4gICAgdGhpcy5kYXRhID0gZGF0YTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgTW9kaWZpZWRDYXJ0UHVzaEV2ZW50IGltcGxlbWVudHMgUHJvZmlsZVRhZ1B1c2hFdmVudCB7XG4gIG5hbWUgPSAnTW9kaWZpZWRDYXJ0JztcbiAgZGF0YTogYW55O1xuICBjb25zdHJ1Y3RvcihkYXRhOiB7XG4gICAgcHJvZHVjdFF0eTogbnVtYmVyO1xuICAgIHByb2R1Y3RTa3U6IHN0cmluZztcbiAgICBwcm9kdWN0TmFtZTogc3RyaW5nO1xuICAgIGNhcnRJZDogc3RyaW5nO1xuICAgIGNhcnRDb2RlOiBzdHJpbmc7XG4gICAgY2F0ZWdvcmllczogQXJyYXk8c3RyaW5nPjtcbiAgICBwcm9kdWN0Q2F0ZWdvcnlOYW1lOiBzdHJpbmc7XG4gICAgcHJvZHVjdENhdGVnb3J5OiBzdHJpbmc7XG4gIH0pIHtcbiAgICB0aGlzLmRhdGEgPSBkYXRhO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBDYXJ0U25hcHNob3RQdXNoRXZlbnQgaW1wbGVtZW50cyBQcm9maWxlVGFnUHVzaEV2ZW50IHtcbiAgbmFtZSA9ICdDYXJ0U25hcHNob3QnO1xuICBkYXRhOiBhbnk7XG4gIGNvbnN0cnVjdG9yKGRhdGE6IHsgY2FydDogQ2FydCB9KSB7XG4gICAgdGhpcy5kYXRhID0gZGF0YTtcbiAgfVxufVxuIl19