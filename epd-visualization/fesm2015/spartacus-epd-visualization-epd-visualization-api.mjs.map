{"version":3,"file":"spartacus-epd-visualization-epd-visualization-api.mjs","sources":["../../../integration-libs/epd-visualization/epd-visualization-api/adapters/storage-v1/storage-v1.adapter.ts","../../../integration-libs/epd-visualization/epd-visualization-api/adapters/visualization-v1/visualization-v1.adapter.ts","../../../integration-libs/epd-visualization/epd-visualization-api/epd-visualization-api.module.ts","../../../integration-libs/epd-visualization/epd-visualization-api/public_api.ts","../../../integration-libs/epd-visualization/epd-visualization-api/spartacus-epd-visualization-epd-visualization-api.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ConverterService, normalizeHttpError } from '@spartacus/core';\nimport {\n  NodesResponse,\n  NODES_RESPONSE_NORMALIZER,\n  SceneAdapter,\n} from '@spartacus/epd-visualization/core';\nimport {\n  EpdVisualizationConfig,\n  EpdVisualizationInnerConfig,\n  VisualizationApiConfig,\n} from '@spartacus/epd-visualization/root';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n/**\n * This adapter references an API that is expected to be deprecated and relocated\n * since multiple microservice APIs are being combined into a single namespace.\n * A new adapter implementation will be added and this one will be deprecated\n * when the new endpoint is available.\n */\n@Injectable()\nexport class StorageV1Adapter implements SceneAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected epdVisualizationConfig: EpdVisualizationConfig,\n    protected converter: ConverterService\n  ) {\n    this.baseUrl = this.getBaseUrl();\n  }\n\n  private baseUrl: string;\n\n  private getBaseUrl() {\n    const epdVisualization = this.epdVisualizationConfig\n      .epdVisualization as EpdVisualizationInnerConfig;\n    const visualizationApiConfig =\n      epdVisualization.apis as VisualizationApiConfig;\n\n    return `${visualizationApiConfig.baseUrl}/vis/public/storage`;\n  }\n\n  protected getUrl(\n    sceneId: string,\n    nodeIds?: string[],\n    $expand?: string[],\n    $filter?: string[],\n    contentType?: string\n  ): string {\n    const queryParts: string[] = [];\n    if (nodeIds) {\n      nodeIds.forEach((nodeId) => queryParts.push(`id=${nodeId}`));\n    }\n    if ($expand) {\n      queryParts.push(`$expand=${$expand.join(',')}`);\n    }\n    if ($filter) {\n      queryParts.push(`$filter=${$filter.join(',')}`);\n    }\n    if (contentType) {\n      queryParts.push(`contentType=${contentType}`);\n    }\n    const queryString: string = queryParts.length\n      ? `?${queryParts.join('&')}`\n      : '';\n    return `${this.baseUrl}/v1/scenes/${sceneId}/nodes${queryString}`;\n  }\n\n  /**\n   * Used for getting information about scene nodes (such as metadata used to store usage ID values).\n   * @param sceneId The scene id to use as the sceneId path parameter.\n   * @param nodeIds An array of scene node ids to pass in id query parameters.\n   * @param $expand A set of strings to combine to form the $expand query parameter.\n   * @param $filter A set of strings to combine to form the $filter query parameter.\n   * @param contentType The contentType query parameter.\n   * @returns An Observable producing a NodesResponse which contains an array of objects describing scene nodes.\n   */\n  getNodes(\n    sceneId: string,\n    nodeIds?: string[],\n    $expand?: string[],\n    $filter?: string[],\n    contentType?: string\n  ): Observable<NodesResponse> {\n    return this.http\n      .get(this.getUrl(sceneId, nodeIds, $expand, $filter, contentType))\n      .pipe(\n        catchError((error) => throwError(normalizeHttpError(error))),\n        this.converter.pipeable(NODES_RESPONSE_NORMALIZER)\n      );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ConverterService, normalizeHttpError } from '@spartacus/core';\nimport {\n  LookupVisualizationsResponse,\n  LOOKUP_VISUALIZATIONS_RESPONSE_NORMALIZER,\n  VisualizationAdapter,\n} from '@spartacus/epd-visualization/core';\nimport {\n  EpdVisualizationConfig,\n  EpdVisualizationInnerConfig,\n  UsageId,\n  VisualizationApiConfig,\n} from '@spartacus/epd-visualization/root';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n/**\n * This adapter references an API that is expected to be deprecated and relocated\n * since multiple microservice APIs are being combined into a single namespace.\n * A new adapter implementation will be added and this one will be deprecated\n * when the new endpoint is available.\n */\n@Injectable()\nexport class VisualizationV1Adapter implements VisualizationAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected epdVisualizationConfig: EpdVisualizationConfig,\n    protected converter: ConverterService\n  ) {\n    this.baseUrl = this.getBaseUrl();\n  }\n\n  private baseUrl: string;\n\n  private getBaseUrl() {\n    const epdVisualization = this.epdVisualizationConfig\n      .epdVisualization as EpdVisualizationInnerConfig;\n    const visualizationApiConfig =\n      epdVisualization.apis as VisualizationApiConfig;\n\n    return `${visualizationApiConfig.baseUrl}/vis/public/visualization`;\n  }\n\n  protected getUrl(\n    visualizationUsageId: UsageId,\n    folderUsageId: UsageId\n  ): string {\n    const queryParts: string[] = [\n      `usage=${encodeURIComponent(JSON.stringify(visualizationUsageId))}`,\n      `folderUsageId=${encodeURIComponent(JSON.stringify(folderUsageId))}`,\n    ];\n    return `${this.baseUrl}/v1/lookup/visualization?${queryParts.join('&')}`;\n  }\n\n  /**\n   * Used for finding a visualization by Usage ID that has anonymous (unauthenticated) read access enabled.\n   * The search is performed in the SAP EPD Visualization service instance associated with the SaaS subscription for the SAP EPD tenant.\n   * @param visualizationUsageId The SAP EPD Visualization usage ID value identifying visualizations to match.\n   * Only visualizations that have the specified usage ID value will be returned.\n   * @param folderUsageId The SAP EPD Visualization usage ID identifying folders to search for visualizations.\n   * Only folders that are tagged with the specified usage ID value that have anonymous access enabled will be searched.\n   * @returns An Observable producing a LookupVisualizationsResponse which contains an array of objects describing matched visualizations.\n   */\n  lookupVisualization(\n    visualizationUsageId: UsageId,\n    folderUsageId: UsageId\n  ): Observable<LookupVisualizationsResponse> {\n    return this.http.get(this.getUrl(visualizationUsageId, folderUsageId)).pipe(\n      catchError((error) => throwError(normalizeHttpError(error))),\n      this.converter.pipeable(LOOKUP_VISUALIZATIONS_RESPONSE_NORMALIZER)\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport {\n  SceneAdapter,\n  VisualizationAdapter,\n} from '@spartacus/epd-visualization/core';\nimport { StorageV1Adapter } from './adapters/storage-v1/storage-v1.adapter';\nimport { VisualizationV1Adapter } from './adapters/visualization-v1/visualization-v1.adapter';\n\n@NgModule({\n  providers: [\n    { provide: SceneAdapter, useClass: StorageV1Adapter },\n    { provide: VisualizationAdapter, useClass: VisualizationV1Adapter },\n  ],\n})\nexport class EpdVisualizationApiModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './epd-visualization-api.module';\n\n// export * from './adapters/storage-v1';  // Not in Spartacus public API since the /storage/v1 prefix will be deprecated and relocated\n// export * from './adapters/visualization-v1';  // Not in Spartacus public API since the /visualization/v1 prefix will be deprecated and relocated\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}