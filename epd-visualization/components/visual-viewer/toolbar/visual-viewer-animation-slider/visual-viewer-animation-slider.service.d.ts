import { ChangeDetectorRef, ElementRef, EventEmitter, Renderer2 } from '@angular/core';
import { WindowRef } from '@spartacus/core';
import * as i0 from "@angular/core";
export declare class VisualViewerAnimationSliderService {
    private elementRef;
    private windowRef;
    private renderer;
    private changeDetectorRef;
    constructor(elementRef: ElementRef, windowRef: WindowRef, renderer: Renderer2, changeDetectorRef: ChangeDetectorRef);
    initialize(): void;
    private setInitialized;
    get initialized(): boolean;
    private _initialized;
    initializedChange: EventEmitter<boolean>;
    /**
     * Slider value. Value is in the range [0-1].
     */
    set value(value: number);
    get value(): number;
    private _value;
    valueChange: EventEmitter<number>;
    set disabled(disabled: boolean);
    get disabled(): boolean;
    private _disabled;
    set hidden(hidden: boolean);
    get hidden(): boolean;
    private _hidden;
    get position(): number;
    get rightToLeft(): boolean;
    set barElement(barElement: ElementRef);
    get barElement(): ElementRef;
    _barElement: ElementRef;
    set handleElement(handleElement: ElementRef);
    get handleElement(): ElementRef;
    _handleElement: ElementRef;
    private set resizeObserver(value);
    private get resizeObserver();
    private _resizeObserver?;
    private eventListenerUtils;
    private set touchIdentifier(value);
    private get touchIdentifier();
    private _touchIdentifier?;
    private getClientWidth;
    private getClientRect;
    private resizeObserverSupported;
    private setupResizeObserver;
    private onResize;
    sizeChange: EventEmitter<any>;
    private updateEventBindings;
    get handleWidth(): number;
    get barWidth(): number;
    get handleMaxPosition(): number;
    private valueToPosition;
    private positionToValue;
    private findTouch;
    private get sliderClientPosition();
    private onTouchStart;
    private onTouchStartOnBar;
    private onMouseDown;
    private onMouseDownOnBar;
    private onMouseMove;
    private onMouseUp;
    private onTouchMove;
    private onTouchEnd;
    private onHandleFocus;
    private onHandleBlur;
    private onKeyboardEvent;
    protected readonly stepDelta: number;
    protected readonly pageDelta: number;
    private getKeyHandler;
    private applyValue;
    private clampToRange;
    static ɵfac: i0.ɵɵFactoryDeclaration<VisualViewerAnimationSliderService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<VisualViewerAnimationSliderService>;
}
