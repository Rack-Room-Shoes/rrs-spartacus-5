/*
 * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component, } from '@angular/core';
import { CartOutlets, DeleteCartSuccessEvent as DeleteSavedCartSuccessEvent, PromotionLocation, } from '@spartacus/cart/base/root';
import { GlobalMessageType, } from '@spartacus/core';
import { Subscription } from 'rxjs';
import { mapTo, switchMap, take, tap } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "../saved-cart-details.service";
import * as i2 from "@spartacus/cart/saved-cart/root";
import * as i3 from "@spartacus/core";
import * as i4 from "@angular/common";
import * as i5 from "@spartacus/storefront";
import * as i6 from "@spartacus/cart/base/components/add-to-cart";
export class SavedCartDetailsItemsComponent {
    constructor(savedCartDetailsService, savedCartService, eventSercvice, globalMessageService, routingService, translation) {
        this.savedCartDetailsService = savedCartDetailsService;
        this.savedCartService = savedCartService;
        this.eventSercvice = eventSercvice;
        this.globalMessageService = globalMessageService;
        this.routingService = routingService;
        this.translation = translation;
        this.subscription = new Subscription();
        this.CartOutlets = CartOutlets;
        this.CartLocation = PromotionLocation;
        this.cartLoaded$ = this.savedCartDetailsService
            .getSavedCartId()
            .pipe(switchMap((cartId) => this.savedCartService.isStable(cartId)));
        this.savedCart$ = this.savedCartDetailsService
            .getCartDetails()
            .pipe(tap((cart) => {
            if ((cart?.entries ?? []).length <= 0 && !!cart?.code) {
                this.savedCartService.deleteSavedCart(cart.code);
            }
        }));
    }
    ngOnInit() {
        this.subscription.add(this.eventSercvice
            .get(DeleteSavedCartSuccessEvent)
            .pipe(take(1), mapTo(true))
            .subscribe((success) => this.onDeleteComplete(success)));
        this.buyItAgainTranslation$ = this.translation.translate('addToCart.addToActiveCart');
    }
    onDeleteComplete(success) {
        if (success) {
            this.routingService.go({ cxRoute: 'savedCarts' });
            this.globalMessageService.add({
                key: 'savedCartDialog.deleteCartSuccess',
            }, GlobalMessageType.MSG_TYPE_CONFIRMATION);
        }
    }
    ngOnDestroy() {
        this.subscription?.unsubscribe();
    }
}
SavedCartDetailsItemsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: SavedCartDetailsItemsComponent, deps: [{ token: i1.SavedCartDetailsService }, { token: i2.SavedCartFacade }, { token: i3.EventService }, { token: i3.GlobalMessageService }, { token: i3.RoutingService }, { token: i3.TranslationService }], target: i0.ɵɵFactoryTarget.Component });
SavedCartDetailsItemsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.3", type: SavedCartDetailsItemsComponent, selector: "cx-saved-cart-details-items", ngImport: i0, template: "<ng-container *ngIf=\"savedCart$ | async as cart\">\n  <ng-container *ngIf=\"cart?.entries?.length > 0; else emptyCartItems\">\n    <div role=\"status\" [attr.aria-label]=\"'common.loaded' | cxTranslate\"></div>\n    <div class=\"cart-details-wrapper\">\n      <ng-template\n        [cxOutlet]=\"CartOutlets.CART_ITEM_LIST\"\n        [cxOutletContext]=\"{\n          cartId: cart.code,\n          cartIsLoading: !(cartLoaded$ | async),\n          items: cart.entries,\n          promotionLocation: CartLocation.SavedCart,\n          options: {\n            displayAddToCart: true,\n            addToCartString: (buyItAgainTranslation$ | async),\n            optionalBtn: addToCartBtn\n          }\n        }\"\n      >\n      </ng-template>\n    </div>\n  </ng-container>\n</ng-container>\n<ng-template #emptyCartItems>\n  <div class=\"cx-spinner\">\n    <cx-spinner></cx-spinner>\n  </div>\n</ng-template>\n\n<ng-template let-ctx #addToCartBtn>\n  <cx-add-to-cart\n    [productCode]=\"ctx.item.product?.code\"\n    [product]=\"ctx.item.product\"\n    [showQuantity]=\"false\"\n    [options]=\"ctx.options\"\n  >\n  </cx-add-to-cart>\n</ng-template>\n", dependencies: [{ kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i5.SpinnerComponent, selector: "cx-spinner" }, { kind: "directive", type: i5.OutletDirective, selector: "[cxOutlet]", inputs: ["cxOutlet", "cxOutletContext", "cxOutletDefer"], outputs: ["loaded"] }, { kind: "component", type: i6.AddToCartComponent, selector: "cx-add-to-cart", inputs: ["productCode", "showQuantity", "options", "product"] }, { kind: "pipe", type: i4.AsyncPipe, name: "async" }, { kind: "pipe", type: i3.TranslatePipe, name: "cxTranslate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: SavedCartDetailsItemsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-saved-cart-details-items', changeDetection: ChangeDetectionStrategy.OnPush, template: "<ng-container *ngIf=\"savedCart$ | async as cart\">\n  <ng-container *ngIf=\"cart?.entries?.length > 0; else emptyCartItems\">\n    <div role=\"status\" [attr.aria-label]=\"'common.loaded' | cxTranslate\"></div>\n    <div class=\"cart-details-wrapper\">\n      <ng-template\n        [cxOutlet]=\"CartOutlets.CART_ITEM_LIST\"\n        [cxOutletContext]=\"{\n          cartId: cart.code,\n          cartIsLoading: !(cartLoaded$ | async),\n          items: cart.entries,\n          promotionLocation: CartLocation.SavedCart,\n          options: {\n            displayAddToCart: true,\n            addToCartString: (buyItAgainTranslation$ | async),\n            optionalBtn: addToCartBtn\n          }\n        }\"\n      >\n      </ng-template>\n    </div>\n  </ng-container>\n</ng-container>\n<ng-template #emptyCartItems>\n  <div class=\"cx-spinner\">\n    <cx-spinner></cx-spinner>\n  </div>\n</ng-template>\n\n<ng-template let-ctx #addToCartBtn>\n  <cx-add-to-cart\n    [productCode]=\"ctx.item.product?.code\"\n    [product]=\"ctx.item.product\"\n    [showQuantity]=\"false\"\n    [options]=\"ctx.options\"\n  >\n  </cx-add-to-cart>\n</ng-template>\n" }]
        }], ctorParameters: function () { return [{ type: i1.SavedCartDetailsService }, { type: i2.SavedCartFacade }, { type: i3.EventService }, { type: i3.GlobalMessageService }, { type: i3.RoutingService }, { type: i3.TranslationService }]; } });
//# sourceMappingURL=data:application/json;base64,