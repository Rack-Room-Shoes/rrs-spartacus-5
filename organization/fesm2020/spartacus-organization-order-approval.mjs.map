{"version":3,"file":"spartacus-organization-order-approval.mjs","sources":["../../../feature-libs/organization/order-approval/core/model/order-approval.model.ts","../../../feature-libs/organization/order-approval/core/store/order-approval-state.ts","../../../feature-libs/organization/order-approval/core/store/actions/order-approval.action.ts","../../../feature-libs/organization/order-approval/core/store/actions/index.ts","../../../feature-libs/organization/order-approval/core/store/selectors/order-approval.selector.ts","../../../feature-libs/organization/order-approval/core/store/selectors/index.ts","../../../feature-libs/organization/order-approval/core/services/order-approval.service.ts","../../../feature-libs/organization/order-approval/components/details/order-approval-detail.service.ts","../../../feature-libs/organization/order-approval/components/details/order-approval-detail-form/order-approval-detail-form.component.ts","../../../feature-libs/organization/order-approval/components/details/order-approval-detail-form/order-approval-detail-form.component.html","../../../feature-libs/organization/order-approval/core/guards/approver.guard.ts","../../../feature-libs/organization/order-approval/components/details/order-detail-permission-results/order-detail-permission-results.component.ts","../../../feature-libs/organization/order-approval/components/details/order-detail-permission-results/order-detail-permission-results.component.html","../../../feature-libs/organization/order-approval/components/details/order-approval-details.module.ts","../../../feature-libs/organization/order-approval/components/details/index.ts","../../../feature-libs/organization/order-approval/components/list/order-approval-list.component.ts","../../../feature-libs/organization/order-approval/components/list/order-approval-list.component.html","../../../feature-libs/organization/order-approval/components/list/order-approval-list.module.ts","../../../feature-libs/organization/order-approval/components/list/index.ts","../../../feature-libs/organization/order-approval/components/order-approval-components.module.ts","../../../feature-libs/organization/order-approval/components/index.ts","../../../feature-libs/organization/order-approval/core/connectors/order-approval.adapter.ts","../../../feature-libs/organization/order-approval/core/connectors/order-approval.connector.ts","../../../feature-libs/organization/order-approval/core/connectors/converters.ts","../../../feature-libs/organization/order-approval/core/connectors/index.ts","../../../feature-libs/organization/order-approval/core/guards/index.ts","../../../feature-libs/organization/order-approval/core/model/augmented-core.model.ts","../../../feature-libs/organization/order-approval/core/model/index.ts","../../../feature-libs/organization/order-approval/core/services/index.ts","../../../feature-libs/organization/order-approval/occ/adapters/occ-order-approval.adapter.ts","../../../feature-libs/organization/order-approval/occ/adapters/index.ts","../../../feature-libs/organization/order-approval/occ/converters/occ-order-approval-decision-normalizer.ts","../../../feature-libs/organization/order-approval/occ/converters/occ-order-approval-list-normalizer.ts","../../../feature-libs/organization/order-approval/occ/converters/occ-order-approval-normalizer.ts","../../../feature-libs/organization/order-approval/occ/converters/index.ts","../../../feature-libs/organization/order-approval/occ/model/occ-order-approval-endpoints.model.ts","../../../feature-libs/organization/order-approval/occ/model/index.ts","../../../feature-libs/organization/order-approval/occ/config/default-occ-organization-config.ts","../../../feature-libs/organization/order-approval/occ/order-approval-occ.module.ts","../../../feature-libs/organization/order-approval/occ/index.ts","../../../feature-libs/organization/order-approval/core/store/effects/order-approval.effect.ts","../../../feature-libs/organization/order-approval/core/store/effects/index.ts","../../../feature-libs/organization/order-approval/core/store/reducers/order-approval.reducer.ts","../../../feature-libs/organization/order-approval/core/store/reducers/index.ts","../../../feature-libs/organization/order-approval/core/store/order-approval-store.module.ts","../../../feature-libs/organization/order-approval/core/order-approval-core.module.ts","../../../feature-libs/organization/order-approval/order-approval.module.ts","../../../feature-libs/organization/order-approval/public_api.ts","../../../feature-libs/organization/order-approval/spartacus-organization-order-approval.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { OrderApprovalPermissionType, Principal } from '@spartacus/core';\nimport { Order } from '@spartacus/order/root';\n\nexport enum OrderApprovalDecisionValue {\n  APPROVE = 'APPROVE',\n  REJECT = 'REJECT',\n}\nexport interface OrderApprovalDecision {\n  decision?: OrderApprovalDecisionValue;\n  comment?: string;\n}\n\nexport interface OrderApprovalRecord {\n  approver?: Principal;\n  comments?: string;\n  permissionTypes?: OrderApprovalPermissionType[];\n  statusDisplay?: string;\n}\n\nexport interface OrderApproval {\n  approvalDecisionRequired?: boolean;\n  code?: string;\n  customerOrderApprovalRecords?: OrderApprovalRecord[];\n  merchantOrderApprovalRecords?: OrderApprovalRecord[];\n  order?: Order;\n  trigger?: OrderApprovalTrigger;\n}\n\nexport interface OrderApprovalPermissionResult {\n  approverName: string;\n  approverNotes: string;\n  permissionType: OrderApprovalPermissionType;\n  statusDisplay: string;\n}\n\nexport interface OrderApprovalTrigger {\n  activationTime?: string;\n  displayTimeTable?: string;\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { StateUtils } from '@spartacus/core';\nimport { OrderApproval } from '../model/order-approval.model';\n\nexport const ORDER_APPROVAL_FEATURE = 'order-approval';\nexport const ORDER_APPROVAL_ENTITIES = 'order-approval-entities';\nexport const ORDER_APPROVAL_LIST = 'order-approval-list';\nexport const ORDER_APPROVAL_MAKE_DECISION_PROCESS_ID =\n  'orderApproval.makeDecision';\n\nexport interface OrderApprovalManagement\n  extends StateUtils.EntityListState<OrderApproval> {}\n\nexport interface OrderApprovalState {\n  [ORDER_APPROVAL_FEATURE]: OrderApprovalManagement;\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ListModel,\n  PROCESS_FEATURE,\n  SearchConfig,\n  StateUtils,\n} from '@spartacus/core';\nimport {\n  OrderApproval,\n  OrderApprovalDecision,\n} from '../../model/order-approval.model';\nimport {\n  ORDER_APPROVAL_ENTITIES,\n  ORDER_APPROVAL_LIST,\n  ORDER_APPROVAL_MAKE_DECISION_PROCESS_ID,\n} from '../order-approval-state';\n\nexport const LOAD_ORDER_APPROVAL = '[OrderApproval] Load OrderApproval Data';\nexport const LOAD_ORDER_APPROVAL_FAIL =\n  '[OrderApproval] Load OrderApproval Data Fail';\nexport const LOAD_ORDER_APPROVAL_SUCCESS =\n  '[OrderApproval] Load OrderApproval Data Success';\n\nexport const LOAD_ORDER_APPROVALS = '[OrderApproval] Load OrderApprovals';\nexport const LOAD_ORDER_APPROVALS_FAIL =\n  '[OrderApproval] Load OrderApprovals Fail';\nexport const LOAD_ORDER_APPROVALS_SUCCESS =\n  '[OrderApproval] Load OrderApprovals Success';\n\nexport const MAKE_DECISION = '[OrderApproval] Make OrderApproval Decision';\nexport const MAKE_DECISION_FAIL =\n  '[OrderApproval] Make OrderApproval Decision Fail';\nexport const MAKE_DECISION_SUCCESS =\n  '[OrderApproval] Make OrderApproval Decision Success';\nexport const MAKE_DECISION_RESET =\n  '[OrderApproval] Make OrderApproval Decision Reset';\n\nexport class LoadOrderApproval extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_ORDER_APPROVAL;\n  constructor(public payload: { userId: string; orderApprovalCode: string }) {\n    super(ORDER_APPROVAL_ENTITIES, payload.orderApprovalCode);\n  }\n}\n\nexport class LoadOrderApprovalFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_ORDER_APPROVAL_FAIL;\n  constructor(public payload: { orderApprovalCode: string; error: any }) {\n    super(ORDER_APPROVAL_ENTITIES, payload.orderApprovalCode, payload.error);\n  }\n}\n\nexport class LoadOrderApprovalSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_ORDER_APPROVAL_SUCCESS;\n  constructor(public payload: OrderApproval | OrderApproval[]) {\n    super(\n      ORDER_APPROVAL_ENTITIES,\n      Array.isArray(payload)\n        ? payload.map((orderApproval) => orderApproval.code ?? '')\n        : payload.code ?? ''\n    );\n  }\n}\n\nexport class LoadOrderApprovals extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_ORDER_APPROVALS;\n  constructor(\n    public payload: {\n      userId: string;\n      params: SearchConfig;\n    }\n  ) {\n    super(\n      ORDER_APPROVAL_LIST,\n      StateUtils.serializeSearchConfig(payload.params)\n    );\n  }\n}\n\nexport class LoadOrderApprovalsFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_ORDER_APPROVALS_FAIL;\n  constructor(public payload: { params: SearchConfig; error: any }) {\n    super(\n      ORDER_APPROVAL_LIST,\n      StateUtils.serializeSearchConfig(payload.params),\n      payload.error\n    );\n  }\n}\n\nexport class LoadOrderApprovalsSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_ORDER_APPROVALS_SUCCESS;\n  constructor(\n    public payload: {\n      page: ListModel;\n      params: SearchConfig;\n    }\n  ) {\n    super(\n      ORDER_APPROVAL_LIST,\n      StateUtils.serializeSearchConfig(payload.params)\n    );\n  }\n}\n\nexport class MakeDecision extends StateUtils.EntityLoadAction {\n  readonly type = MAKE_DECISION;\n  constructor(\n    public payload: {\n      userId: string;\n      orderApprovalCode: string;\n      orderApprovalDecision: OrderApprovalDecision;\n    }\n  ) {\n    super(PROCESS_FEATURE, ORDER_APPROVAL_MAKE_DECISION_PROCESS_ID);\n  }\n}\n\nexport class MakeDecisionFail extends StateUtils.EntityFailAction {\n  readonly type = MAKE_DECISION_FAIL;\n  constructor(public payload: { orderApprovalCode: string; error: any }) {\n    super(PROCESS_FEATURE, ORDER_APPROVAL_MAKE_DECISION_PROCESS_ID, payload);\n  }\n}\n\nexport class MakeDecisionSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = MAKE_DECISION_SUCCESS;\n  constructor(\n    public payload: {\n      orderApprovalCode: string;\n      orderApprovalDecision: OrderApprovalDecision;\n    }\n  ) {\n    super(PROCESS_FEATURE, ORDER_APPROVAL_MAKE_DECISION_PROCESS_ID);\n  }\n}\n\nexport class MakeDecisionReset extends StateUtils.EntityLoaderResetAction {\n  readonly type = MAKE_DECISION_RESET;\n  constructor() {\n    super(PROCESS_FEATURE, ORDER_APPROVAL_MAKE_DECISION_PROCESS_ID);\n  }\n}\n\nexport type OrderApprovalAction =\n  | LoadOrderApproval\n  | LoadOrderApprovalFail\n  | LoadOrderApprovalSuccess\n  | LoadOrderApprovals\n  | LoadOrderApprovalsFail\n  | LoadOrderApprovalsSuccess\n  | MakeDecision\n  | MakeDecisionFail\n  | MakeDecisionSuccess\n  | MakeDecisionReset;\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as OrderApprovalActions from './order-approval.action';\n\nexport { OrderApprovalActions };\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  createSelector,\n  MemoizedSelector,\n  createFeatureSelector,\n} from '@ngrx/store';\nimport { EntitiesModel, SearchConfig, StateUtils } from '@spartacus/core';\nimport { OrderApproval } from '../../model/order-approval.model';\nimport {\n  OrderApprovalManagement,\n  ORDER_APPROVAL_FEATURE,\n  OrderApprovalState,\n} from '../order-approval-state';\n\nexport const getOrderApprovalState: MemoizedSelector<\n  OrderApprovalState,\n  OrderApprovalState\n> = createFeatureSelector<OrderApprovalState>(ORDER_APPROVAL_FEATURE);\n\nexport const getOrderApprovalManagementState: MemoizedSelector<\n  OrderApprovalState,\n  OrderApprovalManagement\n> = createSelector(\n  getOrderApprovalState,\n  (state: OrderApprovalState) => state[ORDER_APPROVAL_FEATURE]\n);\n\nexport const getOrderApprovalsState: MemoizedSelector<\n  OrderApprovalState,\n  StateUtils.EntityLoaderState<OrderApproval>\n> = createSelector(\n  getOrderApprovalManagementState,\n  (state: OrderApprovalManagement) => state && state.entities\n);\n\nexport const getOrderApproval = (\n  orderApprovalCode: string\n): MemoizedSelector<\n  OrderApprovalState,\n  StateUtils.LoaderState<OrderApproval>\n> =>\n  createSelector(\n    getOrderApprovalsState,\n    (state: StateUtils.EntityLoaderState<OrderApproval>) =>\n      StateUtils.entityLoaderStateSelector(state, orderApprovalCode)\n  );\n\nexport const getOrderApprovalList = (\n  params: SearchConfig\n): MemoizedSelector<\n  OrderApprovalState,\n  StateUtils.LoaderState<EntitiesModel<OrderApproval>>\n> =>\n  createSelector(\n    getOrderApprovalManagementState,\n    (state: OrderApprovalManagement) =>\n      StateUtils.denormalizeSearch<OrderApproval>(state, params)\n  );\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as OrderApprovalSelectors from './order-approval.selector';\n\nexport { OrderApprovalSelectors };\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport {\n  EntitiesModel,\n  ProcessSelectors,\n  SearchConfig,\n  StateUtils,\n  StateWithProcess,\n  UserIdService,\n} from '@spartacus/core';\nimport { Observable, queueScheduler } from 'rxjs';\nimport { filter, map, observeOn, pluck, tap } from 'rxjs/operators';\nimport {\n  OrderApproval,\n  OrderApprovalDecision,\n} from '../model/order-approval.model';\nimport { OrderApprovalActions } from '../store/actions/index';\nimport {\n  OrderApprovalState,\n  ORDER_APPROVAL_MAKE_DECISION_PROCESS_ID,\n} from '../store/order-approval-state';\nimport { OrderApprovalSelectors } from '../store/selectors';\n\n@Injectable({ providedIn: 'root' })\nexport class OrderApprovalService {\n  constructor(\n    protected store: Store<OrderApprovalState | StateWithProcess<void>>,\n    protected userIdService: UserIdService\n  ) {}\n\n  loadOrderApproval(orderApprovalCode: string): void {\n    this.userIdService.takeUserId().subscribe((userId) =>\n      this.store.dispatch(\n        new OrderApprovalActions.LoadOrderApproval({\n          userId,\n          orderApprovalCode,\n        })\n      )\n    );\n  }\n\n  loadOrderApprovals(params: SearchConfig): void {\n    this.userIdService\n      .takeUserId()\n      .subscribe((userId) =>\n        this.store.dispatch(\n          new OrderApprovalActions.LoadOrderApprovals({ userId, params })\n        )\n      );\n  }\n\n  private getOrderApproval(\n    orderApprovalCode: string\n  ): Observable<StateUtils.LoaderState<OrderApproval>> {\n    return (<Store<OrderApprovalState>>this.store).select(\n      OrderApprovalSelectors.getOrderApproval(orderApprovalCode)\n    );\n  }\n\n  private getOrderApprovalList(\n    params: SearchConfig\n  ): Observable<StateUtils.LoaderState<EntitiesModel<OrderApproval>>> {\n    return (<Store<OrderApprovalState>>this.store).select(\n      OrderApprovalSelectors.getOrderApprovalList(params)\n    );\n  }\n\n  get(orderApprovalCode: string): Observable<OrderApproval | undefined> {\n    return this.getOrderApproval(orderApprovalCode).pipe(\n      observeOn(queueScheduler),\n      tap((state) => {\n        if (!(state.loading || state.success || state.error)) {\n          this.loadOrderApproval(orderApprovalCode);\n        }\n      }),\n      filter((state) => Boolean(state.success || state.error)),\n      map((state) => state.value)\n    );\n  }\n\n  /**\n   * Emits true if a request is currently fetching order approval data from\n   * the server.\n   *\n   * @param orderApprovalCode The approval code for which we want the loading status.\n   */\n  getOrderApprovalLoading(orderApprovalCode: string): Observable<boolean> {\n    return this.getOrderApproval(orderApprovalCode).pipe(\n      pluck('loading'),\n      map((loading) => loading ?? false)\n    );\n  }\n\n  getList(\n    params: SearchConfig\n  ): Observable<EntitiesModel<OrderApproval> | undefined> {\n    return this.getOrderApprovalList(params).pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<EntitiesModel<OrderApproval>>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadOrderApprovals(params);\n        }\n      }),\n      filter((process: StateUtils.LoaderState<EntitiesModel<OrderApproval>>) =>\n        Boolean(process.success || process.error)\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  makeDecision(\n    orderApprovalCode: string,\n    orderApprovalDecision: OrderApprovalDecision\n  ): void {\n    this.userIdService.takeUserId().subscribe((userId) =>\n      this.store.dispatch(\n        new OrderApprovalActions.MakeDecision({\n          userId,\n          orderApprovalCode,\n          orderApprovalDecision,\n        })\n      )\n    );\n  }\n\n  /**\n   * Returns the makeDecision loading flag.  Returns true when the process triggered\n   * by makeDecision() is currently running.\n   */\n  getMakeDecisionResultLoading(): Observable<boolean> {\n    return (<Store<StateWithProcess<void>>>this.store).pipe(\n      select(\n        ProcessSelectors.getProcessLoadingFactory(\n          ORDER_APPROVAL_MAKE_DECISION_PROCESS_ID\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns the makeDecision failure outcome.  Returns true when the outcome\n   * of makeDecision() was an error.\n   */\n  getMakeDecisionResultError(): Observable<boolean> {\n    return (<Store<StateWithProcess<void>>>this.store).pipe(\n      select(\n        ProcessSelectors.getProcessErrorFactory(\n          ORDER_APPROVAL_MAKE_DECISION_PROCESS_ID\n        )\n      )\n    );\n  }\n\n  /**\n   * Returns the makeDecision process success outcome.  Returns true when the outcome\n   * of makeDecision() was a success.\n   */\n  getMakeDecisionResultSuccess(): Observable<boolean> {\n    return (<Store<StateWithProcess<void>>>this.store).pipe(\n      select(\n        ProcessSelectors.getProcessSuccessFactory(\n          ORDER_APPROVAL_MAKE_DECISION_PROCESS_ID\n        )\n      )\n    );\n  }\n\n  /**\n   * Resets the makeDecision process state. It is usually preferable to reset the\n   * process state before making a call to makeDecision() for which we then want\n   * to monitor the loading state or the outcome.\n   */\n  resetMakeDecisionProcessState(): void {\n    this.store.dispatch(new OrderApprovalActions.MakeDecisionReset());\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport { Order } from '@spartacus/order/root';\nimport { Observable } from 'rxjs';\nimport {\n  filter,\n  map,\n  pluck,\n  shareReplay,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\nimport { OrderApproval } from '../../core/model/order-approval.model';\nimport { OrderApprovalService } from '../../core/services/order-approval.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderApprovalDetailService {\n  protected approvalCode$ = this.routingService\n    .getRouterState()\n    .pipe(map((routingData) => routingData.state.params.approvalCode));\n\n  protected orderApproval$ = this.approvalCode$.pipe(\n    filter((approvalCode) => Boolean(approvalCode)),\n    tap((approvalCode: string) =>\n      this.orderApprovalService.loadOrderApproval(approvalCode)\n    ),\n    switchMap((approvalCode: string) =>\n      this.orderApprovalService.get(approvalCode)\n    ),\n    shareReplay({ bufferSize: 1, refCount: true })\n  );\n\n  protected order$: Observable<Order> = this.orderApproval$.pipe(\n    pluck('order')\n  );\n\n  constructor(\n    protected routingService: RoutingService,\n    protected orderApprovalService: OrderApprovalService\n  ) {}\n\n  /**\n   * Returns a string that represents the approval code\n   * found in the page url.\n   */\n  getOrderApprovalCodeFromRoute(): Observable<string> {\n    return this.approvalCode$;\n  }\n\n  /**\n   * Returns the order data from the approval details that have been\n   * retrieved from the approval code in the page url.\n   */\n  getOrderDetails(): Observable<Order> {\n    return this.order$;\n  }\n\n  /**\n   * Returns the approval details that have been retrieved from the\n   * approval code in the page url.\n   */\n  getOrderApproval(): Observable<OrderApproval | undefined> {\n    return this.orderApproval$;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component, OnDestroy } from '@angular/core';\nimport {\n  UntypedFormBuilder,\n  UntypedFormGroup,\n  Validators,\n} from '@angular/forms';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport {\n  OrderApproval,\n  OrderApprovalDecisionValue,\n} from '../../../core/model/order-approval.model';\nimport { OrderApprovalService } from '../../../core/services/order-approval.service';\nimport { OrderApprovalDetailService } from '../order-approval-detail.service';\n\n@Component({\n  selector: 'cx-order-approval-detail-form',\n  templateUrl: './order-approval-detail-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderApprovalDetailFormComponent implements OnDestroy {\n  approvalDecisionValue = OrderApprovalDecisionValue;\n  approvalDecision: OrderApprovalDecisionValue;\n  approvalFormVisible = false;\n  approvalForm: UntypedFormGroup = this.fb.group({\n    comment: [''],\n  });\n\n  protected orderApprovalLoading$: Observable<boolean> =\n    this.orderApprovalDetailService\n      .getOrderApprovalCodeFromRoute()\n      .pipe(\n        switchMap((approvalCode: string) =>\n          this.orderApprovalService.getOrderApprovalLoading(approvalCode)\n        )\n      );\n\n  protected decisionResultLoading$ =\n    this.orderApprovalService.getMakeDecisionResultLoading();\n\n  loading$: Observable<boolean> = combineLatest([\n    this.orderApprovalLoading$,\n    this.decisionResultLoading$,\n  ]).pipe(\n    map(\n      ([approvalLoading, decisionResultLoading]) =>\n        approvalLoading || decisionResultLoading\n    )\n  );\n\n  orderApproval$: Observable<OrderApproval | undefined> =\n    this.orderApprovalDetailService.getOrderApproval();\n\n  constructor(\n    protected orderApprovalDetailService: OrderApprovalDetailService,\n    protected orderApprovalService: OrderApprovalService,\n    private fb: UntypedFormBuilder\n  ) {\n    this.orderApprovalService.resetMakeDecisionProcessState();\n  }\n\n  displayDecisionForm(decision: OrderApprovalDecisionValue) {\n    this.approvalDecision = decision;\n    if (decision === OrderApprovalDecisionValue.APPROVE) {\n      this.approvalForm.controls.comment.clearValidators();\n    } else {\n      this.approvalForm.controls.comment.setValidators([Validators.required]);\n    }\n    this.approvalFormVisible = true;\n  }\n\n  cancelDecisionForm() {\n    this.approvalFormVisible = false;\n    this.approvalForm.reset();\n  }\n\n  submitDecision(orderApproval: OrderApproval) {\n    if (this.approvalForm.valid) {\n      this.orderApprovalService.makeDecision(orderApproval.code ?? '', {\n        decision: this.approvalDecision,\n        comment: this.approvalForm.controls.comment.value,\n      });\n      this.approvalFormVisible = false;\n    } else {\n      this.approvalForm.markAllAsTouched();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.orderApprovalService.resetMakeDecisionProcessState();\n  }\n}\n","<ng-container *ngIf=\"orderApproval$ | async as orderApproval\">\n  <div *ngIf=\"loading$ | async; else approvalFormTemplate\">\n    <div class=\"cx-spinner\">\n      <cx-spinner></cx-spinner>\n    </div>\n  </div>\n\n  <ng-template #approvalFormTemplate>\n    <div role=\"status\" [attr.aria-label]=\"'common.loaded' | cxTranslate\"></div>\n    <ng-container *ngIf=\"orderApproval?.approvalDecisionRequired\">\n      <div *ngIf=\"approvalFormVisible\" class=\"cx-approval-form-header row\">\n        <div class=\"cx-approval-form-label col-sm-12\">\n          {{\n            'orderApprovalDetails.form.title_' + approvalDecision\n              | cxTranslate\n                : {\n                    orderCode: orderApproval?.order?.code,\n                    orderTotal:\n                      orderApproval?.order?.totalPriceWithTax?.formattedValue\n                  }\n          }}\n        </div>\n      </div>\n\n      <form\n        [formGroup]=\"approvalForm\"\n        (ngSubmit)=\"submitDecision(orderApproval)\"\n        *ngIf=\"approvalFormVisible\"\n      >\n        <label\n          >{{\n            'orderApprovalDetails.form.comment_' + approvalDecision + '.label'\n              | cxTranslate\n          }}\n          <textarea\n            class=\"form-control\"\n            rows=\"3\"\n            formControlName=\"comment\"\n            maxlength=\"255\"\n          ></textarea>\n          <cx-form-errors\n            [control]=\"approvalForm.get('comment')\"\n          ></cx-form-errors>\n        </label>\n        <div class=\"form-group row\">\n          <div class=\"col-lg-6 col-md-12\">\n            <button\n              class=\"btn btn-block btn-secondary\"\n              (click)=\"cancelDecisionForm()\"\n              type=\"button\"\n            >\n              {{ 'orderApprovalDetails.form.cancel' | cxTranslate }}\n            </button>\n          </div>\n          <div class=\"col-lg-6 col-md-12\">\n            <button class=\"btn btn-block btn-primary\" type=\"submit\">\n              {{\n                'orderApprovalDetails.form.submit_' + approvalDecision\n                  | cxTranslate\n              }}\n            </button>\n          </div>\n        </div>\n      </form>\n    </ng-container>\n    <ng-container *ngIf=\"!approvalFormVisible\">\n      <div class=\"form-group row\">\n        <div class=\"col-lg-4 col-md-12\">\n          <a\n            [routerLink]=\"{ cxRoute: 'orderApprovals' } | cxUrl\"\n            class=\"btn btn-block btn-secondary\"\n            >{{ 'orderApprovalDetails.back' | cxTranslate }}</a\n          >\n        </div>\n        <div\n          class=\"col-lg-4 col-md-12\"\n          *ngIf=\"orderApproval?.approvalDecisionRequired\"\n        >\n          <button\n            class=\"btn btn-block btn-primary\"\n            (click)=\"displayDecisionForm(approvalDecisionValue.REJECT)\"\n          >\n            {{ 'orderApprovalDetails.showForm_REJECT' | cxTranslate }}\n          </button>\n        </div>\n        <div\n          class=\"col-lg-4 col-md-12\"\n          *ngIf=\"orderApproval?.approvalDecisionRequired\"\n        >\n          <button\n            class=\"btn btn-block btn-primary\"\n            (click)=\"displayDecisionForm(approvalDecisionValue.APPROVE)\"\n          >\n            {{ 'orderApprovalDetails.showForm_APPROVE' | cxTranslate }}\n          </button>\n        </div>\n      </div>\n    </ng-container>\n  </ng-template>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport {\n  B2BUserRole,\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n} from '@spartacus/core';\nimport { UserAccountFacade } from '@spartacus/user/account/root';\nimport { Observable } from 'rxjs';\nimport { filter, map, pluck } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApproverGuard implements CanActivate {\n  constructor(\n    protected userAccountFacade: UserAccountFacade,\n    protected routingService: RoutingService,\n    protected globalMessageService: GlobalMessageService\n  ) {}\n\n  canActivate(): Observable<boolean> {\n    return this.userAccountFacade.get().pipe(\n      filter((user) => !!user && Object.keys(user).length > 0),\n      pluck('roles'),\n      map((roles) => {\n        const hasRole =\n          Array.isArray(roles) &&\n          (roles.includes(B2BUserRole.APPROVER) ||\n            roles.includes(B2BUserRole.ADMIN));\n\n        if (!hasRole) {\n          this.routingService.go({ cxRoute: 'home' });\n\n          this.globalMessageService.add(\n            {\n              key: 'orderApprovalGlobal.notification.noSufficientPermissions',\n            },\n            GlobalMessageType.MSG_TYPE_WARNING\n          );\n        }\n\n        return hasRole;\n      })\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { OrderDetailsService } from '@spartacus/order/components';\nimport { Order } from '@spartacus/order/root';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-order-detail-permission-results',\n  templateUrl: './order-detail-permission-results.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderDetailPermissionResultsComponent {\n  order$: Observable<Order> = this.orderDetailsService.getOrderDetails();\n\n  constructor(protected orderDetailsService: OrderDetailsService) {}\n}\n","<ng-container *ngIf=\"order$ | async as order\">\n  <ng-container *ngIf=\"order.permissionResults?.length\">\n    <div class=\"cx-approval-header\">\n      <div class=\"cx-approval-label\">\n        {{ 'orderApprovalDetails.permissionResults.header' | cxTranslate }}\n      </div>\n    </div>\n    <table class=\"table table-striped cx-approval-table\">\n      <thead class=\"cx-approval-thead-mobile\">\n        <th scope=\"col\">\n          {{\n            'orderApprovalDetails.permissionResults.permission' | cxTranslate\n          }}\n        </th>\n        <th scope=\"col\">\n          {{ 'orderApprovalDetails.permissionResults.approver' | cxTranslate }}\n        </th>\n        <th scope=\"col\">\n          {{ 'orderApprovalDetails.permissionResults.status' | cxTranslate }}\n        </th>\n        <th scope=\"col\">\n          {{\n            'orderApprovalDetails.permissionResults.approverComments'\n              | cxTranslate\n          }}\n        </th>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let permissionResult of order.permissionResults\">\n          <td class=\"cx-approval-permissionCode\">\n            <div class=\"cx-approval-table-label\">\n              {{\n                'orderApprovalDetails.permissionResults.permission'\n                  | cxTranslate\n              }}\n            </div>\n            {{\n              'orderApprovalDetails.permissionResults.permissionType_' +\n                permissionResult?.permissionType?.code | cxTranslate\n            }}\n          </td>\n          <td class=\"cx-approval-approverName\">\n            <div class=\"cx-approval-table-label\">\n              {{\n                'orderApprovalDetails.permissionResults.approver' | cxTranslate\n              }}\n            </div>\n            {{ permissionResult.approverName }}\n          </td>\n          <td class=\"cx-approval-statusDisplay\">\n            <div class=\"cx-approval-table-label\">\n              {{\n                'orderApprovalDetails.permissionResults.status' | cxTranslate\n              }}\n            </div>\n            {{ permissionResult.statusDisplay }}\n          </td>\n          <td class=\"cx-approval-approvalNotes\">\n            <div class=\"cx-approval-table-label\">\n              {{\n                'orderApprovalDetails.permissionResults.approverComments'\n                  | cxTranslate\n              }}\n            </div>\n            {{\n              permissionResult.approverNotes\n                ? permissionResult.approverNotes\n                : ('orderApprovalDetails.permissionResults.noApprovalComments'\n                  | cxTranslate)\n            }}\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport {\n  OrderDetailItemsComponent,\n  OrderDetailShippingComponent,\n  OrderDetailsService,\n  OrderDetailTotalsComponent,\n} from '@spartacus/order/components';\nimport { FormErrorsModule, SpinnerModule } from '@spartacus/storefront';\nimport { ApproverGuard } from '../../core/guards/approver.guard';\nimport { OrderApprovalDetailFormComponent } from './order-approval-detail-form/order-approval-detail-form.component';\nimport { OrderApprovalDetailService } from './order-approval-detail.service';\nimport { OrderDetailPermissionResultsComponent } from './order-detail-permission-results/order-detail-permission-results.component';\n\n@NgModule({\n  imports: [\n    ReactiveFormsModule,\n    CommonModule,\n    I18nModule,\n    UrlModule,\n    FormErrorsModule,\n    SpinnerModule,\n    RouterModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        OrderApprovalDetailTotalsComponent: {\n          component: OrderDetailTotalsComponent,\n          providers: [\n            {\n              provide: OrderDetailsService,\n              useExisting: OrderApprovalDetailService,\n            },\n          ],\n          guards: [AuthGuard, ApproverGuard],\n        },\n        OrderApprovalDetailApprovalDetailsComponent: {\n          component: OrderDetailPermissionResultsComponent,\n          providers: [\n            {\n              provide: OrderDetailsService,\n              useExisting: OrderApprovalDetailService,\n            },\n          ],\n          guards: [AuthGuard, ApproverGuard],\n        },\n        AccountOrderDetailsApprovalDetailsComponent: {\n          component: OrderDetailPermissionResultsComponent,\n        },\n        OrderApprovalDetailShippingComponent: {\n          component: OrderDetailShippingComponent,\n          providers: [\n            {\n              provide: OrderDetailsService,\n              useExisting: OrderApprovalDetailService,\n            },\n          ],\n          guards: [AuthGuard, ApproverGuard],\n        },\n        OrderApprovalDetailItemsComponent: {\n          component: OrderDetailItemsComponent,\n          providers: [\n            {\n              provide: OrderDetailsService,\n              useExisting: OrderApprovalDetailService,\n            },\n          ],\n          guards: [AuthGuard, ApproverGuard],\n        },\n        OrderApprovalDetailFormComponent: {\n          component: OrderApprovalDetailFormComponent,\n          guards: [AuthGuard, ApproverGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [\n    OrderApprovalDetailFormComponent,\n    OrderDetailPermissionResultsComponent,\n  ],\n  exports: [\n    OrderApprovalDetailFormComponent,\n    OrderDetailPermissionResultsComponent,\n  ],\n})\nexport class OrderApprovalDetailsModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './order-approval-detail-form/order-approval-detail-form.component';\nexport * from './order-approval-detail.service';\nexport * from './order-approval-details.module';\nexport * from './order-detail-permission-results/order-detail-permission-results.component';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport {\n  EntitiesModel,\n  RoutingService,\n  SearchConfig,\n  TranslationService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrderApproval } from '../../core/model/order-approval.model';\nimport { OrderApprovalService } from '../../core/services/order-approval.service';\n\n@Component({\n  selector: 'cx-order-approval-list',\n  templateUrl: './order-approval-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderApprovalListComponent implements OnInit {\n  constructor(\n    protected routing: RoutingService,\n    protected orderApprovalService: OrderApprovalService,\n    protected translation: TranslationService\n  ) {}\n\n  sortLabels$: Observable<{ byDate: string; byOrderNumber: string }>;\n  protected PAGE_SIZE = 5;\n  sortType: string;\n\n  orderApprovals$: Observable<EntitiesModel<OrderApproval> | undefined>;\n\n  ngOnInit(): void {\n    this.fetchApprovalListPage({});\n    this.sortLabels$ = combineLatest([\n      this.translation.translate('sorting.date'),\n      this.translation.translate('sorting.orderNumber'),\n    ]).pipe(\n      map(([textByDate, textByOrderNumber]) => {\n        return {\n          byDate: textByDate,\n          byOrderNumber: textByOrderNumber,\n        };\n      })\n    );\n  }\n\n  changeSortCode(sortCode: string): void {\n    const fetchParams: SearchConfig = {\n      sort: sortCode,\n      currentPage: 0,\n    };\n    this.sortType = sortCode;\n    this.fetchApprovalListPage(fetchParams);\n  }\n\n  pageChange(page: number): void {\n    const fetchParams: SearchConfig = {\n      sort: this.sortType,\n      currentPage: page,\n    };\n    this.fetchApprovalListPage(fetchParams);\n  }\n\n  protected fetchApprovalListPage(searchConfig: SearchConfig): void {\n    searchConfig.pageSize = this.PAGE_SIZE;\n    this.orderApprovalService.loadOrderApprovals(searchConfig);\n    this.orderApprovals$ = this.orderApprovalService.getList(searchConfig);\n  }\n\n  goToApprovalDetails(event: any, orderApproval: OrderApproval): void {\n    if (event?.target?.nodeName.toLowerCase() !== 'a') {\n      this.routing.go({\n        cxRoute: 'orderApprovalDetails',\n        params: { approvalCode: orderApproval.code },\n      });\n    }\n  }\n}\n","<ng-container *ngIf=\"orderApprovals$ | async as orderApprovals\">\n  <ng-container\n    *ngIf=\"\n      orderApprovals.pagination &&\n        orderApprovals.pagination.totalResults &&\n        orderApprovals.pagination.totalResults > 0;\n      else noOrder\n    \"\n  >\n    <!-- Select Form and Pagination Top -->\n    <div class=\"cx-order-approval-sort top row\">\n      <div\n        class=\"\n          cx-order-approval-form-group\n          form-group\n          col-sm-12 col-md-4 col-lg-4\n        \"\n      >\n        <cx-sorting\n          [sortOptions]=\"orderApprovals.sorts\"\n          [sortLabels]=\"sortLabels$ | async\"\n          (sortListEvent)=\"changeSortCode($event)\"\n          [selectedOption]=\"orderApprovals.pagination.sort\"\n          [ariaLabel]=\"'orderHistory.sortOrders' | cxTranslate\"\n          ariaControls=\"order-approval-table\"\n        ></cx-sorting>\n      </div>\n      <div class=\"cx-order-approval-pagination\">\n        <cx-pagination\n          [pagination]=\"orderApprovals.pagination\"\n          (viewPageEvent)=\"pageChange($event)\"\n        ></cx-pagination>\n      </div>\n    </div>\n    <!-- TABLE -->\n    <table id=\"order-approval-table\" class=\"table cx-order-approval-table\">\n      <thead class=\"cx-order-approval-thead-mobile\">\n        <th scope=\"col\">\n          {{ 'orderApprovalList.orderCode' | cxTranslate }}\n        </th>\n        <th scope=\"col\">{{ 'orderApprovalList.POCode' | cxTranslate }}</th>\n        <th scope=\"col\">{{ 'orderApprovalList.placedBy' | cxTranslate }}</th>\n        <th scope=\"col\">{{ 'orderApprovalList.date' | cxTranslate }}</th>\n        <th scope=\"col\">\n          {{ 'orderApprovalList.status' | cxTranslate }}\n        </th>\n        <th scope=\"col\">{{ 'orderApprovalList.total' | cxTranslate }}</th>\n      </thead>\n      <tbody>\n        <tr\n          *ngFor=\"let approval of orderApprovals.values\"\n          (click)=\"goToApprovalDetails($event, approval)\"\n        >\n          <td class=\"cx-order-approval-code\">\n            <div class=\"d-md-none cx-order-approval-label\">\n              {{ 'orderApprovalList.orderCode' | cxTranslate }}\n            </div>\n            <a\n              [routerLink]=\"\n                {\n                  cxRoute: 'orderApprovalDetails',\n                  params: { approvalCode: approval?.code }\n                } | cxUrl\n              \"\n              class=\"cx-order-approval-value\"\n            >\n              {{ approval.order?.code }}</a\n            >\n          </td>\n          <td class=\"cx-order-approval-po-code\">\n            <div class=\"d-md-none cx-order-approval-label\">\n              {{ 'orderApprovalList.POCode' | cxTranslate }}\n            </div>\n            <a\n              [routerLink]=\"\n                {\n                  cxRoute: 'orderApprovalDetails',\n                  params: { approvalCode: approval?.code }\n                } | cxUrl\n              \"\n              class=\"cx-order-approval-value\"\n              >{{\n                approval.order?.purchaseOrderNumber ||\n                  ('orderApprovalList.none' | cxTranslate)\n              }}</a\n            >\n          </td>\n          <td class=\"cx-order-approval-placed\">\n            <div class=\"d-md-none cx-order-approval-label\">\n              {{ 'orderApprovalList.placedBy' | cxTranslate }}\n            </div>\n            <a\n              [routerLink]=\"\n                {\n                  cxRoute: 'orderApprovalDetails',\n                  params: { approvalCode: approval?.code }\n                } | cxUrl\n              \"\n              class=\"cx-order-approval-value\"\n              >{{ approval.order?.orgCustomer?.name }}</a\n            >\n          </td>\n          <td class=\"cx-order-approval-date\">\n            <div class=\"d-md-none cx-order-approval-label\">\n              {{ 'orderApprovalList.date' | cxTranslate }}\n            </div>\n            <a\n              [routerLink]=\"\n                {\n                  cxRoute: 'orderApprovalDetails',\n                  params: { approvalCode: approval?.code }\n                } | cxUrl\n              \"\n              class=\"cx-order-approval-value\"\n              >{{ approval.order?.created | cxDate: 'longDate' }}</a\n            >\n          </td>\n\n          <td class=\"cx-order-approval-status\">\n            <div class=\"d-md-none cx-order-approval-label\">\n              {{ 'orderApprovalList.status' | cxTranslate }}\n            </div>\n            <a\n              [routerLink]=\"\n                {\n                  cxRoute: 'orderApprovalDetails',\n                  params: { approvalCode: approval?.code }\n                } | cxUrl\n              \"\n              class=\"cx-order-approval-value\"\n            >\n              {{\n                'orderDetails.statusDisplay_' + approval.order?.statusDisplay\n                  | cxTranslate\n              }}</a\n            >\n          </td>\n          <td class=\"cx-order-approval-total\">\n            <div class=\"d-md-none cx-order-approval-label\">\n              {{ 'orderApprovalList.total' | cxTranslate }}\n            </div>\n            <a\n              [routerLink]=\"\n                {\n                  cxRoute: 'orderApprovalDetails',\n                  params: { approvalCode: approval?.code }\n                } | cxUrl\n              \"\n              class=\"cx-order-approval-value\"\n            >\n              {{ approval.order?.totalPrice?.formattedValue }}</a\n            >\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <!-- Select Form and Pagination Bottom -->\n    <div class=\"cx-order-approval-sort bottom row\">\n      <div\n        class=\"\n          cx-order-approval-form-group\n          form-group\n          col-sm-12 col-md-4 col-lg-4\n        \"\n      >\n        <cx-sorting\n          [sortOptions]=\"orderApprovals.sorts\"\n          [sortLabels]=\"sortLabels$ | async\"\n          (sortListEvent)=\"changeSortCode($event)\"\n          [selectedOption]=\"orderApprovals.pagination.sort\"\n        ></cx-sorting>\n      </div>\n      <div class=\"cx-order-approval-pagination\">\n        <cx-pagination\n          [pagination]=\"orderApprovals.pagination\"\n          (viewPageEvent)=\"pageChange($event)\"\n        ></cx-pagination>\n      </div>\n    </div>\n  </ng-container>\n\n  <!-- NO ORDER CONTAINER -->\n  <ng-template #noOrder>\n    <div class=\"cx-order-approval-no-order row\">\n      <div class=\"col-sm-12 col-md-6 col-lg-4\">\n        <div>{{ 'orderApprovalList.emptyList' | cxTranslate }}</div>\n      </div>\n    </div>\n  </ng-template>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport { ListNavigationModule } from '@spartacus/storefront';\nimport { ApproverGuard } from '../../core/guards/approver.guard';\nimport { OrderApprovalListComponent } from './order-approval-list.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        OrderApprovalListComponent: {\n          component: OrderApprovalListComponent,\n          guards: [AuthGuard, ApproverGuard],\n        },\n      },\n    }),\n    UrlModule,\n    RouterModule,\n    ListNavigationModule,\n    I18nModule,\n  ],\n  declarations: [OrderApprovalListComponent],\n  exports: [OrderApprovalListComponent],\n})\nexport class OrderApprovalListModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './order-approval-list.component';\nexport * from './order-approval-list.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { OrderApprovalDetailsModule } from './details/order-approval-details.module';\nimport { OrderApprovalListModule } from './list/order-approval-list.module';\n\n@NgModule({\n  imports: [RouterModule, OrderApprovalListModule, OrderApprovalDetailsModule],\n})\nexport class OrderApprovalComponentsModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './details/index';\nexport * from './list/index';\nexport * from './order-approval-components.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { EntitiesModel, SearchConfig } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  OrderApproval,\n  OrderApprovalDecision,\n} from '../model/order-approval.model';\n\nexport abstract class OrderApprovalAdapter {\n  /**\n   * Abstract method used to load orderApprovalManagement's details data.\n   * OrderApproval's data can be loaded from alternative sources, as long as the structure\n   * converts to the `OrderApproval`.\n   *\n   * @param userId The `userId` for given orderApprovalManagement\n   * @param orderApprovalCode The `orderApprovalCode` for given orderApprovalManagement\n   */\n  abstract load(\n    userId: string,\n    orderApprovalCode: string\n  ): Observable<OrderApproval>;\n\n  abstract loadList(\n    userId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<OrderApproval>>;\n\n  abstract makeDecision(\n    userId: string,\n    orderApprovalCode: string,\n    orderApprovalDecision: OrderApprovalDecision\n  ): Observable<OrderApprovalDecision>;\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { EntitiesModel, SearchConfig } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  OrderApproval,\n  OrderApprovalDecision,\n} from '../model/order-approval.model';\nimport { OrderApprovalAdapter } from './order-approval.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderApprovalConnector {\n  constructor(protected adapter: OrderApprovalAdapter) {}\n\n  get(userId: string, orderApprovalCode: string): Observable<OrderApproval> {\n    return this.adapter.load(userId, orderApprovalCode);\n  }\n\n  getList(\n    userId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<OrderApproval>> {\n    return this.adapter.loadList(userId, params);\n  }\n\n  makeDecision(\n    userId: string,\n    orderApprovalCode: string,\n    orderApprovalDecision: OrderApprovalDecision\n  ): Observable<OrderApprovalDecision> {\n    return this.adapter.makeDecision(\n      userId,\n      orderApprovalCode,\n      orderApprovalDecision\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { Converter, EntitiesModel } from '@spartacus/core';\nimport {\n  OrderApproval,\n  OrderApprovalDecision,\n} from '../model/order-approval.model';\n\nexport const ORDER_APPROVAL_NORMALIZER = new InjectionToken<\n  Converter<any, OrderApproval>\n>('OrderApprovalNormalizer');\n\nexport const ORDER_APPROVALS_NORMALIZER = new InjectionToken<\n  Converter<any, EntitiesModel<OrderApproval>>\n>('OrderApprovalsListNormalizer');\n\nexport const ORDER_APPROVAL_DECISION_NORMALIZER = new InjectionToken<\n  Converter<any, OrderApprovalDecision>\n>('OrderApprovalDecisionNormalizer');\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './order-approval.connector';\nexport * from './order-approval.adapter';\nexport * from './converters';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './approver.guard';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { OrderApprovalPermissionResult } from './order-approval.model';\n\ndeclare module '@spartacus/order/root' {\n  interface Order {\n    permissionResults?: OrderApprovalPermissionResult[];\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './order-approval.model';\n// Imported for side effects (module augmentation)\nimport './augmented-core.model';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './order-approval.service';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {\n  ConverterService,\n  EntitiesModel,\n  Occ,\n  OccEndpointsService,\n  SearchConfig,\n} from '@spartacus/core';\nimport {\n  OrderApproval,\n  OrderApprovalDecision,\n} from '../../core/model/order-approval.model';\nimport { OrderApprovalAdapter } from '../../core/connectors/order-approval.adapter';\nimport {\n  ORDER_APPROVALS_NORMALIZER,\n  ORDER_APPROVAL_DECISION_NORMALIZER,\n  ORDER_APPROVAL_NORMALIZER,\n} from '../../core/connectors/converters';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class OccOrderApprovalAdapter implements OrderApprovalAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  load(userId: string, orderApprovalCode: string): Observable<OrderApproval> {\n    return this.http\n      .get<Occ.OrderApproval>(\n        this.getOrderApprovalEndpoint(userId, orderApprovalCode)\n      )\n      .pipe(this.converter.pipeable(ORDER_APPROVAL_NORMALIZER));\n  }\n\n  loadList(\n    userId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<OrderApproval>> {\n    return this.http\n      .get<Occ.OrderApprovalsList>(\n        this.getOrderApprovalsEndpoint(userId, params)\n      )\n      .pipe(this.converter.pipeable(ORDER_APPROVALS_NORMALIZER));\n  }\n\n  makeDecision(\n    userId: string,\n    orderApprovalCode: string,\n    orderApprovalDecision: OrderApprovalDecision\n  ): Observable<OrderApprovalDecision> {\n    return this.http\n      .post<Occ.OrderApproval>(\n        this.getOrderApprovalDecisionEndpoint(userId, orderApprovalCode),\n        orderApprovalDecision\n      )\n      .pipe(this.converter.pipeable(ORDER_APPROVAL_DECISION_NORMALIZER));\n  }\n\n  protected getOrderApprovalEndpoint(\n    userId: string,\n    orderApprovalCode: string\n  ): string {\n    return this.occEndpoints.buildUrl('orderApproval', {\n      urlParams: {\n        userId,\n        orderApprovalCode,\n      },\n    });\n  }\n\n  protected getOrderApprovalsEndpoint(\n    userId: string,\n    params?: SearchConfig\n  ): string {\n    return this.occEndpoints.buildUrl('orderApprovals', {\n      urlParams: { userId },\n      queryParams: params,\n    });\n  }\n\n  protected getOrderApprovalDecisionEndpoint(\n    userId: string,\n    orderApprovalCode: string\n  ): string {\n    return this.occEndpoints.buildUrl('orderApprovalDecision', {\n      urlParams: {\n        userId,\n        orderApprovalCode,\n      },\n    });\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './occ-order-approval.adapter';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Converter, Occ } from '@spartacus/core';\nimport { OrderApprovalDecision } from '../../core/model/order-approval.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OccOrderApprovalDecisionNormalizer\n  implements Converter<Occ.OrderApprovalDecision, OrderApprovalDecision>\n{\n  constructor() {\n    // Intentional empty constructor\n  }\n\n  convert(\n    source: Occ.OrderApprovalDecision,\n    target?: OrderApprovalDecision\n  ): OrderApprovalDecision {\n    if (target === undefined) {\n      target = { ...(source as any) } as OrderApprovalDecision;\n    }\n    return target;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n  Converter,\n  ConverterService,\n  EntitiesModel,\n  Occ,\n} from '@spartacus/core';\nimport { ORDER_APPROVAL_NORMALIZER } from '../../core/connectors/converters';\nimport { OrderApproval } from '../../core/model/order-approval.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OccOrderApprovalListNormalizer\n  implements Converter<Occ.OrderApprovalsList, EntitiesModel<OrderApproval>>\n{\n  constructor(private converter: ConverterService) {}\n\n  convert(\n    source: Occ.OrderApprovalsList,\n    target?: EntitiesModel<OrderApproval>\n  ): EntitiesModel<OrderApproval> {\n    if (target === undefined) {\n      target = { ...(source as any) } as EntitiesModel<OrderApproval>;\n    }\n    target.values =\n      source.orderApprovals?.map((orderApproval) => ({\n        ...this.converter.convert(orderApproval, ORDER_APPROVAL_NORMALIZER),\n      })) ?? [];\n    return target;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Converter, ConverterService, Occ } from '@spartacus/core';\nimport { ORDER_NORMALIZER } from '@spartacus/order/root';\nimport { OrderApproval } from '../../core/model/order-approval.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OccOrderApprovalNormalizer\n  implements Converter<Occ.OrderApproval, OrderApproval>\n{\n  constructor(private converter: ConverterService) {}\n\n  convert(source: Occ.OrderApproval, target?: OrderApproval): OrderApproval {\n    if (target === undefined) {\n      target = { ...(source as any) } as OrderApproval;\n    }\n    if (source.order) {\n      target.order = this.converter.convert(source.order, ORDER_NORMALIZER);\n    }\n    return target;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './occ-order-approval-decision-normalizer';\nexport * from './occ-order-approval-list-normalizer';\nexport * from './occ-order-approval-normalizer';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { OccEndpoint } from '@spartacus/core';\n\ndeclare module '@spartacus/core' {\n  interface OccEndpoints {\n    /**\n     * Endpoint for order approvals\n     *\n     * @member {string}\n     */\n    orderApprovals?: string | OccEndpoint;\n    /**\n     * Endpoint for order approval\n     *\n     * @member {string}\n     */\n    orderApproval?: string | OccEndpoint;\n    /**\n     * Endpoint for order approval decision\n     *\n     * @member {string}\n     */\n    orderApprovalDecision?: string | OccEndpoint;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Imported for side effects (module augmentation)\nimport './occ-order-approval-endpoints.model';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { OccConfig } from '@spartacus/core';\n\nexport const defaultOccOrderApprovalConfig: OccConfig = {\n  backend: {\n    occ: {\n      endpoints: {\n        orderApprovals: '/users/${userId}/orderapprovals',\n        orderApproval:\n          '/users/${userId}/orderapprovals/${orderApprovalCode}?fields=FULL',\n        orderApprovalDecision:\n          '/users/${userId}/orderapprovals/${orderApprovalCode}/decision',\n      },\n    },\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { OrderApprovalAdapter } from '../core/connectors/order-approval.adapter';\nimport {\n  ORDER_APPROVALS_NORMALIZER,\n  ORDER_APPROVAL_DECISION_NORMALIZER,\n  ORDER_APPROVAL_NORMALIZER,\n} from '../core/connectors/converters';\n\nimport { OccOrderApprovalAdapter } from './adapters/occ-order-approval.adapter';\n\nimport { OccOrderApprovalDecisionNormalizer } from './converters/occ-order-approval-decision-normalizer';\nimport { OccOrderApprovalListNormalizer } from './converters/occ-order-approval-list-normalizer';\nimport { OccOrderApprovalNormalizer } from './converters/occ-order-approval-normalizer';\nimport { defaultOccOrderApprovalConfig } from './config/default-occ-organization-config';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(defaultOccOrderApprovalConfig),\n    {\n      provide: OrderApprovalAdapter,\n      useClass: OccOrderApprovalAdapter,\n    },\n    {\n      provide: ORDER_APPROVAL_NORMALIZER,\n      useExisting: OccOrderApprovalNormalizer,\n      multi: true,\n    },\n    {\n      provide: ORDER_APPROVALS_NORMALIZER,\n      useExisting: OccOrderApprovalListNormalizer,\n      multi: true,\n    },\n    {\n      provide: ORDER_APPROVAL_DECISION_NORMALIZER,\n      useExisting: OccOrderApprovalDecisionNormalizer,\n      multi: true,\n    },\n  ],\n})\nexport class OrderApprovalOccModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './adapters/index';\nexport * from './converters/index';\nexport * from './model/index';\nexport * from './order-approval-occ.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport {\n  EntitiesModel,\n  normalizeHttpError,\n  StateUtils,\n  OCC_USER_ID_ANONYMOUS,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { catchError, filter, map, switchMap } from 'rxjs/operators';\nimport { OrderApprovalConnector } from '../../connectors/order-approval.connector';\nimport { OrderApproval } from '../../model/order-approval.model';\nimport { OrderApprovalActions } from '../actions/index';\n\n@Injectable()\nexport class OrderApprovalEffects {\n  loadOrderApproval$: Observable<\n    | OrderApprovalActions.LoadOrderApprovalSuccess\n    | OrderApprovalActions.LoadOrderApprovalFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(OrderApprovalActions.LOAD_ORDER_APPROVAL),\n      map((action: OrderApprovalActions.LoadOrderApproval) => action.payload),\n      filter((payload) => payload.userId !== OCC_USER_ID_ANONYMOUS),\n      switchMap(({ userId, orderApprovalCode }) => {\n        return this.orderApprovalConnector.get(userId, orderApprovalCode).pipe(\n          map((orderApproval: OrderApproval) => {\n            return new OrderApprovalActions.LoadOrderApprovalSuccess([\n              orderApproval,\n            ]);\n          }),\n          catchError((error: HttpErrorResponse) =>\n            of(\n              new OrderApprovalActions.LoadOrderApprovalFail({\n                orderApprovalCode,\n                error: normalizeHttpError(error),\n              })\n            )\n          )\n        );\n      })\n    )\n  );\n\n  loadOrderApprovals$: Observable<\n    | OrderApprovalActions.LoadOrderApprovalsSuccess\n    | OrderApprovalActions.LoadOrderApprovalSuccess\n    | OrderApprovalActions.LoadOrderApprovalsFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(OrderApprovalActions.LOAD_ORDER_APPROVALS),\n      map((action: OrderApprovalActions.LoadOrderApprovals) => action.payload),\n      filter((payload) => payload.userId !== OCC_USER_ID_ANONYMOUS),\n      switchMap(({ userId, params }) =>\n        this.orderApprovalConnector.getList(userId, params).pipe(\n          switchMap((orderApprovals: EntitiesModel<OrderApproval>) => {\n            const { values, page } = StateUtils.normalizeListPage(\n              orderApprovals,\n              'code'\n            );\n            return [\n              new OrderApprovalActions.LoadOrderApprovalSuccess(values),\n              new OrderApprovalActions.LoadOrderApprovalsSuccess({\n                page,\n                params,\n              }),\n            ];\n          }),\n          catchError((error: HttpErrorResponse) =>\n            of(\n              new OrderApprovalActions.LoadOrderApprovalsFail({\n                params: params,\n                error: normalizeHttpError(error),\n              })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  makeDecision$: Observable<\n    | OrderApprovalActions.MakeDecisionSuccess\n    | OrderApprovalActions.LoadOrderApproval\n    | OrderApprovalActions.MakeDecisionFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(OrderApprovalActions.MAKE_DECISION),\n      map((action: OrderApprovalActions.MakeDecision) => action.payload),\n      filter((payload) => payload.userId !== OCC_USER_ID_ANONYMOUS),\n      switchMap(({ userId, orderApprovalCode, orderApprovalDecision }) =>\n        this.orderApprovalConnector\n          .makeDecision(userId, orderApprovalCode, orderApprovalDecision)\n          .pipe(\n            switchMap((orderApprovalDecisionData) => [\n              new OrderApprovalActions.MakeDecisionSuccess({\n                orderApprovalCode,\n                orderApprovalDecision: orderApprovalDecisionData,\n              }),\n              new OrderApprovalActions.LoadOrderApproval({\n                userId,\n                orderApprovalCode,\n              }),\n            ]),\n            catchError((error: HttpErrorResponse) =>\n              of(\n                new OrderApprovalActions.MakeDecisionFail({\n                  orderApprovalCode: orderApprovalCode,\n                  error: normalizeHttpError(error),\n                })\n              )\n            )\n          )\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private orderApprovalConnector: OrderApprovalConnector\n  ) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { OrderApprovalEffects } from './order-approval.effect';\n\nexport const effects: any[] = [OrderApprovalEffects];\n\nexport * from './order-approval.effect';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ListModel, StateUtils } from '@spartacus/core';\nimport { OrderApproval } from '../../model/order-approval.model';\nimport { OrderApprovalActions } from '../actions/index';\n\nexport const orderApprovalInitialState: OrderApproval | undefined = undefined;\nexport const orderApprovalsInitialState: ListModel | undefined = undefined;\n\nexport function orderApprovalsEntitiesReducer(\n  state = orderApprovalInitialState,\n  action: StateUtils.LoaderAction\n): OrderApproval | undefined {\n  switch (action.type) {\n    case OrderApprovalActions.LOAD_ORDER_APPROVAL_SUCCESS:\n      return action.payload;\n    case OrderApprovalActions.MAKE_DECISION_SUCCESS:\n      return state;\n  }\n  return state;\n}\n\nexport function orderApprovalsListReducer(\n  state = orderApprovalsInitialState,\n  action: StateUtils.LoaderAction\n): ListModel | undefined {\n  switch (action.type) {\n    case OrderApprovalActions.LOAD_ORDER_APPROVALS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken, Provider } from '@angular/core';\nimport {\n  Action,\n  ActionReducer,\n  ActionReducerMap,\n  combineReducers,\n  MetaReducer,\n} from '@ngrx/store';\nimport { AuthActions, ListModel, StateUtils } from '@spartacus/core';\nimport { OrderApproval } from '../../model/order-approval.model';\nimport {\n  OrderApprovalState,\n  ORDER_APPROVAL_ENTITIES,\n  ORDER_APPROVAL_FEATURE,\n  ORDER_APPROVAL_LIST,\n} from '../order-approval-state';\nimport {\n  orderApprovalsEntitiesReducer,\n  orderApprovalsListReducer,\n} from './order-approval.reducer';\n\nexport function getReducers(): ActionReducerMap<OrderApprovalState> {\n  return {\n    [ORDER_APPROVAL_FEATURE]: combineReducers({\n      entities: StateUtils.entityLoaderReducer<OrderApproval>(\n        ORDER_APPROVAL_ENTITIES,\n        orderApprovalsEntitiesReducer\n      ),\n      list: StateUtils.entityLoaderReducer<ListModel, any>(\n        ORDER_APPROVAL_LIST,\n        orderApprovalsListReducer\n      ),\n    }),\n  };\n}\n\nexport const reducerToken: InjectionToken<\n  ActionReducerMap<OrderApprovalState>\n> = new InjectionToken<ActionReducerMap<OrderApprovalState>>(\n  'OrganizationReducers'\n);\n\nexport const reducerProvider: Provider = {\n  provide: reducerToken,\n  useFactory: getReducers,\n};\n\nexport function clearOrganizationState(\n  reducer: ActionReducer<OrderApprovalState, Action>\n): ActionReducer<OrderApprovalState, Action> {\n  return function (state, action) {\n    if (action.type === AuthActions.LOGOUT) {\n      state = undefined;\n    }\n\n    return reducer(state, action);\n  };\n}\n\nexport const metaReducers: MetaReducer<any>[] = [clearOrganizationState];\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { effects } from './effects/index';\nimport { ORDER_APPROVAL_FEATURE } from './order-approval-state';\nimport { metaReducers, reducerProvider, reducerToken } from './reducers/index';\n\n@NgModule({\n  imports: [\n    StoreModule.forFeature(ORDER_APPROVAL_FEATURE, reducerToken, {\n      metaReducers,\n    }),\n    EffectsModule.forFeature(effects),\n  ],\n  providers: [reducerProvider],\n})\nexport class OrderApprovalStoreModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { OrderApprovalStoreModule } from './store/order-approval-store.module';\nimport { OrderApprovalConnector } from './connectors/order-approval.connector';\n\n@NgModule({\n  imports: [OrderApprovalStoreModule],\n})\nexport class OrderApprovalCoreModule {\n  static forRoot(): ModuleWithProviders<OrderApprovalCoreModule> {\n    return {\n      ngModule: OrderApprovalCoreModule,\n      providers: [OrderApprovalConnector],\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { OrderApprovalComponentsModule } from './components/order-approval-components.module';\nimport { OrderApprovalCoreModule } from './core/order-approval-core.module';\nimport { OrderApprovalOccModule } from './occ/order-approval-occ.module';\n\n@NgModule({\n  imports: [\n    OrderApprovalCoreModule.forRoot(),\n    OrderApprovalOccModule,\n    OrderApprovalComponentsModule,\n  ],\n})\nexport class OrderApprovalModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './components/index';\nexport * from './core/connectors/index';\nexport * from './core/guards/index';\nexport * from './core/model/index';\nexport * from './core/services/index';\nexport * from './core/store/actions/index';\nexport * from './core/store/order-approval-state';\nexport * from './core/store/selectors/index';\nexport * from './occ/index';\nexport * from './order-approval.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["OrderApprovalActions.LoadOrderApproval","OrderApprovalActions.LoadOrderApprovals","OrderApprovalSelectors.getOrderApproval","OrderApprovalSelectors.getOrderApprovalList","OrderApprovalActions.MakeDecision","OrderApprovalActions.MakeDecisionReset","i2","i1","i2.OrderApprovalService","i1.OrderApprovalDetailService","i4","i7","i3","i1.OrderApprovalAdapter","OrderApprovalActions.LOAD_ORDER_APPROVAL","OrderApprovalActions.LoadOrderApprovalSuccess","OrderApprovalActions.LoadOrderApprovalFail","OrderApprovalActions.LOAD_ORDER_APPROVALS","OrderApprovalActions.LoadOrderApprovalsSuccess","OrderApprovalActions.LoadOrderApprovalsFail","OrderApprovalActions.MAKE_DECISION","OrderApprovalActions.MakeDecisionSuccess","OrderApprovalActions.MakeDecisionFail","i2.OrderApprovalConnector","OrderApprovalActions.LOAD_ORDER_APPROVAL_SUCCESS","OrderApprovalActions.MAKE_DECISION_SUCCESS","OrderApprovalActions.LOAD_ORDER_APPROVALS_SUCCESS"],"mappings":"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"}