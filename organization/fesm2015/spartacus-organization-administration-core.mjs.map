{"version":3,"file":"spartacus-organization-administration-core.mjs","sources":["../../../feature-libs/organization/administration/core/connectors/b2b-user/b2b-user.adapter.ts","../../../feature-libs/organization/administration/core/connectors/b2b-user/b2b-user.connector.ts","../../../feature-libs/organization/administration/core/connectors/budget/budget.adapter.ts","../../../feature-libs/organization/administration/core/connectors/budget/budget.connector.ts","../../../feature-libs/organization/administration/core/connectors/cost-center/cost-center.adapter.ts","../../../feature-libs/organization/administration/core/connectors/cost-center/cost-center.connector.ts","../../../feature-libs/organization/administration/core/connectors/org-unit/org-unit.adapter.ts","../../../feature-libs/organization/administration/core/connectors/org-unit/org-unit.connector.ts","../../../feature-libs/organization/administration/core/connectors/permission/permission.adapter.ts","../../../feature-libs/organization/administration/core/connectors/permission/permission.connector.ts","../../../feature-libs/organization/administration/core/connectors/user-group/user-group.adapter.ts","../../../feature-libs/organization/administration/core/connectors/user-group/user-group.connector.ts","../../../feature-libs/organization/administration/core/http-interceptors/bad-request/bad-request.handler.ts","../../../feature-libs/organization/administration/core/http-interceptors/conflict/conflict.handler.ts","../../../feature-libs/organization/administration/core/services/organization-page-meta.resolver.ts","../../../feature-libs/organization/administration/core/services/organization-page-meta.module.ts","../../../feature-libs/organization/administration/core/store/organization-state.ts","../../../feature-libs/organization/administration/core/store/actions/budget.action.ts","../../../feature-libs/organization/administration/core/store/actions/org-unit.action.ts","../../../feature-libs/organization/administration/core/store/actions/user-group.action.ts","../../../feature-libs/organization/administration/core/store/actions/permission.action.ts","../../../feature-libs/organization/administration/core/store/actions/cost-center.action.ts","../../../feature-libs/organization/administration/core/store/actions/b2b-user.action.ts","../../../feature-libs/organization/administration/core/store/actions/organization.action.ts","../../../feature-libs/organization/administration/core/store/actions/index.ts","../../../feature-libs/organization/administration/core/store/effects/budget.effect.ts","../../../feature-libs/organization/administration/core/store/effects/org-unit.effect.ts","../../../feature-libs/organization/administration/core/store/effects/permission.effect.ts","../../../feature-libs/organization/administration/core/store/effects/cost-center.effect.ts","../../../feature-libs/organization/administration/core/store/effects/b2b-user.effect.ts","../../../feature-libs/organization/administration/core/store/effects/user-group.effect.ts","../../../feature-libs/organization/administration/core/store/effects/index.ts","../../../feature-libs/organization/administration/core/store/reducers/b2b-user.reducer.ts","../../../feature-libs/organization/administration/core/store/reducers/budget.reducer.ts","../../../feature-libs/organization/administration/core/store/reducers/cost-center.reducer.ts","../../../feature-libs/organization/administration/core/store/reducers/org-unit.reducer.ts","../../../feature-libs/organization/administration/core/store/reducers/permission.reducer.ts","../../../feature-libs/organization/administration/core/store/reducers/user-group.reducer.ts","../../../feature-libs/organization/administration/core/store/reducers/index.ts","../../../feature-libs/organization/administration/core/store/organization-store.module.ts","../../../feature-libs/organization/administration/core/administration-core.module.ts","../../../feature-libs/organization/administration/core/connectors/b2b-user/converters.ts","../../../feature-libs/organization/administration/core/connectors/b2b-user/index.ts","../../../feature-libs/organization/administration/core/connectors/budget/converters.ts","../../../feature-libs/organization/administration/core/connectors/budget/index.ts","../../../feature-libs/organization/administration/core/connectors/cost-center/index.ts","../../../feature-libs/organization/administration/core/connectors/org-unit/converters.ts","../../../feature-libs/organization/administration/core/connectors/org-unit/index.ts","../../../feature-libs/organization/administration/core/connectors/permission/converters.ts","../../../feature-libs/organization/administration/core/connectors/permission/index.ts","../../../feature-libs/organization/administration/core/connectors/user-group/converters.ts","../../../feature-libs/organization/administration/core/connectors/user-group/index.ts","../../../feature-libs/organization/administration/core/connectors/index.ts","../../../feature-libs/organization/administration/core/guards/admin.guard.ts","../../../feature-libs/organization/administration/core/guards/index.ts","../../../feature-libs/organization/administration/core/http-interceptors/index.ts","../../../feature-libs/organization/administration/core/model/organization-item-status.ts","../../../feature-libs/organization/administration/core/model/permission.model.ts","../../../feature-libs/organization/administration/core/model/index.ts","../../../feature-libs/organization/administration/core/store/selectors/feature.selector.ts","../../../feature-libs/organization/administration/core/store/selectors/permission.selector.ts","../../../feature-libs/organization/administration/core/store/selectors/b2b-user.selector.ts","../../../feature-libs/organization/administration/core/utils/get-item-status.ts","../../../feature-libs/organization/administration/core/services/b2b-user.service.ts","../../../feature-libs/organization/administration/core/store/selectors/budget.selector.ts","../../../feature-libs/organization/administration/core/store/selectors/org-unit.selector.ts","../../../feature-libs/organization/administration/core/store/selectors/user-group.selector.ts","../../../feature-libs/organization/administration/core/store/selectors/cost-center.selector.ts","../../../feature-libs/organization/administration/core/store/selectors/index.ts","../../../feature-libs/organization/administration/core/store/index.ts","../../../feature-libs/organization/administration/core/services/budget.service.ts","../../../feature-libs/organization/administration/core/services/cost-center.service.ts","../../../feature-libs/organization/administration/core/services/org-unit.service.ts","../../../feature-libs/organization/administration/core/services/permission.service.ts","../../../feature-libs/organization/administration/core/services/user-group.service.ts","../../../feature-libs/organization/administration/core/services/index.ts","../../../feature-libs/organization/administration/core/public_api.ts","../../../feature-libs/organization/administration/core/spartacus-organization-administration-core.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { B2BUser, EntitiesModel, SearchConfig } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { Permission } from '../../model/permission.model';\nimport { UserGroup } from '../../model/user-group.model';\n\nexport abstract class B2BUserAdapter {\n  /**\n   * Abstract method used to load orgUnitCustomerManagement's details data.\n   * orgUnitCustomer's data can be loaded from alternative sources, as long as the structure\n   * converts to the `B2BUser`.\n   *\n   * @param userId The `userId` for given orgUnitCustomerManagement\n   * @param orgCustomerId The `orgUnitCustomerId` for given orgUnitCustomerManagement\n   */\n  abstract load(userId: string, orgCustomerId: string): Observable<B2BUser>;\n\n  abstract loadList(\n    userId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<B2BUser>>;\n\n  abstract create(userId: string, orgCustomer: B2BUser): Observable<B2BUser>;\n\n  abstract update(\n    userId: string,\n    orgCustomerId: string,\n    orgCustomer: B2BUser\n  ): Observable<B2BUser>;\n\n  abstract loadApprovers(\n    userId: string,\n    orgCustomerId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<B2BUser>>;\n\n  abstract assignApprover(\n    userId: string,\n    orgCustomerId: string,\n    approverId: string\n  ): Observable<any>;\n\n  abstract unassignApprover(\n    userId: string,\n    orgCustomerId: string,\n    approverId: string\n  ): Observable<any>;\n\n  abstract loadPermissions(\n    userId: string,\n    orgCustomerId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<Permission>>;\n\n  abstract assignPermission(\n    userId: string,\n    orgCustomerId: string,\n    permissionId: string\n  ): Observable<any>;\n\n  abstract unassignPermission(\n    userId: string,\n    orgCustomerId: string,\n    permissionId: string\n  ): Observable<any>;\n\n  abstract loadUserGroups(\n    userId: string,\n    orgCustomerId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<UserGroup>>;\n\n  abstract assignUserGroup(\n    userId: string,\n    orgCustomerId: string,\n    userGroupId: string\n  ): Observable<any>;\n\n  abstract unassignUserGroup(\n    userId: string,\n    orgCustomerId: string,\n    userGroupId: string\n  ): Observable<any>;\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { B2BUser, EntitiesModel, SearchConfig } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { Permission } from '../../model/permission.model';\nimport { UserGroup } from '../../model/user-group.model';\nimport { B2BUserAdapter } from './b2b-user.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class B2BUserConnector {\n  constructor(protected adapter: B2BUserAdapter) {}\n\n  get(userId: string, orgUnitCustomerId: string): Observable<B2BUser> {\n    return this.adapter.load(userId, orgUnitCustomerId);\n  }\n\n  create(userId: string, orgCustomer: B2BUser): Observable<B2BUser> {\n    return this.adapter.create(userId, orgCustomer);\n  }\n\n  update(\n    userId: string,\n    orgCustomerId: string,\n    orgCustomer: B2BUser\n  ): Observable<B2BUser> {\n    return this.adapter.update(userId, orgCustomerId, orgCustomer);\n  }\n\n  getList(\n    userId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<B2BUser>> {\n    return this.adapter.loadList(userId, params);\n  }\n\n  getApprovers(\n    userId: string,\n    orgUnitCustomerId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<B2BUser>> {\n    return this.adapter.loadApprovers(userId, orgUnitCustomerId, params);\n  }\n\n  assignApprover(\n    userId: string,\n    orgCustomerId: string,\n    approverId: string\n  ): Observable<any> {\n    return this.adapter.assignApprover(userId, orgCustomerId, approverId);\n  }\n\n  unassignApprover(\n    userId: string,\n    orgCustomerId: string,\n    approverId: string\n  ): Observable<any> {\n    return this.adapter.unassignApprover(userId, orgCustomerId, approverId);\n  }\n\n  getPermissions(\n    userId: string,\n    orgUnitCustomerId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<Permission>> {\n    return this.adapter.loadPermissions(userId, orgUnitCustomerId, params);\n  }\n\n  assignPermission(\n    userId: string,\n    orgCustomerId: string,\n    permissionId: string\n  ): Observable<any> {\n    return this.adapter.assignPermission(userId, orgCustomerId, permissionId);\n  }\n\n  unassignPermission(\n    userId: string,\n    orgCustomerId: string,\n    permissionId: string\n  ): Observable<any> {\n    return this.adapter.unassignPermission(userId, orgCustomerId, permissionId);\n  }\n\n  getUserGroups(\n    userId: string,\n    orgUnitCustomerId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<UserGroup>> {\n    return this.adapter.loadUserGroups(userId, orgUnitCustomerId, params);\n  }\n\n  assignUserGroup(\n    userId: string,\n    orgCustomerId: string,\n    userGroupId: string\n  ): Observable<any> {\n    return this.adapter.assignUserGroup(userId, orgCustomerId, userGroupId);\n  }\n\n  unassignUserGroup(\n    userId: string,\n    orgCustomerId: string,\n    userGroupId: string\n  ): Observable<any> {\n    return this.adapter.unassignUserGroup(userId, orgCustomerId, userGroupId);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { EntitiesModel, SearchConfig } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { Budget } from '../../model/budget.model';\n\nexport abstract class BudgetAdapter {\n  /**\n   * Abstract method used to load budgetManagement's details data.\n   * Budget's data can be loaded from alternative sources, as long as the structure\n   * converts to the `Budget`.\n   *\n   * @param userId The `userId` for given budgetManagement\n   * @param budgetCode The `budgetCode` for given budgetManagement\n   */\n  abstract load(userId: string, budgetCode: string): Observable<Budget>;\n\n  abstract loadList(\n    userId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<Budget>>;\n\n  abstract create(userId: string, budget: Budget): Observable<Budget>;\n\n  abstract update(\n    userId: string,\n    budgetCode: string,\n    budget: Budget\n  ): Observable<Budget>;\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { EntitiesModel, SearchConfig } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { Budget } from '../../model/budget.model';\nimport { BudgetAdapter } from './budget.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BudgetConnector {\n  constructor(protected adapter: BudgetAdapter) {}\n\n  get(userId: string, budgetCode: string): Observable<Budget> {\n    return this.adapter.load(userId, budgetCode);\n  }\n\n  getList(\n    userId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<Budget>> {\n    return this.adapter.loadList(userId, params);\n  }\n\n  create(userId: string, budget: Budget): Observable<Budget> {\n    return this.adapter.create(userId, budget);\n  }\n\n  update(\n    userId: string,\n    budgetCode: string,\n    budget: Budget\n  ): Observable<Budget> {\n    return this.adapter.update(userId, budgetCode, budget);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CostCenter, EntitiesModel, SearchConfig } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { Budget } from '../../model/budget.model';\n\nexport abstract class CostCenterAdapter {\n  /**\n   * Abstract method used to load costCenterManagement's details data.\n   * CostCenter's data can be loaded from alternative sources, as long as the structure\n   * converts to the `CostCenter`.\n   *\n   * @param userId The `userId` for given costCenterManagement\n   * @param costCenterCode The `costCenterCode` for given costCenterManagement\n   */\n  abstract load(userId: string, costCenterCode: string): Observable<CostCenter>;\n\n  abstract loadList(\n    userId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<CostCenter>>;\n\n  abstract create(\n    userId: string,\n    costCenter: CostCenter\n  ): Observable<CostCenter>;\n\n  abstract update(\n    userId: string,\n    costCenterCode: string,\n    costCenter: CostCenter\n  ): Observable<CostCenter>;\n\n  abstract loadBudgets(\n    userId: string,\n    costCenterCode: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<Budget>>;\n\n  abstract assignBudget(\n    userId: string,\n    costCenterCode: string,\n    budgetCode: string\n  ): Observable<any>;\n\n  abstract unassignBudget(\n    userId: string,\n    costCenterCode: string,\n    budgetCode: string\n  ): Observable<any>;\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { CostCenter, EntitiesModel, SearchConfig } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { Budget } from '../../model/budget.model';\nimport { CostCenterAdapter } from './cost-center.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CostCenterConnector {\n  constructor(protected adapter: CostCenterAdapter) {}\n\n  get(userId: string, costCenterCode: string): Observable<CostCenter> {\n    return this.adapter.load(userId, costCenterCode);\n  }\n\n  getList(\n    userId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<CostCenter>> {\n    return this.adapter.loadList(userId, params);\n  }\n\n  create(userId: string, costCenter: CostCenter): Observable<CostCenter> {\n    return this.adapter.create(userId, costCenter);\n  }\n\n  update(\n    userId: string,\n    costCenterCode: string,\n    costCenter: CostCenter\n  ): Observable<CostCenter> {\n    return this.adapter.update(userId, costCenterCode, costCenter);\n  }\n\n  getBudgets(\n    userId: string,\n    costCenterCode: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<Budget>> {\n    return this.adapter.loadBudgets(userId, costCenterCode, params);\n  }\n\n  assignBudget(\n    userId: string,\n    costCenterCode: string,\n    budgetCode: string\n  ): Observable<any> {\n    return this.adapter.assignBudget(userId, costCenterCode, budgetCode);\n  }\n\n  unassignBudget(\n    userId: string,\n    costCenterCode: string,\n    budgetCode: string\n  ): Observable<any> {\n    return this.adapter.unassignBudget(userId, costCenterCode, budgetCode);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  Address,\n  B2BApprovalProcess,\n  B2BUnit,\n  B2BUser,\n  EntitiesModel,\n  SearchConfig,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { B2BUnitNode } from '../../model/unit-node.model';\n\nexport abstract class OrgUnitAdapter {\n  /**\n   * Abstract method used to load orgUnit's details data.\n   * B2BUnitNode's data can be loaded from alternative sources, as long as the structure\n   * converts to the `B2BUnitNode`.\n   *\n   * @param userId The `userId` for given orgUnit\n   * @param orgUnitId The `orgUnitId` for given orgUnit\n   */\n  abstract load(userId: string, orgUnitId: string): Observable<B2BUnit>;\n\n  abstract loadList(userId: string): Observable<B2BUnitNode[]>;\n\n  abstract create(userId: string, orgUnit: B2BUnit): Observable<B2BUnit>;\n\n  abstract update(\n    userId: string,\n    orgUnitId: string,\n    orgUnit: B2BUnit\n  ): Observable<B2BUnit>;\n\n  abstract loadApprovalProcesses(\n    userId: string\n  ): Observable<B2BApprovalProcess[]>;\n\n  abstract loadTree(userId: string): Observable<B2BUnitNode>;\n\n  abstract loadUsers(\n    userId: string,\n    orgUnitId: string,\n    roleId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<B2BUser>>;\n\n  abstract assignRole(\n    userId: string,\n    orgCustomerId: string,\n    roleId: string\n  ): Observable<any>;\n\n  abstract unassignRole(\n    userId: string,\n    orgCustomerId: string,\n    roleId: string\n  ): Observable<any>;\n\n  abstract assignApprover(\n    userId: string,\n    orgUnitId: string,\n    orgCustomerId: string,\n    roleId: string\n  ): Observable<any>;\n\n  abstract unassignApprover(\n    userId: string,\n    orgUnitId: string,\n    orgCustomerId: string,\n    roleId: string\n  ): Observable<any>;\n\n  abstract loadAddresses(\n    userId: string,\n    orgUnitId: string\n  ): Observable<EntitiesModel<Address>>;\n\n  abstract createAddress(\n    userId: string,\n    orgUnitId: string,\n    address: Address\n  ): Observable<Address>;\n\n  abstract updateAddress(\n    userId: string,\n    orgUnitId: string,\n    addressId: string,\n    address: Address\n  ): Observable<Address>;\n\n  abstract deleteAddress(\n    userId: string,\n    orgUnitId: string,\n    addressId: string\n  ): Observable<any>;\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n  Address,\n  B2BApprovalProcess,\n  B2BUnit,\n  B2BUser,\n  EntitiesModel,\n  SearchConfig,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { B2BUnitNode } from '../../model/unit-node.model';\nimport { OrgUnitAdapter } from './org-unit.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrgUnitConnector {\n  constructor(protected adapter: OrgUnitAdapter) {}\n\n  get(userId: string, orgUnitId: string): Observable<B2BUnit> {\n    return this.adapter.load(userId, orgUnitId);\n  }\n\n  create(userId: string, orgUnit: B2BUnit): Observable<B2BUnit> {\n    return this.adapter.create(userId, orgUnit);\n  }\n\n  update(\n    userId: string,\n    orgUnitId: string,\n    orgUnit: B2BUnit\n  ): Observable<B2BUnit> {\n    return this.adapter.update(userId, orgUnitId, orgUnit);\n  }\n\n  getList(userId: string): Observable<B2BUnitNode[]> {\n    return this.adapter.loadList(userId);\n  }\n\n  getApprovalProcesses(userId: string): Observable<B2BApprovalProcess[]> {\n    return this.adapter.loadApprovalProcesses(userId);\n  }\n\n  getTree(userId: string): Observable<B2BUnitNode> {\n    return this.adapter.loadTree(userId);\n  }\n\n  getUsers(\n    userId: string,\n    orgUnitId: string,\n    roleId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<B2BUser>> {\n    return this.adapter.loadUsers(userId, orgUnitId, roleId, params);\n  }\n\n  assignRole(\n    userId: string,\n    orgCustomerId: string,\n    roleId: string\n  ): Observable<any> {\n    return this.adapter.assignRole(userId, orgCustomerId, roleId);\n  }\n\n  unassignRole(\n    userId: string,\n    orgCustomerId: string,\n    roleId: string\n  ): Observable<any> {\n    return this.adapter.unassignRole(userId, orgCustomerId, roleId);\n  }\n\n  assignApprover(\n    userId: string,\n    orgUnitId: string,\n    orgCustomerId: string,\n    roleId: string\n  ): Observable<any> {\n    return this.adapter.assignApprover(\n      userId,\n      orgUnitId,\n      orgCustomerId,\n      roleId\n    );\n  }\n\n  unassignApprover(\n    userId: string,\n    orgUnitId: string,\n    orgCustomerId: string,\n    roleId: string\n  ): Observable<any> {\n    return this.adapter.unassignApprover(\n      userId,\n      orgUnitId,\n      orgCustomerId,\n      roleId\n    );\n  }\n\n  getAddresses(\n    userId: string,\n    orgUnitId: string\n  ): Observable<EntitiesModel<Address>> {\n    return this.adapter.loadAddresses(userId, orgUnitId);\n  }\n\n  createAddress(\n    userId: string,\n    orgUnitId: string,\n    address: Address\n  ): Observable<Address> {\n    return this.adapter.createAddress(userId, orgUnitId, address);\n  }\n\n  updateAddress(\n    userId: string,\n    orgUnitId: string,\n    addressId: string,\n    address: Address\n  ): Observable<Address> {\n    return this.adapter.updateAddress(userId, orgUnitId, addressId, address);\n  }\n\n  deleteAddress(\n    userId: string,\n    orgUnitId: string,\n    addressId: string\n  ): Observable<any> {\n    return this.adapter.deleteAddress(userId, orgUnitId, addressId);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  EntitiesModel,\n  SearchConfig,\n  OrderApprovalPermissionType,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { Permission } from '../../model/permission.model';\n\nexport abstract class PermissionAdapter {\n  /**\n   * Abstract method used to load permissionManagement's details data.\n   * Permission's data can be loaded from alternative sources, as long as the structure\n   * converts to the `Permission`.\n   *\n   * @param userId The `userId` for given permissionManagement\n   * @param permissionCode The `permissionCode` for given permissionManagement\n   */\n  abstract load(userId: string, permissionCode: string): Observable<Permission>;\n\n  abstract loadList(\n    userId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<Permission>>;\n\n  abstract create(\n    userId: string,\n    permission: Permission\n  ): Observable<Permission>;\n\n  abstract update(\n    userId: string,\n    permissionCode: string,\n    permission: Permission\n  ): Observable<Permission>;\n\n  abstract loadTypes(): Observable<OrderApprovalPermissionType[]>;\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n  EntitiesModel,\n  SearchConfig,\n  OrderApprovalPermissionType,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { Permission } from '../../model/permission.model';\nimport { PermissionAdapter } from './permission.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PermissionConnector {\n  constructor(protected adapter: PermissionAdapter) {}\n\n  get(userId: string, permissionCode: string): Observable<Permission> {\n    return this.adapter.load(userId, permissionCode);\n  }\n\n  getList(\n    userId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<Permission>> {\n    return this.adapter.loadList(userId, params);\n  }\n\n  create(userId: string, permission: Permission): Observable<Permission> {\n    return this.adapter.create(userId, permission);\n  }\n\n  update(\n    userId: string,\n    permissionCode: string,\n    permission: Permission\n  ): Observable<Permission> {\n    return this.adapter.update(userId, permissionCode, permission);\n  }\n\n  getTypes(): Observable<OrderApprovalPermissionType[]> {\n    return this.adapter.loadTypes();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { B2BUser, EntitiesModel, SearchConfig } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { Permission } from '../../model/permission.model';\nimport { UserGroup } from '../../model/user-group.model';\n\nexport abstract class UserGroupAdapter {\n  /**\n   * Abstract method used to load userGroupManagement's details data.\n   * userGroup's data can be loaded from alternative sources, as long as the structure\n   * converts to the `OrgUnitUserGroup`.\n   *\n   * @param userId The `userId` for given userGroupManagement\n   * @param userGroupId The `userGroupId` for given userGroupManagement\n   */\n  abstract load(userId: string, userGroupId: string): Observable<UserGroup>;\n\n  abstract loadList(\n    userId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<UserGroup>>;\n\n  abstract loadAvailableOrderApprovalPermissions(\n    userId: string,\n    userGroupId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<Permission>>;\n\n  abstract loadAvailableOrgCustomers(\n    userId: string,\n    userGroupId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<B2BUser>>;\n\n  abstract create(userId: string, userGroup: UserGroup): Observable<UserGroup>;\n\n  abstract update(\n    userId: string,\n    userGroupId: string,\n    userGroup: UserGroup\n  ): Observable<UserGroup>;\n\n  abstract delete(userId: string, userGroupId: string): Observable<UserGroup>;\n\n  abstract assignMember(\n    userId: string,\n    userGroupId: string,\n    orgCustomerId: string\n  ): Observable<any>;\n\n  abstract assignOrderApprovalPermission(\n    userId: string,\n    userGroupId: string,\n    orderApprovalPermissionCode: string\n  ): Observable<any>;\n\n  abstract unassignMember(\n    userId: string,\n    userGroupId: string,\n    orgCustomerId: string\n  ): Observable<any>;\n\n  abstract unassignAllMembers(\n    userId: string,\n    userGroupId: string\n  ): Observable<any>;\n\n  abstract unassignOrderApprovalPermission(\n    userId: string,\n    userGroupId: string,\n    orderApprovalPermissionCode: string\n  ): Observable<any>;\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { B2BUser, EntitiesModel, SearchConfig } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { Permission } from '../../model/permission.model';\nimport { UserGroup } from '../../model/user-group.model';\nimport { UserGroupAdapter } from './user-group.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserGroupConnector {\n  constructor(protected adapter: UserGroupAdapter) {}\n\n  get(userId: string, userGroupId: string): Observable<UserGroup> {\n    return this.adapter.load(userId, userGroupId);\n  }\n\n  getList(\n    userId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<UserGroup>> {\n    return this.adapter.loadList(userId, params);\n  }\n\n  getAvailableOrderApprovalPermissions(\n    userId: string,\n    userGroupId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<Permission>> {\n    return this.adapter.loadAvailableOrderApprovalPermissions(\n      userId,\n      userGroupId,\n      params\n    );\n  }\n\n  getAvailableOrgCustomers(\n    userId: string,\n    userGroupId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<B2BUser>> {\n    return this.adapter.loadAvailableOrgCustomers(userId, userGroupId, params);\n  }\n\n  create(userId: string, userGroup: UserGroup): Observable<UserGroup> {\n    return this.adapter.create(userId, userGroup);\n  }\n\n  delete(userId: string, userGroupId: string): Observable<UserGroup> {\n    return this.adapter.delete(userId, userGroupId);\n  }\n\n  update(\n    userId: string,\n    userGroupId: string,\n    userGroup: UserGroup\n  ): Observable<UserGroup> {\n    return this.adapter.update(userId, userGroupId, userGroup);\n  }\n\n  assignMember(\n    userId: string,\n    userGroupId: string,\n    orgCustomerId: string\n  ): Observable<any> {\n    return this.adapter.assignMember(userId, userGroupId, orgCustomerId);\n  }\n\n  assignOrderApprovalPermission(\n    userId: string,\n    userGroupId: string,\n    orderApprovalPermissionCode: string\n  ): Observable<any> {\n    return this.adapter.assignOrderApprovalPermission(\n      userId,\n      userGroupId,\n      orderApprovalPermissionCode\n    );\n  }\n\n  unassignMember(\n    userId: string,\n    userGroupId: string,\n    orgCustomerId: string\n  ): Observable<any> {\n    return this.adapter.unassignMember(userId, userGroupId, orgCustomerId);\n  }\n\n  unassignAllMembers(userId: string, userGroupId: string): Observable<any> {\n    return this.adapter.unassignAllMembers(userId, userGroupId);\n  }\n\n  unassignOrderApprovalPermission(\n    userId: string,\n    userGroupId: string,\n    orderApprovalPermissionCode: string\n  ): Observable<any> {\n    return this.adapter.unassignOrderApprovalPermission(\n      userId,\n      userGroupId,\n      orderApprovalPermissionCode\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpErrorResponse, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {\n  ErrorModel,\n  GlobalMessageType,\n  HttpErrorHandler,\n  HttpResponseStatus,\n  Priority,\n} from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrganizationBadRequestHandler extends HttpErrorHandler {\n  responseStatus = HttpResponseStatus.BAD_REQUEST;\n\n  protected costCenterMask =\n    /ambiguous unique keys \\{code\\=(.*)\\} for model B2BCostCenterModel/;\n  protected unitMask =\n    /ambiguous unique keys \\{uid\\=(.*)\\} for model B2BUnitModel/;\n  protected permissionMask =\n    /Approval Permission with code\\: (.*) already exists\\./;\n  protected unknownMask = /Model saving error\\./;\n\n  hasMatch(errorResponse: HttpErrorResponse): boolean {\n    return super.hasMatch(errorResponse) && this.matchMask(errorResponse);\n  }\n\n  handleError(_request: HttpRequest<any>, response: HttpErrorResponse): void {\n    this.getErrors(response).forEach(({ message }: ErrorModel) => {\n      if (message) {\n        // Handle cost center conflict\n        this.handleOrganizationConflict(\n          message,\n          this.costCenterMask,\n          'costCenter'\n        );\n        // Handle unit conflict\n        this.handleOrganizationConflict(message, this.unitMask, 'unit');\n        // Handle unit conflict\n        this.handleOrganizationConflict(\n          message,\n          this.permissionMask,\n          'permission'\n        );\n        // Handle unknown conflict\n        this.handleOrganizationConflict(message, this.unknownMask, 'unknown');\n      }\n    });\n  }\n\n  protected matchMask(response: HttpErrorResponse): boolean {\n    return this.getErrors(response).some((error) =>\n      [\n        this.costCenterMask,\n        this.unitMask,\n        this.permissionMask,\n        this.unknownMask,\n      ].some((mask) => mask.test(error.message ?? ''))\n    );\n  }\n\n  protected handleOrganizationConflict(\n    message: string,\n    mask: RegExp,\n    key: string\n  ): void {\n    const result = message.match(mask);\n    const params = { code: result?.[1] };\n    if (result) {\n      this.globalMessageService.add(\n        { key: `organization.httpHandlers.conflict.${key}`, params },\n        GlobalMessageType.MSG_TYPE_ERROR\n      );\n    }\n  }\n\n  protected getErrors(response: HttpErrorResponse): ErrorModel[] {\n    return (response.error?.errors || []).filter(\n      (error: any) =>\n        error.type === 'ModelSavingError' || error.type === 'DuplicateUidError'\n    );\n  }\n\n  getPriority(): Priority {\n    return Priority.NORMAL;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpErrorResponse, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {\n  ErrorModel,\n  GlobalMessageType,\n  HttpErrorHandler,\n  HttpResponseStatus,\n  Priority,\n} from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrganizationConflictHandler extends HttpErrorHandler {\n  responseStatus = HttpResponseStatus.CONFLICT;\n\n  protected budgetMask = /Budget with code \\[(.*)\\] already exists/;\n  protected userMask = /User already exists/;\n  protected userGroupMask = /Member Permission with the same id already exists/;\n  protected unitMask = /Organizational unit with uid \\[(.*)\\] already exists/;\n\n  hasMatch(errorResponse: HttpErrorResponse): boolean {\n    return super.hasMatch(errorResponse) && this.matchMask(errorResponse);\n  }\n\n  handleError(request: HttpRequest<any>, response: HttpErrorResponse) {\n    return this.getErrors(response).forEach(({ message }: ErrorModel) => {\n      if (message) {\n        // Handle budget conflict\n        this.handleConflict(message, this.budgetMask, 'budget');\n        // Handle user email conflict\n        this.handleConflict(\n          message,\n          this.userMask,\n          'user',\n          request?.body?.email\n        );\n        // Handle user group conflict\n        this.handleConflict(\n          message,\n          this.userGroupMask,\n          'userGroup',\n          request?.body?.uid\n        );\n        // Handle unit conflict\n        this.handleConflict(message, this.unitMask, 'unit');\n      }\n    });\n  }\n\n  protected matchMask(response: HttpErrorResponse): boolean {\n    return this.getErrors(response).some((error) =>\n      [this.budgetMask, this.userMask, this.userGroupMask, this.unitMask].some(\n        (mask) => mask.test(error.message ?? '')\n      )\n    );\n  }\n\n  protected handleConflict(\n    message: string,\n    mask: RegExp,\n    key: string,\n    code?: string\n  ): void {\n    const result = message.match(mask);\n    const params = { code: result?.[1] ?? code };\n    if (result) {\n      this.globalMessageService.add(\n        { key: `organization.httpHandlers.conflict.${key}`, params },\n        GlobalMessageType.MSG_TYPE_ERROR\n      );\n    }\n  }\n\n  protected getErrors(response: HttpErrorResponse): ErrorModel[] {\n    return (response.error?.errors || []).filter(\n      (error: any) => error.type === 'AlreadyExistsError'\n    );\n  }\n\n  getPriority(): Priority {\n    return Priority.NORMAL;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n  BreadcrumbMeta,\n  ContentPageMetaResolver,\n  PageBreadcrumbResolver,\n  PageDescriptionResolver,\n  PageMetaResolver,\n  PageRobotsMeta,\n  PageRobotsResolver,\n  PageTitleResolver,\n  PageType,\n  RoutingService,\n  SemanticPathService,\n  TranslationService,\n} from '@spartacus/core';\nimport { combineLatest, defer, Observable, of } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  map,\n  shareReplay,\n  switchMap,\n} from 'rxjs/operators';\n\n/**\n * Resolves the page data for Organization Pages.\n *\n * Breadcrumbs are built in this implementation only.\n *\n * @property {string} ORGANIZATION_SEMANTIC_ROUTE the default root path for organization pages.\n * @property {string} ORGANIZATION_TRANSLATION_KEY the default i18n key for the organization breadcrumb label.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrganizationPageMetaResolver\n  extends PageMetaResolver\n  implements\n    PageBreadcrumbResolver,\n    PageTitleResolver,\n    PageDescriptionResolver,\n    PageRobotsResolver\n{\n  pageTemplate = 'CompanyPageTemplate';\n  pageType = PageType.CONTENT_PAGE;\n\n  /**\n   * Translation key for the breadcrumb of Organization home page\n   */\n  protected readonly ORGANIZATION_TRANSLATION_KEY = 'organization.breadcrumb';\n\n  /**\n   * The semantic route of the organization landing page. It's used to recognize whether\n   * we are on this page. In such a case we avoid showing the breadcrumb for this page.\n   */\n  protected readonly ORGANIZATION_SEMANTIC_ROUTE = 'organization';\n\n  constructor(\n    protected contentPageMetaResolver: ContentPageMetaResolver,\n    protected translation: TranslationService,\n    protected semanticPath: SemanticPathService,\n    protected routingService: RoutingService\n  ) {\n    super();\n  }\n\n  resolveTitle(): Observable<string | undefined> {\n    return this.contentPageMetaResolver.resolveTitle();\n  }\n\n  resolveDescription(): Observable<string | undefined> {\n    return this.contentPageMetaResolver.resolveDescription();\n  }\n\n  resolveRobots(): Observable<PageRobotsMeta[]> {\n    return this.contentPageMetaResolver.resolveRobots();\n  }\n\n  /**\n   * Returns list of breadcrumbs for:\n   * - the home page\n   * - the organization home page\n   * - the organization's child pages (i.e. cost center list)\n   * - sub-routes of the organization's child pages (i.e. cost center details, edit cost center, ...)\n   */\n  resolveBreadcrumbs(): Observable<BreadcrumbMeta[]> {\n    return this.breadcrumbs$;\n  }\n\n  /**\n   * Breadcrumb of the Organization page.\n   * It's empty when the current page is the Organization page.\n   */\n  protected organizationPageBreadcrumb$: Observable<BreadcrumbMeta[]> = defer(\n    () => this.routingService.getRouterState()\n  ).pipe(\n    map((routerState) => routerState?.state?.semanticRoute),\n    distinctUntilChanged(),\n    switchMap((semanticRoute) =>\n      semanticRoute === this.ORGANIZATION_SEMANTIC_ROUTE\n        ? of([])\n        : this.translation.translate(this.ORGANIZATION_TRANSLATION_KEY).pipe(\n            map((label) => [\n              {\n                label,\n                link: this.semanticPath.get(this.ORGANIZATION_SEMANTIC_ROUTE),\n              },\n            ])\n          )\n    )\n  );\n\n  /**\n   * Breadcrumbs returned in the method #resolveBreadcrumbs.\n   */\n  protected breadcrumbs$: Observable<BreadcrumbMeta[]> = combineLatest([\n    this.organizationPageBreadcrumb$,\n    defer(() => this.contentPageMetaResolver.resolveBreadcrumbs()),\n  ]).pipe(\n    map(([organizationPageBreadcrumb, breadcrumbs = []]) => {\n      const [home, ...restBreadcrumbs] = breadcrumbs;\n      return [home, ...organizationPageBreadcrumb, ...restBreadcrumbs];\n    }),\n    shareReplay({ bufferSize: 1, refCount: true })\n  );\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { PageMetaResolver } from '@spartacus/core';\nimport { OrganizationPageMetaResolver } from './organization-page-meta.resolver';\n\n@NgModule({\n  providers: [\n    {\n      provide: PageMetaResolver,\n      useExisting: OrganizationPageMetaResolver,\n      multi: true,\n    },\n  ],\n})\nexport class OrganizationPageMetaModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  Address,\n  B2BApprovalProcess,\n  B2BUnit,\n  B2BUser,\n  CostCenter,\n  ListModel,\n  OrderApprovalPermissionType,\n  StateUtils,\n} from '@spartacus/core';\nimport { Budget } from '../model/budget.model';\nimport { Permission } from '../model/permission.model';\nimport { B2BUnitNode } from '../model/unit-node.model';\nimport { UserGroup } from '../model/user-group.model';\n\nexport const ORGANIZATION_FEATURE = 'organization';\n\nexport const BUDGET_FEATURE = 'budget';\nexport const BUDGET_ENTITIES = 'budget-entities';\nexport const BUDGET_LIST = 'budget-list';\n\nexport const COST_CENTER_FEATURE = 'costCenter';\nexport const COST_CENTER_ENTITIES = 'costCenter-entities';\nexport const COST_CENTER_LIST = 'costCenter-list';\nexport const COST_CENTER_ASSIGNED_BUDGETS = 'costCenter-assigned-budgets';\n\nexport const PERMISSION_FEATURE = 'permission';\nexport const PERMISSION_ENTITIES = 'permission-entities';\nexport const PERMISSION_LIST = 'permission-list';\n\nexport const PERMISSION_TYPES = 'permission-types';\nexport const PERMISSION_TYPES_LIST = 'permission-types-list';\n\nexport const ORG_UNIT_FEATURE = 'orgUnit';\nexport const ORG_UNIT_NODE_ENTITIES = 'orgUnitNode-entities';\nexport const ORG_UNIT_NODE_LIST = 'orgUnitNode-list';\nexport const ORG_UNIT_ENTITIES = 'orgUnit-entities';\nexport const ORG_UNIT_TREE_ENTITY = 'orgUnit-tree';\nexport const ORG_UNIT_APPROVAL_PROCESSES_ENTITIES =\n  'orgUnit-approval-processes';\nexport const ORG_UNIT_ASSIGNED_USERS = 'orgUnit-assigned-users';\n\nexport const ORG_UNIT_TREE = 'tree';\nexport const ORG_UNIT_APPROVAL_PROCESSES = 'approvalProcesses';\nexport const ORG_UNIT_NODES = 'availableOrgUnitNodes';\n\nexport const B2B_USER_FEATURE = 'b2bUser';\nexport const B2B_USER_ENTITIES = 'b2bUser-entities';\nexport const USER_LIST = 'b2bUser-list';\nexport const B2B_USER_APPROVERS = 'b2bUser-approvers';\nexport const B2B_USER_PERMISSIONS = 'b2bUser-permissions';\nexport const B2B_USER_USER_GROUPS = 'b2bUser-user-groups';\n\nexport const USER_GROUP_FEATURE = 'userGroup';\nexport const USER_GROUP_ENTITIES = 'userGroup-entities';\nexport const USER_GROUP_LIST = 'userGroup-list';\nexport const USER_GROUP_PERMISSIONS =\n  'userGroup-available-order-approval-permissions';\nexport const USER_GROUP_AVAILABLE_CUSTOMERS =\n  'userGroup-available-org-customers';\nexport const ADDRESS_ENTITIES = 'addresses-entities';\nexport const ADDRESS_LIST = 'addresses-list';\n\nexport interface Management<Type> extends StateUtils.EntityListState<Type> {}\n\nexport interface BudgetManagement extends Management<Budget> {}\n\nexport interface OrgUnits {\n  availableOrgUnitNodes: StateUtils.EntityLoaderState<B2BUnitNode[]>;\n  entities: StateUtils.EntityLoaderState<B2BUnit>;\n  tree: StateUtils.EntityLoaderState<B2BUnitNode>;\n  approvalProcesses: StateUtils.EntityLoaderState<B2BApprovalProcess[]>;\n  users: StateUtils.EntityLoaderState<ListModel>;\n  addressList: StateUtils.EntityLoaderState<ListModel>;\n  addressEntities: StateUtils.EntityLoaderState<Address>;\n}\n\nexport interface UserGroupManagement extends Management<UserGroup> {\n  permissions: StateUtils.EntityLoaderState<ListModel>;\n  customers: StateUtils.EntityLoaderState<ListModel>;\n}\n\nexport interface PermissionManagement extends Management<Permission> {\n  permissionTypes: StateUtils.EntityLoaderState<OrderApprovalPermissionType[]>;\n}\n\nexport interface CostCenterManagement extends Management<CostCenter> {\n  budgets: StateUtils.EntityLoaderState<ListModel>;\n}\n\nexport interface B2BUserManagement extends Management<B2BUser> {\n  approvers: StateUtils.EntityLoaderState<ListModel>;\n  permissions: StateUtils.EntityLoaderState<ListModel>;\n  userGroups: StateUtils.EntityLoaderState<ListModel>;\n}\n\nexport interface StateWithOrganization {\n  [ORGANIZATION_FEATURE]: OrganizationState;\n}\n\nexport interface OrganizationState {\n  [BUDGET_FEATURE]: BudgetManagement;\n  [ORG_UNIT_FEATURE]: OrgUnits;\n  [USER_GROUP_FEATURE]: UserGroupManagement;\n  [PERMISSION_FEATURE]: PermissionManagement;\n  [COST_CENTER_FEATURE]: CostCenterManagement;\n  [B2B_USER_FEATURE]: B2BUserManagement;\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ListModel, SearchConfig, StateUtils } from '@spartacus/core';\nimport { Budget } from '../../model/budget.model';\nimport { BUDGET_ENTITIES, BUDGET_LIST } from '../organization-state';\n\nexport const LOAD_BUDGET = '[Budget] Load Budget Data';\nexport const LOAD_BUDGET_FAIL = '[Budget] Load Budget Data Fail';\nexport const LOAD_BUDGET_SUCCESS = '[Budget] Load Budget Data Success';\n\nexport const LOAD_BUDGETS = '[Budget] Load Budgets';\nexport const LOAD_BUDGETS_FAIL = '[Budget] Load Budgets Fail';\nexport const LOAD_BUDGETS_SUCCESS = '[Budget] Load Budgets Success';\n\nexport const CREATE_BUDGET = '[Budget] Create Budget';\nexport const CREATE_BUDGET_FAIL = '[Budget] Create Budget Fail';\nexport const CREATE_BUDGET_SUCCESS = '[Budget] Create Budget Success';\n\nexport const UPDATE_BUDGET = '[Budget] Update Budget';\nexport const UPDATE_BUDGET_FAIL = '[Budget] Update Budget Fail';\nexport const UPDATE_BUDGET_SUCCESS = '[Budget] Update Budget Success';\n\nexport class LoadBudget extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_BUDGET;\n  constructor(public payload: { userId: string; budgetCode: string }) {\n    super(BUDGET_ENTITIES, payload.budgetCode);\n  }\n}\n\nexport class LoadBudgetFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_BUDGET_FAIL;\n  constructor(public payload: { budgetCode: string; error: any }) {\n    super(BUDGET_ENTITIES, payload.budgetCode, payload.error);\n  }\n}\n\nexport class LoadBudgetSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_BUDGET_SUCCESS;\n  constructor(public payload: Budget | Budget[]) {\n    super(\n      BUDGET_ENTITIES,\n      Array.isArray(payload)\n        ? payload.map((budget) => budget?.code ?? '')\n        : payload?.code ?? ''\n    );\n  }\n}\n\nexport class LoadBudgets extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_BUDGETS;\n  constructor(\n    public payload: {\n      userId: string;\n      params: SearchConfig;\n    }\n  ) {\n    super(BUDGET_LIST, StateUtils.serializeSearchConfig(payload.params));\n  }\n}\n\nexport class LoadBudgetsFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_BUDGETS_FAIL;\n  constructor(public payload: { params: SearchConfig; error: any }) {\n    super(\n      BUDGET_LIST,\n      StateUtils.serializeSearchConfig(payload.params),\n      payload.error\n    );\n  }\n}\n\nexport class LoadBudgetsSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_BUDGETS_SUCCESS;\n  constructor(\n    public payload: {\n      page: ListModel;\n      params: SearchConfig;\n    }\n  ) {\n    super(BUDGET_LIST, StateUtils.serializeSearchConfig(payload.params));\n  }\n}\n\nexport class CreateBudget extends StateUtils.EntityLoadAction {\n  readonly type = CREATE_BUDGET;\n  constructor(public payload: { userId: string; budget: Budget }) {\n    super(BUDGET_ENTITIES, payload.budget.code ?? null);\n  }\n}\n\nexport class CreateBudgetFail extends StateUtils.EntityFailAction {\n  readonly type = CREATE_BUDGET_FAIL;\n  constructor(public payload: { budgetCode: string; error: any }) {\n    super(BUDGET_ENTITIES, payload.budgetCode, payload.error);\n  }\n}\n\nexport class CreateBudgetSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = CREATE_BUDGET_SUCCESS;\n  constructor(public payload: Budget) {\n    super(BUDGET_ENTITIES, payload.code ?? null, payload);\n  }\n}\n\nexport class UpdateBudget extends StateUtils.EntityLoadAction {\n  readonly type = UPDATE_BUDGET;\n  constructor(\n    public payload: { userId: string; budgetCode: string; budget: Budget }\n  ) {\n    super(BUDGET_ENTITIES, payload.budget.code ?? '');\n  }\n}\n\nexport class UpdateBudgetFail extends StateUtils.EntityFailAction {\n  readonly type = UPDATE_BUDGET_FAIL;\n  constructor(public payload: { budgetCode: string; error: any }) {\n    super(BUDGET_ENTITIES, payload.budgetCode, payload.error);\n  }\n}\n\nexport class UpdateBudgetSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = UPDATE_BUDGET_SUCCESS;\n  constructor(public payload: Budget) {\n    super(BUDGET_ENTITIES, payload.code ?? '', payload);\n  }\n}\n\nexport type BudgetAction =\n  | LoadBudget\n  | LoadBudgetFail\n  | LoadBudgetSuccess\n  | LoadBudgets\n  | LoadBudgetsFail\n  | LoadBudgetsSuccess\n  | CreateBudget\n  | CreateBudgetFail\n  | CreateBudgetSuccess\n  | UpdateBudget\n  | UpdateBudgetFail\n  | UpdateBudgetSuccess;\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  Address,\n  B2BApprovalProcess,\n  B2BUnit,\n  ListModel,\n  SearchConfig,\n  StateUtils,\n} from '@spartacus/core';\nimport { B2BUnitNode } from '../../model/unit-node.model';\nimport {\n  ADDRESS_ENTITIES,\n  ADDRESS_LIST,\n  B2B_USER_ENTITIES,\n  ORG_UNIT_APPROVAL_PROCESSES,\n  ORG_UNIT_APPROVAL_PROCESSES_ENTITIES,\n  ORG_UNIT_ASSIGNED_USERS,\n  ORG_UNIT_ENTITIES,\n  ORG_UNIT_NODES,\n  ORG_UNIT_NODE_LIST,\n  ORG_UNIT_TREE,\n  ORG_UNIT_TREE_ENTITY,\n} from '../organization-state';\n\nexport const LOAD_ORG_UNIT = '[B2BUnit] Load B2BUnit Data';\nexport const LOAD_ORG_UNIT_FAIL = '[B2BUnit] Load B2BUnit Data Fail';\nexport const LOAD_ORG_UNIT_SUCCESS = '[B2BUnit] Load B2BUnit Data Success';\n\nexport const LOAD_UNIT_NODE = '[B2BUnitNode] Load B2BUnitNode Data';\nexport const LOAD_UNIT_NODE_FAIL = '[B2BUnitNode] Load B2BUnitNode Data Fail';\nexport const LOAD_UNIT_NODE_SUCCESS =\n  '[B2BUnitNode] Load B2BUnitNode Data Success';\n\nexport const LOAD_UNIT_NODES = '[B2BUnitNode] Load B2BUnitNodes';\nexport const LOAD_UNIT_NODES_FAIL = '[B2BUnitNode] Load B2BUnitNodes Fail';\nexport const LOAD_UNIT_NODES_SUCCESS =\n  '[B2BUnitNode] Load B2BUnitNodes Success';\n\nexport const CREATE_ORG_UNIT = '[B2BUnit] Create B2BUnitNode';\nexport const CREATE_ORG_UNIT_FAIL = '[B2BUnit] Create B2BUnitNode Fail';\nexport const CREATE_ORG_UNIT_SUCCESS = '[B2BUnit] Create B2BUnitNode Success';\n\nexport const UPDATE_ORG_UNIT = '[B2BUnit] Update B2BUnitNode';\nexport const UPDATE_ORG_UNIT_FAIL = '[B2BUnit] Update B2BUnitNode Fail';\nexport const UPDATE_ORG_UNIT_SUCCESS = '[B2BUnit] Update B2BUnitNode Success';\n\nexport const LOAD_UNIT_TREE = '[B2BUnitNode] Load Tree';\nexport const LOAD_UNIT_TREE_FAIL = '[B2BUnitNode] Load Tree Fail';\nexport const LOAD_UNIT_TREE_SUCCESS = '[B2BUnitNode] Load Tree Success';\n\nexport const LOAD_APPROVAL_PROCESSES =\n  '[B2BApprovalProcess] Load Approval Processes';\nexport const LOAD_APPROVAL_PROCESSES_FAIL =\n  '[B2BApprovalProcess] Load Approval Processes Fail';\nexport const LOAD_APPROVAL_PROCESSES_SUCCESS =\n  '[B2BApprovalProcess] Load Approval Processes Success';\n\nexport const LOAD_ASSIGNED_USERS = '[B2BUnit] Load Users';\nexport const LOAD_ASSIGNED_USERS_SUCCESS = '[B2BUnit] Load Users success';\nexport const LOAD_ASSIGNED_USERS_FAIL = '[B2BUnit] Load Users fail';\n\nexport const ASSIGN_ROLE = '[B2BUnit] Assign Role';\nexport const ASSIGN_ROLE_SUCCESS = '[B2BUnit] Assign Role success';\nexport const ASSIGN_ROLE_FAIL = '[B2BUnit] Assign Role fail';\n\nexport const UNASSIGN_ROLE = '[B2BUnit] Unassign Role';\nexport const UNASSIGN_ROLE_SUCCESS = '[B2BUnit] Unassign Role success';\nexport const UNASSIGN_ROLE_FAIL = '[B2BUnit] Unassign Role fail';\n\nexport const ASSIGN_APPROVER = '[B2BUnit] Assign Approver';\nexport const ASSIGN_APPROVER_SUCCESS = '[B2BUnit] Assign Approver success';\nexport const ASSIGN_APPROVER_FAIL = '[B2BUnit] Assign Approver fail';\n\nexport const UNASSIGN_APPROVER = '[B2BUnit] Unassign Approver';\nexport const UNASSIGN_APPROVER_SUCCESS = '[B2BUnit] Unassign Approver success';\nexport const UNASSIGN_APPROVER_FAIL = '[B2BUnit] Unassign Approver fail';\n\nexport const CREATE_ADDRESS = '[B2BUnit] Create address';\nexport const CREATE_ADDRESS_SUCCESS = '[B2BUnit] Create address success';\nexport const CREATE_ADDRESS_FAIL = '[B2BUnit] Create address fail';\n\nexport const UPDATE_ADDRESS = '[B2BUnit] Update address';\nexport const UPDATE_ADDRESS_SUCCESS = '[B2BUnit] Update address success';\nexport const UPDATE_ADDRESS_FAIL = '[B2BUnit] Update address fail';\n\nexport const DELETE_ADDRESS = '[B2BUnit] Delete address';\nexport const DELETE_ADDRESS_SUCCESS = '[B2BUnit] Delete address success';\nexport const DELETE_ADDRESS_FAIL = '[B2BUnit] Delete address fail';\n\nexport const LOAD_ADDRESS_SUCCESS = '[B2BUnit] Load address success';\n\nexport const LOAD_ADDRESSES = '[B2BUnit] Load addresses';\nexport const LOAD_ADDRESSES_SUCCESS = '[B2BUnit] Load addresses success';\nexport const LOAD_ADDRESSES_FAIL = '[B2BUnit] Load addresses fail';\n\nexport const CLEAR_ASSIGNED_USERS = '[B2BUnit] Clear Assigned Users';\n\nexport class LoadOrgUnit extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_ORG_UNIT;\n  constructor(public payload: { userId: string; orgUnitId: string }) {\n    super(ORG_UNIT_ENTITIES, payload.orgUnitId);\n  }\n}\n\nexport class LoadOrgUnitFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_ORG_UNIT_FAIL;\n  constructor(public payload: { orgUnitId: string; error: any }) {\n    super(ORG_UNIT_ENTITIES, payload.orgUnitId, payload.error);\n  }\n}\n\nexport class LoadOrgUnitSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_ORG_UNIT_SUCCESS;\n\n  constructor(public payload: B2BUnit | B2BUnit[]) {\n    super(\n      ORG_UNIT_ENTITIES,\n      Array.isArray(payload)\n        ? payload.map((orgUnit) => orgUnit?.uid ?? '')\n        : payload?.uid ?? ''\n    );\n  }\n}\n\nexport class LoadOrgUnitNodes extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_UNIT_NODES;\n  constructor(\n    public payload: {\n      userId: string;\n    }\n  ) {\n    super(ORG_UNIT_NODE_LIST, ORG_UNIT_NODES);\n  }\n}\n\nexport class LoadOrgUnitNodesFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_UNIT_NODES_FAIL;\n  constructor(public payload: any) {\n    super(ORG_UNIT_NODE_LIST, ORG_UNIT_NODES, payload.error);\n  }\n}\n\nexport class LoadOrgUnitNodesSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_UNIT_NODES_SUCCESS;\n  constructor(public payload: B2BUnitNode[]) {\n    super(ORG_UNIT_NODE_LIST, ORG_UNIT_NODES);\n  }\n}\n\nexport class CreateUnit extends StateUtils.EntityLoadAction {\n  readonly type = CREATE_ORG_UNIT;\n  constructor(public payload: { userId: string; unit: B2BUnit }) {\n    super(ORG_UNIT_ENTITIES, payload.unit.uid ?? null);\n  }\n}\n\nexport class CreateUnitFail extends StateUtils.EntityFailAction {\n  readonly type = CREATE_ORG_UNIT_FAIL;\n  constructor(public payload: { unitCode: string; error: any }) {\n    super(ORG_UNIT_ENTITIES, payload.unitCode, payload.error);\n  }\n}\n\nexport class CreateUnitSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = CREATE_ORG_UNIT_SUCCESS;\n  constructor(public payload: B2BUnit) {\n    super(ORG_UNIT_ENTITIES, payload.uid ?? null, payload);\n  }\n}\n\nexport class UpdateUnit extends StateUtils.EntityLoadAction {\n  readonly type = UPDATE_ORG_UNIT;\n  constructor(\n    public payload: { userId: string; unitCode: string; unit: B2BUnit }\n  ) {\n    super(ORG_UNIT_ENTITIES, payload.unit.uid ?? '');\n  }\n}\n\nexport class UpdateUnitFail extends StateUtils.EntityFailAction {\n  readonly type = UPDATE_ORG_UNIT_FAIL;\n  constructor(public payload: { unitCode: string; error: any }) {\n    super(ORG_UNIT_ENTITIES, payload.unitCode, payload.error);\n  }\n}\n\nexport class UpdateUnitSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = UPDATE_ORG_UNIT_SUCCESS;\n  constructor(public payload: B2BUnit) {\n    super(ORG_UNIT_ENTITIES, payload.uid ?? '', payload);\n  }\n}\n\nexport class LoadTree extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_UNIT_TREE;\n  constructor(public payload: { userId: string }) {\n    super(ORG_UNIT_TREE_ENTITY, ORG_UNIT_TREE);\n  }\n}\n\nexport class LoadTreeFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_UNIT_TREE_FAIL;\n  constructor(public payload: { error: any }) {\n    super(ORG_UNIT_TREE_ENTITY, ORG_UNIT_TREE, payload.error);\n  }\n}\n\nexport class LoadTreeSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_UNIT_TREE_SUCCESS;\n\n  constructor(public payload: B2BUnitNode) {\n    super(ORG_UNIT_TREE_ENTITY, ORG_UNIT_TREE);\n  }\n}\n\nexport class LoadApprovalProcesses extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_APPROVAL_PROCESSES;\n  constructor(public payload: { userId: string }) {\n    super(ORG_UNIT_APPROVAL_PROCESSES_ENTITIES, ORG_UNIT_APPROVAL_PROCESSES);\n  }\n}\n\nexport class LoadApprovalProcessesFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_APPROVAL_PROCESSES_FAIL;\n  constructor(public payload: { error: any }) {\n    super(\n      ORG_UNIT_APPROVAL_PROCESSES_ENTITIES,\n      ORG_UNIT_APPROVAL_PROCESSES,\n      payload.error\n    );\n  }\n}\n\nexport class LoadApprovalProcessesSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_APPROVAL_PROCESSES_SUCCESS;\n\n  constructor(public payload: B2BApprovalProcess[]) {\n    super(ORG_UNIT_APPROVAL_PROCESSES_ENTITIES, ORG_UNIT_APPROVAL_PROCESSES);\n  }\n}\n\nexport class LoadAssignedUsers extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_ASSIGNED_USERS;\n  constructor(\n    public payload: {\n      userId: string;\n      orgUnitId: string;\n      roleId: string;\n      params: SearchConfig;\n    }\n  ) {\n    super(\n      ORG_UNIT_ASSIGNED_USERS,\n      StateUtils.serializeSearchConfig(\n        payload.params,\n        `${payload.orgUnitId},${payload.roleId}`\n      )\n    );\n  }\n}\n\nexport class ClearAssignedUsers extends StateUtils.EntityRemoveAction {\n  readonly type = CLEAR_ASSIGNED_USERS;\n  constructor(\n    public payload: {\n      orgUnitId: string;\n      roleId: string;\n      params: SearchConfig;\n    }\n  ) {\n    super(\n      ORG_UNIT_ASSIGNED_USERS,\n      StateUtils.serializeSearchConfig(\n        payload.params,\n        `${payload.orgUnitId},${payload.roleId}`\n      )\n    );\n  }\n}\n\nexport class LoadAssignedUsersFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_ASSIGNED_USERS_FAIL;\n  constructor(\n    public payload: {\n      orgUnitId: string;\n      roleId: string;\n      params: SearchConfig;\n      error: any;\n    }\n  ) {\n    super(\n      ORG_UNIT_ASSIGNED_USERS,\n      StateUtils.serializeSearchConfig(\n        payload.params,\n        `${payload.orgUnitId},${payload.roleId}`\n      ),\n      payload.error\n    );\n  }\n}\n\nexport class LoadAssignedUsersSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_ASSIGNED_USERS_SUCCESS;\n  constructor(\n    public payload: {\n      orgUnitId: string;\n      roleId: string;\n      page: ListModel;\n      params: SearchConfig;\n    }\n  ) {\n    super(\n      ORG_UNIT_ASSIGNED_USERS,\n      StateUtils.serializeSearchConfig(\n        payload.params,\n        `${payload.orgUnitId},${payload.roleId}`\n      )\n    );\n  }\n}\n\nexport class AssignRole extends StateUtils.EntityLoadAction {\n  readonly type = ASSIGN_ROLE;\n  constructor(\n    public payload: {\n      userId: string;\n      orgCustomerId: string;\n      roleId: string;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId);\n  }\n}\n\nexport class AssignRoleFail extends StateUtils.EntityFailAction {\n  readonly type = ASSIGN_ROLE_FAIL;\n  constructor(\n    public payload: {\n      orgCustomerId: string;\n      error: any;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId, payload.error);\n  }\n}\n\nexport class AssignRoleSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = ASSIGN_ROLE_SUCCESS;\n  constructor(\n    public payload: { uid: string; roleId: string; selected: boolean }\n  ) {\n    super(B2B_USER_ENTITIES, payload.uid, payload);\n  }\n}\n\nexport class UnassignRole extends StateUtils.EntityLoadAction {\n  readonly type = UNASSIGN_ROLE;\n  constructor(\n    public payload: {\n      userId: string;\n      orgCustomerId: string;\n      roleId: string;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId);\n  }\n}\n\nexport class UnassignRoleFail extends StateUtils.EntityFailAction {\n  readonly type = UNASSIGN_ROLE_FAIL;\n  constructor(\n    public payload: {\n      orgCustomerId: string;\n      error: any;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId, payload.error);\n  }\n}\n\nexport class UnassignRoleSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = UNASSIGN_ROLE_SUCCESS;\n  constructor(\n    public payload: { uid: string; roleId: string; selected: boolean }\n  ) {\n    super(B2B_USER_ENTITIES, payload.uid, payload);\n  }\n}\n\nexport class AssignApprover extends StateUtils.EntityLoadAction {\n  readonly type = ASSIGN_APPROVER;\n  constructor(\n    public payload: {\n      userId: string;\n      orgUnitId: string;\n      orgCustomerId: string;\n      roleId: string;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId);\n  }\n}\n\nexport class AssignApproverFail extends StateUtils.EntityFailAction {\n  readonly type = ASSIGN_APPROVER_FAIL;\n  constructor(\n    public payload: {\n      orgCustomerId: string;\n      error: any;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId, payload.error);\n  }\n}\n\nexport class AssignApproverSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = ASSIGN_APPROVER_SUCCESS;\n  constructor(\n    public payload: { uid: string; roleId: string; selected: boolean }\n  ) {\n    super(B2B_USER_ENTITIES, payload.uid, payload);\n  }\n}\n\nexport class UnassignApprover extends StateUtils.EntityLoadAction {\n  readonly type = UNASSIGN_APPROVER;\n  constructor(\n    public payload: {\n      userId: string;\n      orgUnitId: string;\n      orgCustomerId: string;\n      roleId: string;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId);\n  }\n}\n\nexport class UnassignApproverFail extends StateUtils.EntityFailAction {\n  readonly type = UNASSIGN_APPROVER_FAIL;\n  constructor(\n    public payload: {\n      orgCustomerId: string;\n      error: any;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId, payload.error);\n  }\n}\n\nexport class UnassignApproverSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = UNASSIGN_APPROVER_SUCCESS;\n  constructor(\n    public payload: { uid: string; roleId: string; selected: boolean }\n  ) {\n    super(B2B_USER_ENTITIES, payload.uid, payload);\n  }\n}\n\nexport class CreateAddress extends StateUtils.EntityLoadAction {\n  readonly type = CREATE_ADDRESS;\n  constructor(\n    public payload: { userId: string; orgUnitId: string; address: Address }\n  ) {\n    super(ADDRESS_ENTITIES, payload.address.id ?? null);\n  }\n}\n\nexport class CreateAddressFail extends StateUtils.EntityFailAction {\n  readonly type = CREATE_ADDRESS_FAIL;\n  constructor(public payload: { addressId: string; error: any }) {\n    super(ADDRESS_ENTITIES, payload.addressId, payload.error);\n  }\n}\n\nexport class CreateAddressSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = CREATE_ADDRESS_SUCCESS;\n  constructor(public payload: Address) {\n    super(ADDRESS_ENTITIES, payload.id ?? null, payload);\n  }\n}\n\nexport class UpdateAddress extends StateUtils.EntityLoadAction {\n  readonly type = UPDATE_ADDRESS;\n  constructor(\n    public payload: {\n      userId: string;\n      orgUnitId: string;\n      addressId: string;\n      address: Address;\n    }\n  ) {\n    super(ADDRESS_ENTITIES, payload.address.id ?? '');\n  }\n}\n\nexport class UpdateAddressFail extends StateUtils.EntityFailAction {\n  readonly type = UPDATE_ADDRESS_FAIL;\n  constructor(public payload: { addressId: string; error: any }) {\n    super(ADDRESS_ENTITIES, payload.addressId, payload.error);\n  }\n}\n\nexport class UpdateAddressSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = UPDATE_ADDRESS_SUCCESS;\n  constructor(public payload: Address) {\n    super(ADDRESS_ENTITIES, payload.id ?? '', payload);\n  }\n}\n\nexport class DeleteAddress extends StateUtils.EntityLoadAction {\n  readonly type = DELETE_ADDRESS;\n  constructor(\n    public payload: {\n      userId: string;\n      orgUnitId: string;\n      addressId: string;\n    }\n  ) {\n    super(ADDRESS_ENTITIES, payload.addressId);\n  }\n}\n\nexport class DeleteAddressFail extends StateUtils.EntityFailAction {\n  readonly type = DELETE_ADDRESS_FAIL;\n  constructor(public payload: { addressId: string; error: any }) {\n    super(ADDRESS_ENTITIES, payload.addressId, payload.error);\n  }\n}\n\nexport class DeleteAddressSuccess extends StateUtils.EntityRemoveAction {\n  readonly type = DELETE_ADDRESS_SUCCESS;\n  constructor(public payload: Address) {\n    super(ADDRESS_ENTITIES, payload.id ?? '');\n  }\n}\n\nexport class LoadAddressSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_ADDRESS_SUCCESS;\n  constructor(public payload: Address | Address[]) {\n    super(\n      ADDRESS_ENTITIES,\n      Array.isArray(payload)\n        ? payload.map((address) => address?.id ?? '')\n        : payload?.id ?? ''\n    );\n  }\n}\n\nexport class LoadAddresses extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_ADDRESSES;\n  constructor(public payload: { userId: string; orgUnitId: string }) {\n    super(ADDRESS_LIST, payload.orgUnitId);\n  }\n}\n\nexport class LoadAddressesFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_ADDRESSES_FAIL;\n  constructor(public payload: { orgUnitId: string; error: any }) {\n    super(ADDRESS_LIST, payload.orgUnitId, payload.error);\n  }\n}\n\nexport class LoadAddressesSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_ADDRESSES_SUCCESS;\n  constructor(\n    public payload: {\n      page: ListModel;\n      orgUnitId: string;\n    }\n  ) {\n    super(ADDRESS_LIST, payload.orgUnitId);\n  }\n}\n\nexport type OrgUnitAction =\n  | LoadOrgUnitNodes\n  | LoadOrgUnitNodesFail\n  | LoadOrgUnitNodesSuccess\n  | LoadOrgUnit\n  | LoadOrgUnitFail\n  | LoadOrgUnitSuccess\n  | CreateUnit\n  | CreateUnitFail\n  | CreateUnitSuccess\n  | UpdateUnit\n  | UpdateUnitFail\n  | UpdateUnitSuccess\n  | LoadTree\n  | LoadTreeSuccess\n  | LoadTreeFail\n  | LoadApprovalProcesses\n  | LoadApprovalProcessesSuccess\n  | LoadApprovalProcessesFail\n  | AssignRole\n  | AssignRoleSuccess\n  | AssignRoleFail\n  | UnassignRole\n  | UnassignRoleSuccess\n  | UnassignRoleFail\n  | AssignApprover\n  | AssignApproverSuccess\n  | AssignApproverFail\n  | UnassignApprover\n  | UnassignApproverSuccess\n  | UnassignApproverFail\n  | CreateAddress\n  | CreateAddressSuccess\n  | CreateAddressFail\n  | UpdateAddress\n  | UpdateAddressSuccess\n  | UpdateAddressFail\n  | DeleteAddress\n  | DeleteAddressSuccess\n  | DeleteAddressFail\n  | LoadAddresses\n  | LoadAddressesFail\n  | LoadAddressesSuccess\n  | LoadAddressSuccess\n  | ClearAssignedUsers;\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ListModel, SearchConfig, StateUtils } from '@spartacus/core';\nimport { UserGroup } from '../../model/user-group.model';\nimport {\n  B2B_USER_ENTITIES,\n  PERMISSION_ENTITIES,\n  USER_GROUP_AVAILABLE_CUSTOMERS,\n  USER_GROUP_ENTITIES,\n  USER_GROUP_LIST,\n  USER_GROUP_PERMISSIONS,\n} from '../organization-state';\n\nexport const LOAD_USER_GROUP = '[UserGroup] Load UserGroup Data';\nexport const LOAD_USER_GROUP_FAIL = '[UserGroup] Load UserGroup Data Fail';\nexport const LOAD_USER_GROUP_SUCCESS =\n  '[UserGroup] Load UserGroup Data Success';\n\nexport const LOAD_USER_GROUPS = '[UserGroup] Load UserGroups';\nexport const LOAD_USER_GROUPS_FAIL = '[UserGroup] Load UserGroups Fail';\nexport const LOAD_USER_GROUPS_SUCCESS = '[UserGroup] Load UserGroups Success';\n\nexport const LOAD_USER_GROUP_PERMISSIONS = '[UserGroup] Load Permissions Data';\nexport const LOAD_USER_GROUP_PERMISSIONS_FAIL =\n  '[UserGroup] Load Permissions Data Fail';\nexport const LOAD_USER_GROUP_PERMISSIONS_SUCCESS =\n  '[UserGroup] Load Permissions Data Success';\n\nexport const LOAD_USER_GROUP_AVAILABLE_CUSTOMERS =\n  '[UserGroup] Load Customers Data';\nexport const LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_FAIL =\n  '[UserGroup] Load Customers Data Fail';\nexport const LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_SUCCESS =\n  '[UserGroup] Load Customers Data Success';\n\nexport const CREATE_USER_GROUP = '[UserGroup] Create UserGroup';\nexport const CREATE_USER_GROUP_FAIL = '[UserGroup] Create UserGroup Fail';\nexport const CREATE_USER_GROUP_SUCCESS = '[UserGroup] Create UserGroup Success';\n\nexport const USER_GROUP_ASSIGN_MEMBER = '[UserGroup] Assign Member';\nexport const USER_GROUP_ASSIGN_MEMBER_FAIL = '[UserGroup] Assign Member Fail';\nexport const USER_GROUP_ASSIGN_MEMBER_SUCCESS =\n  '[UserGroup] Assign Member Success';\n\nexport const USER_GROUP_ASSIGN_PERMISSION = '[UserGroup] Assign Permissions';\nexport const USER_GROUP_ASSIGN_PERMISSION_FAIL =\n  '[UserGroup] Assign Permissions Fail';\nexport const USER_GROUP_ASSIGN_PERMISSION_SUCCESS =\n  '[UserGroup] Assign Permissions Success';\n\nexport const UPDATE_USER_GROUP = '[UserGroup] Update UserGroup';\nexport const UPDATE_USER_GROUP_FAIL = '[UserGroup] Update UserGroup Fail';\nexport const UPDATE_USER_GROUP_SUCCESS = '[UserGroup] Update UserGroup Success';\n\nexport const DELETE_USER_GROUP = '[UserGroup] Delete UserGroup';\nexport const DELETE_USER_GROUP_FAIL = '[UserGroup] Delete UserGroup Fail';\nexport const DELETE_USER_GROUP_SUCCESS = '[UserGroup] Delete UserGroup Success';\n\nexport const USER_GROUP_UNASSIGN_ALL_MEMBERS = '[UserGroup] Unassign Members';\nexport const USER_GROUP_UNASSIGN_ALL_MEMBERS_FAIL =\n  '[UserGroup] Unassign Members Fail';\nexport const USER_GROUP_UNASSIGN_ALL_MEMBERS_SUCCESS =\n  '[UserGroup] Unassign Members Success';\n\nexport const USER_GROUP_UNASSIGN_MEMBER = '[UserGroup] Unassign Member';\nexport const USER_GROUP_UNASSIGN_MEMBER_FAIL =\n  '[UserGroup] Unassign Member Fail';\nexport const USER_GROUP_UNASSIGN_MEMBER_SUCCESS =\n  '[UserGroup] Unassign Member Success';\n\nexport const USER_GROUP_UNASSIGN_PERMISSION = '[UserGroup] Unassign Permission';\nexport const USER_GROUP_UNASSIGN_PERMISSION_FAIL =\n  '[UserGroup] Unassign Permission Fail';\nexport const USER_GROUP_UNASSIGN_PERMISSION_SUCCESS =\n  '[UserGroup] Unassign Permission Success';\n\nexport class LoadUserGroup extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_USER_GROUP;\n  constructor(public payload: { userId: string; userGroupId: string }) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId);\n  }\n}\n\nexport class LoadUserGroupFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_USER_GROUP_FAIL;\n  constructor(public payload: { userGroupId: string; error: any }) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId, payload.error);\n  }\n}\n\nexport class LoadUserGroupSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_USER_GROUP_SUCCESS;\n  constructor(public payload: UserGroup | UserGroup[]) {\n    super(\n      USER_GROUP_ENTITIES,\n      Array.isArray(payload)\n        ? payload.map((userGroup) => userGroup?.uid ?? '')\n        : payload?.uid ?? ''\n    );\n  }\n}\n\nexport class LoadUserGroups extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_USER_GROUPS;\n  constructor(\n    public payload: {\n      userId: string;\n      params: SearchConfig;\n    }\n  ) {\n    super(USER_GROUP_LIST, StateUtils.serializeSearchConfig(payload.params));\n  }\n}\n\nexport class LoadUserGroupsFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_USER_GROUPS_FAIL;\n  constructor(public payload: { params: SearchConfig; error: any }) {\n    super(\n      USER_GROUP_LIST,\n      StateUtils.serializeSearchConfig(payload.params),\n      payload.error\n    );\n  }\n}\n\nexport class LoadUserGroupsSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_USER_GROUPS_SUCCESS;\n  constructor(\n    public payload: {\n      page: ListModel;\n      params: SearchConfig;\n    }\n  ) {\n    super(USER_GROUP_LIST, StateUtils.serializeSearchConfig(payload.params));\n  }\n}\n\nexport class LoadPermissions extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_USER_GROUP_PERMISSIONS;\n  constructor(\n    public payload: {\n      userId: string;\n      userGroupId: string;\n      params: SearchConfig;\n    }\n  ) {\n    super(\n      USER_GROUP_PERMISSIONS,\n      StateUtils.serializeSearchConfig(payload.params, payload.userGroupId)\n    );\n  }\n}\n\nexport class LoadPermissionsFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_USER_GROUP_PERMISSIONS_FAIL;\n  constructor(\n    public payload: {\n      userGroupId: string;\n      params: SearchConfig;\n      error: any;\n    }\n  ) {\n    super(\n      USER_GROUP_PERMISSIONS,\n      StateUtils.serializeSearchConfig(payload.params, payload.userGroupId),\n      payload.error\n    );\n  }\n}\n\nexport class LoadPermissionsSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_USER_GROUP_PERMISSIONS_SUCCESS;\n  constructor(\n    public payload: {\n      userGroupId: string;\n      page: ListModel;\n      params: SearchConfig;\n    }\n  ) {\n    super(\n      USER_GROUP_PERMISSIONS,\n      StateUtils.serializeSearchConfig(payload.params, payload.userGroupId)\n    );\n  }\n}\n\nexport class LoadAvailableOrgCustomers extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_USER_GROUP_AVAILABLE_CUSTOMERS;\n  constructor(\n    public payload: {\n      userId: string;\n      userGroupId: string;\n      params: SearchConfig;\n    }\n  ) {\n    super(\n      USER_GROUP_AVAILABLE_CUSTOMERS,\n      StateUtils.serializeSearchConfig(payload.params, payload.userGroupId)\n    );\n  }\n}\n\nexport class LoadAvailableOrgCustomersFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_FAIL;\n  constructor(\n    public payload: {\n      userGroupId: string;\n      params: SearchConfig;\n      error: any;\n    }\n  ) {\n    super(\n      USER_GROUP_AVAILABLE_CUSTOMERS,\n      StateUtils.serializeSearchConfig(payload.params, payload.userGroupId),\n      payload.error\n    );\n  }\n}\n\nexport class LoadAvailableOrgCustomersSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_SUCCESS;\n  constructor(\n    public payload: {\n      userGroupId: string;\n      page: ListModel;\n      params: SearchConfig;\n    }\n  ) {\n    super(\n      USER_GROUP_AVAILABLE_CUSTOMERS,\n      StateUtils.serializeSearchConfig(payload.params, payload.userGroupId)\n    );\n  }\n}\n\nexport class CreateUserGroup extends StateUtils.EntityLoadAction {\n  readonly type = CREATE_USER_GROUP;\n  constructor(public payload: { userId: string; userGroup: UserGroup }) {\n    super(USER_GROUP_ENTITIES, payload.userGroup.uid ?? null);\n  }\n}\n\nexport class CreateUserGroupFail extends StateUtils.EntityFailAction {\n  readonly type = CREATE_USER_GROUP_FAIL;\n  constructor(public payload: { userGroupId: string; error: any }) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId, payload.error);\n  }\n}\n\nexport class CreateUserGroupSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = CREATE_USER_GROUP_SUCCESS;\n  constructor(public payload: UserGroup) {\n    super(USER_GROUP_ENTITIES, payload.uid ?? null, payload);\n  }\n}\n\nexport class AssignMember extends StateUtils.EntityLoadAction {\n  readonly type = USER_GROUP_ASSIGN_MEMBER;\n  constructor(\n    public payload: {\n      userId: string;\n      userGroupId: string;\n      customerId: string;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.customerId);\n  }\n}\n\nexport class AssignMemberFail extends StateUtils.EntityFailAction {\n  readonly type = USER_GROUP_ASSIGN_MEMBER_FAIL;\n  constructor(\n    public payload: {\n      userGroupId: string;\n      customerId: string;\n      error: any;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.customerId, payload.error);\n  }\n}\n\nexport class AssignMemberSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = USER_GROUP_ASSIGN_MEMBER_SUCCESS;\n  constructor(public payload: { customerId: string; selected: boolean }) {\n    super(B2B_USER_ENTITIES, payload.customerId, payload);\n  }\n}\n\nexport class AssignPermission extends StateUtils.EntityLoadAction {\n  readonly type = USER_GROUP_ASSIGN_PERMISSION;\n  constructor(\n    public payload: {\n      userId: string;\n      userGroupId: string;\n      permissionUid: string;\n    }\n  ) {\n    super(PERMISSION_ENTITIES, payload.permissionUid);\n  }\n}\n\nexport class AssignPermissionFail extends StateUtils.EntityFailAction {\n  readonly type = USER_GROUP_ASSIGN_PERMISSION_FAIL;\n  constructor(\n    public payload: {\n      userGroupId: string;\n      permissionUid: string;\n      error: any;\n    }\n  ) {\n    super(PERMISSION_ENTITIES, payload.permissionUid, payload.error);\n  }\n}\n\nexport class AssignPermissionSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = USER_GROUP_ASSIGN_PERMISSION_SUCCESS;\n  constructor(public payload: { permissionUid: string; selected: boolean }) {\n    super(PERMISSION_ENTITIES, payload.permissionUid, payload);\n  }\n}\n\nexport class UpdateUserGroup extends StateUtils.EntityLoadAction {\n  readonly type = UPDATE_USER_GROUP;\n  constructor(\n    public payload: {\n      userId: string;\n      userGroupId: string;\n      userGroup: UserGroup;\n    }\n  ) {\n    super(USER_GROUP_ENTITIES, payload.userGroup.uid ?? '');\n  }\n}\n\nexport class UpdateUserGroupFail extends StateUtils.EntityFailAction {\n  readonly type = UPDATE_USER_GROUP_FAIL;\n  constructor(public payload: { userGroupId: string; error: any }) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId, payload.error);\n  }\n}\n\nexport class UpdateUserGroupSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = UPDATE_USER_GROUP_SUCCESS;\n  constructor(public payload: UserGroup) {\n    super(USER_GROUP_ENTITIES, payload.uid ?? '', payload);\n  }\n}\n\nexport class DeleteUserGroup extends StateUtils.EntityLoadAction {\n  readonly type = DELETE_USER_GROUP;\n  constructor(\n    public payload: {\n      userId: string;\n      userGroupId: string;\n    }\n  ) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId);\n  }\n}\n\nexport class DeleteUserGroupFail extends StateUtils.EntityFailAction {\n  readonly type = DELETE_USER_GROUP_FAIL;\n  constructor(public payload: { userGroupId: string; error: any }) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId, payload.error);\n  }\n}\n\nexport class DeleteUserGroupSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = DELETE_USER_GROUP_SUCCESS;\n  constructor(public payload: UserGroup) {\n    super(USER_GROUP_ENTITIES, payload.uid ?? '', payload);\n  }\n}\n\nexport class UnassignMember extends StateUtils.EntityLoadAction {\n  readonly type = USER_GROUP_UNASSIGN_MEMBER;\n  constructor(\n    public payload: {\n      userId: string;\n      userGroupId: string;\n      customerId: string;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.customerId);\n  }\n}\n\nexport class UnassignMemberFail extends StateUtils.EntityFailAction {\n  readonly type = USER_GROUP_UNASSIGN_MEMBER_FAIL;\n  constructor(\n    public payload: {\n      userGroupId: string;\n      customerId: string;\n      error: any;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.customerId, payload.error);\n  }\n}\n\nexport class UnassignMemberSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = USER_GROUP_UNASSIGN_MEMBER_SUCCESS;\n  constructor(public payload: { customerId: string; selected: boolean }) {\n    super(B2B_USER_ENTITIES, payload.customerId, payload);\n  }\n}\n\nexport class UnassignAllMembers extends StateUtils.EntityLoadAction {\n  readonly type = USER_GROUP_UNASSIGN_ALL_MEMBERS;\n  constructor(\n    public payload: {\n      userId: string;\n      userGroupId: string;\n    }\n  ) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId);\n  }\n}\n\nexport class UnassignAllMembersFail extends StateUtils.EntityFailAction {\n  readonly type = USER_GROUP_UNASSIGN_ALL_MEMBERS_FAIL;\n  constructor(public payload: { userGroupId: string; error: any }) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId, payload.error);\n  }\n}\n\nexport class UnassignAllMembersSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = USER_GROUP_UNASSIGN_ALL_MEMBERS_SUCCESS;\n  constructor(public payload: UserGroup) {\n    super(USER_GROUP_ENTITIES, payload.uid ?? '', payload);\n  }\n}\n\nexport class UnassignPermission extends StateUtils.EntityLoadAction {\n  readonly type = USER_GROUP_UNASSIGN_PERMISSION;\n  constructor(\n    public payload: {\n      userId: string;\n      userGroupId: string;\n      permissionUid: string;\n    }\n  ) {\n    super(PERMISSION_ENTITIES, payload.permissionUid);\n  }\n}\n\nexport class UnassignPermissionFail extends StateUtils.EntityFailAction {\n  readonly type = USER_GROUP_UNASSIGN_PERMISSION_FAIL;\n  constructor(\n    public payload: {\n      userGroupId: string;\n      permissionUid: string;\n      error: any;\n    }\n  ) {\n    super(PERMISSION_ENTITIES, payload.permissionUid, payload.error);\n  }\n}\n\nexport class UnassignPermissionSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = USER_GROUP_UNASSIGN_PERMISSION_SUCCESS;\n  constructor(public payload: { permissionUid: string; selected: boolean }) {\n    super(PERMISSION_ENTITIES, payload.permissionUid, payload);\n  }\n}\n\nexport type UserGroupAction =\n  | LoadUserGroup\n  | LoadUserGroupFail\n  | LoadUserGroupSuccess\n  | LoadUserGroups\n  | LoadUserGroupsFail\n  | LoadUserGroupsSuccess\n  | LoadPermissions\n  | LoadPermissionsFail\n  | LoadPermissionsSuccess\n  | LoadAvailableOrgCustomers\n  | LoadAvailableOrgCustomersFail\n  | LoadAvailableOrgCustomersSuccess\n  | CreateUserGroup\n  | CreateUserGroupFail\n  | CreateUserGroupSuccess\n  | AssignMember\n  | AssignMemberFail\n  | AssignMemberSuccess\n  | AssignPermission\n  | AssignPermissionFail\n  | AssignPermissionSuccess\n  | UpdateUserGroup\n  | UpdateUserGroupFail\n  | UpdateUserGroupSuccess\n  | DeleteUserGroup\n  | DeleteUserGroupFail\n  | DeleteUserGroupSuccess\n  | UnassignMember\n  | UnassignMemberFail\n  | UnassignMemberSuccess\n  | UnassignAllMembers\n  | UnassignAllMembersFail\n  | UnassignAllMembersSuccess\n  | UnassignPermission\n  | UnassignPermissionFail\n  | UnassignPermissionSuccess;\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ListModel,\n  OrderApprovalPermissionType,\n  SearchConfig,\n  StateUtils,\n} from '@spartacus/core';\nimport { Permission } from '../../model/permission.model';\nimport {\n  PERMISSION_ENTITIES,\n  PERMISSION_LIST,\n  PERMISSION_TYPES,\n  PERMISSION_TYPES_LIST,\n} from '../organization-state';\n\nexport const LOAD_PERMISSION = '[Permission] Load Permission Data';\nexport const LOAD_PERMISSION_FAIL = '[Permission] Load Permission Data Fail';\nexport const LOAD_PERMISSION_SUCCESS =\n  '[Permission] Load Permission Data Success';\n\nexport const LOAD_PERMISSIONS = '[Permission] Load Permissions';\nexport const LOAD_PERMISSIONS_FAIL = '[Permission] Load Permissions Fail';\nexport const LOAD_PERMISSIONS_SUCCESS = '[Permission] Load Permissions Success';\n\nexport const CREATE_PERMISSION = '[Permission] Create Permission';\nexport const CREATE_PERMISSION_FAIL = '[Permission] Create Permission Fail';\nexport const CREATE_PERMISSION_SUCCESS =\n  '[Permission] Create Permission Success';\n\nexport const UPDATE_PERMISSION = '[Permission] Update Permission';\nexport const UPDATE_PERMISSION_FAIL = '[Permission] Update Permission Fail';\nexport const UPDATE_PERMISSION_SUCCESS =\n  '[Permission] Update Permission Success';\n\nexport const LOAD_PERMISSION_TYPES = '[Permission Types] Load Permission Types';\nexport const LOAD_PERMISSION_TYPES_FAIL =\n  '[Permission Types] Load Permission Types Fail';\nexport const LOAD_PERMISSION_TYPES_SUCCESS =\n  '[Permission Types] Load Permission Types Success';\n\nexport class LoadPermission extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_PERMISSION;\n  constructor(public payload: { userId: string; permissionCode: string }) {\n    super(PERMISSION_ENTITIES, payload.permissionCode);\n  }\n}\n\nexport class LoadPermissionFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_PERMISSION_FAIL;\n  constructor(public payload: { permissionCode: string; error: any }) {\n    super(PERMISSION_ENTITIES, payload.permissionCode, payload.error);\n  }\n}\n\nexport class LoadPermissionSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_PERMISSION_SUCCESS;\n  constructor(public payload: Permission | Permission[]) {\n    super(\n      PERMISSION_ENTITIES,\n      Array.isArray(payload)\n        ? payload.map((permission) => permission?.code ?? '')\n        : payload?.code ?? ''\n    );\n  }\n}\n\nexport class LoadPermissions extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_PERMISSIONS;\n  constructor(\n    public payload: {\n      userId: string;\n      params: SearchConfig;\n    }\n  ) {\n    super(PERMISSION_LIST, StateUtils.serializeSearchConfig(payload.params));\n  }\n}\n\nexport class LoadPermissionsFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_PERMISSIONS_FAIL;\n  constructor(public payload: { params: SearchConfig; error: any }) {\n    super(\n      PERMISSION_LIST,\n      StateUtils.serializeSearchConfig(payload.params),\n      payload.error\n    );\n  }\n}\n\nexport class LoadPermissionsSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_PERMISSIONS_SUCCESS;\n  constructor(\n    public payload: {\n      page: ListModel;\n      params: SearchConfig;\n    }\n  ) {\n    super(PERMISSION_LIST, StateUtils.serializeSearchConfig(payload.params));\n  }\n}\n\nexport class CreatePermission extends StateUtils.EntityLoadAction {\n  readonly type = CREATE_PERMISSION;\n  constructor(public payload: { userId: string; permission: Permission }) {\n    super(PERMISSION_ENTITIES, payload.permission.code ?? null);\n  }\n}\n\nexport class CreatePermissionFail extends StateUtils.EntityFailAction {\n  readonly type = CREATE_PERMISSION_FAIL;\n  constructor(public payload: { permissionCode: string; error: any }) {\n    super(PERMISSION_ENTITIES, payload.permissionCode, payload.error);\n  }\n}\n\nexport class CreatePermissionSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = CREATE_PERMISSION_SUCCESS;\n  constructor(public payload: Permission) {\n    super(PERMISSION_ENTITIES, payload.code ?? null, payload);\n  }\n}\n\nexport class UpdatePermission extends StateUtils.EntityLoadAction {\n  readonly type = UPDATE_PERMISSION;\n  constructor(\n    public payload: {\n      userId: string;\n      permissionCode: string;\n      permission: Permission;\n    }\n  ) {\n    super(PERMISSION_ENTITIES, payload.permission.code ?? '');\n  }\n}\n\nexport class UpdatePermissionFail extends StateUtils.EntityFailAction {\n  readonly type = UPDATE_PERMISSION_FAIL;\n  constructor(public payload: { permissionCode: string; error: any }) {\n    super(PERMISSION_ENTITIES, payload.permissionCode, payload.error);\n  }\n}\n\nexport class UpdatePermissionSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = UPDATE_PERMISSION_SUCCESS;\n  constructor(public payload: Permission) {\n    super(PERMISSION_ENTITIES, payload.code ?? '', payload);\n  }\n}\n\nexport class LoadPermissionTypes extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_PERMISSION_TYPES;\n  constructor() {\n    super(PERMISSION_TYPES_LIST, PERMISSION_TYPES);\n  }\n}\n\nexport class LoadPermissionTypesFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_PERMISSION_TYPES_FAIL;\n  constructor(public payload: any) {\n    super(PERMISSION_TYPES_LIST, PERMISSION_TYPES, payload.error);\n  }\n}\n\nexport class LoadPermissionTypesSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_PERMISSION_TYPES_SUCCESS;\n  constructor(public payload: OrderApprovalPermissionType[]) {\n    super(PERMISSION_TYPES_LIST, PERMISSION_TYPES);\n  }\n}\n\nexport type PermissionAction =\n  | LoadPermission\n  | LoadPermissionFail\n  | LoadPermissionSuccess\n  | LoadPermissions\n  | LoadPermissionsFail\n  | LoadPermissionsSuccess\n  | CreatePermission\n  | CreatePermissionFail\n  | CreatePermissionSuccess\n  | UpdatePermission\n  | UpdatePermissionFail\n  | UpdatePermissionSuccess\n  | LoadPermissionTypes\n  | LoadPermissionTypesFail\n  | LoadPermissionTypesSuccess;\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  CostCenter,\n  ListModel,\n  SearchConfig,\n  StateUtils,\n} from '@spartacus/core';\nimport {\n  BUDGET_ENTITIES,\n  COST_CENTER_ASSIGNED_BUDGETS,\n  COST_CENTER_ENTITIES,\n  COST_CENTER_LIST,\n} from '../organization-state';\n\nexport const LOAD_COST_CENTER = '[CostCenter] Load CostCenter Data';\nexport const LOAD_COST_CENTER_FAIL = '[CostCenter] Load CostCenter Data Fail';\nexport const LOAD_COST_CENTER_SUCCESS =\n  '[CostCenter] Load CostCenter Data Success';\n\nexport const LOAD_COST_CENTERS = '[CostCenter] Load CostCenters';\nexport const LOAD_COST_CENTERS_FAIL = '[CostCenter] Load CostCenters Fail';\nexport const LOAD_COST_CENTERS_SUCCESS =\n  '[CostCenter] Load CostCenters Success';\n\nexport const CREATE_COST_CENTER = '[CostCenter] Create CostCenter';\nexport const CREATE_COST_CENTER_FAIL = '[CostCenter] Create CostCenter Fail';\nexport const CREATE_COST_CENTER_SUCCESS =\n  '[CostCenter] Create CostCenter Success';\n\nexport const UPDATE_COST_CENTER = '[CostCenter] Update CostCenter';\nexport const UPDATE_COST_CENTER_FAIL = '[CostCenter] Update CostCenter Fail';\nexport const UPDATE_COST_CENTER_SUCCESS =\n  '[CostCenter] Update CostCenter Success';\n\nexport const LOAD_ASSIGNED_BUDGETS = '[CostCenter] Load Budgets';\nexport const LOAD_ASSIGNED_BUDGETS_SUCCESS =\n  '[CostCenter] Load Budgets success';\nexport const LOAD_ASSIGNED_BUDGETS_FAIL = '[CostCenter] Load Budgets fail';\n\nexport const ASSIGN_BUDGET = '[CostCenter] Assign Budget';\nexport const ASSIGN_BUDGET_SUCCESS = '[CostCenter] Assign Budget success';\nexport const ASSIGN_BUDGET_FAIL = '[CostCenter] Assign Budget fail';\n\nexport const UNASSIGN_BUDGET = '[CostCenter] Unassign Budget';\nexport const UNASSIGN_BUDGET_SUCCESS = '[CostCenter] Unassign Budget success';\nexport const UNASSIGN_BUDGET_FAIL = '[CostCenter] Unassign Budget fail';\n\nexport class LoadCostCenter extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_COST_CENTER;\n  constructor(public payload: { userId: string; costCenterCode: string }) {\n    super(COST_CENTER_ENTITIES, payload.costCenterCode);\n  }\n}\n\nexport class LoadCostCenterFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_COST_CENTER_FAIL;\n  constructor(public payload: { costCenterCode: string; error: any }) {\n    super(COST_CENTER_ENTITIES, payload.costCenterCode, payload.error);\n  }\n}\n\nexport class LoadCostCenterSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_COST_CENTER_SUCCESS;\n  constructor(public payload: CostCenter | CostCenter[]) {\n    super(\n      COST_CENTER_ENTITIES,\n      Array.isArray(payload)\n        ? payload.map((costCenter) => costCenter?.code ?? '')\n        : payload?.code ?? ''\n    );\n  }\n}\n\nexport class LoadCostCenters extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_COST_CENTERS;\n  constructor(\n    public payload: {\n      userId: string;\n      params: SearchConfig;\n    }\n  ) {\n    super(COST_CENTER_LIST, StateUtils.serializeSearchConfig(payload.params));\n  }\n}\n\nexport class LoadCostCentersFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_COST_CENTERS_FAIL;\n  constructor(public payload: { params: SearchConfig; error: any }) {\n    super(\n      COST_CENTER_LIST,\n      StateUtils.serializeSearchConfig(payload.params),\n      payload.error\n    );\n  }\n}\n\nexport class LoadCostCentersSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_COST_CENTERS_SUCCESS;\n  constructor(\n    public payload: {\n      page: ListModel;\n      params: SearchConfig;\n    }\n  ) {\n    super(COST_CENTER_LIST, StateUtils.serializeSearchConfig(payload.params));\n  }\n}\n\nexport class CreateCostCenter extends StateUtils.EntityLoadAction {\n  readonly type = CREATE_COST_CENTER;\n  constructor(public payload: { userId: string; costCenter: CostCenter }) {\n    super(COST_CENTER_ENTITIES, payload.costCenter.code ?? null);\n  }\n}\n\nexport class CreateCostCenterFail extends StateUtils.EntityFailAction {\n  readonly type = CREATE_COST_CENTER_FAIL;\n  constructor(public payload: { costCenterCode: string; error: any }) {\n    super(COST_CENTER_ENTITIES, payload.costCenterCode, payload.error);\n  }\n}\n\nexport class CreateCostCenterSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = CREATE_COST_CENTER_SUCCESS;\n  constructor(public payload: CostCenter) {\n    super(COST_CENTER_ENTITIES, payload.code ?? null, payload);\n  }\n}\n\nexport class UpdateCostCenter extends StateUtils.EntityLoadAction {\n  readonly type = UPDATE_COST_CENTER;\n  constructor(\n    public payload: {\n      userId: string;\n      costCenterCode: string;\n      costCenter: CostCenter;\n    }\n  ) {\n    super(COST_CENTER_ENTITIES, payload.costCenter.code ?? '');\n  }\n}\n\nexport class UpdateCostCenterFail extends StateUtils.EntityFailAction {\n  readonly type = UPDATE_COST_CENTER_FAIL;\n  constructor(public payload: { costCenterCode: string; error: any }) {\n    super(COST_CENTER_ENTITIES, payload.costCenterCode, payload.error);\n  }\n}\n\nexport class UpdateCostCenterSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = UPDATE_COST_CENTER_SUCCESS;\n  constructor(public payload: CostCenter) {\n    super(COST_CENTER_ENTITIES, payload.code ?? '', payload);\n  }\n}\n\nexport class LoadAssignedBudgets extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_ASSIGNED_BUDGETS;\n  constructor(\n    public payload: {\n      userId: string;\n      costCenterCode: string;\n      params: SearchConfig;\n    }\n  ) {\n    super(\n      COST_CENTER_ASSIGNED_BUDGETS,\n      StateUtils.serializeSearchConfig(payload.params, payload.costCenterCode)\n    );\n  }\n}\n\nexport class LoadAssignedBudgetsFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_ASSIGNED_BUDGETS_FAIL;\n  constructor(\n    public payload: {\n      costCenterCode: string;\n      params: SearchConfig;\n      error: any;\n    }\n  ) {\n    super(\n      COST_CENTER_ASSIGNED_BUDGETS,\n      StateUtils.serializeSearchConfig(payload.params, payload.costCenterCode),\n      payload.error\n    );\n  }\n}\n\nexport class LoadAssignedBudgetsSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_ASSIGNED_BUDGETS_SUCCESS;\n  constructor(\n    public payload: {\n      costCenterCode: string;\n      page: ListModel;\n      params: SearchConfig;\n    }\n  ) {\n    super(\n      COST_CENTER_ASSIGNED_BUDGETS,\n      StateUtils.serializeSearchConfig(payload.params, payload.costCenterCode)\n    );\n  }\n}\n\nexport class AssignBudget extends StateUtils.EntityLoadAction {\n  readonly type = ASSIGN_BUDGET;\n  constructor(\n    public payload: {\n      userId: string;\n      costCenterCode: string;\n      budgetCode: string;\n    }\n  ) {\n    super(BUDGET_ENTITIES, payload.budgetCode);\n  }\n}\n\nexport class AssignBudgetFail extends StateUtils.EntityFailAction {\n  readonly type = ASSIGN_BUDGET_FAIL;\n  constructor(public payload: { budgetCode: string; error: any }) {\n    super(BUDGET_ENTITIES, payload.budgetCode, payload.error);\n  }\n}\n\nexport class AssignBudgetSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = ASSIGN_BUDGET_SUCCESS;\n  constructor(public payload: { code: string; selected: boolean }) {\n    super(BUDGET_ENTITIES, payload.code, payload);\n  }\n}\n\nexport class UnassignBudget extends StateUtils.EntityLoadAction {\n  readonly type = UNASSIGN_BUDGET;\n  constructor(\n    public payload: {\n      userId: string;\n      costCenterCode: string;\n      budgetCode: string;\n    }\n  ) {\n    super(BUDGET_ENTITIES, payload.budgetCode);\n  }\n}\n\nexport class UnassignBudgetFail extends StateUtils.EntityFailAction {\n  readonly type = UNASSIGN_BUDGET_FAIL;\n  constructor(public payload: { budgetCode: string; error: any }) {\n    super(BUDGET_ENTITIES, payload.budgetCode, payload.error);\n  }\n}\n\nexport class UnassignBudgetSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = UNASSIGN_BUDGET_SUCCESS;\n  constructor(public payload: { code: string; selected: boolean }) {\n    super(BUDGET_ENTITIES, payload.code, payload);\n  }\n}\n\nexport type CostCenterAction =\n  | LoadCostCenter\n  | LoadCostCenterFail\n  | LoadCostCenterSuccess\n  | LoadCostCenters\n  | LoadCostCentersFail\n  | LoadCostCentersSuccess\n  | CreateCostCenter\n  | CreateCostCenterFail\n  | CreateCostCenterSuccess\n  | UpdateCostCenter\n  | UpdateCostCenterFail\n  | UpdateCostCenterSuccess\n  | LoadAssignedBudgets\n  | LoadAssignedBudgetsSuccess\n  | LoadAssignedBudgetsFail\n  | AssignBudget\n  | AssignBudgetFail\n  | AssignBudgetSuccess\n  | UnassignBudget\n  | UnassignBudgetFail\n  | UnassignBudgetSuccess;\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { B2BUser, ListModel, SearchConfig, StateUtils } from '@spartacus/core';\nimport {\n  B2B_USER_APPROVERS,\n  B2B_USER_ENTITIES,\n  B2B_USER_PERMISSIONS,\n  B2B_USER_USER_GROUPS,\n  PERMISSION_ENTITIES,\n  USER_GROUP_ENTITIES,\n  USER_LIST,\n} from '../organization-state';\n\nexport const LOAD_B2B_USER = '[B2BUser] Load B2BUser Data';\nexport const LOAD_B2B_USER_FAIL = '[B2BUser] Load B2BUser Data Fail';\nexport const LOAD_B2B_USER_SUCCESS = '[B2BUser] Load B2BUser Data Success';\n\nexport const CREATE_B2B_USER = '[B2BUser] Create B2BUser Data';\nexport const CREATE_B2B_USER_FAIL = '[B2BUser] Create B2BUser Data Fail';\nexport const CREATE_B2B_USER_SUCCESS = '[B2BUser] Create B2BUser Data Success';\n\nexport const UPDATE_B2B_USER = '[B2BUser] Update B2BUser Data';\nexport const UPDATE_B2B_USER_FAIL = '[B2BUser] Update B2BUser Data Fail';\nexport const UPDATE_B2B_USER_SUCCESS = '[B2BUser] Update B2BUser Data Success';\n\nexport const LOAD_B2B_USERS = '[B2BUser] Load B2BUsers';\nexport const LOAD_B2B_USERS_FAIL = '[B2BUser] Load B2BUsers Fail';\nexport const LOAD_B2B_USERS_SUCCESS = '[B2BUser] Load B2BUsers Success';\n\nexport const LOAD_B2B_USER_APPROVERS = '[B2BUser] Load B2BUser Approvers';\nexport const LOAD_B2B_USER_APPROVERS_FAIL =\n  '[B2BUser] Load B2BUser Approvers Fail';\nexport const LOAD_B2B_USER_APPROVERS_SUCCESS =\n  '[B2BUser] Load B2BUser Approvers Success';\n\nexport const ASSIGN_B2B_USER_APPROVER = '[B2BUser] Assign B2BUser Approver';\nexport const ASSIGN_B2B_USER_APPROVER_FAIL =\n  '[B2BUser] Assign B2BUser Approver Fail';\nexport const ASSIGN_B2B_USER_APPROVER_SUCCESS =\n  '[B2BUser] Assign B2BUser Approver Success';\n\nexport const UNASSIGN_B2B_USER_APPROVER = '[B2BUser] Unassign B2BUser Approver';\nexport const UNASSIGN_B2B_USER_APPROVER_FAIL =\n  '[B2BUser] Unassign B2BUser Approver Fail';\nexport const UNASSIGN_B2B_USER_APPROVER_SUCCESS =\n  '[B2BUser] Unassign B2BUser Approver Success';\n\nexport const LOAD_B2B_USER_PERMISSIONS = '[B2BUser] Load B2BUser Permissions';\nexport const LOAD_B2B_USER_PERMISSIONS_FAIL =\n  '[B2BUser] Load B2BUser Permissions Fail';\nexport const LOAD_B2B_USER_PERMISSIONS_SUCCESS =\n  '[B2BUser] Load B2BUser Permissions Success';\n\nexport const ASSIGN_B2B_USER_PERMISSION = '[B2BUser] Assign B2BUser Permission';\nexport const ASSIGN_B2B_USER_PERMISSION_FAIL =\n  '[B2BUser] Assign B2BUser Permission Fail';\nexport const ASSIGN_B2B_USER_PERMISSION_SUCCESS =\n  '[B2BUser] Assign B2BUser Permission Success';\n\nexport const UNASSIGN_B2B_USER_PERMISSION =\n  '[B2BUser] Unassign B2BUser Permission';\nexport const UNASSIGN_B2B_USER_PERMISSION_FAIL =\n  '[B2BUser] Unassign B2BUser Permission Fail';\nexport const UNASSIGN_B2B_USER_PERMISSION_SUCCESS =\n  '[B2BUser] Unassign B2BUser Permission Success';\n\nexport const LOAD_B2B_USER_USER_GROUPS = '[B2BUser] Load B2BUser User Groups';\nexport const LOAD_B2B_USER_USER_GROUPS_FAIL =\n  '[B2BUser] Load B2BUser User Groups Fail';\nexport const LOAD_B2B_USER_USER_GROUPS_SUCCESS =\n  '[B2BUser] Load B2BUser User Groups Success';\n\nexport const ASSIGN_B2B_USER_USER_GROUP = '[B2BUser] Assign B2BUser User Group';\nexport const ASSIGN_B2B_USER_USER_GROUP_FAIL =\n  '[B2BUser] Assign B2BUser User Group Fail';\nexport const ASSIGN_B2B_USER_USER_GROUP_SUCCESS =\n  '[B2BUser] Assign B2BUser User Group Success';\n\nexport const UNASSIGN_B2B_USER_USER_GROUP =\n  '[B2BUser] Unassign B2BUser User Group';\nexport const UNASSIGN_B2B_USER_USER_GROUP_FAIL =\n  '[B2BUser] Unassign B2BUser User Group Fail';\nexport const UNASSIGN_B2B_USER_USER_GROUP_SUCCESS =\n  '[B2BUser] Unassign B2BUser User Group Success';\n\nexport class LoadB2BUser extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_B2B_USER;\n  constructor(public payload: { userId: string; orgCustomerId: string }) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId);\n  }\n}\n\nexport class LoadB2BUserFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_B2B_USER_FAIL;\n  constructor(public payload: { orgCustomerId: string; error: any }) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId, payload.error);\n  }\n}\n\nexport class LoadB2BUserSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_B2B_USER_SUCCESS;\n  constructor(public payload: B2BUser | B2BUser[]) {\n    super(\n      B2B_USER_ENTITIES,\n      Array.isArray(payload)\n        ? payload.map((orgUnitCustomer) => orgUnitCustomer?.customerId ?? '')\n        : payload?.customerId ?? ''\n    );\n  }\n}\n\nexport class CreateB2BUser extends StateUtils.EntityLoadAction {\n  readonly type = CREATE_B2B_USER;\n  constructor(public payload: { userId: string; orgCustomer: B2BUser }) {\n    super(B2B_USER_ENTITIES, payload.orgCustomer.customerId ?? null);\n  }\n}\n\nexport class CreateB2BUserFail extends StateUtils.EntityFailAction {\n  readonly type = CREATE_B2B_USER_FAIL;\n  constructor(public payload: { orgCustomerId: string; error: any }) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId, payload.error);\n  }\n}\n\nexport class CreateB2BUserSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = CREATE_B2B_USER_SUCCESS;\n  constructor(public payload: B2BUser) {\n    super(B2B_USER_ENTITIES, payload.customerId ?? null, payload);\n  }\n}\n\nexport class UpdateB2BUser extends StateUtils.EntityLoadAction {\n  readonly type = UPDATE_B2B_USER;\n  constructor(\n    public payload: {\n      userId: string;\n      orgCustomerId: string;\n      orgCustomer: B2BUser;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.orgCustomer.customerId ?? '');\n  }\n}\n\nexport class UpdateB2BUserFail extends StateUtils.EntityFailAction {\n  readonly type = UPDATE_B2B_USER_FAIL;\n  constructor(public payload: { orgCustomerId: string; error: any }) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId, payload.error);\n  }\n}\n\nexport class UpdateB2BUserSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = UPDATE_B2B_USER_SUCCESS;\n  constructor(public payload: B2BUser) {\n    super(B2B_USER_ENTITIES, payload.customerId ?? '', payload);\n  }\n}\n\nexport class LoadB2BUsers extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_B2B_USERS;\n  constructor(\n    public payload: {\n      userId: string;\n      params: SearchConfig;\n    }\n  ) {\n    super(USER_LIST, StateUtils.serializeSearchConfig(payload.params));\n  }\n}\n\nexport class LoadB2BUsersFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_B2B_USERS_FAIL;\n  constructor(public payload: { params: SearchConfig; error: any }) {\n    super(\n      USER_LIST,\n      StateUtils.serializeSearchConfig(payload.params),\n      payload.error\n    );\n  }\n}\n\nexport class LoadB2BUsersSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_B2B_USERS_SUCCESS;\n  constructor(\n    public payload: {\n      page: ListModel;\n      params: SearchConfig;\n    }\n  ) {\n    super(USER_LIST, StateUtils.serializeSearchConfig(payload.params));\n  }\n}\n\nexport class LoadB2BUserApprovers extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_B2B_USER_APPROVERS;\n  constructor(\n    public payload: {\n      userId: string;\n      orgCustomerId: string;\n      params: SearchConfig;\n    }\n  ) {\n    super(\n      B2B_USER_APPROVERS,\n      StateUtils.serializeSearchConfig(payload.params, payload.orgCustomerId)\n    );\n  }\n}\n\nexport class LoadB2BUserApproversFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_B2B_USER_APPROVERS_FAIL;\n  constructor(\n    public payload: {\n      orgCustomerId: string;\n      params: SearchConfig;\n      error: any;\n    }\n  ) {\n    super(\n      B2B_USER_APPROVERS,\n      StateUtils.serializeSearchConfig(payload.params, payload.orgCustomerId),\n      payload.error\n    );\n  }\n}\n\nexport class LoadB2BUserApproversSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_B2B_USER_APPROVERS_SUCCESS;\n  constructor(\n    public payload: {\n      orgCustomerId: string;\n      page: ListModel;\n      params: SearchConfig;\n    }\n  ) {\n    super(\n      B2B_USER_APPROVERS,\n      StateUtils.serializeSearchConfig(payload.params, payload.orgCustomerId)\n    );\n  }\n}\n\nexport class AssignB2BUserApprover extends StateUtils.EntityLoadAction {\n  readonly type = ASSIGN_B2B_USER_APPROVER;\n  constructor(\n    public payload: {\n      userId: string;\n      orgCustomerId: string;\n      approverId: string;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.approverId);\n  }\n}\n\nexport class AssignB2BUserApproverFail extends StateUtils.EntityFailAction {\n  readonly type = ASSIGN_B2B_USER_APPROVER_FAIL;\n  constructor(\n    public payload: {\n      orgCustomerId: string;\n      approverId: string;\n      error: any;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.approverId);\n  }\n}\n\nexport class AssignB2BUserApproverSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = ASSIGN_B2B_USER_APPROVER_SUCCESS;\n  constructor(\n    public payload: {\n      approverId: string;\n      selected: boolean;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.approverId, payload);\n  }\n}\n\nexport class UnassignB2BUserApprover extends StateUtils.EntityLoadAction {\n  readonly type = UNASSIGN_B2B_USER_APPROVER;\n  constructor(\n    public payload: {\n      userId: string;\n      orgCustomerId: string;\n      approverId: string;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.approverId);\n  }\n}\n\nexport class UnassignB2BUserApproverFail extends StateUtils.EntityFailAction {\n  readonly type = UNASSIGN_B2B_USER_APPROVER_FAIL;\n  constructor(\n    public payload: {\n      orgCustomerId: string;\n      approverId: string;\n      error: any;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.approverId);\n  }\n}\n\nexport class UnassignB2BUserApproverSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = UNASSIGN_B2B_USER_APPROVER_SUCCESS;\n  constructor(\n    public payload: {\n      approverId: string;\n      selected: boolean;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.approverId, payload);\n  }\n}\n\nexport class LoadB2BUserPermissions extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_B2B_USER_PERMISSIONS;\n  constructor(\n    public payload: {\n      userId: string;\n      orgCustomerId: string;\n      params: SearchConfig;\n    }\n  ) {\n    super(\n      B2B_USER_PERMISSIONS,\n      StateUtils.serializeSearchConfig(payload.params, payload.orgCustomerId)\n    );\n  }\n}\n\nexport class LoadB2BUserPermissionsFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_B2B_USER_PERMISSIONS_FAIL;\n  constructor(\n    public payload: {\n      orgCustomerId: string;\n      params: SearchConfig;\n      error: any;\n    }\n  ) {\n    super(B2B_USER_PERMISSIONS, payload.orgCustomerId, payload.error);\n  }\n}\n\nexport class LoadB2BUserPermissionsSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_B2B_USER_PERMISSIONS_SUCCESS;\n  constructor(\n    public payload: {\n      orgCustomerId: string;\n      page: ListModel;\n      params: SearchConfig;\n    }\n  ) {\n    super(\n      B2B_USER_PERMISSIONS,\n      StateUtils.serializeSearchConfig(payload.params, payload.orgCustomerId)\n    );\n  }\n}\n\nexport class AssignB2BUserPermission extends StateUtils.EntityLoadAction {\n  readonly type = ASSIGN_B2B_USER_PERMISSION;\n  constructor(\n    public payload: {\n      userId: string;\n      orgCustomerId: string;\n      permissionId: string;\n    }\n  ) {\n    super(PERMISSION_ENTITIES, payload.permissionId);\n  }\n}\n\nexport class AssignB2BUserPermissionFail extends StateUtils.EntityFailAction {\n  readonly type = ASSIGN_B2B_USER_PERMISSION_FAIL;\n  constructor(\n    public payload: {\n      orgCustomerId: string;\n      permissionId: string;\n      error: any;\n    }\n  ) {\n    super(PERMISSION_ENTITIES, payload.permissionId, payload.error);\n  }\n}\n\nexport class AssignB2BUserPermissionSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = ASSIGN_B2B_USER_PERMISSION_SUCCESS;\n  constructor(\n    public payload: {\n      permissionId: string;\n      selected: boolean;\n    }\n  ) {\n    super(PERMISSION_ENTITIES, payload.permissionId, payload);\n  }\n}\n\nexport class UnassignB2BUserPermission extends StateUtils.EntityLoadAction {\n  readonly type = UNASSIGN_B2B_USER_PERMISSION;\n  constructor(\n    public payload: {\n      userId: string;\n      orgCustomerId: string;\n      permissionId: string;\n    }\n  ) {\n    super(PERMISSION_ENTITIES, payload.permissionId);\n  }\n}\n\nexport class UnassignB2BUserPermissionFail extends StateUtils.EntityFailAction {\n  readonly type = UNASSIGN_B2B_USER_PERMISSION_FAIL;\n  constructor(\n    public payload: {\n      orgCustomerId: string;\n      permissionId: string;\n      error: any;\n    }\n  ) {\n    super(PERMISSION_ENTITIES, payload.permissionId, payload.error);\n  }\n}\n\nexport class UnassignB2BUserPermissionSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = UNASSIGN_B2B_USER_PERMISSION_SUCCESS;\n  constructor(\n    public payload: {\n      permissionId: string;\n      selected: boolean;\n    }\n  ) {\n    super(PERMISSION_ENTITIES, payload.permissionId, payload);\n  }\n}\n\nexport class LoadB2BUserUserGroups extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_B2B_USER_USER_GROUPS;\n  constructor(\n    public payload: {\n      userId: string;\n      orgCustomerId: string;\n      params: SearchConfig;\n    }\n  ) {\n    super(\n      B2B_USER_USER_GROUPS,\n      StateUtils.serializeSearchConfig(payload.params, payload.orgCustomerId)\n    );\n  }\n}\n\nexport class LoadB2BUserUserGroupsFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_B2B_USER_USER_GROUPS_FAIL;\n  constructor(\n    public payload: {\n      orgCustomerId: string;\n      params: SearchConfig;\n      error: any;\n    }\n  ) {\n    super(\n      B2B_USER_USER_GROUPS,\n      StateUtils.serializeSearchConfig(payload.params, payload.orgCustomerId),\n      payload.error\n    );\n  }\n}\n\nexport class LoadB2BUserUserGroupsSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_B2B_USER_USER_GROUPS_SUCCESS;\n  constructor(\n    public payload: {\n      orgCustomerId: string;\n      page: ListModel;\n      params: SearchConfig;\n    }\n  ) {\n    super(\n      B2B_USER_USER_GROUPS,\n      StateUtils.serializeSearchConfig(payload.params, payload.orgCustomerId)\n    );\n  }\n}\n\nexport class AssignB2BUserUserGroup extends StateUtils.EntityLoadAction {\n  readonly type = ASSIGN_B2B_USER_USER_GROUP;\n  constructor(\n    public payload: {\n      userId: string;\n      orgCustomerId: string;\n      userGroupId: string;\n    }\n  ) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId);\n  }\n}\n\nexport class AssignB2BUserUserGroupFail extends StateUtils.EntityFailAction {\n  readonly type = ASSIGN_B2B_USER_USER_GROUP_FAIL;\n  constructor(\n    public payload: {\n      orgCustomerId: string;\n      userGroupId: string;\n      error: any;\n    }\n  ) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId, payload.error);\n  }\n}\n\nexport class AssignB2BUserUserGroupSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = ASSIGN_B2B_USER_USER_GROUP_SUCCESS;\n  constructor(\n    public payload: {\n      uid: string;\n      selected: boolean;\n    }\n  ) {\n    super(USER_GROUP_ENTITIES, payload.uid, payload);\n  }\n}\n\nexport class UnassignB2BUserUserGroup extends StateUtils.EntityLoadAction {\n  readonly type = UNASSIGN_B2B_USER_USER_GROUP;\n  constructor(\n    public payload: {\n      userId: string;\n      orgCustomerId: string;\n      userGroupId: string;\n    }\n  ) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId);\n  }\n}\n\nexport class UnassignB2BUserUserGroupFail extends StateUtils.EntityFailAction {\n  readonly type = UNASSIGN_B2B_USER_USER_GROUP_FAIL;\n  constructor(\n    public payload: {\n      orgCustomerId: string;\n      userGroupId: string;\n      error: any;\n    }\n  ) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId, payload.error);\n  }\n}\n\nexport class UnassignB2BUserUserGroupSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = UNASSIGN_B2B_USER_USER_GROUP_SUCCESS;\n  constructor(\n    public payload: {\n      uid: string;\n      selected: boolean;\n    }\n  ) {\n    super(USER_GROUP_ENTITIES, payload.uid, payload);\n  }\n}\n\nexport type B2BUserAction =\n  | LoadB2BUser\n  | LoadB2BUserFail\n  | LoadB2BUserSuccess\n  | CreateB2BUser\n  | CreateB2BUserFail\n  | CreateB2BUserSuccess\n  | UpdateB2BUser\n  | UpdateB2BUserFail\n  | UpdateB2BUserSuccess\n  | LoadB2BUsers\n  | LoadB2BUsersFail\n  | LoadB2BUsersSuccess\n  | LoadB2BUserApprovers\n  | LoadB2BUserApproversFail\n  | LoadB2BUserApproversSuccess\n  | AssignB2BUserApprover\n  | AssignB2BUserApproverFail\n  | AssignB2BUserApproverSuccess\n  | UnassignB2BUserApprover\n  | UnassignB2BUserApproverFail\n  | UnassignB2BUserApproverSuccess\n  | LoadB2BUserPermissions\n  | LoadB2BUserPermissionsFail\n  | LoadB2BUserPermissionsSuccess\n  | AssignB2BUserPermission\n  | AssignB2BUserPermissionFail\n  | AssignB2BUserPermissionSuccess\n  | UnassignB2BUserPermission\n  | UnassignB2BUserPermissionFail\n  | UnassignB2BUserPermissionSuccess\n  | LoadB2BUserUserGroups\n  | LoadB2BUserUserGroupsFail\n  | LoadB2BUserUserGroupsSuccess\n  | AssignB2BUserUserGroup\n  | AssignB2BUserUserGroupFail\n  | AssignB2BUserUserGroupSuccess\n  | UnassignB2BUserUserGroup\n  | UnassignB2BUserUserGroupFail\n  | UnassignB2BUserUserGroupSuccess;\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Action } from '@ngrx/store';\n\nexport const CLEAR_ORGANIZATION_DATA = '[Organization] Clear Data';\n\nexport class OrganizationClearData implements Action {\n  readonly type = CLEAR_ORGANIZATION_DATA;\n}\n\nexport type OrganizationAction = OrganizationClearData;\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as BudgetActions from './budget.action';\nimport * as OrgUnitActions from './org-unit.action';\nimport * as UserGroupActions from './user-group.action';\nimport * as PermissionActions from './permission.action';\nimport * as CostCenterActions from './cost-center.action';\nimport * as B2BUserActions from './b2b-user.action';\nimport * as OrganizationActions from './organization.action';\n\nexport {\n  BudgetActions,\n  OrgUnitActions,\n  UserGroupActions,\n  PermissionActions,\n  CostCenterActions,\n  B2BUserActions,\n  OrganizationActions,\n};\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { EntitiesModel, normalizeHttpError, StateUtils } from '@spartacus/core';\nimport { from, Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { BudgetConnector } from '../../connectors/budget/budget.connector';\nimport { Budget } from '../../model/budget.model';\nimport { BudgetActions, OrganizationActions } from '../actions/index';\n\n@Injectable()\nexport class BudgetEffects {\n  loadBudget$: Observable<\n    BudgetActions.LoadBudgetSuccess | BudgetActions.LoadBudgetFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(BudgetActions.LOAD_BUDGET),\n      map((action: BudgetActions.LoadBudget) => action.payload),\n      switchMap(({ userId, budgetCode }) => {\n        return this.budgetConnector.get(userId, budgetCode).pipe(\n          map((budget: Budget) => {\n            return new BudgetActions.LoadBudgetSuccess([budget]);\n          }),\n          catchError((error: HttpErrorResponse) =>\n            of(\n              new BudgetActions.LoadBudgetFail({\n                budgetCode,\n                error: normalizeHttpError(error),\n              })\n            )\n          )\n        );\n      })\n    )\n  );\n\n  loadBudgets$: Observable<\n    | BudgetActions.LoadBudgetsSuccess\n    | BudgetActions.LoadBudgetSuccess\n    | BudgetActions.LoadBudgetsFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(BudgetActions.LOAD_BUDGETS),\n      map((action: BudgetActions.LoadBudgets) => action.payload),\n      switchMap((payload) =>\n        this.budgetConnector.getList(payload.userId, payload.params).pipe(\n          switchMap((budgets: EntitiesModel<Budget>) => {\n            const { values, page } = StateUtils.normalizeListPage(\n              budgets,\n              'code'\n            );\n            return [\n              new BudgetActions.LoadBudgetSuccess(values),\n              new BudgetActions.LoadBudgetsSuccess({\n                page,\n                params: payload.params,\n              }),\n            ];\n          }),\n          catchError((error: HttpErrorResponse) =>\n            of(\n              new BudgetActions.LoadBudgetsFail({\n                params: payload.params,\n                error: normalizeHttpError(error),\n              })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  createBudget$: Observable<\n    | BudgetActions.CreateBudgetSuccess\n    | BudgetActions.CreateBudgetFail\n    | OrganizationActions.OrganizationClearData\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(BudgetActions.CREATE_BUDGET),\n      map((action: BudgetActions.CreateBudget) => action.payload),\n      switchMap((payload) =>\n        this.budgetConnector.create(payload.userId, payload.budget).pipe(\n          switchMap((data) => [\n            new BudgetActions.CreateBudgetSuccess(data),\n            new OrganizationActions.OrganizationClearData(),\n          ]),\n          catchError((error: HttpErrorResponse) =>\n            from([\n              new BudgetActions.CreateBudgetFail({\n                budgetCode: payload.budget.code ?? '',\n                error: normalizeHttpError(error),\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ])\n          )\n        )\n      )\n    )\n  );\n\n  updateBudget$: Observable<\n    | BudgetActions.UpdateBudgetSuccess\n    | BudgetActions.UpdateBudgetFail\n    | OrganizationActions.OrganizationClearData\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(BudgetActions.UPDATE_BUDGET),\n      map((action: BudgetActions.UpdateBudget) => action.payload),\n      switchMap((payload) =>\n        this.budgetConnector\n          .update(payload.userId, payload.budgetCode, payload.budget)\n          .pipe(\n            switchMap((data) => [\n              new BudgetActions.UpdateBudgetSuccess(data),\n              new OrganizationActions.OrganizationClearData(),\n            ]),\n            catchError((error: HttpErrorResponse) =>\n              from([\n                new BudgetActions.UpdateBudgetFail({\n                  budgetCode: payload.budget.code ?? '',\n                  error: normalizeHttpError(error),\n                }),\n                new OrganizationActions.OrganizationClearData(),\n              ])\n            )\n          )\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private budgetConnector: BudgetConnector\n  ) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport {\n  B2BApprovalProcess,\n  B2BUnit,\n  B2BUser,\n  EntitiesModel,\n  normalizeHttpError,\n  StateUtils,\n} from '@spartacus/core';\nimport { from, Observable, of } from 'rxjs';\nimport { catchError, groupBy, map, mergeMap, switchMap } from 'rxjs/operators';\nimport { OrgUnitConnector } from '../../connectors/org-unit/org-unit.connector';\nimport { B2BUnitNode } from '../../model/unit-node.model';\nimport {\n  B2BUserActions,\n  OrganizationActions,\n  OrgUnitActions,\n} from '../actions/index';\n\n@Injectable()\nexport class OrgUnitEffects {\n  loadOrgUnit$: Observable<\n    | OrgUnitActions.LoadOrgUnitSuccess\n    | OrgUnitActions.LoadAddressSuccess\n    | OrgUnitActions.LoadAddressesSuccess\n    | OrgUnitActions.LoadOrgUnitFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(OrgUnitActions.LOAD_ORG_UNIT),\n      map((action: OrgUnitActions.LoadOrgUnit) => action.payload),\n      switchMap(({ userId, orgUnitId }) => {\n        return this.orgUnitConnector.get(userId, orgUnitId).pipe(\n          switchMap((orgUnit: B2BUnit) => {\n            const { values, page } = StateUtils.normalizeListPage(\n              { values: orgUnit.addresses ?? [] },\n              'id'\n            );\n            return [\n              new OrgUnitActions.LoadOrgUnitSuccess([orgUnit]),\n              new OrgUnitActions.LoadAddressSuccess(values),\n              new OrgUnitActions.LoadAddressesSuccess({ page, orgUnitId }),\n            ];\n          }),\n          catchError((error: HttpErrorResponse) =>\n            of(\n              new OrgUnitActions.LoadOrgUnitFail({\n                orgUnitId,\n                error: normalizeHttpError(error),\n              })\n            )\n          )\n        );\n      })\n    )\n  );\n\n  loadAvailableOrgUnits$: Observable<\n    OrgUnitActions.LoadOrgUnitNodesSuccess | OrgUnitActions.LoadOrgUnitNodesFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(OrgUnitActions.LOAD_UNIT_NODES),\n      map((action: OrgUnitActions.LoadOrgUnitNodes) => action.payload),\n      switchMap((payload) =>\n        this.orgUnitConnector.getList(payload.userId).pipe(\n          map(\n            (orgUnitsList: B2BUnitNode[]) =>\n              new OrgUnitActions.LoadOrgUnitNodesSuccess(orgUnitsList)\n          ),\n          catchError((error: HttpErrorResponse) =>\n            of(\n              new OrgUnitActions.LoadOrgUnitNodesFail({\n                error: normalizeHttpError(error),\n              })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  createUnit$: Observable<\n    | OrgUnitActions.CreateUnitFail\n    | OrgUnitActions.CreateUnitSuccess\n    | OrganizationActions.OrganizationClearData\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(OrgUnitActions.CREATE_ORG_UNIT),\n      map((action: OrgUnitActions.CreateUnit) => action.payload),\n      switchMap((payload) =>\n        this.orgUnitConnector.create(payload.userId, payload.unit).pipe(\n          switchMap((data) => [\n            new OrgUnitActions.CreateUnitSuccess(data),\n            new OrganizationActions.OrganizationClearData(),\n          ]),\n          catchError((error: HttpErrorResponse) =>\n            from([\n              new OrgUnitActions.CreateUnitFail({\n                unitCode: payload.unit.uid ?? '',\n                error: normalizeHttpError(error),\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ])\n          )\n        )\n      )\n    )\n  );\n\n  updateUnit$: Observable<\n    | OrgUnitActions.UpdateUnitSuccess\n    | OrgUnitActions.UpdateUnitFail\n    | OrganizationActions.OrganizationClearData\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(OrgUnitActions.UPDATE_ORG_UNIT),\n      map((action: OrgUnitActions.UpdateUnit) => action.payload),\n      switchMap((payload) =>\n        this.orgUnitConnector\n          .update(payload.userId, payload.unitCode, payload.unit)\n          .pipe(\n            switchMap((_data) => [\n              // Workaround for empty response\n              new OrgUnitActions.UpdateUnitSuccess(payload.unit),\n              new OrganizationActions.OrganizationClearData(),\n            ]),\n            catchError((error: HttpErrorResponse) =>\n              from([\n                new OrgUnitActions.UpdateUnitFail({\n                  unitCode: payload.unit.uid ?? '',\n                  error: normalizeHttpError(error),\n                }),\n                new OrganizationActions.OrganizationClearData(),\n              ])\n            )\n          )\n      )\n    )\n  );\n\n  loadTree$: Observable<\n    OrgUnitActions.LoadTreeSuccess | OrgUnitActions.LoadTreeFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(OrgUnitActions.LOAD_UNIT_TREE),\n      map((action: OrgUnitActions.LoadOrgUnit) => action.payload),\n      switchMap(({ userId }) => {\n        return this.orgUnitConnector.getTree(userId).pipe(\n          map(\n            (orgUnit: B2BUnitNode) =>\n              new OrgUnitActions.LoadTreeSuccess(orgUnit)\n          ),\n          catchError((error: HttpErrorResponse) =>\n            of(\n              new OrgUnitActions.LoadTreeFail({\n                error: normalizeHttpError(error),\n              })\n            )\n          )\n        );\n      })\n    )\n  );\n\n  loadApprovalProcesses$: Observable<\n    | OrgUnitActions.LoadApprovalProcessesSuccess\n    | OrgUnitActions.LoadApprovalProcessesFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(OrgUnitActions.LOAD_APPROVAL_PROCESSES),\n      map((action: OrgUnitActions.LoadOrgUnit) => action.payload),\n      switchMap(({ userId }) => {\n        return this.orgUnitConnector.getApprovalProcesses(userId).pipe(\n          map(\n            (approvalProcesses: B2BApprovalProcess[]) =>\n              new OrgUnitActions.LoadApprovalProcessesSuccess(approvalProcesses)\n          ),\n          catchError((error: HttpErrorResponse) =>\n            of(\n              new OrgUnitActions.LoadApprovalProcessesFail({\n                error: normalizeHttpError(error),\n              })\n            )\n          )\n        );\n      })\n    )\n  );\n\n  loadUsers$: Observable<\n    | OrgUnitActions.LoadAssignedUsersSuccess\n    | OrgUnitActions.LoadAssignedUsersFail\n    | B2BUserActions.LoadB2BUserSuccess\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(OrgUnitActions.LOAD_ASSIGNED_USERS),\n      map((action: OrgUnitActions.LoadAssignedUsers) => action.payload),\n      groupBy(({ orgUnitId, roleId, params }) =>\n        StateUtils.serializeParams([orgUnitId, roleId], params)\n      ),\n      mergeMap((group) =>\n        group.pipe(\n          switchMap(({ userId, orgUnitId, roleId, params }) => {\n            return this.orgUnitConnector\n              .getUsers(userId, orgUnitId, roleId, params)\n              .pipe(\n                switchMap((users: EntitiesModel<B2BUser>) => {\n                  const { values, page } = StateUtils.normalizeListPage(\n                    users,\n                    'customerId'\n                  );\n                  return [\n                    new B2BUserActions.LoadB2BUserSuccess(values),\n                    new OrgUnitActions.LoadAssignedUsersSuccess({\n                      orgUnitId,\n                      roleId,\n                      page,\n                      params,\n                    }),\n                  ];\n                }),\n                catchError((error: HttpErrorResponse) =>\n                  of(\n                    new OrgUnitActions.LoadAssignedUsersFail({\n                      orgUnitId,\n                      roleId,\n                      params,\n                      error: normalizeHttpError(error),\n                    })\n                  )\n                )\n              );\n          })\n        )\n      )\n    )\n  );\n\n  assignRoleToUser: Observable<\n    OrgUnitActions.AssignRoleSuccess | OrgUnitActions.AssignRoleFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(OrgUnitActions.ASSIGN_ROLE),\n      map((action: OrgUnitActions.AssignRole) => action.payload),\n      switchMap(({ userId, orgCustomerId, roleId }) =>\n        this.orgUnitConnector.assignRole(userId, orgCustomerId, roleId).pipe(\n          map(\n            () =>\n              new OrgUnitActions.AssignRoleSuccess({\n                uid: orgCustomerId,\n                roleId,\n                selected: true,\n              })\n          ),\n          catchError((error: HttpErrorResponse) =>\n            of(\n              new OrgUnitActions.AssignRoleFail({\n                orgCustomerId,\n                error: normalizeHttpError(error),\n              })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  unassignRoleToUser$: Observable<\n    OrgUnitActions.UnassignRoleSuccess | OrgUnitActions.UnassignRoleFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(OrgUnitActions.UNASSIGN_ROLE),\n      map((action: OrgUnitActions.UnassignRole) => action.payload),\n      switchMap(({ userId, orgCustomerId, roleId }) =>\n        this.orgUnitConnector.unassignRole(userId, orgCustomerId, roleId).pipe(\n          map(\n            () =>\n              new OrgUnitActions.UnassignRoleSuccess({\n                uid: orgCustomerId,\n                roleId,\n                selected: false,\n              })\n          ),\n          catchError((error: HttpErrorResponse) =>\n            of(\n              new OrgUnitActions.UnassignRoleFail({\n                orgCustomerId,\n                error: normalizeHttpError(error),\n              })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  assignApprover: Observable<\n    | OrgUnitActions.AssignApproverSuccess\n    | OrgUnitActions.AssignApproverFail\n    | OrganizationActions.OrganizationClearData\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(OrgUnitActions.ASSIGN_APPROVER),\n      map((action: OrgUnitActions.AssignApprover) => action.payload),\n      mergeMap(({ userId, orgUnitId, orgCustomerId, roleId }) =>\n        this.orgUnitConnector\n          .assignApprover(userId, orgUnitId, orgCustomerId, roleId)\n          .pipe(\n            switchMap(() => [\n              new OrgUnitActions.AssignApproverSuccess({\n                uid: orgCustomerId,\n                roleId,\n                selected: true,\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ]),\n            catchError((error: HttpErrorResponse) =>\n              from([\n                new OrgUnitActions.AssignApproverFail({\n                  orgCustomerId,\n                  error: normalizeHttpError(error),\n                }),\n                new OrganizationActions.OrganizationClearData(),\n              ])\n            )\n          )\n      )\n    )\n  );\n\n  unassignApprover: Observable<\n    | OrgUnitActions.UnassignApproverSuccess\n    | OrgUnitActions.UnassignApproverFail\n    | OrganizationActions.OrganizationClearData\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(OrgUnitActions.UNASSIGN_APPROVER),\n      map((action: OrgUnitActions.UnassignApprover) => action.payload),\n      mergeMap(({ userId, orgUnitId, orgCustomerId, roleId }) =>\n        this.orgUnitConnector\n          .unassignApprover(userId, orgUnitId, orgCustomerId, roleId)\n          .pipe(\n            switchMap(() => [\n              new OrgUnitActions.UnassignApproverSuccess({\n                uid: orgCustomerId,\n                roleId,\n                selected: false,\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ]),\n            catchError((error: HttpErrorResponse) =>\n              from([\n                new OrgUnitActions.UnassignApproverFail({\n                  orgCustomerId,\n                  error: normalizeHttpError(error),\n                }),\n                new OrganizationActions.OrganizationClearData(),\n              ])\n            )\n          )\n      )\n    )\n  );\n\n  createAddress$: Observable<\n    | OrgUnitActions.CreateAddressSuccess\n    | OrgUnitActions.CreateAddressFail\n    | OrganizationActions.OrganizationClearData\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(OrgUnitActions.CREATE_ADDRESS),\n      map((action: OrgUnitActions.CreateAddress) => action.payload),\n      switchMap((payload) =>\n        this.orgUnitConnector\n          .createAddress(payload.userId, payload.orgUnitId, payload.address)\n          .pipe(\n            switchMap((data) => [\n              new OrgUnitActions.CreateAddressSuccess(data),\n              new OrgUnitActions.CreateAddressSuccess({ id: undefined }),\n              new OrganizationActions.OrganizationClearData(),\n            ]),\n            catchError((error: HttpErrorResponse) =>\n              from([\n                new OrgUnitActions.CreateAddressFail({\n                  addressId: payload.address.id ?? '',\n                  error: normalizeHttpError(error),\n                }),\n                new OrganizationActions.OrganizationClearData(),\n              ])\n            )\n          )\n      )\n    )\n  );\n\n  updateAddress$: Observable<\n    | OrgUnitActions.UpdateAddressSuccess\n    | OrgUnitActions.UpdateAddressFail\n    | OrganizationActions.OrganizationClearData\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(OrgUnitActions.UPDATE_ADDRESS),\n      map((action: OrgUnitActions.UpdateAddress) => action.payload),\n      switchMap(({ userId, orgUnitId, addressId, address }) =>\n        this.orgUnitConnector\n          .updateAddress(userId, orgUnitId, addressId, address)\n          .pipe(\n            switchMap(() => [\n              // commented out due to no response from backend on PATCH request\n              // new OrgUnitActions.UpdateAddressSuccess(data),\n              new OrgUnitActions.UpdateAddressSuccess(address),\n              new OrganizationActions.OrganizationClearData(),\n            ]),\n            catchError((error: HttpErrorResponse) =>\n              from([\n                new OrgUnitActions.UpdateAddressFail({\n                  addressId: address.id ?? '',\n                  error: normalizeHttpError(error),\n                }),\n                new OrganizationActions.OrganizationClearData(),\n              ])\n            )\n          )\n      )\n    )\n  );\n\n  deleteAddress$: Observable<\n    | OrgUnitActions.DeleteAddressSuccess\n    | OrgUnitActions.DeleteAddressFail\n    | OrganizationActions.OrganizationClearData\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(OrgUnitActions.DELETE_ADDRESS),\n      map((action: OrgUnitActions.DeleteAddress) => action.payload),\n      switchMap((payload) =>\n        this.orgUnitConnector\n          .deleteAddress(payload.userId, payload.orgUnitId, payload.addressId)\n          .pipe(\n            switchMap(() => [\n              new OrgUnitActions.DeleteAddressSuccess({\n                id: payload.addressId,\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ]),\n            catchError((error: HttpErrorResponse) =>\n              from([\n                new OrgUnitActions.DeleteAddressFail({\n                  addressId: payload.addressId,\n                  error: normalizeHttpError(error),\n                }),\n                new OrganizationActions.OrganizationClearData(),\n              ])\n            )\n          )\n      )\n    )\n  );\n\n  // @Effect()\n  // loadAddress$: Observable<\n  //   | OrgUnitActions.LoadAddressSuccess\n  //   | OrgUnitActions.LoadAddressesSuccess\n  //   | OrgUnitActions.LoadAddressesFail\n  // > = this.actions$.pipe(\n  //   ofType(OrgUnitActions.LOAD_ADDRESSES),\n  //   map((action: OrgUnitActions.LoadAddresses) => action.payload),\n  //   switchMap(({ userId, orgUnitId }) => {\n  //     return this.orgUnitConnector.getAddresses(userId, orgUnitId).pipe(\n  //       switchMap((addresses: EntitiesModel<B2BAddress>) => {\n  //         const { values, page } = StateUtils.normalizeListPage(addresses, 'id');\n  //         return [\n  //           new OrgUnitActions.LoadAddressSuccess(values),\n  //           new OrgUnitActions.LoadAddressesSuccess({ page, orgUnitId }),\n  //         ];\n  //       }),\n  //       catchError(error =>\n  //         of(\n  //           new OrgUnitActions.LoadAddressesFail({\n  //             orgUnitId,\n  //             error: normalizeHttpError(error),\n  //           })\n  //         )\n  //       )\n  //     );\n  //   })\n  // );\n\n  constructor(\n    private actions$: Actions,\n    private orgUnitConnector: OrgUnitConnector\n  ) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport {\n  EntitiesModel,\n  normalizeHttpError,\n  OrderApprovalPermissionType,\n  StateUtils,\n} from '@spartacus/core';\nimport { from, Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { PermissionConnector } from '../../connectors/permission/permission.connector';\nimport { Permission } from '../../model/permission.model';\nimport { OrganizationActions, PermissionActions } from '../actions';\n\n@Injectable()\nexport class PermissionEffects {\n  loadPermission$: Observable<\n    | PermissionActions.LoadPermissionSuccess\n    | PermissionActions.LoadPermissionFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(PermissionActions.LOAD_PERMISSION),\n      map((action: PermissionActions.LoadPermission) => action.payload),\n      switchMap(({ userId, permissionCode }) => {\n        return this.permissionConnector.get(userId, permissionCode).pipe(\n          map((permission: Permission) => {\n            return new PermissionActions.LoadPermissionSuccess([permission]);\n          }),\n          catchError((error: HttpErrorResponse) =>\n            of(\n              new PermissionActions.LoadPermissionFail({\n                permissionCode,\n                error: normalizeHttpError(error),\n              })\n            )\n          )\n        );\n      })\n    )\n  );\n\n  loadPermissions$: Observable<\n    | PermissionActions.LoadPermissionsSuccess\n    | PermissionActions.LoadPermissionSuccess\n    | PermissionActions.LoadPermissionsFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(PermissionActions.LOAD_PERMISSIONS),\n      map((action: PermissionActions.LoadPermissions) => action.payload),\n      switchMap((payload) =>\n        this.permissionConnector.getList(payload.userId, payload.params).pipe(\n          switchMap((permissions: EntitiesModel<Permission>) => {\n            const { values, page } = StateUtils.normalizeListPage(\n              permissions,\n              'code'\n            );\n            return [\n              new PermissionActions.LoadPermissionSuccess(values),\n              new PermissionActions.LoadPermissionsSuccess({\n                page,\n                params: payload.params,\n              }),\n            ];\n          }),\n          catchError((error: HttpErrorResponse) =>\n            of(\n              new PermissionActions.LoadPermissionsFail({\n                params: payload.params,\n                error: normalizeHttpError(error),\n              })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  createPermission$: Observable<\n    | PermissionActions.CreatePermissionSuccess\n    | PermissionActions.CreatePermissionFail\n    | OrganizationActions.OrganizationClearData\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(PermissionActions.CREATE_PERMISSION),\n      map((action: PermissionActions.CreatePermission) => action.payload),\n      switchMap((payload) =>\n        this.permissionConnector\n          .create(payload.userId, payload.permission)\n          .pipe(\n            switchMap((data) => [\n              new PermissionActions.CreatePermissionSuccess(data),\n              new OrganizationActions.OrganizationClearData(),\n            ]),\n            catchError((error: HttpErrorResponse) =>\n              from([\n                new PermissionActions.CreatePermissionFail({\n                  permissionCode: payload.permission.code ?? '',\n                  error: normalizeHttpError(error),\n                }),\n                new OrganizationActions.OrganizationClearData(),\n              ])\n            )\n          )\n      )\n    )\n  );\n\n  updatePermission$: Observable<\n    | PermissionActions.UpdatePermissionSuccess\n    | PermissionActions.UpdatePermissionFail\n    | OrganizationActions.OrganizationClearData\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(PermissionActions.UPDATE_PERMISSION),\n      map((action: PermissionActions.UpdatePermission) => action.payload),\n      switchMap((payload) =>\n        this.permissionConnector\n          .update(payload.userId, payload.permissionCode, payload.permission)\n          .pipe(\n            switchMap((data) => [\n              new PermissionActions.UpdatePermissionSuccess(data),\n              new OrganizationActions.OrganizationClearData(),\n            ]),\n            catchError((error: HttpErrorResponse) =>\n              from([\n                new PermissionActions.UpdatePermissionFail({\n                  permissionCode: payload.permission.code ?? '',\n                  error: normalizeHttpError(error),\n                }),\n                new OrganizationActions.OrganizationClearData(),\n              ])\n            )\n          )\n      )\n    )\n  );\n\n  loadPermissionTypes$: Observable<\n    | PermissionActions.LoadPermissionTypesSuccess\n    | PermissionActions.LoadPermissionTypesFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(PermissionActions.LOAD_PERMISSION_TYPES),\n      switchMap(() =>\n        this.permissionConnector.getTypes().pipe(\n          map(\n            (permissionTypeList: OrderApprovalPermissionType[]) =>\n              new PermissionActions.LoadPermissionTypesSuccess(\n                permissionTypeList\n              )\n          ),\n          catchError((error: HttpErrorResponse) =>\n            of(\n              new PermissionActions.LoadPermissionTypesFail({\n                error: normalizeHttpError(error),\n              })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private permissionConnector: PermissionConnector\n  ) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport {\n  CostCenter,\n  EntitiesModel,\n  normalizeHttpError,\n  StateUtils,\n} from '@spartacus/core';\nimport { from, Observable, of } from 'rxjs';\nimport { catchError, groupBy, map, mergeMap, switchMap } from 'rxjs/operators';\nimport { CostCenterConnector } from '../../connectors/cost-center/cost-center.connector';\nimport { Budget } from '../../model/budget.model';\nimport {\n  BudgetActions,\n  CostCenterActions,\n  OrganizationActions,\n} from '../actions/index';\n\n@Injectable()\nexport class CostCenterEffects {\n  loadCostCenter$: Observable<\n    | CostCenterActions.LoadCostCenterSuccess\n    | CostCenterActions.LoadCostCenterFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(CostCenterActions.LOAD_COST_CENTER),\n      map((action: CostCenterActions.LoadCostCenter) => action.payload),\n      switchMap(({ userId, costCenterCode }) => {\n        return this.costCenterConnector.get(userId, costCenterCode).pipe(\n          map((costCenter: CostCenter) => {\n            return new CostCenterActions.LoadCostCenterSuccess([costCenter]);\n          }),\n          catchError((error: HttpErrorResponse) =>\n            of(\n              new CostCenterActions.LoadCostCenterFail({\n                costCenterCode,\n                error: normalizeHttpError(error),\n              })\n            )\n          )\n        );\n      })\n    )\n  );\n\n  loadCostCenters$: Observable<\n    | CostCenterActions.LoadCostCentersSuccess\n    | CostCenterActions.LoadCostCenterSuccess\n    | CostCenterActions.LoadCostCentersFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(CostCenterActions.LOAD_COST_CENTERS),\n      map((action: CostCenterActions.LoadCostCenters) => action.payload),\n      switchMap((payload) =>\n        this.costCenterConnector.getList(payload.userId, payload.params).pipe(\n          switchMap((costCenters: EntitiesModel<CostCenter>) => {\n            const { values, page } = StateUtils.normalizeListPage(\n              costCenters,\n              'code'\n            );\n            return [\n              new CostCenterActions.LoadCostCenterSuccess(values),\n              new CostCenterActions.LoadCostCentersSuccess({\n                page,\n                params: payload.params,\n              }),\n            ];\n          }),\n          catchError((error: HttpErrorResponse) =>\n            of(\n              new CostCenterActions.LoadCostCentersFail({\n                params: payload.params,\n                error: normalizeHttpError(error),\n              })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  createCostCenter$: Observable<\n    | CostCenterActions.CreateCostCenterSuccess\n    | CostCenterActions.CreateCostCenterFail\n    | OrganizationActions.OrganizationClearData\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(CostCenterActions.CREATE_COST_CENTER),\n      map((action: CostCenterActions.CreateCostCenter) => action.payload),\n      switchMap((payload) =>\n        this.costCenterConnector\n          .create(payload.userId, payload.costCenter)\n          .pipe(\n            switchMap((data) => [\n              new CostCenterActions.CreateCostCenterSuccess(data),\n              new OrganizationActions.OrganizationClearData(),\n            ]),\n            catchError((error: HttpErrorResponse) =>\n              from([\n                new CostCenterActions.CreateCostCenterFail({\n                  costCenterCode: payload.costCenter.code ?? '',\n                  error: normalizeHttpError(error),\n                }),\n                new OrganizationActions.OrganizationClearData(),\n              ])\n            )\n          )\n      )\n    )\n  );\n\n  updateCostCenter$: Observable<\n    | CostCenterActions.UpdateCostCenterSuccess\n    | CostCenterActions.UpdateCostCenterFail\n    | OrganizationActions.OrganizationClearData\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(CostCenterActions.UPDATE_COST_CENTER),\n      map((action: CostCenterActions.UpdateCostCenter) => action.payload),\n      switchMap((payload) =>\n        this.costCenterConnector\n          .update(payload.userId, payload.costCenterCode, payload.costCenter)\n          .pipe(\n            switchMap((data) => [\n              new CostCenterActions.UpdateCostCenterSuccess(data),\n              new OrganizationActions.OrganizationClearData(),\n            ]),\n            catchError((error: HttpErrorResponse) =>\n              from([\n                new CostCenterActions.UpdateCostCenterFail({\n                  costCenterCode: payload.costCenter.code ?? '',\n                  error: normalizeHttpError(error),\n                }),\n                new OrganizationActions.OrganizationClearData(),\n              ])\n            )\n          )\n      )\n    )\n  );\n\n  loadAssignedBudgets$: Observable<\n    | CostCenterActions.LoadAssignedBudgetsSuccess\n    | BudgetActions.LoadBudgetSuccess\n    | CostCenterActions.LoadAssignedBudgetsFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(CostCenterActions.LOAD_ASSIGNED_BUDGETS),\n      map((action: CostCenterActions.LoadAssignedBudgets) => action.payload),\n      groupBy(({ costCenterCode, params }) =>\n        StateUtils.serializeParams(costCenterCode, params)\n      ),\n      mergeMap((group) =>\n        group.pipe(\n          switchMap(({ userId, costCenterCode, params }) =>\n            this.costCenterConnector\n              .getBudgets(userId, costCenterCode, params)\n              .pipe(\n                switchMap((budgets: EntitiesModel<Budget>) => {\n                  const { values, page } = StateUtils.normalizeListPage(\n                    budgets,\n                    'code'\n                  );\n                  return [\n                    new BudgetActions.LoadBudgetSuccess(values),\n                    new CostCenterActions.LoadAssignedBudgetsSuccess({\n                      costCenterCode,\n                      page,\n                      params,\n                    }),\n                  ];\n                }),\n                catchError((error: HttpErrorResponse) =>\n                  of(\n                    new CostCenterActions.LoadAssignedBudgetsFail({\n                      costCenterCode,\n                      params,\n                      error: normalizeHttpError(error),\n                    })\n                  )\n                )\n              )\n          )\n        )\n      )\n    )\n  );\n\n  assignBudgetToCostCenter$: Observable<\n    | CostCenterActions.AssignBudgetSuccess\n    | CostCenterActions.AssignBudgetFail\n    | OrganizationActions.OrganizationClearData\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(CostCenterActions.ASSIGN_BUDGET),\n      map((action: CostCenterActions.AssignBudget) => action.payload),\n      mergeMap(({ userId, costCenterCode, budgetCode }) =>\n        this.costCenterConnector\n          .assignBudget(userId, costCenterCode, budgetCode)\n          .pipe(\n            switchMap(() => [\n              new CostCenterActions.AssignBudgetSuccess({\n                code: budgetCode,\n                selected: true,\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ]),\n            catchError((error: HttpErrorResponse) =>\n              from([\n                new CostCenterActions.AssignBudgetFail({\n                  budgetCode,\n                  error: normalizeHttpError(error),\n                }),\n                new OrganizationActions.OrganizationClearData(),\n              ])\n            )\n          )\n      )\n    )\n  );\n\n  unassignBudgetToCostCenter$: Observable<\n    | CostCenterActions.UnassignBudgetSuccess\n    | CostCenterActions.UnassignBudgetFail\n    | OrganizationActions.OrganizationClearData\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(CostCenterActions.UNASSIGN_BUDGET),\n      map((action: CostCenterActions.UnassignBudget) => action.payload),\n      mergeMap(({ userId, costCenterCode, budgetCode }) =>\n        this.costCenterConnector\n          .unassignBudget(userId, costCenterCode, budgetCode)\n          .pipe(\n            switchMap(() => [\n              new CostCenterActions.UnassignBudgetSuccess({\n                code: budgetCode,\n                selected: false,\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ]),\n            catchError((error: HttpErrorResponse) =>\n              from([\n                new CostCenterActions.UnassignBudgetFail({\n                  budgetCode,\n                  error: normalizeHttpError(error),\n                }),\n                new OrganizationActions.OrganizationClearData(),\n              ])\n            )\n          )\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private costCenterConnector: CostCenterConnector\n  ) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport {\n  AuthActions,\n  B2BUser,\n  B2BUserRole,\n  EntitiesModel,\n  normalizeHttpError,\n  RouterState,\n  RoutingService,\n  StateUtils,\n  User,\n  UserIdService,\n} from '@spartacus/core';\nimport { UserAccountFacade } from '@spartacus/user/account/root';\nimport { from, Observable, of } from 'rxjs';\nimport {\n  catchError,\n  groupBy,\n  map,\n  mergeMap,\n  switchMap,\n  take,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { B2BUserConnector } from '../../connectors/b2b-user/b2b-user.connector';\nimport { Permission } from '../../model/permission.model';\nimport { UserGroup } from '../../model/user-group.model';\nimport {\n  B2BUserActions,\n  OrganizationActions,\n  OrgUnitActions,\n  PermissionActions,\n  UserGroupActions,\n} from '../actions/index';\n\n@Injectable()\nexport class B2BUserEffects {\n  loadB2BUser$: Observable<\n    B2BUserActions.LoadB2BUserSuccess | B2BUserActions.LoadB2BUserFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(B2BUserActions.LOAD_B2B_USER),\n      map((action: B2BUserActions.LoadB2BUser) => action.payload),\n      switchMap(({ userId, orgCustomerId }) => {\n        return this.b2bUserConnector.get(userId, orgCustomerId).pipe(\n          map((b2bUser: B2BUser) => {\n            return new B2BUserActions.LoadB2BUserSuccess([b2bUser]);\n          }),\n          catchError((error: HttpErrorResponse) =>\n            of(\n              new B2BUserActions.LoadB2BUserFail({\n                orgCustomerId,\n                error: normalizeHttpError(error),\n              })\n            )\n          )\n        );\n      })\n    )\n  );\n\n  createB2BUser$: Observable<\n    | B2BUserActions.CreateB2BUserSuccess\n    | B2BUserActions.CreateB2BUserFail\n    | OrgUnitActions.AssignApprover\n    | OrganizationActions.OrganizationClearData\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(B2BUserActions.CREATE_B2B_USER),\n      map((action: B2BUserActions.CreateB2BUser) => action.payload),\n      switchMap(({ userId, orgCustomer }) =>\n        this.b2bUserConnector.create(userId, orgCustomer).pipe(\n          switchMap((data) => {\n            const isAssignedToApprovers = orgCustomer.isAssignedToApprovers;\n            // TODO Workaround for not known customerId while user creation (redireciton)\n            return this.routingService.getRouterState().pipe(\n              take(1),\n              tap((route) => this.redirectToDetails(route, data)),\n              switchMap(() => {\n                const successActions = [\n                  new B2BUserActions.CreateB2BUserSuccess(data),\n                  new B2BUserActions.CreateB2BUserSuccess({\n                    customerId: undefined,\n                  }),\n                  new OrganizationActions.OrganizationClearData(),\n                ] as any[];\n                if (isAssignedToApprovers) {\n                  successActions.splice(\n                    1,\n                    0,\n                    new OrgUnitActions.AssignApprover({\n                      userId,\n                      orgUnitId: orgCustomer.orgUnit?.uid ?? '',\n                      orgCustomerId: data.customerId ?? '',\n                      roleId: B2BUserRole.APPROVER,\n                    })\n                  );\n                }\n                return successActions;\n              })\n            );\n          }),\n          catchError((error: HttpErrorResponse) =>\n            from([\n              new B2BUserActions.CreateB2BUserFail({\n                orgCustomerId: orgCustomer.customerId ?? '',\n                error: normalizeHttpError(error),\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ])\n          )\n        )\n      )\n    )\n  );\n\n  updateB2BUser$: Observable<\n    | B2BUserActions.UpdateB2BUserSuccess\n    | B2BUserActions.UpdateB2BUserFail\n    | OrgUnitActions.AssignApprover\n    | OrganizationActions.OrganizationClearData\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(B2BUserActions.UPDATE_B2B_USER),\n      map((action: B2BUserActions.UpdateB2BUser) => action.payload),\n      switchMap(({ userId, orgCustomerId, orgCustomer }) => {\n        const isAssignedToApprovers = orgCustomer.isAssignedToApprovers;\n        return this.b2bUserConnector\n          .update(userId, orgCustomerId, orgCustomer)\n          .pipe(\n            switchMap((_data) => {\n              const successActions = [\n                // TODO: change for 'payload: data' when backend API start to return user data on PATCH\n                new B2BUserActions.UpdateB2BUserSuccess(orgCustomer),\n              ] as any[];\n              if (isAssignedToApprovers) {\n                successActions.push(\n                  new OrgUnitActions.AssignApprover({\n                    userId,\n                    orgUnitId: orgCustomer.orgUnit?.uid ?? '',\n                    orgCustomerId,\n                    roleId: B2BUserRole.APPROVER,\n                  })\n                );\n              }\n              return successActions;\n            }),\n            catchError((error: HttpErrorResponse) =>\n              from([\n                new B2BUserActions.UpdateB2BUserFail({\n                  orgCustomerId: orgCustomer.customerId ?? '',\n                  error: normalizeHttpError(error),\n                }),\n                new OrganizationActions.OrganizationClearData(),\n              ])\n            )\n          );\n      })\n    )\n  );\n\n  checkSelfEmailUpdate$: Observable<\n    | AuthActions.Logout\n    | B2BUserActions.LoadB2BUser\n    | OrganizationActions.OrganizationClearData\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(B2BUserActions.UPDATE_B2B_USER_SUCCESS),\n      map((action: B2BUserActions.UpdateB2BUserSuccess) => action.payload),\n      withLatestFrom(\n        this.userAccountFacade.get(),\n        this.userIdService.getUserId()\n      ),\n      switchMap(\n        ([payload, currentUser]: [B2BUser, User | undefined, string]) => {\n          const currentUserEmailMatch =\n            payload.customerId === currentUser?.customerId &&\n            payload.email !== currentUser?.displayUid;\n\n          if (currentUserEmailMatch) {\n            this.routingService.go({ cxRoute: 'login' });\n          }\n          return currentUserEmailMatch\n            ? [new AuthActions.Logout()]\n            : [new OrganizationActions.OrganizationClearData()];\n        }\n      )\n    )\n  );\n\n  loadB2BUsers$: Observable<\n    | B2BUserActions.LoadB2BUsersSuccess\n    | B2BUserActions.LoadB2BUserSuccess\n    | B2BUserActions.LoadB2BUsersFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(B2BUserActions.LOAD_B2B_USERS),\n      map((action: B2BUserActions.LoadB2BUsers) => action.payload),\n      switchMap((payload) =>\n        this.b2bUserConnector.getList(payload.userId, payload.params).pipe(\n          switchMap((b2bUsers: EntitiesModel<B2BUser>) => {\n            const { values, page } = StateUtils.normalizeListPage(\n              b2bUsers,\n              'customerId'\n            );\n            return [\n              new B2BUserActions.LoadB2BUserSuccess(values),\n              new B2BUserActions.LoadB2BUsersSuccess({\n                page,\n                params: payload.params,\n              }),\n            ];\n          }),\n          catchError((error: HttpErrorResponse) =>\n            of(\n              new B2BUserActions.LoadB2BUsersFail({\n                params: payload.params,\n                error: normalizeHttpError(error),\n              })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  loadB2BUserApprovers$: Observable<\n    | B2BUserActions.LoadB2BUserApproversSuccess\n    | B2BUserActions.LoadB2BUserApproversFail\n    | B2BUserActions.LoadB2BUserSuccess\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(B2BUserActions.LOAD_B2B_USER_APPROVERS),\n      map((action: B2BUserActions.LoadB2BUserApprovers) => action.payload),\n      groupBy(({ orgCustomerId, params }) =>\n        StateUtils.serializeParams(orgCustomerId, params)\n      ),\n      mergeMap((group) =>\n        group.pipe(\n          switchMap((payload) =>\n            this.b2bUserConnector\n              .getApprovers(\n                payload.userId,\n                payload.orgCustomerId,\n                payload.params\n              )\n              .pipe(\n                switchMap((approvers: EntitiesModel<B2BUser>) => {\n                  const { values, page } = StateUtils.normalizeListPage(\n                    approvers,\n                    'customerId'\n                  );\n                  return [\n                    new B2BUserActions.LoadB2BUserSuccess(values),\n                    new B2BUserActions.LoadB2BUserApproversSuccess({\n                      orgCustomerId: payload.orgCustomerId,\n                      page,\n                      params: payload.params,\n                    }),\n                  ];\n                }),\n                catchError((error: HttpErrorResponse) =>\n                  of(\n                    new B2BUserActions.LoadB2BUserApproversFail({\n                      orgCustomerId: payload.orgCustomerId,\n                      params: payload.params,\n                      error: normalizeHttpError(error),\n                    })\n                  )\n                )\n              )\n          )\n        )\n      )\n    )\n  );\n\n  loadB2BUserPermissions$: Observable<\n    | B2BUserActions.LoadB2BUserPermissionsSuccess\n    | B2BUserActions.LoadB2BUserPermissionsFail\n    | PermissionActions.LoadPermissionSuccess\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(B2BUserActions.LOAD_B2B_USER_PERMISSIONS),\n      map((action: B2BUserActions.LoadB2BUserPermissions) => action.payload),\n      groupBy(({ orgCustomerId, params }) =>\n        StateUtils.serializeParams(orgCustomerId, params)\n      ),\n      mergeMap((group) =>\n        group.pipe(\n          switchMap((payload) =>\n            this.b2bUserConnector\n              .getPermissions(\n                payload.userId,\n                payload.orgCustomerId,\n                payload.params\n              )\n              .pipe(\n                switchMap((permissions: EntitiesModel<Permission>) => {\n                  const { values, page } = StateUtils.normalizeListPage(\n                    permissions,\n                    'code'\n                  );\n                  return [\n                    new PermissionActions.LoadPermissionSuccess(values),\n                    new B2BUserActions.LoadB2BUserPermissionsSuccess({\n                      orgCustomerId: payload.orgCustomerId,\n                      page,\n                      params: payload.params,\n                    }),\n                  ];\n                }),\n                catchError((error: HttpErrorResponse) =>\n                  of(\n                    new B2BUserActions.LoadB2BUserPermissionsFail({\n                      orgCustomerId: payload.orgCustomerId,\n                      params: payload.params,\n                      error: normalizeHttpError(error),\n                    })\n                  )\n                )\n              )\n          )\n        )\n      )\n    )\n  );\n\n  loadB2BUserUserGroups$: Observable<\n    | B2BUserActions.LoadB2BUserUserGroupsSuccess\n    | B2BUserActions.LoadB2BUserUserGroupsFail\n    | UserGroupActions.LoadUserGroupSuccess\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(B2BUserActions.LOAD_B2B_USER_USER_GROUPS),\n      map((action: B2BUserActions.LoadB2BUserUserGroups) => action.payload),\n      groupBy(({ orgCustomerId, params }) =>\n        StateUtils.serializeParams(orgCustomerId, params)\n      ),\n      mergeMap((group) =>\n        group.pipe(\n          switchMap((payload) =>\n            this.b2bUserConnector\n              .getUserGroups(\n                payload.userId,\n                payload.orgCustomerId,\n                payload.params\n              )\n              .pipe(\n                switchMap((userGroups: EntitiesModel<UserGroup>) => {\n                  const { values, page } = StateUtils.normalizeListPage(\n                    userGroups,\n                    'uid'\n                  );\n                  return [\n                    new UserGroupActions.LoadUserGroupSuccess(values),\n                    new B2BUserActions.LoadB2BUserUserGroupsSuccess({\n                      orgCustomerId: payload.orgCustomerId,\n                      page,\n                      params: payload.params,\n                    }),\n                  ];\n                }),\n                catchError((error: HttpErrorResponse) =>\n                  of(\n                    new B2BUserActions.LoadB2BUserUserGroupsFail({\n                      orgCustomerId: payload.orgCustomerId,\n                      params: payload.params,\n                      error: normalizeHttpError(error),\n                    })\n                  )\n                )\n              )\n          )\n        )\n      )\n    )\n  );\n\n  assignApproverToB2BUser$: Observable<\n    | B2BUserActions.AssignB2BUserApproverSuccess\n    | B2BUserActions.AssignB2BUserApproverFail\n    | OrganizationActions.OrganizationClearData\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(B2BUserActions.ASSIGN_B2B_USER_APPROVER),\n      map((action: B2BUserActions.AssignB2BUserApprover) => action.payload),\n      mergeMap((payload) =>\n        this.b2bUserConnector\n          .assignApprover(\n            payload.userId,\n            payload.orgCustomerId,\n            payload.approverId\n          )\n          .pipe(\n            switchMap((data) => [\n              new B2BUserActions.AssignB2BUserApproverSuccess({\n                // Occ returned email, but we use customerId in store\n                approverId: payload.approverId,\n                selected: data.selected,\n              }),\n              // Clearing data in this case causes unexpected behavior (#10468)\n              // new OrganizationActions.OrganizationClearData(),\n            ]),\n            catchError((error: HttpErrorResponse) =>\n              from([\n                new B2BUserActions.AssignB2BUserApproverFail({\n                  orgCustomerId: payload.orgCustomerId,\n                  approverId: payload.approverId,\n                  error: normalizeHttpError(error),\n                }),\n                new OrganizationActions.OrganizationClearData(),\n              ])\n            )\n          )\n      )\n    )\n  );\n\n  unassignApproverFromB2BUser$: Observable<\n    | B2BUserActions.UnassignB2BUserApproverSuccess\n    | B2BUserActions.UnassignB2BUserApproverFail\n    | OrganizationActions.OrganizationClearData\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(B2BUserActions.UNASSIGN_B2B_USER_APPROVER),\n      map((action: B2BUserActions.UnassignB2BUserApprover) => action.payload),\n      mergeMap((payload) =>\n        this.b2bUserConnector\n          .unassignApprover(\n            payload.userId,\n            payload.orgCustomerId,\n            payload.approverId\n          )\n          .pipe(\n            switchMap((data) => [\n              new B2BUserActions.UnassignB2BUserApproverSuccess({\n                // Occ returned email, but we use customerId in store\n                approverId: payload.approverId,\n                selected: data.selected,\n              }),\n              // Clearing data in this case causes unexpected behavior (#10468)\n              // new OrganizationActions.OrganizationClearData(),\n            ]),\n            catchError((error: HttpErrorResponse) =>\n              from([\n                new B2BUserActions.UnassignB2BUserApproverFail({\n                  orgCustomerId: payload.orgCustomerId,\n                  approverId: payload.approverId,\n                  error: normalizeHttpError(error),\n                }),\n                new OrganizationActions.OrganizationClearData(),\n              ])\n            )\n          )\n      )\n    )\n  );\n\n  assignPermissionToB2BUser$: Observable<\n    | B2BUserActions.AssignB2BUserPermissionSuccess\n    | B2BUserActions.AssignB2BUserPermissionFail\n    | OrganizationActions.OrganizationClearData\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(B2BUserActions.ASSIGN_B2B_USER_PERMISSION),\n      map((action: B2BUserActions.AssignB2BUserPermission) => action.payload),\n      mergeMap((payload) =>\n        this.b2bUserConnector\n          .assignPermission(\n            payload.userId,\n            payload.orgCustomerId,\n            payload.permissionId\n          )\n          .pipe(\n            switchMap((data) => [\n              new B2BUserActions.AssignB2BUserPermissionSuccess({\n                permissionId: data.id,\n                selected: data.selected,\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ]),\n            catchError((error: HttpErrorResponse) =>\n              from([\n                new B2BUserActions.AssignB2BUserPermissionFail({\n                  orgCustomerId: payload.orgCustomerId,\n                  permissionId: payload.permissionId,\n                  error: normalizeHttpError(error),\n                }),\n                new OrganizationActions.OrganizationClearData(),\n              ])\n            )\n          )\n      )\n    )\n  );\n\n  unassignPermissionFromB2BUser$: Observable<\n    | B2BUserActions.UnassignB2BUserPermissionSuccess\n    | B2BUserActions.UnassignB2BUserPermissionFail\n    | OrganizationActions.OrganizationClearData\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(B2BUserActions.UNASSIGN_B2B_USER_PERMISSION),\n      map((action: B2BUserActions.UnassignB2BUserPermission) => action.payload),\n      mergeMap((payload) =>\n        this.b2bUserConnector\n          .unassignPermission(\n            payload.userId,\n            payload.orgCustomerId,\n            payload.permissionId\n          )\n          .pipe(\n            switchMap((data) => [\n              new B2BUserActions.UnassignB2BUserPermissionSuccess({\n                permissionId: data.id,\n                selected: data.selected,\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ]),\n            catchError((error: HttpErrorResponse) =>\n              from([\n                new B2BUserActions.UnassignB2BUserPermissionFail({\n                  orgCustomerId: payload.orgCustomerId,\n                  permissionId: payload.permissionId,\n                  error: normalizeHttpError(error),\n                }),\n                new OrganizationActions.OrganizationClearData(),\n              ])\n            )\n          )\n      )\n    )\n  );\n\n  assignUserGroupToB2BUser$: Observable<\n    | B2BUserActions.AssignB2BUserUserGroupSuccess\n    | B2BUserActions.AssignB2BUserUserGroupFail\n    | OrganizationActions.OrganizationClearData\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(B2BUserActions.ASSIGN_B2B_USER_USER_GROUP),\n      map((action: B2BUserActions.AssignB2BUserUserGroup) => action.payload),\n      mergeMap((payload) =>\n        this.b2bUserConnector\n          .assignUserGroup(\n            payload.userId,\n            payload.orgCustomerId,\n            payload.userGroupId\n          )\n          .pipe(\n            switchMap((data) => [\n              new B2BUserActions.AssignB2BUserUserGroupSuccess({\n                uid: data.id,\n                selected: data.selected,\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ]),\n            catchError((error: HttpErrorResponse) =>\n              from([\n                new B2BUserActions.AssignB2BUserUserGroupFail({\n                  orgCustomerId: payload.orgCustomerId,\n                  userGroupId: payload.userGroupId,\n                  error: normalizeHttpError(error),\n                }),\n                new OrganizationActions.OrganizationClearData(),\n              ])\n            )\n          )\n      )\n    )\n  );\n\n  unassignUserGroupFromB2BUser$: Observable<\n    | B2BUserActions.UnassignB2BUserUserGroupSuccess\n    | B2BUserActions.UnassignB2BUserUserGroupFail\n    | OrganizationActions.OrganizationClearData\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(B2BUserActions.UNASSIGN_B2B_USER_USER_GROUP),\n      map((action: B2BUserActions.UnassignB2BUserUserGroup) => action.payload),\n      mergeMap((payload) =>\n        this.b2bUserConnector\n          .unassignUserGroup(\n            payload.userId,\n            payload.orgCustomerId,\n            payload.userGroupId\n          )\n          .pipe(\n            switchMap(\n              // TODO: Workaround because occ doesn't respond here\n              // (data) =>\n              //   new B2BUserActions.DeleteB2BUserUserGroupSuccess({\n              //     uid: data.id,\n              //     selected: data.selected,\n              //   })\n              () => [\n                new B2BUserActions.UnassignB2BUserUserGroupSuccess({\n                  uid: payload.userGroupId,\n                  selected: false,\n                }),\n                new OrganizationActions.OrganizationClearData(),\n              ]\n            ),\n            catchError((error: HttpErrorResponse) =>\n              from([\n                new B2BUserActions.UnassignB2BUserUserGroupFail({\n                  orgCustomerId: payload.orgCustomerId,\n                  userGroupId: payload.userGroupId,\n                  error: normalizeHttpError(error),\n                }),\n                new OrganizationActions.OrganizationClearData(),\n              ])\n            )\n          )\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private b2bUserConnector: B2BUserConnector,\n    private routingService: RoutingService,\n    private userAccountFacade: UserAccountFacade,\n    private userIdService: UserIdService\n  ) {}\n\n  protected redirectToDetails(route: RouterState, data: B2BUser) {\n    if ((route as any)?.state?.context?.id !== '/organization/units') {\n      this.routingService.go({\n        cxRoute: 'orgUserDetails',\n        params: data,\n      });\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport {\n  B2BUser,\n  EntitiesModel,\n  normalizeHttpError,\n  StateUtils,\n} from '@spartacus/core';\nimport { from, Observable, of } from 'rxjs';\nimport { catchError, groupBy, map, mergeMap, switchMap } from 'rxjs/operators';\nimport { UserGroupConnector } from '../../connectors/user-group/user-group.connector';\nimport { Permission } from '../../model/permission.model';\nimport { UserGroup } from '../../model/user-group.model';\nimport {\n  B2BUserActions,\n  OrganizationActions,\n  PermissionActions,\n  UserGroupActions,\n} from '../actions/index';\n\n@Injectable()\nexport class UserGroupEffects {\n  loadUserGroup$: Observable<\n    UserGroupActions.LoadUserGroupSuccess | UserGroupActions.LoadUserGroupFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserGroupActions.LOAD_USER_GROUP),\n      map((action: UserGroupActions.LoadUserGroup) => action.payload),\n      switchMap(({ userId, userGroupId }) => {\n        return this.userGroupConnector.get(userId, userGroupId).pipe(\n          map((userGroup: UserGroup) => {\n            return new UserGroupActions.LoadUserGroupSuccess([userGroup]);\n          }),\n          catchError((error: HttpErrorResponse) =>\n            of(\n              new UserGroupActions.LoadUserGroupFail({\n                userGroupId,\n                error: normalizeHttpError(error),\n              })\n            )\n          )\n        );\n      })\n    )\n  );\n\n  loadUserGroups$: Observable<\n    | UserGroupActions.LoadUserGroupsSuccess\n    | UserGroupActions.LoadUserGroupSuccess\n    | UserGroupActions.LoadUserGroupsFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserGroupActions.LOAD_USER_GROUPS),\n      map((action: UserGroupActions.LoadUserGroups) => action.payload),\n      switchMap((payload) =>\n        this.userGroupConnector.getList(payload.userId, payload.params).pipe(\n          switchMap((userGroups: EntitiesModel<UserGroup>) => {\n            const { values, page } = StateUtils.normalizeListPage(\n              userGroups,\n              'uid'\n            );\n            return [\n              new UserGroupActions.LoadUserGroupSuccess(values),\n              new UserGroupActions.LoadUserGroupsSuccess({\n                page,\n                params: payload.params,\n              }),\n            ];\n          }),\n          catchError((error: HttpErrorResponse) =>\n            of(\n              new UserGroupActions.LoadUserGroupsFail({\n                params: payload.params,\n                error: normalizeHttpError(error),\n              })\n            )\n          )\n        )\n      )\n    )\n  );\n\n  loadAvailableOrderApprovalPermissions$: Observable<\n    | UserGroupActions.LoadPermissionsSuccess\n    | PermissionActions.LoadPermissionSuccess\n    | UserGroupActions.LoadPermissionsFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserGroupActions.LOAD_USER_GROUP_PERMISSIONS),\n      map((action: UserGroupActions.LoadPermissions) => action.payload),\n      groupBy(({ userGroupId, params }) =>\n        StateUtils.serializeParams(userGroupId, params)\n      ),\n      mergeMap((group) =>\n        group.pipe(\n          switchMap((payload) =>\n            this.userGroupConnector\n              .getAvailableOrderApprovalPermissions(\n                payload.userId,\n                payload.userGroupId,\n                payload.params\n              )\n              .pipe(\n                switchMap((permissions: EntitiesModel<Permission>) => {\n                  const { values, page } = StateUtils.normalizeListPage(\n                    permissions,\n                    'code'\n                  );\n                  return [\n                    new PermissionActions.LoadPermissionSuccess(values),\n                    new UserGroupActions.LoadPermissionsSuccess({\n                      userGroupId: payload.userGroupId,\n                      page,\n                      params: payload.params,\n                    }),\n                  ];\n                }),\n                catchError((error: HttpErrorResponse) =>\n                  of(\n                    new UserGroupActions.LoadPermissionsFail({\n                      userGroupId: payload.userGroupId,\n                      params: payload.params,\n                      error: normalizeHttpError(error),\n                    })\n                  )\n                )\n              )\n          )\n        )\n      )\n    )\n  );\n\n  loadAvailableOrgCustomers$: Observable<\n    | UserGroupActions.LoadAvailableOrgCustomersSuccess\n    | B2BUserActions.LoadB2BUserSuccess\n    | UserGroupActions.LoadAvailableOrgCustomersFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserGroupActions.LOAD_USER_GROUP_AVAILABLE_CUSTOMERS),\n      map(\n        (action: UserGroupActions.LoadAvailableOrgCustomers) => action.payload\n      ),\n      groupBy(({ userGroupId, params }) =>\n        StateUtils.serializeParams(userGroupId, params)\n      ),\n      mergeMap((group) =>\n        group.pipe(\n          switchMap((payload) =>\n            this.userGroupConnector\n              .getAvailableOrgCustomers(\n                payload.userId,\n                payload.userGroupId,\n                payload.params\n              )\n              .pipe(\n                switchMap((customers: EntitiesModel<B2BUser>) => {\n                  const { values, page } = StateUtils.normalizeListPage(\n                    customers,\n                    'customerId'\n                  );\n                  return [\n                    new B2BUserActions.LoadB2BUserSuccess(values),\n                    new UserGroupActions.LoadAvailableOrgCustomersSuccess({\n                      userGroupId: payload.userGroupId,\n                      page,\n                      params: payload.params,\n                    }),\n                  ];\n                }),\n                catchError((error: HttpErrorResponse) =>\n                  of(\n                    new UserGroupActions.LoadAvailableOrgCustomersFail({\n                      userGroupId: payload.userGroupId,\n                      params: payload.params,\n                      error: normalizeHttpError(error),\n                    })\n                  )\n                )\n              )\n          )\n        )\n      )\n    )\n  );\n\n  createUserGroup$: Observable<\n    | UserGroupActions.CreateUserGroupSuccess\n    | UserGroupActions.CreateUserGroupFail\n    | OrganizationActions.OrganizationClearData\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserGroupActions.CREATE_USER_GROUP),\n      map((action: UserGroupActions.CreateUserGroup) => action.payload),\n      switchMap((payload) =>\n        this.userGroupConnector.create(payload.userId, payload.userGroup).pipe(\n          switchMap((data) => [\n            new UserGroupActions.CreateUserGroupSuccess(data),\n            new OrganizationActions.OrganizationClearData(),\n          ]),\n          catchError((error: HttpErrorResponse) =>\n            from([\n              new UserGroupActions.CreateUserGroupFail({\n                userGroupId: payload.userGroup.uid ?? '',\n                error: normalizeHttpError(error),\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ])\n          )\n        )\n      )\n    )\n  );\n\n  updateUserGroup$: Observable<\n    | UserGroupActions.UpdateUserGroupSuccess\n    | UserGroupActions.UpdateUserGroupFail\n    | OrganizationActions.OrganizationClearData\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserGroupActions.UPDATE_USER_GROUP),\n      map((action: UserGroupActions.UpdateUserGroup) => action.payload),\n      switchMap((payload) =>\n        this.userGroupConnector\n          .update(payload.userId, payload.userGroupId, payload.userGroup)\n          .pipe(\n            switchMap(() => [\n              // TODO: Workaround for empty PATCH response:\n              new UserGroupActions.UpdateUserGroupSuccess(payload.userGroup),\n              new OrganizationActions.OrganizationClearData(),\n            ]),\n            catchError((error: HttpErrorResponse) =>\n              from([\n                new UserGroupActions.UpdateUserGroupFail({\n                  userGroupId: payload.userGroup.uid ?? '',\n                  error: normalizeHttpError(error),\n                }),\n                new OrganizationActions.OrganizationClearData(),\n              ])\n            )\n          )\n      )\n    )\n  );\n\n  deleteUserGroup$: Observable<\n    | UserGroupActions.DeleteUserGroupSuccess\n    | UserGroupActions.DeleteUserGroupFail\n    | OrganizationActions.OrganizationClearData\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserGroupActions.DELETE_USER_GROUP),\n      map((action: UserGroupActions.DeleteUserGroup) => action.payload),\n      switchMap((payload) =>\n        this.userGroupConnector\n          .delete(payload.userId, payload.userGroupId)\n          .pipe(\n            switchMap((data) => [\n              new UserGroupActions.DeleteUserGroupSuccess(data),\n              new OrganizationActions.OrganizationClearData(),\n            ]),\n            catchError((error: HttpErrorResponse) =>\n              from([\n                new UserGroupActions.DeleteUserGroupFail({\n                  userGroupId: payload.userGroupId,\n                  error: normalizeHttpError(error),\n                }),\n                new OrganizationActions.OrganizationClearData(),\n              ])\n            )\n          )\n      )\n    )\n  );\n\n  assignPermissionToUserGroup$: Observable<\n    | UserGroupActions.AssignPermissionSuccess\n    | UserGroupActions.AssignPermissionFail\n    | OrganizationActions.OrganizationClearData\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserGroupActions.USER_GROUP_ASSIGN_PERMISSION),\n      map((action: UserGroupActions.AssignPermission) => action.payload),\n      mergeMap((payload) =>\n        this.userGroupConnector\n          .assignOrderApprovalPermission(\n            payload.userId,\n            payload.userGroupId,\n            payload.permissionUid\n          )\n          .pipe(\n            switchMap((data) => [\n              new UserGroupActions.AssignPermissionSuccess({\n                permissionUid: data.id,\n                selected: data.selected,\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ]),\n            catchError((error: HttpErrorResponse) =>\n              from([\n                new UserGroupActions.AssignPermissionFail({\n                  userGroupId: payload.userGroupId,\n                  permissionUid: payload.permissionUid,\n                  error: normalizeHttpError(error),\n                }),\n                new OrganizationActions.OrganizationClearData(),\n              ])\n            )\n          )\n      )\n    )\n  );\n\n  assignMemberUnitUserGroup$: Observable<\n    | UserGroupActions.AssignMemberSuccess\n    | UserGroupActions.AssignMemberFail\n    | OrganizationActions.OrganizationClearData\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserGroupActions.USER_GROUP_ASSIGN_MEMBER),\n      map((action: UserGroupActions.AssignMember) => action.payload),\n      mergeMap((payload) =>\n        this.userGroupConnector\n          .assignMember(payload.userId, payload.userGroupId, payload.customerId)\n          .pipe(\n            switchMap(() => [\n              new UserGroupActions.AssignMemberSuccess({\n                customerId: payload.customerId,\n                selected: true,\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ]),\n            catchError((error: HttpErrorResponse) =>\n              from([\n                new UserGroupActions.AssignMemberFail({\n                  userGroupId: payload.userGroupId,\n                  customerId: payload.customerId,\n                  error: normalizeHttpError(error),\n                }),\n                new OrganizationActions.OrganizationClearData(),\n              ])\n            )\n          )\n      )\n    )\n  );\n\n  unassignMemberFromUserGroup$: Observable<\n    | UserGroupActions.UnassignMemberSuccess\n    | UserGroupActions.UnassignMemberFail\n    | OrganizationActions.OrganizationClearData\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserGroupActions.USER_GROUP_UNASSIGN_MEMBER),\n      map((action: UserGroupActions.UnassignMember) => action.payload),\n      mergeMap((payload) =>\n        this.userGroupConnector\n          .unassignMember(\n            payload.userId,\n            payload.userGroupId,\n            payload.customerId\n          )\n          .pipe(\n            switchMap(() => [\n              new UserGroupActions.UnassignMemberSuccess({\n                customerId: payload.customerId,\n                selected: false,\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ]),\n            catchError((error: HttpErrorResponse) =>\n              from([\n                new UserGroupActions.UnassignMemberFail({\n                  userGroupId: payload.userGroupId,\n                  customerId: payload.customerId,\n                  error: normalizeHttpError(error),\n                }),\n                new OrganizationActions.OrganizationClearData(),\n              ])\n            )\n          )\n      )\n    )\n  );\n\n  unassignPermissionFromUserGroup$: Observable<\n    | UserGroupActions.UnassignPermissionSuccess\n    | UserGroupActions.UnassignPermissionFail\n    | OrganizationActions.OrganizationClearData\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserGroupActions.USER_GROUP_UNASSIGN_PERMISSION),\n      map((action: UserGroupActions.UnassignPermission) => action.payload),\n      mergeMap((payload) =>\n        this.userGroupConnector\n          .unassignOrderApprovalPermission(\n            payload.userId,\n            payload.userGroupId,\n            payload.permissionUid\n          )\n          .pipe(\n            switchMap((data) => [\n              new UserGroupActions.UnassignPermissionSuccess({\n                permissionUid: data.id,\n                selected: data.selected,\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ]),\n            catchError((error: HttpErrorResponse) =>\n              from([\n                new UserGroupActions.UnassignPermissionFail({\n                  userGroupId: payload.userGroupId,\n                  permissionUid: payload.permissionUid,\n                  error: normalizeHttpError(error),\n                }),\n                new OrganizationActions.OrganizationClearData(),\n              ])\n            )\n          )\n      )\n    )\n  );\n\n  unassignAllMembersFromUserGroup$: Observable<\n    | UserGroupActions.UnassignAllMembersSuccess\n    | UserGroupActions.UnassignAllMembersFail\n    | OrganizationActions.OrganizationClearData\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(UserGroupActions.USER_GROUP_UNASSIGN_ALL_MEMBERS),\n      map((action: UserGroupActions.UnassignAllMembers) => action.payload),\n      switchMap((payload) =>\n        this.userGroupConnector\n          .unassignAllMembers(payload.userId, payload.userGroupId)\n          .pipe(\n            switchMap(() => [\n              new UserGroupActions.UnassignAllMembersSuccess({\n                selected: false,\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ]),\n            catchError((error: HttpErrorResponse) =>\n              from([\n                new UserGroupActions.UnassignAllMembersFail({\n                  userGroupId: payload.userGroupId,\n                  error: normalizeHttpError(error),\n                }),\n                new OrganizationActions.OrganizationClearData(),\n              ])\n            )\n          )\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private userGroupConnector: UserGroupConnector\n  ) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { BudgetEffects } from './budget.effect';\nimport { OrgUnitEffects } from './org-unit.effect';\nimport { PermissionEffects } from './permission.effect';\nimport { CostCenterEffects } from './cost-center.effect';\nimport { B2BUserEffects } from './b2b-user.effect';\nimport { UserGroupEffects } from './user-group.effect';\n\nexport const effects: any[] = [\n  BudgetEffects,\n  OrgUnitEffects,\n  UserGroupEffects,\n  PermissionEffects,\n  CostCenterEffects,\n  B2BUserEffects,\n];\n\nexport * from './budget.effect';\nexport * from './org-unit.effect';\nexport * from './user-group.effect';\nexport * from './permission.effect';\nexport * from './cost-center.effect';\nexport * from './b2b-user.effect';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { B2BUser, ListModel, StateUtils } from '@spartacus/core';\nimport {\n  B2BUserActions,\n  OrgUnitActions,\n  UserGroupActions,\n} from '../actions/index';\n\nexport const b2bUserInitialState: B2BUser | undefined = undefined;\nexport const b2bUsersInitialState: ListModel | undefined = undefined;\n\nexport function b2bUserEntitiesReducer(\n  state = b2bUserInitialState,\n  action: StateUtils.LoaderAction\n): B2BUser | undefined {\n  switch (action.type) {\n    case B2BUserActions.LOAD_B2B_USER_SUCCESS:\n    case B2BUserActions.CREATE_B2B_USER_SUCCESS:\n    case B2BUserActions.UPDATE_B2B_USER_SUCCESS:\n      return action.payload;\n    case OrgUnitActions.ASSIGN_ROLE_SUCCESS:\n    case OrgUnitActions.ASSIGN_APPROVER_SUCCESS:\n      return {\n        ...state,\n        selected: action.payload?.selected,\n        roles: [...(state?.roles || []), action.payload?.roleId],\n      };\n    case OrgUnitActions.UNASSIGN_ROLE_SUCCESS:\n    case OrgUnitActions.UNASSIGN_APPROVER_SUCCESS:\n      return {\n        ...state,\n        selected: action.payload?.selected,\n        roles: [...(state?.roles || [])].filter(\n          (role) => role !== action.payload?.roleId\n        ),\n      };\n    case B2BUserActions.ASSIGN_B2B_USER_APPROVER_SUCCESS:\n    case B2BUserActions.UNASSIGN_B2B_USER_APPROVER_SUCCESS:\n    case UserGroupActions.USER_GROUP_ASSIGN_MEMBER_SUCCESS:\n    case UserGroupActions.USER_GROUP_UNASSIGN_MEMBER_SUCCESS:\n    case UserGroupActions.USER_GROUP_UNASSIGN_ALL_MEMBERS_SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n      };\n  }\n  return state;\n}\n\nexport function userListReducer(\n  state = b2bUsersInitialState,\n  action: StateUtils.LoaderAction\n): ListModel | undefined {\n  switch (action.type) {\n    case B2BUserActions.LOAD_B2B_USERS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\n\nexport function b2bUserApproverListReducer(\n  state = b2bUsersInitialState,\n  action: StateUtils.LoaderAction\n): ListModel | undefined {\n  switch (action.type) {\n    case B2BUserActions.LOAD_B2B_USER_APPROVERS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\n\nexport function b2bUserPermissionListReducer(\n  state = b2bUsersInitialState,\n  action: StateUtils.LoaderAction\n): ListModel | undefined {\n  switch (action.type) {\n    case B2BUserActions.LOAD_B2B_USER_PERMISSIONS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\n\nexport function b2bUserUserGroupListReducer(\n  state = b2bUsersInitialState,\n  action: StateUtils.LoaderAction\n): ListModel | undefined {\n  switch (action.type) {\n    case B2BUserActions.LOAD_B2B_USER_USER_GROUPS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ListModel, StateUtils } from '@spartacus/core';\nimport { Budget } from '../../model/budget.model';\nimport { BudgetActions, CostCenterActions } from '../actions/index';\n\nexport const budgetInitialState: Budget | undefined = undefined;\nexport const budgetsInitialState: ListModel | undefined = undefined;\n\nexport function budgetsEntitiesReducer(\n  state = budgetInitialState,\n  action: StateUtils.LoaderAction\n): Budget | undefined {\n  switch (action.type) {\n    case BudgetActions.LOAD_BUDGET_SUCCESS:\n    case BudgetActions.CREATE_BUDGET_SUCCESS:\n    case BudgetActions.UPDATE_BUDGET_SUCCESS:\n      return action.payload;\n    case CostCenterActions.UNASSIGN_BUDGET_SUCCESS:\n    case CostCenterActions.ASSIGN_BUDGET_SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n      };\n  }\n  return state;\n}\n\nexport function budgetsListReducer(\n  state = budgetsInitialState,\n  action: StateUtils.LoaderAction\n): ListModel | undefined {\n  switch (action.type) {\n    case BudgetActions.LOAD_BUDGETS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CostCenter, ListModel, StateUtils } from '@spartacus/core';\nimport { CostCenterActions } from '../actions/index';\n\nexport const costCenterInitialState: CostCenter | undefined = undefined;\nexport const costCentersInitialState: ListModel | undefined = undefined;\n\nexport function costCentersEntitiesReducer(\n  state = costCenterInitialState,\n  action: StateUtils.LoaderAction\n): CostCenter | undefined {\n  switch (action.type) {\n    case CostCenterActions.LOAD_COST_CENTER_SUCCESS:\n    case CostCenterActions.CREATE_COST_CENTER_SUCCESS:\n    case CostCenterActions.UPDATE_COST_CENTER_SUCCESS:\n      return action.payload;\n  }\n  return state;\n}\n\nexport function costCentersListReducer(\n  state = costCentersInitialState,\n  action: StateUtils.LoaderAction\n): ListModel | undefined {\n  switch (action.type) {\n    case CostCenterActions.LOAD_COST_CENTERS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\n\nexport function costCenterAssignedBudgetsListReducer(\n  state = costCentersInitialState,\n  action: StateUtils.LoaderAction\n): ListModel | undefined {\n  switch (action.type) {\n    case CostCenterActions.LOAD_ASSIGNED_BUDGETS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ListModel, StateUtils } from '@spartacus/core';\nimport { B2BUnitNode } from '../../model/unit-node.model';\nimport { OrgUnitActions } from '../actions/index';\n\nexport const orgUnitInitialState: B2BUnitNode | undefined = undefined;\nexport const orgUnitsInitialState: ListModel | undefined = undefined;\n\nexport function orgUnitEntitiesReducer(\n  state = orgUnitInitialState,\n  action: StateUtils.LoaderAction\n): B2BUnitNode | undefined {\n  switch (action.type) {\n    case OrgUnitActions.LOAD_ORG_UNIT_SUCCESS:\n    case OrgUnitActions.CREATE_ORG_UNIT_SUCCESS:\n      return action.payload;\n    case OrgUnitActions.UPDATE_ORG_UNIT_SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n      };\n  }\n  return state;\n}\n\nexport function orgUnitListReducer(\n  state = orgUnitsInitialState,\n  action: StateUtils.LoaderAction\n): any {\n  switch (action.type) {\n  }\n  return state;\n}\n\nexport function orgUnitUserListReducer(\n  state = orgUnitsInitialState,\n  action: StateUtils.LoaderAction\n): any {\n  switch (action.type) {\n    case OrgUnitActions.LOAD_ASSIGNED_USERS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\n\nexport function orgUnitAddressListReducer(\n  state = orgUnitsInitialState,\n  action: StateUtils.LoaderAction\n): ListModel | undefined {\n  switch (action.type) {\n    case OrgUnitActions.LOAD_ADDRESSES_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ListModel, StateUtils } from '@spartacus/core';\nimport { Permission } from '../../model/permission.model';\nimport {\n  B2BUserActions,\n  PermissionActions,\n  UserGroupActions,\n} from '../actions/index';\n\nexport const permissionInitialState: Permission | undefined = undefined;\nexport const permissionsInitialState: ListModel | undefined = undefined;\n\nexport function permissionsEntitiesReducer(\n  state = permissionInitialState,\n  action: StateUtils.LoaderAction\n): Permission | undefined {\n  switch (action.type) {\n    case PermissionActions.LOAD_PERMISSION_SUCCESS:\n    case PermissionActions.CREATE_PERMISSION_SUCCESS:\n    case PermissionActions.UPDATE_PERMISSION_SUCCESS:\n      return action.payload;\n    case UserGroupActions.USER_GROUP_ASSIGN_PERMISSION_SUCCESS:\n    case UserGroupActions.USER_GROUP_UNASSIGN_PERMISSION_SUCCESS:\n    case B2BUserActions.ASSIGN_B2B_USER_PERMISSION_SUCCESS:\n    case B2BUserActions.UNASSIGN_B2B_USER_PERMISSION_SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n      };\n  }\n  return state;\n}\n\nexport function permissionsListReducer(\n  state = permissionsInitialState,\n  action: StateUtils.LoaderAction\n): ListModel | undefined {\n  switch (action.type) {\n    case PermissionActions.LOAD_PERMISSIONS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ListModel, StateUtils } from '@spartacus/core';\nimport { UserGroup } from '../../model/user-group.model';\nimport { B2BUserActions } from '../actions/index';\nimport * as UserGroupActions from '../actions/user-group.action';\n\nexport const userGroupInitialState: UserGroup | undefined = undefined;\nexport const userGroupsInitialState: ListModel | undefined = undefined;\n\nexport function userGroupEntitiesReducer(\n  state = userGroupInitialState,\n  action: StateUtils.LoaderAction\n): UserGroup | undefined {\n  switch (action.type) {\n    case UserGroupActions.LOAD_USER_GROUP_SUCCESS:\n    case UserGroupActions.CREATE_USER_GROUP_SUCCESS:\n    case UserGroupActions.UPDATE_USER_GROUP_SUCCESS:\n      return action.payload;\n    case B2BUserActions.ASSIGN_B2B_USER_USER_GROUP_SUCCESS:\n    case B2BUserActions.UNASSIGN_B2B_USER_USER_GROUP_SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n      };\n  }\n  return state;\n}\n\nexport function userGroupsListReducer(\n  state = userGroupsInitialState,\n  action: StateUtils.LoaderAction\n): ListModel | undefined {\n  switch (action.type) {\n    case UserGroupActions.LOAD_USER_GROUPS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\n\nexport function userGroupAvailableOrderApprovalPermissionsListReducer(\n  state = userGroupsInitialState,\n  action: StateUtils.LoaderAction\n): ListModel | undefined {\n  switch (action.type) {\n    case UserGroupActions.LOAD_USER_GROUP_PERMISSIONS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\n\nexport function userGroupAvailablOrgCustomersListReducer(\n  state = userGroupsInitialState,\n  action: StateUtils.LoaderAction\n): ListModel | undefined {\n  switch (action.type) {\n    case UserGroupActions.LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken, Provider } from '@angular/core';\nimport {\n  Action,\n  ActionReducer,\n  ActionReducerMap,\n  combineReducers,\n  MetaReducer,\n} from '@ngrx/store';\nimport {\n  Address,\n  AuthActions,\n  B2BApprovalProcess,\n  B2BUnit,\n  B2BUser,\n  CostCenter,\n  ListModel,\n  OrderApprovalPermissionType,\n  SiteContextActions,\n  StateUtils,\n} from '@spartacus/core';\nimport { Budget } from '../../model/budget.model';\nimport { Permission } from '../../model/permission.model';\nimport { B2BUnitNode } from '../../model/unit-node.model';\nimport { UserGroup } from '../../model/user-group.model';\nimport { OrganizationActions } from '../actions';\nimport {\n  ADDRESS_ENTITIES,\n  ADDRESS_LIST,\n  B2B_USER_APPROVERS,\n  B2B_USER_ENTITIES,\n  B2B_USER_FEATURE,\n  B2B_USER_PERMISSIONS,\n  B2B_USER_USER_GROUPS,\n  BUDGET_ENTITIES,\n  BUDGET_FEATURE,\n  BUDGET_LIST,\n  COST_CENTER_ASSIGNED_BUDGETS,\n  COST_CENTER_ENTITIES,\n  COST_CENTER_FEATURE,\n  COST_CENTER_LIST,\n  OrganizationState,\n  ORG_UNIT_APPROVAL_PROCESSES_ENTITIES,\n  ORG_UNIT_ASSIGNED_USERS,\n  ORG_UNIT_ENTITIES,\n  ORG_UNIT_FEATURE,\n  ORG_UNIT_NODE_LIST,\n  ORG_UNIT_TREE_ENTITY,\n  PERMISSION_ENTITIES,\n  PERMISSION_FEATURE,\n  PERMISSION_LIST,\n  PERMISSION_TYPES_LIST,\n  USER_GROUP_AVAILABLE_CUSTOMERS,\n  USER_GROUP_ENTITIES,\n  USER_GROUP_FEATURE,\n  USER_GROUP_LIST,\n  USER_GROUP_PERMISSIONS,\n  USER_LIST,\n} from '../organization-state';\nimport {\n  b2bUserApproverListReducer,\n  b2bUserEntitiesReducer,\n  b2bUserPermissionListReducer,\n  b2bUserUserGroupListReducer,\n  userListReducer,\n} from './b2b-user.reducer';\nimport { budgetsEntitiesReducer, budgetsListReducer } from './budget.reducer';\nimport {\n  costCenterAssignedBudgetsListReducer,\n  costCentersEntitiesReducer,\n  costCentersListReducer,\n} from './cost-center.reducer';\nimport {\n  orgUnitAddressListReducer,\n  orgUnitEntitiesReducer,\n  orgUnitUserListReducer,\n} from './org-unit.reducer';\nimport {\n  permissionsEntitiesReducer,\n  permissionsListReducer,\n} from './permission.reducer';\nimport {\n  userGroupAvailableOrderApprovalPermissionsListReducer,\n  userGroupAvailablOrgCustomersListReducer,\n  userGroupEntitiesReducer,\n  userGroupsListReducer,\n} from './user-group.reducer';\n\nexport function getReducers(): ActionReducerMap<OrganizationState, any> {\n  return {\n    [BUDGET_FEATURE]: combineReducers({\n      entities: StateUtils.entityLoaderReducer<Budget, any>(\n        BUDGET_ENTITIES,\n        budgetsEntitiesReducer\n      ),\n      list: StateUtils.entityLoaderReducer<ListModel, any>(\n        BUDGET_LIST,\n        budgetsListReducer\n      ),\n    }),\n    [PERMISSION_FEATURE]: combineReducers({\n      entities: StateUtils.entityLoaderReducer<Permission, any>(\n        PERMISSION_ENTITIES,\n        permissionsEntitiesReducer\n      ),\n      list: StateUtils.entityLoaderReducer<ListModel, any>(\n        PERMISSION_LIST,\n        permissionsListReducer\n      ),\n      permissionTypes: StateUtils.entityLoaderReducer<\n        OrderApprovalPermissionType[]\n      >(PERMISSION_TYPES_LIST),\n    }),\n    [ORG_UNIT_FEATURE]: combineReducers({\n      entities: StateUtils.entityLoaderReducer<B2BUnit, any>(\n        ORG_UNIT_ENTITIES,\n        orgUnitEntitiesReducer\n      ),\n      availableOrgUnitNodes:\n        StateUtils.entityLoaderReducer<B2BUnitNode[]>(ORG_UNIT_NODE_LIST),\n      tree: StateUtils.entityLoaderReducer<B2BUnitNode>(ORG_UNIT_TREE_ENTITY),\n      approvalProcesses: StateUtils.entityLoaderReducer<B2BApprovalProcess[]>(\n        ORG_UNIT_APPROVAL_PROCESSES_ENTITIES\n      ),\n      users: StateUtils.entityLoaderReducer<ListModel, any>(\n        ORG_UNIT_ASSIGNED_USERS,\n        orgUnitUserListReducer\n      ),\n      addressList: StateUtils.entityLoaderReducer<ListModel, any>(\n        ADDRESS_LIST,\n        orgUnitAddressListReducer\n      ),\n      addressEntities: StateUtils.entityLoaderReducer<Address, any>(\n        ADDRESS_ENTITIES\n      ),\n    }),\n    [USER_GROUP_FEATURE]: combineReducers({\n      entities: StateUtils.entityLoaderReducer<UserGroup, any>(\n        USER_GROUP_ENTITIES,\n        userGroupEntitiesReducer\n      ),\n      list: StateUtils.entityLoaderReducer<ListModel, any>(\n        USER_GROUP_LIST,\n        userGroupsListReducer\n      ),\n      permissions: StateUtils.entityLoaderReducer<ListModel, any>(\n        USER_GROUP_PERMISSIONS,\n        userGroupAvailableOrderApprovalPermissionsListReducer\n      ),\n      customers: StateUtils.entityLoaderReducer<ListModel, any>(\n        USER_GROUP_AVAILABLE_CUSTOMERS,\n        userGroupAvailablOrgCustomersListReducer\n      ),\n    }),\n    [COST_CENTER_FEATURE]: combineReducers({\n      entities: StateUtils.entityLoaderReducer<CostCenter, any>(\n        COST_CENTER_ENTITIES,\n        costCentersEntitiesReducer\n      ),\n      list: StateUtils.entityLoaderReducer<ListModel, any>(\n        COST_CENTER_LIST,\n        costCentersListReducer\n      ),\n      budgets: StateUtils.entityLoaderReducer<ListModel, any>(\n        COST_CENTER_ASSIGNED_BUDGETS,\n        costCenterAssignedBudgetsListReducer\n      ),\n    }),\n    [B2B_USER_FEATURE]: combineReducers({\n      entities: StateUtils.entityLoaderReducer<B2BUser, any>(\n        B2B_USER_ENTITIES,\n        b2bUserEntitiesReducer\n      ),\n      list: StateUtils.entityLoaderReducer<ListModel, any>(\n        USER_LIST,\n        userListReducer\n      ),\n      approvers: StateUtils.entityLoaderReducer<ListModel, any>(\n        B2B_USER_APPROVERS,\n        b2bUserApproverListReducer\n      ),\n      permissions: StateUtils.entityLoaderReducer<ListModel, any>(\n        B2B_USER_PERMISSIONS,\n        b2bUserPermissionListReducer\n      ),\n      userGroups: StateUtils.entityLoaderReducer<ListModel, any>(\n        B2B_USER_USER_GROUPS,\n        b2bUserUserGroupListReducer\n      ),\n    }),\n  };\n}\n\nexport const reducerToken: InjectionToken<ActionReducerMap<OrganizationState>> =\n  new InjectionToken<ActionReducerMap<OrganizationState>>(\n    'OrganizationReducers'\n  );\n\nexport const reducerProvider: Provider = {\n  provide: reducerToken,\n  useFactory: getReducers,\n};\n\nexport function clearOrganizationState(\n  reducer: ActionReducer<OrganizationState, Action>\n): ActionReducer<OrganizationState, Action> {\n  return function (state, action) {\n    if (action.type === OrganizationActions.CLEAR_ORGANIZATION_DATA) {\n      state = undefined;\n    }\n    if (action.type === AuthActions.LOGOUT) {\n      state = undefined;\n    }\n    if (action.type === SiteContextActions.LANGUAGE_CHANGE) {\n      state = undefined;\n    }\n\n    return reducer(state, action);\n  };\n}\n\nexport const metaReducers: MetaReducer<any>[] = [clearOrganizationState];\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { effects } from './effects/index';\nimport { ORGANIZATION_FEATURE } from './organization-state';\nimport { metaReducers, reducerProvider, reducerToken } from './reducers/index';\n\n@NgModule({\n  imports: [\n    StoreModule.forFeature(ORGANIZATION_FEATURE, reducerToken, {\n      metaReducers,\n    }),\n    EffectsModule.forFeature(effects),\n  ],\n  providers: [reducerProvider],\n})\nexport class OrganizationStoreModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { HttpErrorHandler } from '@spartacus/core';\nimport { B2BUserConnector } from './connectors/b2b-user/b2b-user.connector';\nimport { BudgetConnector } from './connectors/budget/budget.connector';\nimport { CostCenterConnector } from './connectors/cost-center/cost-center.connector';\nimport { OrgUnitConnector } from './connectors/org-unit/org-unit.connector';\nimport { PermissionConnector } from './connectors/permission/permission.connector';\nimport { UserGroupConnector } from './connectors/user-group/user-group.connector';\nimport { OrganizationBadRequestHandler } from './http-interceptors/bad-request/bad-request.handler';\nimport { OrganizationConflictHandler } from './http-interceptors/conflict/conflict.handler';\nimport { OrganizationPageMetaModule } from './services/organization-page-meta.module';\nimport { OrganizationStoreModule } from './store/organization-store.module';\n\n@NgModule({\n  imports: [OrganizationPageMetaModule, OrganizationStoreModule],\n  providers: [\n    {\n      provide: HttpErrorHandler,\n      useExisting: OrganizationConflictHandler,\n      multi: true,\n    },\n    {\n      provide: HttpErrorHandler,\n      useExisting: OrganizationBadRequestHandler,\n      multi: true,\n    },\n  ],\n})\nexport class AdministrationCoreModule {\n  static forRoot(): ModuleWithProviders<AdministrationCoreModule> {\n    return {\n      ngModule: AdministrationCoreModule,\n      providers: [\n        BudgetConnector,\n        OrgUnitConnector,\n        UserGroupConnector,\n        PermissionConnector,\n        CostCenterConnector,\n        B2BUserConnector,\n      ],\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { Converter, B2BUser, EntitiesModel } from '@spartacus/core';\n\nexport const B2B_USER_NORMALIZER = new InjectionToken<Converter<any, B2BUser>>(\n  'B2BUserNormalizer'\n);\n\nexport const B2B_USER_SERIALIZER = new InjectionToken<Converter<B2BUser, any>>(\n  'B2BUserSerializer'\n);\n\nexport const B2B_USERS_NORMALIZER = new InjectionToken<\n  Converter<any, EntitiesModel<B2BUser>>\n>('UserListNormalizer');\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './b2b-user.connector';\nexport * from './b2b-user.adapter';\nexport * from './converters';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { Budget } from '../../model/budget.model';\nimport { Converter, EntitiesModel } from '@spartacus/core';\n\nexport const BUDGET_NORMALIZER = new InjectionToken<Converter<any, Budget>>(\n  'BudgetNormalizer'\n);\nexport const BUDGETS_NORMALIZER = new InjectionToken<\n  Converter<any, EntitiesModel<Budget>>\n>('BudgetsListNormalizer');\n\nexport const BUDGET_SERIALIZER = new InjectionToken<Converter<Budget, any>>(\n  'BudgetSerializer'\n);\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './budget.connector';\nexport * from './budget.adapter';\nexport * from './converters';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './cost-center.connector';\nexport * from './cost-center.adapter';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { B2BApprovalProcess, B2BUnit, Converter } from '@spartacus/core';\nimport { B2BUnitNode } from '../../model/unit-node.model';\n\nexport const B2BUNIT_NODE_NORMALIZER = new InjectionToken<\n  Converter<any, B2BUnitNode>\n>('B2BUnitNodeNormalizer');\n\nexport const B2BUNIT_NODE_LIST_NORMALIZER = new InjectionToken<\n  Converter<any, B2BUnitNode[]>\n>('B2BUnitNodeListNormalizer');\n\nexport const B2BUNIT_NORMALIZER = new InjectionToken<Converter<any, B2BUnit>>(\n  'B2BUnitNormalizer'\n);\n\nexport const B2BUNIT_SERIALIZER = new InjectionToken<Converter<B2BUnit, any>>(\n  'B2BUnitSerializer'\n);\n\nexport const B2BUNIT_APPROVAL_PROCESSES_NORMALIZER = new InjectionToken<\n  Converter<any, B2BApprovalProcess[]>\n>('B2BUnitApprovalProcessNormalizer');\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './org-unit.adapter';\nexport * from './org-unit.connector';\nexport * from './converters';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport {\n  Converter,\n  EntitiesModel,\n  OrderApprovalPermissionType,\n} from '@spartacus/core';\nimport { Permission } from '../../model/permission.model';\n\nexport const PERMISSION_NORMALIZER = new InjectionToken<\n  Converter<any, Permission>\n>('PermissionNormalizer');\n\nexport const PERMISSIONS_NORMALIZER = new InjectionToken<\n  Converter<any, EntitiesModel<Permission>>\n>('PermissionsListNormalizer');\n\nexport const PERMISSION_TYPE_NORMALIZER = new InjectionToken<\n  Converter<any, OrderApprovalPermissionType>\n>('PermissionTypeNormalizer');\n\nexport const PERMISSION_TYPES_NORMALIZER = new InjectionToken<\n  Converter<any, OrderApprovalPermissionType[]>\n>('PermissionTypesListNormalizer');\n\nexport const PERMISSION_SERIALIZER = new InjectionToken<\n  Converter<Permission, any>\n>('PermissionSerializer');\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './permission.connector';\nexport * from './permission.adapter';\nexport * from './converters';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { Converter, EntitiesModel } from '@spartacus/core';\nimport { UserGroup } from '../../model/user-group.model';\n\nexport const USER_GROUP_NORMALIZER = new InjectionToken<\n  Converter<any, UserGroup>\n>('UserGroupNormalizer');\n\nexport const USER_GROUP_SERIALIZER = new InjectionToken<\n  Converter<UserGroup, any>\n>('UserGroupSerializer');\n\nexport const USER_GROUPS_NORMALIZER = new InjectionToken<\n  Converter<any, EntitiesModel<UserGroup>>\n>('UserGroupListNormalizer');\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './user-group.connector';\nexport * from './user-group.adapter';\nexport * from './converters';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './b2b-user/index';\nexport * from './budget/index';\nexport * from './cost-center/index';\nexport * from './org-unit/index';\nexport * from './permission/index';\nexport * from './user-group/index';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport {\n  B2BUserRole,\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n} from '@spartacus/core';\nimport { UserAccountFacade } from '@spartacus/user/account/root';\nimport { Observable } from 'rxjs';\nimport { filter, map, pluck } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminGuard implements CanActivate {\n  constructor(\n    protected userAccountFacade: UserAccountFacade,\n    protected routingService: RoutingService,\n    protected globalMessageService: GlobalMessageService\n  ) {}\n\n  canActivate(): Observable<boolean> {\n    return this.userAccountFacade.get().pipe(\n      filter((user) => !!user && Object.keys(user).length > 0),\n      pluck('roles'),\n      map((roles) => {\n        const hasRole =\n          Array.isArray(roles) && roles.includes(B2BUserRole.ADMIN);\n\n        if (!hasRole) {\n          // routing as temporary solution until /organization won't\n          // have set up proper permission on backend\n          this.routingService.go({ cxRoute: 'organization' });\n\n          this.globalMessageService.add(\n            { key: 'organization.notification.noSufficientPermissions' },\n            GlobalMessageType.MSG_TYPE_WARNING\n          );\n        }\n\n        return hasRole;\n      })\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './admin.guard';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './bad-request/bad-request.handler';\nexport * from './conflict/conflict.handler';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport enum LoadStatus {\n  SUCCESS,\n  ERROR,\n}\n\nexport interface OrganizationItemStatus<T> {\n  status: LoadStatus | null;\n  item: T | undefined;\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  B2BUnit,\n  Currency,\n  OrderApprovalPermissionType,\n} from '@spartacus/core';\n\nexport enum Period {\n  DAY = 'DAY',\n  WEEK = 'WEEK',\n  MONTH = 'MONTH',\n  QUARTER = 'QUARTER',\n  YEAR = 'YEAR',\n}\n\nexport interface Permission {\n  active?: boolean;\n  code?: string;\n  currency?: Currency;\n  orderApprovalPermissionType?: OrderApprovalPermissionType;\n  orgUnit?: B2BUnit;\n  periodRange?: Period;\n  selected?: boolean;\n  threshold?: number;\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './budget.model';\nexport * from './organization-item-status';\nexport * from './permission.model';\nexport * from './unit-node.model';\nexport * from './user-group.model';\n// Imported for side effects (module augmentation)\nimport './augmented-core.model';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createFeatureSelector, MemoizedSelector } from '@ngrx/store';\nimport {\n  ORGANIZATION_FEATURE,\n  OrganizationState,\n  StateWithOrganization,\n} from '../organization-state';\n\nexport const getOrganizationState: MemoizedSelector<\n  StateWithOrganization,\n  OrganizationState\n> = createFeatureSelector<OrganizationState>(ORGANIZATION_FEATURE);\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport {\n  EntitiesModel,\n  SearchConfig,\n  StateUtils,\n  OrderApprovalPermissionType,\n} from '@spartacus/core';\nimport { Permission } from '../../model/permission.model';\nimport {\n  OrganizationState,\n  PermissionManagement,\n  PERMISSION_FEATURE,\n  PERMISSION_TYPES,\n  StateWithOrganization,\n} from '../organization-state';\nimport { getOrganizationState } from './feature.selector';\n\nexport const getPermissionManagementState: MemoizedSelector<\n  StateWithOrganization,\n  PermissionManagement\n> = createSelector(\n  getOrganizationState,\n  (state: OrganizationState) => state[PERMISSION_FEATURE]\n);\n\nexport const getPermissionsState: MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.EntityLoaderState<Permission>\n> = createSelector(\n  getPermissionManagementState,\n  (state: PermissionManagement) => state && state.entities\n);\n\nexport const getPermissionState = (\n  permissionId: string\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<Permission>\n> =>\n  createSelector(\n    getPermissionsState,\n    (state: StateUtils.EntityLoaderState<Permission>) =>\n      StateUtils.entityLoaderStateSelector(state, permissionId)\n  );\n\nexport const getPermissionTypesState: MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.EntityLoaderState<OrderApprovalPermissionType[]>\n> = createSelector(\n  getPermissionManagementState,\n  (state: PermissionManagement) => state && state.permissionTypes\n);\n\nexport const getPermission = (\n  permissionCode: string\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<Permission>\n> =>\n  createSelector(\n    getPermissionsState,\n    (state: StateUtils.EntityLoaderState<Permission>) =>\n      StateUtils.entityLoaderStateSelector(state, permissionCode)\n  );\n\nexport const getPermissionValue = (\n  permissionCode: string\n): MemoizedSelector<StateWithOrganization, Permission> => {\n  return createSelector(getPermission(permissionCode), (permissionState) =>\n    StateUtils.loaderValueSelector(permissionState)\n  );\n};\n\nexport const getPermissionList = (\n  params: SearchConfig\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<EntitiesModel<Permission>>\n> =>\n  createSelector(getPermissionManagementState, (state: PermissionManagement) =>\n    StateUtils.denormalizeSearch<Permission>(state, params)\n  );\n\nexport const getPermissionTypes = (): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<OrderApprovalPermissionType[]>\n> =>\n  createSelector(\n    getPermissionTypesState,\n    (state: StateUtils.EntityLoaderState<OrderApprovalPermissionType[]>) =>\n      StateUtils.entityLoaderStateSelector(state, PERMISSION_TYPES)\n  );\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport {\n  B2BUser,\n  EntitiesModel,\n  SearchConfig,\n  StateUtils,\n} from '@spartacus/core';\nimport { Permission } from '../../model/permission.model';\nimport { UserGroup } from '../../model/user-group.model';\nimport {\n  B2BUserManagement,\n  B2B_USER_FEATURE,\n  OrganizationState,\n  StateWithOrganization,\n  USER_GROUP_FEATURE,\n} from '../organization-state';\nimport { getOrganizationState } from './feature.selector';\nimport { getPermissionsState } from './permission.selector';\n\nexport const getB2BUserManagementState: MemoizedSelector<\n  StateWithOrganization,\n  B2BUserManagement\n> = createSelector(\n  getOrganizationState,\n  (state: OrganizationState) => state[B2B_USER_FEATURE]\n);\n\nexport const getB2BUsersState: MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.EntityLoaderState<B2BUser>\n> = createSelector(\n  getB2BUserManagementState,\n  (state: B2BUserManagement) => state && state.entities\n);\n\nexport const getB2BUserState = (\n  orgCustomerId: string\n): MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<B2BUser>> =>\n  createSelector(\n    getB2BUsersState,\n    (state: StateUtils.EntityLoaderState<B2BUser>) =>\n      StateUtils.entityLoaderStateSelector(state, orgCustomerId)\n  );\n\nexport const getB2BUserValue = (\n  orgCustomerId: string\n): MemoizedSelector<StateWithOrganization, B2BUser> => {\n  return createSelector(getB2BUserState(orgCustomerId), (b2BUserState) =>\n    StateUtils.loaderValueSelector(b2BUserState)\n  );\n};\n\nexport const getUserList = (\n  params: SearchConfig\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<EntitiesModel<B2BUser>>\n> =>\n  createSelector(getB2BUserManagementState, (state: B2BUserManagement) =>\n    StateUtils.denormalizeSearch<B2BUser>(state, params)\n  );\n\nexport const getB2BUserApprovers = (\n  code: string,\n  params: SearchConfig\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<EntitiesModel<B2BUser>>\n> =>\n  createSelector(\n    getB2BUserManagementState,\n    getB2BUsersState,\n    (\n      state: B2BUserManagement,\n      approvers: StateUtils.EntityLoaderState<B2BUser>\n    ) =>\n      StateUtils.denormalizeCustomB2BSearch(\n        state.approvers,\n        approvers,\n        params,\n        code\n      )\n  );\n\nexport const getB2BUserPermissions = (\n  code: string,\n  params: SearchConfig\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<EntitiesModel<Permission>>\n> =>\n  createSelector(\n    getB2BUserManagementState,\n    getPermissionsState,\n    (\n      state: B2BUserManagement,\n      permissions: StateUtils.EntityLoaderState<Permission>\n    ) =>\n      StateUtils.denormalizeCustomB2BSearch(\n        state.permissions,\n        permissions,\n        params,\n        code\n      )\n  );\n\n// avoid circular dependency\nconst getUserGroupsState: MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.EntityLoaderState<UserGroup>\n> = createSelector(\n  getOrganizationState,\n  (state: OrganizationState) => state[USER_GROUP_FEATURE].entities\n);\n\nexport const getB2BUserUserGroups = (\n  code: string,\n  params: SearchConfig\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<EntitiesModel<UserGroup>>\n> =>\n  createSelector(\n    getB2BUserManagementState,\n    getUserGroupsState,\n    (\n      state: B2BUserManagement,\n      userGroups: StateUtils.EntityLoaderState<UserGroup>\n    ) =>\n      StateUtils.denormalizeCustomB2BSearch(\n        state.userGroups,\n        userGroups,\n        params,\n        code\n      )\n  );\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { StateUtils } from '@spartacus/core';\nimport { Observable, queueScheduler } from 'rxjs';\nimport { filter, map, observeOn, pairwise } from 'rxjs/operators';\nimport {\n  LoadStatus,\n  OrganizationItemStatus,\n} from '../model/organization-item-status';\n\nexport function getItemStatus<T>(\n  itemState: Observable<StateUtils.LoaderState<T>>\n): Observable<OrganizationItemStatus<T>> {\n  return itemState.pipe(\n    observeOn(queueScheduler),\n    pairwise(),\n    filter(([previousState]) => previousState.loading ?? false),\n    map(([_previousState, currentState]) => ({\n      status: currentState.success\n        ? LoadStatus.SUCCESS\n        : currentState.error\n        ? LoadStatus.ERROR\n        : null,\n      item: currentState.value,\n    }))\n  );\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport {\n  B2BUser,\n  B2BUserRole,\n  EntitiesModel,\n  SearchConfig,\n  StateUtils,\n  UserIdService,\n} from '@spartacus/core';\nimport { Observable, queueScheduler, using } from 'rxjs';\nimport { auditTime, filter, map, observeOn, tap } from 'rxjs/operators';\nimport { OrganizationItemStatus } from '../model/organization-item-status';\nimport { Permission } from '../model/permission.model';\nimport { UserGroup } from '../model/user-group.model';\nimport { B2BUserActions } from '../store/actions/index';\nimport { StateWithOrganization } from '../store/organization-state';\nimport {\n  getB2BUserApprovers,\n  getB2BUserPermissions,\n  getB2BUserState,\n  getB2BUserUserGroups,\n  getB2BUserValue,\n  getUserList,\n} from '../store/selectors/b2b-user.selector';\nimport { getItemStatus } from '../utils/get-item-status';\n\n@Injectable({ providedIn: 'root' })\nexport class B2BUserService {\n  constructor(\n    protected store: Store<StateWithOrganization>,\n    protected userIdService: UserIdService\n  ) {}\n\n  load(orgCustomerId: string) {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new B2BUserActions.LoadB2BUser({\n            userId,\n            orgCustomerId,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  loadList(params: SearchConfig): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new B2BUserActions.LoadB2BUsers({ userId, params })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  private getB2BUserValue(orgCustomerId: string): Observable<B2BUser> {\n    return this.store\n      .select(getB2BUserValue(orgCustomerId))\n      .pipe(filter((b2bUser) => Boolean(b2bUser)));\n  }\n\n  get(orgCustomerId: string): Observable<B2BUser> {\n    const loading$ = this.getB2BUserState(orgCustomerId).pipe(\n      auditTime(0),\n      tap((state) => {\n        if (!(state.loading || state.success || state.error)) {\n          this.load(orgCustomerId);\n        }\n      })\n    );\n\n    return using(\n      () => loading$.subscribe(),\n      () => this.getB2BUserValue(orgCustomerId)\n    );\n  }\n\n  getList(\n    params: SearchConfig\n  ): Observable<EntitiesModel<B2BUser> | undefined> {\n    return this.getUserList(params).pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<EntitiesModel<B2BUser>>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadList(params);\n        }\n      }),\n      filter((process: StateUtils.LoaderState<EntitiesModel<B2BUser>>) =>\n        Boolean(process.success || process.error)\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  getErrorState(orgCustomerId: string): Observable<boolean> {\n    return this.getB2BUserState(orgCustomerId).pipe(\n      map((state) => state.error ?? false)\n    );\n  }\n\n  create(orgCustomer: B2BUser): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new B2BUserActions.CreateB2BUser({\n            userId,\n            orgCustomer,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  update(orgCustomerId: string, orgCustomer: B2BUser): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new B2BUserActions.UpdateB2BUser({\n            userId,\n            orgCustomerId,\n            orgCustomer,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  getLoadingStatus(\n    orgCustomerId: string\n  ): Observable<OrganizationItemStatus<B2BUser>> {\n    return getItemStatus(this.getB2BUserState(orgCustomerId));\n  }\n\n  loadApprovers(orgCustomerId: string, params: SearchConfig): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new B2BUserActions.LoadB2BUserApprovers({\n            userId,\n            orgCustomerId,\n            params,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  getApprovers(\n    orgCustomerId: string,\n    params: SearchConfig\n  ): Observable<EntitiesModel<B2BUser> | undefined> {\n    return this.getB2BUserApproverList(orgCustomerId, params).pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<EntitiesModel<B2BUser>>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadApprovers(orgCustomerId, params);\n        }\n      }),\n      filter((process: StateUtils.LoaderState<EntitiesModel<B2BUser>>) =>\n        Boolean(process.success || process.error)\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  assignApprover(orgCustomerId: string, approverId: string): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new B2BUserActions.AssignB2BUserApprover({\n            userId,\n            orgCustomerId,\n            approverId,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  unassignApprover(orgCustomerId: string, approverId: string): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new B2BUserActions.UnassignB2BUserApprover({\n            userId,\n            orgCustomerId,\n            approverId,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  loadPermissions(orgCustomerId: string, params: SearchConfig): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new B2BUserActions.LoadB2BUserPermissions({\n            userId,\n            orgCustomerId,\n            params,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  getPermissions(\n    orgCustomerId: string,\n    params: SearchConfig\n  ): Observable<EntitiesModel<Permission> | undefined> {\n    return this.getB2BUserPermissionList(orgCustomerId, params).pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<EntitiesModel<Permission>>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadPermissions(orgCustomerId, params);\n        }\n      }),\n      filter((process: StateUtils.LoaderState<EntitiesModel<Permission>>) =>\n        Boolean(process.success || process.error)\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  assignPermission(orgCustomerId: string, permissionId: string): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new B2BUserActions.AssignB2BUserPermission({\n            userId,\n            orgCustomerId,\n            permissionId,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  unassignPermission(orgCustomerId: string, permissionId: string): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new B2BUserActions.UnassignB2BUserPermission({\n            userId,\n            orgCustomerId,\n            permissionId,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  loadUserGroups(orgCustomerId: string, params: SearchConfig): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new B2BUserActions.LoadB2BUserUserGroups({\n            userId,\n            orgCustomerId,\n            params,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  getUserGroups(\n    orgCustomerId: string,\n    params: SearchConfig\n  ): Observable<EntitiesModel<UserGroup> | undefined> {\n    return this.getB2BUserUserGroupList(orgCustomerId, params).pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<EntitiesModel<UserGroup>>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadUserGroups(orgCustomerId, params);\n        }\n      }),\n      filter((process: StateUtils.LoaderState<EntitiesModel<UserGroup>>) =>\n        Boolean(process.success || process.error)\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  assignUserGroup(orgCustomerId: string, userGroupId: string): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new B2BUserActions.AssignB2BUserUserGroup({\n            userId,\n            orgCustomerId,\n            userGroupId,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  unassignUserGroup(orgCustomerId: string, userGroupId: string): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new B2BUserActions.UnassignB2BUserUserGroup({\n            userId,\n            orgCustomerId,\n            userGroupId,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  /**\n   * Get list of all roles for B2BUser sorted by increasing privileges.\n   *\n   * This list is not driven by the backend (lack of API), but reflects roles\n   * from the backend: `b2badmingroup`, `b2bcustomergroup`, `b2bmanagergroup` and `b2bapprovergroup`.\n   *\n   * If you reconfigure those roles in the backend or extend the list, you should change\n   * this implementation accordingly.\n   */\n  getAllRoles(): B2BUserRole[] {\n    return [\n      B2BUserRole.CUSTOMER,\n      B2BUserRole.MANAGER,\n      B2BUserRole.APPROVER,\n      B2BUserRole.ADMIN,\n    ];\n  }\n\n  private getB2BUserApproverList(\n    orgCustomerId: string,\n    params: SearchConfig\n  ): Observable<StateUtils.LoaderState<EntitiesModel<B2BUser>>> {\n    return this.store.select(getB2BUserApprovers(orgCustomerId, params));\n  }\n\n  private getB2BUserPermissionList(\n    orgCustomerId: string,\n    params: SearchConfig\n  ): Observable<StateUtils.LoaderState<EntitiesModel<Permission>>> {\n    return this.store.select(getB2BUserPermissions(orgCustomerId, params));\n  }\n\n  private getB2BUserUserGroupList(\n    orgCustomerId: string,\n    params: SearchConfig\n  ): Observable<StateUtils.LoaderState<EntitiesModel<UserGroup>>> {\n    return this.store.select(getB2BUserUserGroups(orgCustomerId, params));\n  }\n\n  private getB2BUserState(\n    orgCustomerId: string\n  ): Observable<StateUtils.LoaderState<B2BUser>> {\n    return this.store.select(getB2BUserState(orgCustomerId));\n  }\n\n  private getUserList(\n    params: SearchConfig\n  ): Observable<StateUtils.LoaderState<EntitiesModel<B2BUser>>> {\n    return this.store.select(getUserList(params));\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { EntitiesModel, SearchConfig, StateUtils } from '@spartacus/core';\nimport { Budget } from '../../model/budget.model';\nimport {\n  BUDGET_FEATURE,\n  BudgetManagement,\n  OrganizationState,\n  StateWithOrganization,\n} from '../organization-state';\nimport { getOrganizationState } from './feature.selector';\n\nexport const getBudgetManagementState: MemoizedSelector<\n  StateWithOrganization,\n  BudgetManagement\n> = createSelector(\n  getOrganizationState,\n  (state: OrganizationState) => state[BUDGET_FEATURE]\n);\n\nexport const getBudgetsState: MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.EntityLoaderState<Budget>\n> = createSelector(\n  getBudgetManagementState,\n  (state: BudgetManagement) => state && state.entities\n);\n\nexport const getBudget = (\n  budgetCode: string\n): MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<Budget>> =>\n  createSelector(\n    getBudgetsState,\n    (state: StateUtils.EntityLoaderState<Budget>) =>\n      StateUtils.entityLoaderStateSelector(state, budgetCode)\n  );\n\nexport const getBudgetValue = (\n  budgetCode: string\n): MemoizedSelector<StateWithOrganization, Budget> => {\n  return createSelector(getBudget(budgetCode), (budgetState) =>\n    StateUtils.loaderValueSelector(budgetState)\n  );\n};\n\nexport const getBudgetList = (\n  params: SearchConfig\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<EntitiesModel<Budget>>\n> =>\n  createSelector(getBudgetManagementState, (state: BudgetManagement) =>\n    StateUtils.denormalizeSearch<Budget>(state, params)\n  );\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport {\n  Address,\n  B2BApprovalProcess,\n  B2BUnit,\n  B2BUser,\n  EntitiesModel,\n  SearchConfig,\n  StateUtils,\n} from '@spartacus/core';\nimport { B2BUnitNode } from '../../model/unit-node.model';\nimport {\n  OrganizationState,\n  OrgUnits,\n  ORG_UNIT_APPROVAL_PROCESSES,\n  ORG_UNIT_FEATURE,\n  ORG_UNIT_NODES,\n  ORG_UNIT_TREE,\n  StateWithOrganization,\n} from '../organization-state';\nimport { getB2BUsersState } from './b2b-user.selector';\nimport { getOrganizationState } from './feature.selector';\n\nexport const getB2BOrgUnitState: MemoizedSelector<\n  StateWithOrganization,\n  OrgUnits\n> = createSelector(\n  getOrganizationState,\n  (state: OrganizationState) => state[ORG_UNIT_FEATURE]\n);\n\nexport const getOrgUnitsNodeListState: MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.EntityLoaderState<B2BUnitNode[]>\n> = createSelector(\n  getB2BOrgUnitState,\n  (state: OrgUnits) => state && state.availableOrgUnitNodes\n);\n\nexport const getOrgUnitsState: MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.EntityLoaderState<B2BUnitNode>\n> = createSelector(\n  getB2BOrgUnitState,\n  (state: OrgUnits) => state && state.entities\n);\n\nexport const getOrgUnitsTreeState: MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.EntityLoaderState<B2BUnitNode>\n> = createSelector(\n  getB2BOrgUnitState,\n  (state: OrgUnits) => state && state.tree\n);\n\nexport const getAddressesState: MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.EntityLoaderState<Address>\n> = createSelector(\n  getB2BOrgUnitState,\n  (state: OrgUnits) => state && state.addressEntities\n);\n\nexport const getApprovalProcessesState: MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.EntityLoaderState<B2BApprovalProcess[]>\n> = createSelector(\n  getB2BOrgUnitState,\n  (state: OrgUnits) => state && state.approvalProcesses\n);\n\nexport const getOrgUnit = (\n  orgUnitId: string\n): MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<B2BUnit>> =>\n  createSelector(\n    getOrgUnitsState,\n    (state: StateUtils.EntityLoaderState<B2BUnit>) =>\n      StateUtils.entityLoaderStateSelector(state, orgUnitId)\n  );\n\nexport const getOrgUnitValue = (\n  orgUnitId: string\n): MemoizedSelector<StateWithOrganization, B2BUnit> => {\n  return createSelector(getOrgUnit(orgUnitId), (orgUnitState) =>\n    StateUtils.loaderValueSelector(orgUnitState)\n  );\n};\n\nexport const getOrgUnitState = (\n  orgUnitId: string\n): MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<B2BUnit>> =>\n  createSelector(\n    getOrgUnitsState,\n    (state: StateUtils.EntityLoaderState<B2BUnit>) =>\n      StateUtils.entityLoaderStateSelector(state, orgUnitId)\n  );\n\nexport const getOrgUnitList = (): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<B2BUnitNode[]>\n> =>\n  createSelector(\n    getOrgUnitsNodeListState,\n    (state: StateUtils.EntityLoaderState<B2BUnitNode[]>) =>\n      StateUtils.entityLoaderStateSelector(state, ORG_UNIT_NODES)\n  );\n\nexport const getOrgUnitTree = (): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<B2BUnitNode>\n> =>\n  createSelector(\n    getOrgUnitsTreeState,\n    (state: StateUtils.EntityLoaderState<B2BUnitNode>) =>\n      StateUtils.entityLoaderStateSelector(state, ORG_UNIT_TREE)\n  );\n\nexport const getApprovalProcesses = (): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<B2BApprovalProcess[]>\n> =>\n  createSelector(\n    getApprovalProcessesState,\n    (state: StateUtils.EntityLoaderState<B2BApprovalProcess[]>) =>\n      StateUtils.entityLoaderStateSelector(state, ORG_UNIT_APPROVAL_PROCESSES)\n  );\n\nexport const getAssignedUsers = (\n  orgUnitId: string,\n  roleId: string,\n  params: SearchConfig\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<EntitiesModel<B2BUser>>\n> =>\n  createSelector(\n    getB2BOrgUnitState,\n    getB2BUsersState,\n    (state: OrgUnits, users: StateUtils.EntityLoaderState<B2BUser>) =>\n      StateUtils.denormalizeCustomB2BSearch(\n        state.users,\n        users,\n        params,\n        `${orgUnitId},${roleId}`\n      )\n  );\n\nexport const getB2BAddresses = (\n  orgUnitId: string,\n  params?: SearchConfig\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<EntitiesModel<Address>>\n> =>\n  createSelector(getB2BOrgUnitState, (state: OrgUnits) =>\n    StateUtils.denormalizeCustomB2BSearch(\n      state.addressList,\n      state.addressEntities,\n      params,\n      orgUnitId\n    )\n  );\n\nexport const getB2BAddress = (\n  addressId: string\n): MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<Address>> =>\n  createSelector(\n    getAddressesState,\n    (state: StateUtils.EntityLoaderState<Address>) =>\n      StateUtils.entityLoaderStateSelector(state, addressId)\n  );\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport {\n  B2BUser,\n  EntitiesModel,\n  SearchConfig,\n  StateUtils,\n} from '@spartacus/core';\nimport { Permission } from '../../model/permission.model';\nimport { UserGroup } from '../../model/user-group.model';\nimport {\n  OrganizationState,\n  StateWithOrganization,\n  UserGroupManagement,\n  USER_GROUP_FEATURE,\n} from '../organization-state';\nimport { getB2BUsersState } from './b2b-user.selector';\nimport { getOrganizationState } from './feature.selector';\nimport { getPermissionsState } from './permission.selector';\n\nexport const getUserGroupManagementState: MemoizedSelector<\n  StateWithOrganization,\n  UserGroupManagement\n> = createSelector(\n  getOrganizationState,\n  (state: OrganizationState) => state[USER_GROUP_FEATURE]\n);\n\nexport const getUserGroupsState: MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.EntityLoaderState<UserGroup>\n> = createSelector(\n  getUserGroupManagementState,\n  (state: UserGroupManagement) => state && state.entities\n);\n\nexport const getUserGroup = (\n  userGroupId: string\n): MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<UserGroup>> =>\n  createSelector(\n    getUserGroupsState,\n    (state: StateUtils.EntityLoaderState<UserGroup>) =>\n      StateUtils.entityLoaderStateSelector(state, userGroupId)\n  );\n\nexport const getUserGroupValue = (\n  userGroupId: string\n): MemoizedSelector<StateWithOrganization, UserGroup> => {\n  return createSelector(getUserGroup(userGroupId), (userGroupState) =>\n    StateUtils.loaderValueSelector(userGroupState)\n  );\n};\n\nexport const getUserGroupList = (\n  params: SearchConfig\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<EntitiesModel<UserGroup>>\n> =>\n  createSelector(getUserGroupManagementState, (state: UserGroupManagement) =>\n    StateUtils.denormalizeSearch<UserGroup>(state, params)\n  );\n\nexport const getAvailableOrgCustomers = (\n  code: string,\n  params: SearchConfig\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<EntitiesModel<B2BUser>>\n> =>\n  createSelector(\n    getUserGroupManagementState,\n    getB2BUsersState,\n    (\n      state: UserGroupManagement,\n      customers: StateUtils.EntityLoaderState<B2BUser>\n    ) =>\n      StateUtils.denormalizeCustomB2BSearch(\n        state.customers,\n        customers,\n        params,\n        code\n      )\n  );\n\nexport const getAvailableOrderApprovalPermissions = (\n  code: string,\n  params: SearchConfig\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<EntitiesModel<Permission>>\n> =>\n  createSelector(\n    getUserGroupManagementState,\n    getPermissionsState,\n    (\n      state: UserGroupManagement,\n      permissions: StateUtils.EntityLoaderState<Permission>\n    ) =>\n      StateUtils.denormalizeCustomB2BSearch(\n        state.permissions,\n        permissions,\n        params,\n        code\n      )\n  );\n\nexport const getUserGroupState = (\n  code: string\n): MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<UserGroup>> =>\n  createSelector(\n    getUserGroupsState,\n    (state: StateUtils.EntityLoaderState<UserGroup>) =>\n      StateUtils.entityLoaderStateSelector(state, code)\n  );\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { createSelector, MemoizedSelector } from '@ngrx/store';\nimport {\n  CostCenter,\n  EntitiesModel,\n  SearchConfig,\n  StateUtils,\n} from '@spartacus/core';\nimport { Budget } from '../../model/budget.model';\nimport {\n  CostCenterManagement,\n  COST_CENTER_FEATURE,\n  OrganizationState,\n  StateWithOrganization,\n} from '../organization-state';\nimport { getBudgetsState } from './budget.selector';\nimport { getOrganizationState } from './feature.selector';\n\nexport const getCostCenterManagementState: MemoizedSelector<\n  StateWithOrganization,\n  CostCenterManagement\n> = createSelector(\n  getOrganizationState,\n  (state: OrganizationState) => state[COST_CENTER_FEATURE]\n);\n\nexport const getCostCentersState: MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.EntityLoaderState<CostCenter>\n> = createSelector(\n  getCostCenterManagementState,\n  (state: CostCenterManagement) => state && state.entities\n);\n\nexport const getCostCenter = (\n  costCenterCode: string\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<CostCenter>\n> =>\n  createSelector(\n    getCostCentersState,\n    (state: StateUtils.EntityLoaderState<CostCenter>) =>\n      StateUtils.entityLoaderStateSelector(state, costCenterCode)\n  );\n\nexport const getCostCenterValue = (\n  costCenterCode: string\n): MemoizedSelector<StateWithOrganization, Budget> => {\n  return createSelector(getCostCenter(costCenterCode), (costCenterState) =>\n    StateUtils.loaderValueSelector(costCenterState)\n  );\n};\n\nexport const getCostCenterList = (\n  params: SearchConfig\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<EntitiesModel<CostCenter>>\n> =>\n  createSelector(getCostCenterManagementState, (state: CostCenterManagement) =>\n    StateUtils.denormalizeSearch<CostCenter>(state, params)\n  );\n\nexport const getAssignedBudgets = (\n  code: string,\n  params: SearchConfig\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<EntitiesModel<Budget>>\n> =>\n  createSelector(\n    getCostCenterManagementState,\n    getBudgetsState,\n    (\n      state: CostCenterManagement,\n      budgets: StateUtils.EntityLoaderState<Budget>\n    ) =>\n      StateUtils.denormalizeCustomB2BSearch(\n        state.budgets,\n        budgets,\n        params,\n        code\n      )\n  );\n\nexport const getCostCenterState = (\n  code: string\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<CostCenter>\n> =>\n  createSelector(\n    getCostCentersState,\n    (state: StateUtils.EntityLoaderState<CostCenter>) =>\n      StateUtils.entityLoaderStateSelector(state, code)\n  );\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as BudgetSelectors from './budget.selector';\nimport * as PermissionSelectors from './permission.selector';\nimport * as OrgUnitSelectors from './org-unit.selector';\nimport * as UserGroupSelectors from './user-group.selector';\nimport * as CostCenterSelectors from './cost-center.selector';\nimport * as B2BUserSelectors from './b2b-user.selector';\n\nexport {\n  BudgetSelectors,\n  OrgUnitSelectors,\n  UserGroupSelectors,\n  PermissionSelectors,\n  CostCenterSelectors,\n  B2BUserSelectors,\n};\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './actions/index';\nexport * from './effects/index';\nexport * from './organization-state';\nexport * from './reducers/index';\nexport * from './selectors/index';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport {\n  CostCenter,\n  EntitiesModel,\n  SearchConfig,\n  StateUtils,\n  UserIdService,\n} from '@spartacus/core';\nimport { Observable, queueScheduler, using } from 'rxjs';\nimport { auditTime, filter, map, observeOn, tap } from 'rxjs/operators';\nimport { Budget } from '../model/budget.model';\nimport { OrganizationItemStatus } from '../model/organization-item-status';\nimport { BudgetActions, StateWithOrganization } from '../store/index';\nimport {\n  getBudget,\n  getBudgetList,\n  getBudgetValue,\n} from '../store/selectors/budget.selector';\nimport { getItemStatus } from '../utils/get-item-status';\n\n@Injectable({ providedIn: 'root' })\nexport class BudgetService {\n  constructor(\n    protected store: Store<StateWithOrganization>,\n    protected userIdService: UserIdService\n  ) {}\n\n  loadBudget(budgetCode: string): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new BudgetActions.LoadBudget({ userId, budgetCode })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  loadBudgets(params: SearchConfig): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(new BudgetActions.LoadBudgets({ userId, params })),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  private getBudgetState(\n    budgetCode: string\n  ): Observable<StateUtils.LoaderState<Budget>> {\n    return this.store.select(getBudget(budgetCode));\n  }\n\n  private getBudgetValue(budgetCode: string): Observable<Budget> {\n    return this.store\n      .select(getBudgetValue(budgetCode))\n      .pipe(filter((budget) => Boolean(budget)));\n  }\n\n  private getBudgetList(\n    params: SearchConfig\n  ): Observable<StateUtils.LoaderState<EntitiesModel<Budget>>> {\n    return this.store.select(getBudgetList(params));\n  }\n\n  get(budgetCode: string): Observable<Budget> {\n    const loading$ = this.getBudgetState(budgetCode).pipe(\n      auditTime(0),\n      tap((state) => {\n        if (!(state.loading || state.success || state.error)) {\n          this.loadBudget(budgetCode);\n        }\n      })\n    );\n\n    return using(\n      () => loading$.subscribe(),\n      () => this.getBudgetValue(budgetCode)\n    );\n  }\n\n  getList(params: SearchConfig): Observable<EntitiesModel<Budget> | undefined> {\n    return this.getBudgetList(params).pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<EntitiesModel<Budget>>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadBudgets(params);\n        }\n      }),\n      filter((process: StateUtils.LoaderState<EntitiesModel<Budget>>) =>\n        Boolean(process.success || process.error)\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  getCostCenters(budgetCode: string): Observable<EntitiesModel<CostCenter>> {\n    return this.get(budgetCode).pipe(\n      map(\n        (budget) =>\n          ({\n            values: budget.costCenters ?? [],\n          } as EntitiesModel<CostCenter>)\n      )\n    );\n  }\n\n  getErrorState(budgetCode: string): Observable<boolean> {\n    return this.getBudgetState(budgetCode).pipe(\n      map((state) => state.error ?? false)\n    );\n  }\n\n  create(budget: Budget): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(new BudgetActions.CreateBudget({ userId, budget })),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  update(budgetCode: string, budget: Budget): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new BudgetActions.UpdateBudget({ userId, budgetCode, budget })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  getLoadingStatus(\n    budgetCode: string\n  ): Observable<OrganizationItemStatus<Budget>> {\n    return getItemStatus(this.getBudgetState(budgetCode));\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport {\n  CostCenter,\n  EntitiesModel,\n  SearchConfig,\n  StateUtils,\n  UserIdService,\n} from '@spartacus/core';\nimport { Observable, queueScheduler, using } from 'rxjs';\nimport { auditTime, filter, map, observeOn, tap } from 'rxjs/operators';\nimport { Budget } from '../model/budget.model';\nimport { OrganizationItemStatus } from '../model/organization-item-status';\nimport { CostCenterActions } from '../store/actions/index';\nimport { StateWithOrganization } from '../store/organization-state';\nimport {\n  getAssignedBudgets,\n  getCostCenter,\n  getCostCenterList,\n  getCostCenterState,\n  getCostCenterValue,\n} from '../store/selectors/cost-center.selector';\nimport { getItemStatus } from '../utils/get-item-status';\n\n@Injectable({ providedIn: 'root' })\nexport class CostCenterService {\n  constructor(\n    protected store: Store<StateWithOrganization>,\n    protected userIdService: UserIdService\n  ) {}\n\n  load(costCenterCode: string): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new CostCenterActions.LoadCostCenter({ userId, costCenterCode })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  loadList(params: SearchConfig): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new CostCenterActions.LoadCostCenters({ userId, params })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  private getCostCenter(\n    costCenterCode: string\n  ): Observable<StateUtils.LoaderState<CostCenter>> {\n    return this.store.select(getCostCenter(costCenterCode));\n  }\n\n  private getCostCenterValue(costCenterCode: string): Observable<CostCenter> {\n    return this.store\n      .select(getCostCenterValue(costCenterCode))\n      .pipe(filter((costCenter) => Boolean(costCenter)));\n  }\n\n  private getCostCenterList(\n    params: SearchConfig\n  ): Observable<StateUtils.LoaderState<EntitiesModel<CostCenter>>> {\n    return this.store.select(getCostCenterList(params));\n  }\n\n  private getBudgetList(\n    costCenterCode: string,\n    params: SearchConfig\n  ): Observable<StateUtils.LoaderState<EntitiesModel<Budget>>> {\n    return this.store.select(getAssignedBudgets(costCenterCode, params));\n  }\n\n  get(costCenterCode: string): Observable<Budget> {\n    const loading$ = this.getCostCenter(costCenterCode).pipe(\n      auditTime(0),\n      tap((state) => {\n        if (!(state.loading || state.success || state.error)) {\n          this.load(costCenterCode);\n        }\n      })\n    );\n\n    return using(\n      () => loading$.subscribe(),\n      () => this.getCostCenterValue(costCenterCode)\n    );\n  }\n\n  getList(\n    params: SearchConfig\n  ): Observable<EntitiesModel<CostCenter> | undefined> {\n    return this.getCostCenterList(params).pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<EntitiesModel<CostCenter>>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadList(params);\n        }\n      }),\n      filter((process: StateUtils.LoaderState<EntitiesModel<CostCenter>>) =>\n        Boolean(process.success || process.error)\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  private getCostCenterState(\n    costCenterCode: string\n  ): Observable<StateUtils.LoaderState<Budget>> {\n    return this.store.select(getCostCenterState(costCenterCode));\n  }\n\n  create(costCenter: CostCenter): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new CostCenterActions.CreateCostCenter({ userId, costCenter })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  update(costCenterCode: string, costCenter: CostCenter): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new CostCenterActions.UpdateCostCenter({\n            userId,\n            costCenterCode,\n            costCenter,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  getLoadingStatus(\n    costCenterCode: string\n  ): Observable<OrganizationItemStatus<CostCenter>> {\n    return getItemStatus(this.getCostCenter(costCenterCode));\n  }\n\n  loadBudgets(costCenterCode: string, params: SearchConfig): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new CostCenterActions.LoadAssignedBudgets({\n            userId,\n            costCenterCode,\n            params,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  getBudgets(\n    costCenterCode: string,\n    params: SearchConfig\n  ): Observable<EntitiesModel<Budget> | undefined> {\n    return this.getBudgetList(costCenterCode, params).pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<EntitiesModel<Budget>>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadBudgets(costCenterCode, params);\n        }\n      }),\n      filter((process: StateUtils.LoaderState<EntitiesModel<Budget>>) =>\n        Boolean(process.success || process.error)\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  assignBudget(costCenterCode: string, budgetCode: string): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new CostCenterActions.AssignBudget({\n            userId,\n            costCenterCode,\n            budgetCode,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  unassignBudget(costCenterCode: string, budgetCode: string): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new CostCenterActions.UnassignBudget({\n            userId,\n            costCenterCode,\n            budgetCode,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  getErrorState(costCenterCode: string): Observable<boolean> {\n    return this.getCostCenterState(costCenterCode).pipe(\n      map((state) => state.error ?? false)\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport {\n  Address,\n  B2BApprovalProcess,\n  B2BUnit,\n  B2BUser,\n  CostCenter,\n  EntitiesModel,\n  SearchConfig,\n  StateUtils,\n  UserIdService,\n} from '@spartacus/core';\nimport { Observable, queueScheduler, using } from 'rxjs';\nimport { auditTime, filter, map, observeOn, tap } from 'rxjs/operators';\nimport { OrganizationItemStatus } from '../model/organization-item-status';\nimport { B2BUnitNode } from '../model/unit-node.model';\nimport { OrgUnitActions } from '../store/actions/index';\nimport { StateWithOrganization } from '../store/organization-state';\nimport {\n  getApprovalProcesses,\n  getAssignedUsers,\n  getB2BAddress,\n  getB2BAddresses,\n  getOrgUnit,\n  getOrgUnitList,\n  getOrgUnitState,\n  getOrgUnitTree,\n  getOrgUnitValue,\n} from '../store/selectors/org-unit.selector';\nimport { getItemStatus } from '../utils/get-item-status';\n\n@Injectable({ providedIn: 'root' })\nexport class OrgUnitService {\n  constructor(\n    protected store: Store<StateWithOrganization>,\n    protected userIdService: UserIdService\n  ) {}\n\n  clearAssignedUsersList(\n    orgUnitId: string,\n    roleId: string,\n    params: SearchConfig\n  ): void {\n    this.store.dispatch(\n      new OrgUnitActions.ClearAssignedUsers({ orgUnitId, roleId, params })\n    );\n  }\n\n  load(orgUnitId: string): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new OrgUnitActions.LoadOrgUnit({ userId, orgUnitId })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  loadList(): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(new OrgUnitActions.LoadOrgUnitNodes({ userId })),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  loadTree(): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) => this.store.dispatch(new OrgUnitActions.LoadTree({ userId })),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  loadApprovalProcesses(): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new OrgUnitActions.LoadApprovalProcesses({ userId })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  loadUsers(orgUnitId: string, roleId: string, params: SearchConfig): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new OrgUnitActions.LoadAssignedUsers({\n            userId,\n            orgUnitId,\n            roleId,\n            params,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  loadAddresses(orgUnitId: string): void {\n    // TODO: replace it after turn on loadAddresses$\n    // this.store.dispatch(\n    //   new OrgUnitActions.LoadAddresses({ userId, orgUnitId })\n    // );\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new OrgUnitActions.LoadOrgUnit({ userId, orgUnitId })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  private getOrgUnit(\n    orgUnitId: string\n  ): Observable<StateUtils.LoaderState<B2BUnit>> {\n    return this.store.select(getOrgUnit(orgUnitId));\n  }\n\n  private getOrgUnitValue(orgUnitId: string): Observable<B2BUnit> {\n    return this.store\n      .select(getOrgUnitValue(orgUnitId))\n      .pipe(filter((orgUnit) => Boolean(orgUnit)));\n  }\n\n  private getTreeState(): Observable<StateUtils.LoaderState<B2BUnitNode>> {\n    return this.store.select(getOrgUnitTree());\n  }\n\n  private getOrgUnitsList(): Observable<StateUtils.LoaderState<B2BUnitNode[]>> {\n    return this.store.select(getOrgUnitList());\n  }\n\n  private getAddressesState(\n    orgUnitId: string\n  ): Observable<StateUtils.LoaderState<EntitiesModel<Address>>> {\n    return this.store.select(getB2BAddresses(orgUnitId));\n  }\n\n  private getAddressState(\n    addressId: string\n  ): Observable<StateUtils.LoaderState<Address>> {\n    return this.store.select(getB2BAddress(addressId));\n  }\n\n  private getAssignedUsers(\n    orgUnitId: string,\n    roleId: string,\n    params: SearchConfig\n  ): Observable<StateUtils.LoaderState<EntitiesModel<B2BUser>>> {\n    return this.store.select(getAssignedUsers(orgUnitId, roleId, params));\n  }\n\n  private getApprovalProcessesList(): Observable<\n    StateUtils.LoaderState<B2BApprovalProcess[]>\n  > {\n    return this.store.select(getApprovalProcesses());\n  }\n\n  get(orgUnitId: string): Observable<B2BUnit> {\n    const loading$ = this.getOrgUnit(orgUnitId).pipe(\n      auditTime(0),\n      tap((state) => {\n        if (!(state.loading || state.success || state.error)) {\n          this.load(orgUnitId);\n        }\n      })\n    );\n\n    return using(\n      () => loading$.subscribe(),\n      () => this.getOrgUnitValue(orgUnitId)\n    );\n  }\n\n  getCostCenters(orgUnitId: string): Observable<EntitiesModel<CostCenter>> {\n    return this.get(orgUnitId).pipe(\n      map((orgUnit) => ({\n        values: orgUnit.costCenters ?? [],\n      }))\n    );\n  }\n\n  protected findUnitChildrenInTree(\n    orginitId: string,\n    unit: B2BUnitNode\n  ): B2BUnitNode[] {\n    return unit.id === orginitId\n      ? unit.children ?? []\n      : (unit.children ?? []).flatMap((child) =>\n          this.findUnitChildrenInTree(orginitId, child)\n        );\n  }\n\n  getChildUnits(orgUnitId: string): Observable<EntitiesModel<B2BUnitNode>> {\n    return this.getTree().pipe(\n      map((tree) => ({\n        values: tree ? this.findUnitChildrenInTree(orgUnitId, tree) : [],\n      }))\n    );\n  }\n\n  getTree(): Observable<B2BUnitNode | undefined> {\n    return this.getTreeState().pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<B2BUnitNode>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadTree();\n        }\n      }),\n      filter((process: StateUtils.LoaderState<B2BUnitNode>) =>\n        Boolean(process.success || process.error)\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  getApprovalProcesses(): Observable<B2BApprovalProcess[] | undefined> {\n    return this.getApprovalProcessesList().pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<B2BApprovalProcess[]>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadApprovalProcesses();\n        }\n      }),\n      filter((process: StateUtils.LoaderState<B2BApprovalProcess[]>) =>\n        Boolean(process.success || process.error)\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  getList(): Observable<B2BUnitNode[] | undefined> {\n    return this.getOrgUnitsList().pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<B2BUnitNode[]>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadList();\n        }\n      }),\n      filter((process: StateUtils.LoaderState<B2BUnitNode[]>) =>\n        Boolean(process.success || process.error)\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  getActiveUnitList(): Observable<B2BUnitNode[] | undefined> {\n    return this.getList().pipe(\n      map((units) => units?.filter((unit) => unit.active)),\n      map((units) => units?.sort(this.sortUnitList))\n    );\n  }\n\n  protected sortUnitList(a: B2BUnitNode, b: B2BUnitNode) {\n    return (a.id ?? '').toLowerCase() < (b.id ?? '').toLowerCase()\n      ? -1\n      : (a.id ?? '').toLowerCase() > (b.id ?? '').toLowerCase()\n      ? 1\n      : 0;\n  }\n\n  getUsers(\n    orgUnitId: string,\n    roleId: string,\n    params: SearchConfig\n  ): Observable<EntitiesModel<B2BUser> | undefined> {\n    return this.getAssignedUsers(orgUnitId, roleId, params).pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<EntitiesModel<B2BUser>>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadUsers(orgUnitId, roleId, params);\n        }\n      }),\n      filter((process: StateUtils.LoaderState<EntitiesModel<B2BUser>>) =>\n        Boolean(process.success || process.error)\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  getErrorState(orgCustomerId: string): Observable<boolean> {\n    return this.getOrgUnitState(orgCustomerId).pipe(\n      map((state) => state.error ?? false)\n    );\n  }\n\n  create(unit: B2BUnit): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(new OrgUnitActions.CreateUnit({ userId, unit })),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  update(unitCode: string, unit: B2BUnit): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new OrgUnitActions.UpdateUnit({ userId, unitCode, unit })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  getLoadingStatus(\n    orgUnitId: string\n  ): Observable<OrganizationItemStatus<B2BUnit>> {\n    return getItemStatus(this.getOrgUnit(orgUnitId));\n  }\n\n  assignRole(orgCustomerId: string, roleId: string): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new OrgUnitActions.AssignRole({\n            userId,\n            orgCustomerId,\n            roleId,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  unassignRole(orgCustomerId: string, roleId: string): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new OrgUnitActions.UnassignRole({\n            userId,\n            orgCustomerId,\n            roleId,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  assignApprover(\n    orgUnitId: string,\n    orgCustomerId: string,\n    roleId: string\n  ): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new OrgUnitActions.AssignApprover({\n            orgUnitId,\n            userId,\n            orgCustomerId,\n            roleId,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  unassignApprover(\n    orgUnitId: string,\n    orgCustomerId: string,\n    roleId: string\n  ): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new OrgUnitActions.UnassignApprover({\n            orgUnitId,\n            userId,\n            orgCustomerId,\n            roleId,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  createAddress(orgUnitId: string, address: Address): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new OrgUnitActions.CreateAddress({\n            userId,\n            orgUnitId,\n            address,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  getAddresses(\n    orgUnitId: string\n  ): Observable<EntitiesModel<Address> | undefined> {\n    return this.getAddressesState(orgUnitId).pipe(\n      observeOn(queueScheduler),\n      tap((state) => {\n        if (!(state.loading || state.success || state.error)) {\n          this.loadAddresses(orgUnitId);\n        }\n      }),\n      filter((state) => Boolean(state.success || state.error)),\n      map((state) => state.value)\n    );\n  }\n\n  getAddress(\n    orgUnitId: string,\n    addressId: string\n  ): Observable<Address | undefined> {\n    return this.getAddressState(addressId).pipe(\n      observeOn(queueScheduler),\n      tap((state) => {\n        if (!(state.loading || state.success || state.error)) {\n          this.loadAddresses(orgUnitId);\n        }\n      }),\n      filter((state) => Boolean(state.success || state.error)),\n      map((state) => state.value)\n    );\n  }\n\n  updateAddress(orgUnitId: string, addressId: string, address: Address): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new OrgUnitActions.UpdateAddress({\n            userId,\n            orgUnitId,\n            addressId,\n            address,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  getAddressLoadingStatus(\n    addressId: string\n  ): Observable<OrganizationItemStatus<Address>> {\n    return getItemStatus(this.getAddressState(addressId));\n  }\n\n  deleteAddress(orgUnitId: string, addressId: string): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new OrgUnitActions.DeleteAddress({\n            userId,\n            orgUnitId,\n            addressId,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  private getOrgUnitState(\n    orgUnitId: string\n  ): Observable<StateUtils.LoaderState<B2BUnit>> {\n    return this.store.select(getOrgUnitState(orgUnitId));\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport {\n  EntitiesModel,\n  OrderApprovalPermissionType,\n  SearchConfig,\n  StateUtils,\n  UserIdService,\n} from '@spartacus/core';\nimport { Observable, queueScheduler, using } from 'rxjs';\nimport { auditTime, filter, map, observeOn, tap } from 'rxjs/operators';\nimport { OrganizationItemStatus } from '../model/organization-item-status';\nimport { Permission } from '../model/permission.model';\nimport { PermissionActions } from '../store/actions/index';\nimport { StateWithOrganization } from '../store/organization-state';\nimport {\n  getPermission,\n  getPermissionList,\n  getPermissionState,\n  getPermissionTypes,\n  getPermissionValue,\n} from '../store/selectors/permission.selector';\nimport { getItemStatus } from '../utils/get-item-status';\n\n@Injectable({ providedIn: 'root' })\nexport class PermissionService {\n  constructor(\n    protected store: Store<StateWithOrganization>,\n    protected userIdService: UserIdService\n  ) {}\n\n  loadPermission(permissionCode: string): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new PermissionActions.LoadPermission({\n            userId,\n            permissionCode,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  loadPermissions(params: SearchConfig): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new PermissionActions.LoadPermissions({ userId, params })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  loadPermissionTypes() {\n    this.userIdService.takeUserId(true).subscribe(\n      () => this.store.dispatch(new PermissionActions.LoadPermissionTypes()),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  private getPermission(\n    permissionCode: string\n  ): Observable<StateUtils.LoaderState<Permission>> {\n    return this.store.select(getPermission(permissionCode));\n  }\n\n  private getPermissionValue(permissionCode: string): Observable<Permission> {\n    return this.store\n      .select(getPermissionValue(permissionCode))\n      .pipe(filter((permission) => Boolean(permission)));\n  }\n\n  private getPermissionList(\n    params: SearchConfig\n  ): Observable<StateUtils.LoaderState<EntitiesModel<Permission>>> {\n    return this.store.select(getPermissionList(params));\n  }\n\n  private getPermissionTypeList(): Observable<\n    StateUtils.LoaderState<OrderApprovalPermissionType[]>\n  > {\n    return this.store.select(getPermissionTypes());\n  }\n\n  get(permissionCode: string): Observable<Permission> {\n    const loading$ = this.getPermission(permissionCode).pipe(\n      auditTime(0),\n      tap((state) => {\n        if (!(state.loading || state.success || state.error)) {\n          this.loadPermission(permissionCode);\n        }\n      })\n    );\n\n    return using(\n      () => loading$.subscribe(),\n      () => this.getPermissionValue(permissionCode)\n    );\n  }\n\n  getTypes(): Observable<OrderApprovalPermissionType[] | undefined> {\n    return this.getPermissionTypeList().pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<OrderApprovalPermissionType[]>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadPermissionTypes();\n        }\n      }),\n      filter((process: StateUtils.LoaderState<OrderApprovalPermissionType[]>) =>\n        Boolean(process.success || process.error)\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  getList(\n    params: SearchConfig\n  ): Observable<EntitiesModel<Permission> | undefined> {\n    return this.getPermissionList(params).pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<EntitiesModel<Permission>>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadPermissions(params);\n        }\n      }),\n      filter((process: StateUtils.LoaderState<EntitiesModel<Permission>>) =>\n        Boolean(process.success || process.error)\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  create(permission: Permission): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new PermissionActions.CreatePermission({ userId, permission })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  update(permissionCode: string, permission: Permission): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new PermissionActions.UpdatePermission({\n            userId,\n            permissionCode,\n            permission,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  getLoadingStatus(\n    permissionCode: string\n  ): Observable<OrganizationItemStatus<Permission>> {\n    return getItemStatus(this.getPermission(permissionCode));\n  }\n\n  private getPermissionState(\n    code: string\n  ): Observable<StateUtils.LoaderState<Permission>> {\n    return this.store.select(getPermissionState(code));\n  }\n\n  getErrorState(permissionCode: string): Observable<boolean> {\n    return this.getPermissionState(permissionCode).pipe(\n      map((state) => state.error ?? false)\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport {\n  B2BUser,\n  EntitiesModel,\n  SearchConfig,\n  StateUtils,\n  UserIdService,\n} from '@spartacus/core';\nimport { Observable, queueScheduler, using } from 'rxjs';\nimport { auditTime, filter, map, observeOn, tap } from 'rxjs/operators';\nimport { OrganizationItemStatus } from '../model/organization-item-status';\nimport { Permission } from '../model/permission.model';\nimport { UserGroup } from '../model/user-group.model';\nimport { UserGroupActions } from '../store/actions/index';\nimport { StateWithOrganization } from '../store/organization-state';\nimport {\n  getAvailableOrderApprovalPermissions,\n  getAvailableOrgCustomers,\n  getUserGroup,\n  getUserGroupList,\n  getUserGroupState,\n  getUserGroupValue,\n} from '../store/selectors/user-group.selector';\nimport { getItemStatus } from '../utils/get-item-status';\n\n@Injectable({ providedIn: 'root' })\nexport class UserGroupService {\n  constructor(\n    protected store: Store<StateWithOrganization>,\n    protected userIdService: UserIdService\n  ) {}\n\n  load(userGroupId: string) {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new UserGroupActions.LoadUserGroup({\n            userId,\n            userGroupId,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  loadList(params: SearchConfig) {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new UserGroupActions.LoadUserGroups({ userId, params })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  private getUserGroup(\n    userGroupId: string\n  ): Observable<StateUtils.LoaderState<UserGroup>> {\n    return this.store.select(getUserGroup(userGroupId));\n  }\n\n  private getUserGroupValue(userGroupId: string): Observable<UserGroup> {\n    return this.store\n      .select(getUserGroupValue(userGroupId))\n      .pipe(filter((userGroup) => Boolean(userGroup)));\n  }\n\n  private getUserGroupList(\n    params: SearchConfig\n  ): Observable<StateUtils.LoaderState<EntitiesModel<UserGroup>>> {\n    return this.store.select(getUserGroupList(params));\n  }\n\n  private getAvailableOrgCustomersList(\n    userGroupId: string,\n    params: SearchConfig\n  ): Observable<StateUtils.LoaderState<EntitiesModel<B2BUser>>> {\n    return this.store.select(getAvailableOrgCustomers(userGroupId, params));\n  }\n\n  private getAvailableOrderApprovalPermissionsList(\n    userGroupId: string,\n    params: SearchConfig\n  ): Observable<StateUtils.LoaderState<EntitiesModel<Permission>>> {\n    return this.store.select(\n      getAvailableOrderApprovalPermissions(userGroupId, params)\n    );\n  }\n\n  get(userGroupUid: string): Observable<UserGroup> {\n    const loading$ = this.getUserGroup(userGroupUid).pipe(\n      auditTime(0),\n      tap((state) => {\n        if (!(state.loading || state.success || state.error)) {\n          this.load(userGroupUid);\n        }\n      })\n    );\n\n    return using(\n      () => loading$.subscribe(),\n      () => this.getUserGroupValue(userGroupUid)\n    );\n  }\n\n  getList(\n    params: SearchConfig\n  ): Observable<EntitiesModel<UserGroup> | undefined> {\n    return this.getUserGroupList(params).pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<EntitiesModel<UserGroup>>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadList(params);\n        }\n      }),\n      filter((process: StateUtils.LoaderState<EntitiesModel<UserGroup>>) =>\n        Boolean(process.success || process.error)\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  create(userGroup: UserGroup) {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new UserGroupActions.CreateUserGroup({\n            userId,\n            userGroup,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  update(userGroupId: string, userGroup: UserGroup) {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new UserGroupActions.UpdateUserGroup({\n            userId,\n            userGroupId,\n            userGroup,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  getLoadingStatus(\n    budgetCode: string\n  ): Observable<OrganizationItemStatus<UserGroup>> {\n    return getItemStatus(this.getUserGroup(budgetCode));\n  }\n\n  delete(userGroupId: string) {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new UserGroupActions.DeleteUserGroup({\n            userId,\n            userGroupId,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  loadAvailableOrgCustomers(userGroupId: string, params: SearchConfig) {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new UserGroupActions.LoadAvailableOrgCustomers({\n            userId,\n            userGroupId,\n            params,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  loadAvailableOrderApprovalPermissions(\n    userGroupId: string,\n    params: SearchConfig\n  ) {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new UserGroupActions.LoadPermissions({\n            userId,\n            userGroupId,\n            params,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  getAvailableOrgCustomers(\n    userGroupId: string,\n    params: SearchConfig\n  ): Observable<EntitiesModel<B2BUser> | undefined> {\n    return this.getAvailableOrgCustomersList(userGroupId, params).pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<EntitiesModel<B2BUser>>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadAvailableOrgCustomers(userGroupId, params);\n        }\n      }),\n      filter((process: StateUtils.LoaderState<EntitiesModel<B2BUser>>) =>\n        Boolean(process.success || process.error)\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  getAvailableOrderApprovalPermissions(\n    userGroupId: string,\n    params: SearchConfig\n  ): Observable<EntitiesModel<Permission> | undefined> {\n    return this.getAvailableOrderApprovalPermissionsList(\n      userGroupId,\n      params\n    ).pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<EntitiesModel<Permission>>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadAvailableOrderApprovalPermissions(userGroupId, params);\n        }\n      }),\n      filter((process: StateUtils.LoaderState<EntitiesModel<Permission>>) =>\n        Boolean(process.success || process.error)\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  assignMember(userGroupId: string, customerId: string) {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new UserGroupActions.AssignMember({\n            userId,\n            userGroupId,\n            customerId,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  unassignMember(userGroupId: string, customerId: string) {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new UserGroupActions.UnassignMember({\n            userId,\n            userGroupId,\n            customerId,\n          })\n        ),\n      () => {\n        // Intentional empty arrow function\n      }\n    );\n  }\n\n  unassignAllMembers(userGroupId: string) {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new UserGroupActions.UnassignAllMembers({\n            userId,\n            userGroupId,\n          })\n        ),\n      () => {\n        // Intentional empty arrow function\n      }\n    );\n  }\n\n  assignPermission(userGroupId: string, permissionUid: string) {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new UserGroupActions.AssignPermission({\n            userId,\n            userGroupId,\n            permissionUid,\n          })\n        ),\n      () => {\n        // Intentional empty arrow function\n      }\n    );\n  }\n\n  unassignPermission(userGroupId: string, permissionUid: string) {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new UserGroupActions.UnassignPermission({\n            userId,\n            userGroupId,\n            permissionUid,\n          })\n        ),\n      () => {\n        // Intentional empty arrow function\n      }\n    );\n  }\n\n  private getUserGroupState(\n    code: string\n  ): Observable<StateUtils.LoaderState<UserGroup>> {\n    return this.store.select(getUserGroupState(code));\n  }\n\n  getErrorState(code: string): Observable<boolean> {\n    return this.getUserGroupState(code).pipe(\n      map((state) => state.error ?? false)\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './b2b-user.service';\nexport * from './budget.service';\nexport * from './cost-center.service';\nexport * from './org-unit.service';\nexport * from './organization-page-meta.module';\nexport * from './organization-page-meta.resolver';\nexport * from './permission.service';\nexport * from './user-group.service';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './administration-core.module';\nexport * from './connectors/index';\nexport * from './guards/index';\nexport * from './http-interceptors/index';\nexport * from './model/index';\nexport * from './services/index';\nexport * from './store/actions/index';\nexport * from './store/organization-state';\nexport * from './store/selectors/index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1.B2BUserAdapter","i1.BudgetAdapter","i1.CostCenterAdapter","i1.OrgUnitAdapter","i1.PermissionAdapter","i1.UserGroupAdapter","i1","LoadPermissions","LoadPermissionsFail","LoadPermissionsSuccess","BudgetActions.LOAD_BUDGET","BudgetActions.LoadBudgetSuccess","BudgetActions.LoadBudgetFail","BudgetActions.LOAD_BUDGETS","BudgetActions.LoadBudgetsSuccess","BudgetActions.LoadBudgetsFail","BudgetActions.CREATE_BUDGET","BudgetActions.CreateBudgetSuccess","OrganizationActions.OrganizationClearData","BudgetActions.CreateBudgetFail","BudgetActions.UPDATE_BUDGET","BudgetActions.UpdateBudgetSuccess","BudgetActions.UpdateBudgetFail","i2.BudgetConnector","OrgUnitActions.LOAD_ORG_UNIT","OrgUnitActions.LoadOrgUnitSuccess","OrgUnitActions.LoadAddressSuccess","OrgUnitActions.LoadAddressesSuccess","OrgUnitActions.LoadOrgUnitFail","OrgUnitActions.LOAD_UNIT_NODES","OrgUnitActions.LoadOrgUnitNodesSuccess","OrgUnitActions.LoadOrgUnitNodesFail","OrgUnitActions.CREATE_ORG_UNIT","OrgUnitActions.CreateUnitSuccess","OrgUnitActions.CreateUnitFail","OrgUnitActions.UPDATE_ORG_UNIT","OrgUnitActions.UpdateUnitSuccess","OrgUnitActions.UpdateUnitFail","OrgUnitActions.LOAD_UNIT_TREE","OrgUnitActions.LoadTreeSuccess","OrgUnitActions.LoadTreeFail","OrgUnitActions.LOAD_APPROVAL_PROCESSES","OrgUnitActions.LoadApprovalProcessesSuccess","OrgUnitActions.LoadApprovalProcessesFail","OrgUnitActions.LOAD_ASSIGNED_USERS","B2BUserActions.LoadB2BUserSuccess","OrgUnitActions.LoadAssignedUsersSuccess","OrgUnitActions.LoadAssignedUsersFail","OrgUnitActions.ASSIGN_ROLE","OrgUnitActions.AssignRoleSuccess","OrgUnitActions.AssignRoleFail","OrgUnitActions.UNASSIGN_ROLE","OrgUnitActions.UnassignRoleSuccess","OrgUnitActions.UnassignRoleFail","OrgUnitActions.ASSIGN_APPROVER","OrgUnitActions.AssignApproverSuccess","OrgUnitActions.AssignApproverFail","OrgUnitActions.UNASSIGN_APPROVER","OrgUnitActions.UnassignApproverSuccess","OrgUnitActions.UnassignApproverFail","OrgUnitActions.CREATE_ADDRESS","OrgUnitActions.CreateAddressSuccess","OrgUnitActions.CreateAddressFail","OrgUnitActions.UPDATE_ADDRESS","OrgUnitActions.UpdateAddressSuccess","OrgUnitActions.UpdateAddressFail","OrgUnitActions.DELETE_ADDRESS","OrgUnitActions.DeleteAddressSuccess","OrgUnitActions.DeleteAddressFail","i2.OrgUnitConnector","PermissionActions.LOAD_PERMISSION","PermissionActions.LoadPermissionSuccess","PermissionActions.LoadPermissionFail","PermissionActions.LOAD_PERMISSIONS","PermissionActions.LoadPermissionsSuccess","PermissionActions.LoadPermissionsFail","PermissionActions.CREATE_PERMISSION","PermissionActions.CreatePermissionSuccess","PermissionActions.CreatePermissionFail","PermissionActions.UPDATE_PERMISSION","PermissionActions.UpdatePermissionSuccess","PermissionActions.UpdatePermissionFail","PermissionActions.LOAD_PERMISSION_TYPES","PermissionActions.LoadPermissionTypesSuccess","PermissionActions.LoadPermissionTypesFail","i2.PermissionConnector","CostCenterActions.LOAD_COST_CENTER","CostCenterActions.LoadCostCenterSuccess","CostCenterActions.LoadCostCenterFail","CostCenterActions.LOAD_COST_CENTERS","CostCenterActions.LoadCostCentersSuccess","CostCenterActions.LoadCostCentersFail","CostCenterActions.CREATE_COST_CENTER","CostCenterActions.CreateCostCenterSuccess","CostCenterActions.CreateCostCenterFail","CostCenterActions.UPDATE_COST_CENTER","CostCenterActions.UpdateCostCenterSuccess","CostCenterActions.UpdateCostCenterFail","CostCenterActions.LOAD_ASSIGNED_BUDGETS","CostCenterActions.LoadAssignedBudgetsSuccess","CostCenterActions.LoadAssignedBudgetsFail","CostCenterActions.ASSIGN_BUDGET","CostCenterActions.AssignBudgetSuccess","CostCenterActions.AssignBudgetFail","CostCenterActions.UNASSIGN_BUDGET","CostCenterActions.UnassignBudgetSuccess","CostCenterActions.UnassignBudgetFail","i2.CostCenterConnector","B2BUserActions.LOAD_B2B_USER","B2BUserActions.LoadB2BUserFail","B2BUserActions.CREATE_B2B_USER","B2BUserActions.CreateB2BUserSuccess","OrgUnitActions.AssignApprover","B2BUserActions.CreateB2BUserFail","B2BUserActions.UPDATE_B2B_USER","B2BUserActions.UpdateB2BUserSuccess","B2BUserActions.UpdateB2BUserFail","B2BUserActions.UPDATE_B2B_USER_SUCCESS","B2BUserActions.LOAD_B2B_USERS","B2BUserActions.LoadB2BUsersSuccess","B2BUserActions.LoadB2BUsersFail","B2BUserActions.LOAD_B2B_USER_APPROVERS","B2BUserActions.LoadB2BUserApproversSuccess","B2BUserActions.LoadB2BUserApproversFail","B2BUserActions.LOAD_B2B_USER_PERMISSIONS","B2BUserActions.LoadB2BUserPermissionsSuccess","B2BUserActions.LoadB2BUserPermissionsFail","B2BUserActions.LOAD_B2B_USER_USER_GROUPS","UserGroupActions.LoadUserGroupSuccess","B2BUserActions.LoadB2BUserUserGroupsSuccess","B2BUserActions.LoadB2BUserUserGroupsFail","B2BUserActions.ASSIGN_B2B_USER_APPROVER","B2BUserActions.AssignB2BUserApproverSuccess","B2BUserActions.AssignB2BUserApproverFail","B2BUserActions.UNASSIGN_B2B_USER_APPROVER","B2BUserActions.UnassignB2BUserApproverSuccess","B2BUserActions.UnassignB2BUserApproverFail","B2BUserActions.ASSIGN_B2B_USER_PERMISSION","B2BUserActions.AssignB2BUserPermissionSuccess","B2BUserActions.AssignB2BUserPermissionFail","B2BUserActions.UNASSIGN_B2B_USER_PERMISSION","B2BUserActions.UnassignB2BUserPermissionSuccess","B2BUserActions.UnassignB2BUserPermissionFail","B2BUserActions.ASSIGN_B2B_USER_USER_GROUP","B2BUserActions.AssignB2BUserUserGroupSuccess","B2BUserActions.AssignB2BUserUserGroupFail","B2BUserActions.UNASSIGN_B2B_USER_USER_GROUP","B2BUserActions.UnassignB2BUserUserGroupSuccess","B2BUserActions.UnassignB2BUserUserGroupFail","i2.B2BUserConnector","i3","UserGroupActions.LOAD_USER_GROUP","UserGroupActions.LoadUserGroupFail","UserGroupActions.LOAD_USER_GROUPS","UserGroupActions.LoadUserGroupsSuccess","UserGroupActions.LoadUserGroupsFail","UserGroupActions.LOAD_USER_GROUP_PERMISSIONS","UserGroupActions.LoadPermissionsSuccess","UserGroupActions.LoadPermissionsFail","UserGroupActions.LOAD_USER_GROUP_AVAILABLE_CUSTOMERS","UserGroupActions.LoadAvailableOrgCustomersSuccess","UserGroupActions.LoadAvailableOrgCustomersFail","UserGroupActions.CREATE_USER_GROUP","UserGroupActions.CreateUserGroupSuccess","UserGroupActions.CreateUserGroupFail","UserGroupActions.UPDATE_USER_GROUP","UserGroupActions.UpdateUserGroupSuccess","UserGroupActions.UpdateUserGroupFail","UserGroupActions.DELETE_USER_GROUP","UserGroupActions.DeleteUserGroupSuccess","UserGroupActions.DeleteUserGroupFail","UserGroupActions.USER_GROUP_ASSIGN_PERMISSION","UserGroupActions.AssignPermissionSuccess","UserGroupActions.AssignPermissionFail","UserGroupActions.USER_GROUP_ASSIGN_MEMBER","UserGroupActions.AssignMemberSuccess","UserGroupActions.AssignMemberFail","UserGroupActions.USER_GROUP_UNASSIGN_MEMBER","UserGroupActions.UnassignMemberSuccess","UserGroupActions.UnassignMemberFail","UserGroupActions.USER_GROUP_UNASSIGN_PERMISSION","UserGroupActions.UnassignPermissionSuccess","UserGroupActions.UnassignPermissionFail","UserGroupActions.USER_GROUP_UNASSIGN_ALL_MEMBERS","UserGroupActions.UnassignAllMembersSuccess","UserGroupActions.UnassignAllMembersFail","i2.UserGroupConnector","B2BUserActions.LOAD_B2B_USER_SUCCESS","B2BUserActions.CREATE_B2B_USER_SUCCESS","OrgUnitActions.ASSIGN_ROLE_SUCCESS","OrgUnitActions.ASSIGN_APPROVER_SUCCESS","OrgUnitActions.UNASSIGN_ROLE_SUCCESS","OrgUnitActions.UNASSIGN_APPROVER_SUCCESS","B2BUserActions.ASSIGN_B2B_USER_APPROVER_SUCCESS","B2BUserActions.UNASSIGN_B2B_USER_APPROVER_SUCCESS","UserGroupActions.USER_GROUP_ASSIGN_MEMBER_SUCCESS","UserGroupActions.USER_GROUP_UNASSIGN_MEMBER_SUCCESS","UserGroupActions.USER_GROUP_UNASSIGN_ALL_MEMBERS_SUCCESS","B2BUserActions.LOAD_B2B_USERS_SUCCESS","B2BUserActions.LOAD_B2B_USER_APPROVERS_SUCCESS","B2BUserActions.LOAD_B2B_USER_PERMISSIONS_SUCCESS","B2BUserActions.LOAD_B2B_USER_USER_GROUPS_SUCCESS","BudgetActions.LOAD_BUDGET_SUCCESS","BudgetActions.CREATE_BUDGET_SUCCESS","BudgetActions.UPDATE_BUDGET_SUCCESS","CostCenterActions.UNASSIGN_BUDGET_SUCCESS","CostCenterActions.ASSIGN_BUDGET_SUCCESS","BudgetActions.LOAD_BUDGETS_SUCCESS","CostCenterActions.LOAD_COST_CENTER_SUCCESS","CostCenterActions.CREATE_COST_CENTER_SUCCESS","CostCenterActions.UPDATE_COST_CENTER_SUCCESS","CostCenterActions.LOAD_COST_CENTERS_SUCCESS","CostCenterActions.LOAD_ASSIGNED_BUDGETS_SUCCESS","OrgUnitActions.LOAD_ORG_UNIT_SUCCESS","OrgUnitActions.CREATE_ORG_UNIT_SUCCESS","OrgUnitActions.UPDATE_ORG_UNIT_SUCCESS","OrgUnitActions.LOAD_ASSIGNED_USERS_SUCCESS","OrgUnitActions.LOAD_ADDRESSES_SUCCESS","PermissionActions.LOAD_PERMISSION_SUCCESS","PermissionActions.CREATE_PERMISSION_SUCCESS","PermissionActions.UPDATE_PERMISSION_SUCCESS","UserGroupActions.USER_GROUP_ASSIGN_PERMISSION_SUCCESS","UserGroupActions.USER_GROUP_UNASSIGN_PERMISSION_SUCCESS","B2BUserActions.ASSIGN_B2B_USER_PERMISSION_SUCCESS","B2BUserActions.UNASSIGN_B2B_USER_PERMISSION_SUCCESS","PermissionActions.LOAD_PERMISSIONS_SUCCESS","UserGroupActions.LOAD_USER_GROUP_SUCCESS","UserGroupActions.CREATE_USER_GROUP_SUCCESS","UserGroupActions.UPDATE_USER_GROUP_SUCCESS","B2BUserActions.ASSIGN_B2B_USER_USER_GROUP_SUCCESS","B2BUserActions.UNASSIGN_B2B_USER_USER_GROUP_SUCCESS","UserGroupActions.LOAD_USER_GROUPS_SUCCESS","UserGroupActions.LOAD_USER_GROUP_PERMISSIONS_SUCCESS","UserGroupActions.LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_SUCCESS","OrganizationActions.CLEAR_ORGANIZATION_DATA","i2","getUserGroupsState","B2BUserActions.LoadB2BUser","B2BUserActions.LoadB2BUsers","B2BUserActions.CreateB2BUser","B2BUserActions.UpdateB2BUser","B2BUserActions.LoadB2BUserApprovers","B2BUserActions.AssignB2BUserApprover","B2BUserActions.UnassignB2BUserApprover","B2BUserActions.LoadB2BUserPermissions","B2BUserActions.AssignB2BUserPermission","B2BUserActions.UnassignB2BUserPermission","B2BUserActions.LoadB2BUserUserGroups","B2BUserActions.AssignB2BUserUserGroup","B2BUserActions.UnassignB2BUserUserGroup","BudgetActions.LoadBudget","BudgetActions.LoadBudgets","BudgetActions.CreateBudget","BudgetActions.UpdateBudget","CostCenterActions.LoadCostCenter","CostCenterActions.LoadCostCenters","CostCenterActions.CreateCostCenter","CostCenterActions.UpdateCostCenter","CostCenterActions.LoadAssignedBudgets","CostCenterActions.AssignBudget","CostCenterActions.UnassignBudget","OrgUnitActions.ClearAssignedUsers","OrgUnitActions.LoadOrgUnit","OrgUnitActions.LoadOrgUnitNodes","OrgUnitActions.LoadTree","OrgUnitActions.LoadApprovalProcesses","OrgUnitActions.LoadAssignedUsers","OrgUnitActions.CreateUnit","OrgUnitActions.UpdateUnit","OrgUnitActions.AssignRole","OrgUnitActions.UnassignRole","OrgUnitActions.UnassignApprover","OrgUnitActions.CreateAddress","OrgUnitActions.UpdateAddress","OrgUnitActions.DeleteAddress","PermissionActions.LoadPermission","PermissionActions.LoadPermissions","PermissionActions.LoadPermissionTypes","PermissionActions.CreatePermission","PermissionActions.UpdatePermission","UserGroupActions.LoadUserGroup","UserGroupActions.LoadUserGroups","UserGroupActions.CreateUserGroup","UserGroupActions.UpdateUserGroup","UserGroupActions.DeleteUserGroup","UserGroupActions.LoadAvailableOrgCustomers","UserGroupActions.LoadPermissions","UserGroupActions.AssignMember","UserGroupActions.UnassignMember","UserGroupActions.UnassignAllMembers","UserGroupActions.AssignPermission","UserGroupActions.UnassignPermission"],"mappings":"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"}