/*
 * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component, Input, } from '@angular/core';
import { isNotUndefined } from '@spartacus/core';
import { filter, map, switchMap, tap } from 'rxjs/operators';
import { CurrentItemService } from '../../shared/current-item.service';
import { ItemService } from '../../shared/item.service';
import { createCodeForEntityName } from '../../shared/utility/entity-code';
import { CurrentUnitService } from '../services/current-unit.service';
import { UnitItemService } from '../services/unit-item.service';
import * as i0 from "@angular/core";
import * as i1 from "../../shared/item.service";
import * as i2 from "@spartacus/organization/administration/core";
import * as i3 from "@angular/common";
import * as i4 from "../../shared/form/form.component";
import * as i5 from "@ng-select/ng-select";
import * as i6 from "@angular/forms";
import * as i7 from "@spartacus/storefront";
import * as i8 from "@spartacus/core";
export class UnitFormComponent {
    constructor(itemService, unitService) {
        this.itemService = itemService;
        this.unitService = unitService;
        this.i18nRoot = 'orgUnit';
        this.createChildUnit = false;
        this.form = this.itemService.getForm();
        this.units$ = this.itemService.unit$.pipe(tap((unit) => {
            this.form?.get('parentOrgUnit.uid')?.setValue(unit);
            if (this.createChildUnit) {
                this.form?.get('parentOrgUnit')?.disable();
            }
        }), switchMap(() => this.unitService.getActiveUnitList().pipe(map((units) => units?.filter((unit) => unit.id !== this.form?.value.uid)), tap((units) => {
            if (units && units.length === 1) {
                this.form?.get('parentOrgUnit.uid')?.setValue(units[0]?.id);
            }
        }))));
        this.approvalProcess$ = this.unitService
            .getApprovalProcesses()
            .pipe(filter(isNotUndefined), filter((items) => items.length > 0));
    }
    ngOnInit() {
        this.unitService.loadList();
    }
    createUidWithName(name, code) {
        createCodeForEntityName(name, code);
    }
}
UnitFormComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: UnitFormComponent, deps: [{ token: i1.ItemService }, { token: i2.OrgUnitService }], target: i0.ɵɵFactoryTarget.Component });
UnitFormComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.3", type: UnitFormComponent, selector: "cx-org-unit-form", inputs: { i18nRoot: "i18nRoot", createChildUnit: "createChildUnit" }, host: { classAttribute: "content-wrapper" }, providers: [
        {
            provide: ItemService,
            useExisting: UnitItemService,
        },
        {
            provide: CurrentItemService,
            useExisting: CurrentUnitService,
        },
    ], ngImport: i0, template: "<cx-org-form [i18nRoot]=\"i18nRoot\">\n  <ng-container *ngIf=\"form\" [formGroup]=\"form\" main>\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUnit.name' | cxTranslate\n      }}</span>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        required\n        placeholder=\"{{ 'orgUnit.name' | cxTranslate }}\"\n        formControlName=\"name\"\n        (blur)=\"createUidWithName(form.get('name'), form.get('uid'))\"\n      />\n      <cx-form-errors [control]=\"form.get('name')\"></cx-form-errors>\n    </label>\n\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUnit.uid' | cxTranslate\n      }}</span>\n      <input\n        class=\"form-control\"\n        type=\"text\"\n        required\n        placeholder=\"{{ 'orgUnit.uid' | cxTranslate }}\"\n        formControlName=\"uid\"\n      />\n      <cx-form-errors [control]=\"form.get('uid')\"></cx-form-errors>\n    </label>\n\n    <label formGroupName=\"approvalProcess\" class=\"full-width\">\n      <span class=\"label-content required\">{{\n        'orgUnit.approvalProcess' | cxTranslate\n      }}</span>\n      <ng-select\n        [inputAttrs]=\"{ required: 'true' }\"\n        formControlName=\"code\"\n        [searchable]=\"false\"\n        [items]=\"approvalProcess$ | async\"\n        bindLabel=\"name\"\n        bindValue=\"code\"\n        appendTo=\"cx-org-list\"\n        [placeholder]=\"'orgUnit.approvalProcess' | cxTranslate\"\n      >\n      </ng-select>\n      <cx-form-errors\n        [control]=\"form.get('approvalProcess.code')\"\n      ></cx-form-errors>\n    </label>\n    <ng-container *ngIf=\"form.get('parentOrgUnit'); else parentOrgUnitNotes\">\n      <label formGroupName=\"parentOrgUnit\">\n        <span class=\"label-content required\">{{\n          'orgUnit.form.parentOrgUnit' | cxTranslate\n        }}</span>\n        <ng-select\n          [inputAttrs]=\"{ required: 'true' }\"\n          formControlName=\"uid\"\n          [searchable]=\"true\"\n          [clearable]=\"false\"\n          [items]=\"(units$ | async) ?? null\"\n          bindLabel=\"name\"\n          bindValue=\"id\"\n          appendTo=\"cx-org-list\"\n          [placeholder]=\"'orgUnit.form.parentOrgUnit' | cxTranslate\"\n        >\n        </ng-select>\n        <cx-form-errors\n          [control]=\"form.get('parentOrgUnit.uid')\"\n        ></cx-form-errors>\n      </label>\n    </ng-container>\n    <ng-template #parentOrgUnitNotes>\n      <span class=\"notes-content\">{{\n        'orgUnit.form.parentOrgUnitNotes' | cxTranslate\n      }}</span>\n    </ng-template>\n  </ng-container>\n</cx-org-form>\n", dependencies: [{ kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i4.FormComponent, selector: "cx-org-form", inputs: ["i18nRoot", "animateBack", "subtitle"] }, { kind: "component", type: i5.NgSelectComponent, selector: "ng-select", inputs: ["bindLabel", "bindValue", "markFirst", "placeholder", "notFoundText", "typeToSearchText", "addTagText", "loadingText", "clearAllText", "appearance", "dropdownPosition", "appendTo", "loading", "closeOnSelect", "hideSelected", "selectOnTab", "openOnEnter", "maxSelectedItems", "groupBy", "groupValue", "bufferAmount", "virtualScroll", "selectableGroup", "selectableGroupAsModel", "searchFn", "trackByFn", "clearOnBackspace", "labelForId", "inputAttrs", "tabIndex", "readonly", "searchWhileComposing", "minTermLength", "editableSearchTerm", "keyDownFn", "typeahead", "multiple", "addTag", "searchable", "clearable", "isOpen", "items", "compareWith", "clearSearchOnAdd"], outputs: ["blur", "focus", "change", "open", "close", "search", "clear", "add", "remove", "scroll", "scrollToEnd"] }, { kind: "directive", type: i6.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i6.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i6.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i6.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { kind: "directive", type: i6.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i6.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { kind: "directive", type: i6.FormGroupName, selector: "[formGroupName]", inputs: ["formGroupName"] }, { kind: "component", type: i7.FormErrorsComponent, selector: "cx-form-errors", inputs: ["prefix", "translationParams", "control"] }, { kind: "pipe", type: i3.AsyncPipe, name: "async" }, { kind: "pipe", type: i8.TranslatePipe, name: "cxTranslate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: UnitFormComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-org-unit-form', changeDetection: ChangeDetectionStrategy.OnPush, host: { class: 'content-wrapper' }, providers: [
                        {
                            provide: ItemService,
                            useExisting: UnitItemService,
                        },
                        {
                            provide: CurrentItemService,
                            useExisting: CurrentUnitService,
                        },
                    ], template: "<cx-org-form [i18nRoot]=\"i18nRoot\">\n  <ng-container *ngIf=\"form\" [formGroup]=\"form\" main>\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUnit.name' | cxTranslate\n      }}</span>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        required\n        placeholder=\"{{ 'orgUnit.name' | cxTranslate }}\"\n        formControlName=\"name\"\n        (blur)=\"createUidWithName(form.get('name'), form.get('uid'))\"\n      />\n      <cx-form-errors [control]=\"form.get('name')\"></cx-form-errors>\n    </label>\n\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUnit.uid' | cxTranslate\n      }}</span>\n      <input\n        class=\"form-control\"\n        type=\"text\"\n        required\n        placeholder=\"{{ 'orgUnit.uid' | cxTranslate }}\"\n        formControlName=\"uid\"\n      />\n      <cx-form-errors [control]=\"form.get('uid')\"></cx-form-errors>\n    </label>\n\n    <label formGroupName=\"approvalProcess\" class=\"full-width\">\n      <span class=\"label-content required\">{{\n        'orgUnit.approvalProcess' | cxTranslate\n      }}</span>\n      <ng-select\n        [inputAttrs]=\"{ required: 'true' }\"\n        formControlName=\"code\"\n        [searchable]=\"false\"\n        [items]=\"approvalProcess$ | async\"\n        bindLabel=\"name\"\n        bindValue=\"code\"\n        appendTo=\"cx-org-list\"\n        [placeholder]=\"'orgUnit.approvalProcess' | cxTranslate\"\n      >\n      </ng-select>\n      <cx-form-errors\n        [control]=\"form.get('approvalProcess.code')\"\n      ></cx-form-errors>\n    </label>\n    <ng-container *ngIf=\"form.get('parentOrgUnit'); else parentOrgUnitNotes\">\n      <label formGroupName=\"parentOrgUnit\">\n        <span class=\"label-content required\">{{\n          'orgUnit.form.parentOrgUnit' | cxTranslate\n        }}</span>\n        <ng-select\n          [inputAttrs]=\"{ required: 'true' }\"\n          formControlName=\"uid\"\n          [searchable]=\"true\"\n          [clearable]=\"false\"\n          [items]=\"(units$ | async) ?? null\"\n          bindLabel=\"name\"\n          bindValue=\"id\"\n          appendTo=\"cx-org-list\"\n          [placeholder]=\"'orgUnit.form.parentOrgUnit' | cxTranslate\"\n        >\n        </ng-select>\n        <cx-form-errors\n          [control]=\"form.get('parentOrgUnit.uid')\"\n        ></cx-form-errors>\n      </label>\n    </ng-container>\n    <ng-template #parentOrgUnitNotes>\n      <span class=\"notes-content\">{{\n        'orgUnit.form.parentOrgUnitNotes' | cxTranslate\n      }}</span>\n    </ng-template>\n  </ng-container>\n</cx-org-form>\n" }]
        }], ctorParameters: function () { return [{ type: i1.ItemService }, { type: i2.OrgUnitService }]; }, propDecorators: { i18nRoot: [{
                type: Input
            }], createChildUnit: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,