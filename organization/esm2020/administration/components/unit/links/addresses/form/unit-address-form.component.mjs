/*
 * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { ItemService } from '../../../../shared/item.service';
import { UnitAddressItemService } from '../services/unit-address-item.service';
import * as i0 from "@angular/core";
import * as i1 from "../../../../shared/item.service";
import * as i2 from "./unit-address-form.service";
import * as i3 from "../../../services/current-unit.service";
import * as i4 from "@angular/common";
import * as i5 from "../../../../shared/form/form.component";
import * as i6 from "@ng-select/ng-select";
import * as i7 from "@angular/forms";
import * as i8 from "@spartacus/storefront";
import * as i9 from "@spartacus/core";
export class UnitAddressFormComponent {
    constructor(itemService, formService, currentUnitService) {
        this.itemService = itemService;
        this.formService = formService;
        this.currentUnitService = currentUnitService;
        this.form = this.itemService.getForm();
        this.key$ = this.itemService.key$;
        this.countries$ = this.formService.getCountries();
        this.titles$ = this.formService.getTitles();
        this.regions$ = this.formService.getRegions();
        this.unit$ = this.currentUnitService.item$;
    }
    ngOnInit() {
        // Intentional empty method
    }
}
UnitAddressFormComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: UnitAddressFormComponent, deps: [{ token: i1.ItemService }, { token: i2.UnitAddressFormService }, { token: i3.CurrentUnitService }], target: i0.ɵɵFactoryTarget.Component });
UnitAddressFormComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.3", type: UnitAddressFormComponent, selector: "cx-org-unit-address-form", host: { classAttribute: "content-wrapper" }, providers: [
        {
            provide: ItemService,
            useExisting: UnitAddressItemService,
        },
    ], ngImport: i0, template: "<cx-org-form\n  i18nRoot=\"orgUnitAddress\"\n  [animateBack]=\"!(key$ | async)\"\n  [subtitle]=\"\n    'orgUnitAddress.details.subtitle' | cxTranslate: { item: (unit$ | async) }\n  \"\n>\n  <ng-container *ngIf=\"form\" [formGroup]=\"form\" main>\n    <label formGroupName=\"country\">\n      <span class=\"label-content required\">{{\n        'orgUnitAddress.country' | cxTranslate\n      }}</span>\n      <ng-select\n        [inputAttrs]=\"{ required: 'true' }\"\n        class=\"country-select\"\n        formControlName=\"isocode\"\n        [searchable]=\"true\"\n        [clearable]=\"false\"\n        [items]=\"countries$ | async\"\n        bindLabel=\"name\"\n        bindValue=\"isocode\"\n        placeholder=\"{{ 'orgUnitAddress.selectOne' | cxTranslate }}\"\n        appendTo=\"cx-org-list\"\n      >\n      </ng-select>\n      <cx-form-errors [control]=\"form.get('country.isocode')\"></cx-form-errors>\n    </label>\n\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUnitAddress.titles' | cxTranslate\n      }}</span>\n      <ng-select\n        formControlName=\"titleCode\"\n        [searchable]=\"false\"\n        [clearable]=\"false\"\n        [items]=\"titles$ | async\"\n        bindLabel=\"name\"\n        bindValue=\"code\"\n        placeholder=\"{{ 'orgUnitAddress.selectOne' | cxTranslate }}\"\n        appendTo=\"cx-org-list\"\n      >\n      </ng-select>\n    </label>\n\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUnitAddress.firstName' | cxTranslate\n      }}</span>\n      <input\n        required=\"true\"\n        class=\"form-control\"\n        type=\"text\"\n        placeholder=\"{{ 'orgUnitAddress.firstName' | cxTranslate }}\"\n        formControlName=\"firstName\"\n      />\n      <cx-form-errors [control]=\"form.get('firstName')\"></cx-form-errors>\n    </label>\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUnitAddress.lastName' | cxTranslate\n      }}</span>\n      <input\n        required=\"true\"\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"{{ 'orgUnitAddress.lastName' | cxTranslate }}\"\n        formControlName=\"lastName\"\n      />\n      <cx-form-errors [control]=\"form.get('lastName')\"></cx-form-errors>\n    </label>\n\n    <label class=\"full-width\">\n      <span class=\"label-content required\">{{\n        'orgUnitAddress.address1' | cxTranslate\n      }}</span>\n      <input\n        required=\"true\"\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"{{ 'orgUnitAddress.streetAddress' | cxTranslate }}\"\n        formControlName=\"line1\"\n      />\n      <cx-form-errors [control]=\"form.get('line1')\"></cx-form-errors>\n    </label>\n\n    <label class=\"full-width\">\n      <span class=\"label-content\">{{\n        'orgUnitAddress.address2' | cxTranslate\n      }}</span>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"{{ 'orgUnitAddress.aptSuite' | cxTranslate }}\"\n        formControlName=\"line2\"\n      />\n    </label>\n\n    <label class=\"full-width\">\n      <span class=\"label-content\">{{\n        'orgUnitAddress.phoneNumber' | cxTranslate\n      }}</span>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"{{ 'orgUnitAddress.phoneNumber' | cxTranslate }}\"\n        formControlName=\"phone\"\n      />\n    </label>\n\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUnitAddress.city' | cxTranslate\n      }}</span>\n      <input\n        required=\"true\"\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"{{ 'orgUnitAddress.city' | cxTranslate }}\"\n        formControlName=\"town\"\n      />\n      <cx-form-errors [control]=\"form.get('town')\"></cx-form-errors>\n    </label>\n\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUnitAddress.zipCode' | cxTranslate\n      }}</span>\n      <input\n        required=\"true\"\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"{{ 'orgUnitAddress.zipCode' | cxTranslate }}\"\n        formControlName=\"postalCode\"\n      />\n      <cx-form-errors [control]=\"form.get('postalCode')\"></cx-form-errors>\n    </label>\n\n    <label></label>\n\n    <ng-container *ngIf=\"regions$ | async as regions\">\n      <label\n        class=\"full-width\"\n        formGroupName=\"region\"\n        *ngIf=\"regions.length > 0\"\n      >\n        <span class=\"label-content required\">{{\n          'orgUnitAddress.state' | cxTranslate\n        }}</span>\n        <ng-select\n          [inputAttrs]=\"{ required: 'true' }\"\n          class=\"region-select\"\n          formControlName=\"isocode\"\n          [searchable]=\"true\"\n          [clearable]=\"false\"\n          [items]=\"regions\"\n          bindLabel=\"name\"\n          bindValue=\"isocode\"\n          placeholder=\"{{ 'orgUnitAddress.selectOne' | cxTranslate }}\"\n          appendTo=\"cx-org-list\"\n        >\n        </ng-select>\n        <cx-form-errors [control]=\"form.get('region.isocode')\"></cx-form-errors>\n      </label>\n    </ng-container>\n  </ng-container>\n</cx-org-form>\n", dependencies: [{ kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i5.FormComponent, selector: "cx-org-form", inputs: ["i18nRoot", "animateBack", "subtitle"] }, { kind: "component", type: i6.NgSelectComponent, selector: "ng-select", inputs: ["bindLabel", "bindValue", "markFirst", "placeholder", "notFoundText", "typeToSearchText", "addTagText", "loadingText", "clearAllText", "appearance", "dropdownPosition", "appendTo", "loading", "closeOnSelect", "hideSelected", "selectOnTab", "openOnEnter", "maxSelectedItems", "groupBy", "groupValue", "bufferAmount", "virtualScroll", "selectableGroup", "selectableGroupAsModel", "searchFn", "trackByFn", "clearOnBackspace", "labelForId", "inputAttrs", "tabIndex", "readonly", "searchWhileComposing", "minTermLength", "editableSearchTerm", "keyDownFn", "typeahead", "multiple", "addTag", "searchable", "clearable", "isOpen", "items", "compareWith", "clearSearchOnAdd"], outputs: ["blur", "focus", "change", "open", "close", "search", "clear", "add", "remove", "scroll", "scrollToEnd"] }, { kind: "directive", type: i7.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i7.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i7.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i7.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { kind: "directive", type: i7.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i7.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }, { kind: "directive", type: i7.FormGroupName, selector: "[formGroupName]", inputs: ["formGroupName"] }, { kind: "component", type: i8.FormErrorsComponent, selector: "cx-form-errors", inputs: ["prefix", "translationParams", "control"] }, { kind: "pipe", type: i4.AsyncPipe, name: "async" }, { kind: "pipe", type: i9.TranslatePipe, name: "cxTranslate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: UnitAddressFormComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-org-unit-address-form', changeDetection: ChangeDetectionStrategy.OnPush, host: { class: 'content-wrapper' }, providers: [
                        {
                            provide: ItemService,
                            useExisting: UnitAddressItemService,
                        },
                    ], template: "<cx-org-form\n  i18nRoot=\"orgUnitAddress\"\n  [animateBack]=\"!(key$ | async)\"\n  [subtitle]=\"\n    'orgUnitAddress.details.subtitle' | cxTranslate: { item: (unit$ | async) }\n  \"\n>\n  <ng-container *ngIf=\"form\" [formGroup]=\"form\" main>\n    <label formGroupName=\"country\">\n      <span class=\"label-content required\">{{\n        'orgUnitAddress.country' | cxTranslate\n      }}</span>\n      <ng-select\n        [inputAttrs]=\"{ required: 'true' }\"\n        class=\"country-select\"\n        formControlName=\"isocode\"\n        [searchable]=\"true\"\n        [clearable]=\"false\"\n        [items]=\"countries$ | async\"\n        bindLabel=\"name\"\n        bindValue=\"isocode\"\n        placeholder=\"{{ 'orgUnitAddress.selectOne' | cxTranslate }}\"\n        appendTo=\"cx-org-list\"\n      >\n      </ng-select>\n      <cx-form-errors [control]=\"form.get('country.isocode')\"></cx-form-errors>\n    </label>\n\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUnitAddress.titles' | cxTranslate\n      }}</span>\n      <ng-select\n        formControlName=\"titleCode\"\n        [searchable]=\"false\"\n        [clearable]=\"false\"\n        [items]=\"titles$ | async\"\n        bindLabel=\"name\"\n        bindValue=\"code\"\n        placeholder=\"{{ 'orgUnitAddress.selectOne' | cxTranslate }}\"\n        appendTo=\"cx-org-list\"\n      >\n      </ng-select>\n    </label>\n\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUnitAddress.firstName' | cxTranslate\n      }}</span>\n      <input\n        required=\"true\"\n        class=\"form-control\"\n        type=\"text\"\n        placeholder=\"{{ 'orgUnitAddress.firstName' | cxTranslate }}\"\n        formControlName=\"firstName\"\n      />\n      <cx-form-errors [control]=\"form.get('firstName')\"></cx-form-errors>\n    </label>\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUnitAddress.lastName' | cxTranslate\n      }}</span>\n      <input\n        required=\"true\"\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"{{ 'orgUnitAddress.lastName' | cxTranslate }}\"\n        formControlName=\"lastName\"\n      />\n      <cx-form-errors [control]=\"form.get('lastName')\"></cx-form-errors>\n    </label>\n\n    <label class=\"full-width\">\n      <span class=\"label-content required\">{{\n        'orgUnitAddress.address1' | cxTranslate\n      }}</span>\n      <input\n        required=\"true\"\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"{{ 'orgUnitAddress.streetAddress' | cxTranslate }}\"\n        formControlName=\"line1\"\n      />\n      <cx-form-errors [control]=\"form.get('line1')\"></cx-form-errors>\n    </label>\n\n    <label class=\"full-width\">\n      <span class=\"label-content\">{{\n        'orgUnitAddress.address2' | cxTranslate\n      }}</span>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"{{ 'orgUnitAddress.aptSuite' | cxTranslate }}\"\n        formControlName=\"line2\"\n      />\n    </label>\n\n    <label class=\"full-width\">\n      <span class=\"label-content\">{{\n        'orgUnitAddress.phoneNumber' | cxTranslate\n      }}</span>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"{{ 'orgUnitAddress.phoneNumber' | cxTranslate }}\"\n        formControlName=\"phone\"\n      />\n    </label>\n\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUnitAddress.city' | cxTranslate\n      }}</span>\n      <input\n        required=\"true\"\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"{{ 'orgUnitAddress.city' | cxTranslate }}\"\n        formControlName=\"town\"\n      />\n      <cx-form-errors [control]=\"form.get('town')\"></cx-form-errors>\n    </label>\n\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUnitAddress.zipCode' | cxTranslate\n      }}</span>\n      <input\n        required=\"true\"\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"{{ 'orgUnitAddress.zipCode' | cxTranslate }}\"\n        formControlName=\"postalCode\"\n      />\n      <cx-form-errors [control]=\"form.get('postalCode')\"></cx-form-errors>\n    </label>\n\n    <label></label>\n\n    <ng-container *ngIf=\"regions$ | async as regions\">\n      <label\n        class=\"full-width\"\n        formGroupName=\"region\"\n        *ngIf=\"regions.length > 0\"\n      >\n        <span class=\"label-content required\">{{\n          'orgUnitAddress.state' | cxTranslate\n        }}</span>\n        <ng-select\n          [inputAttrs]=\"{ required: 'true' }\"\n          class=\"region-select\"\n          formControlName=\"isocode\"\n          [searchable]=\"true\"\n          [clearable]=\"false\"\n          [items]=\"regions\"\n          bindLabel=\"name\"\n          bindValue=\"isocode\"\n          placeholder=\"{{ 'orgUnitAddress.selectOne' | cxTranslate }}\"\n          appendTo=\"cx-org-list\"\n        >\n        </ng-select>\n        <cx-form-errors [control]=\"form.get('region.isocode')\"></cx-form-errors>\n      </label>\n    </ng-container>\n  </ng-container>\n</cx-org-form>\n" }]
        }], ctorParameters: function () { return [{ type: i1.ItemService }, { type: i2.UnitAddressFormService }, { type: i3.CurrentUnitService }]; } });
//# sourceMappingURL=data:application/json;base64,