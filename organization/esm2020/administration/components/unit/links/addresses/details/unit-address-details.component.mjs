/*
 * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { map, shareReplay, switchMap, tap, withLatestFrom, } from 'rxjs/operators';
import { ItemService } from '../../../../shared/item.service';
import { UnitAddressItemService } from '../services/unit-address-item.service';
import * as i0 from "@angular/core";
import * as i1 from "../../../../shared/item.service";
import * as i2 from "../../../services/current-unit.service";
import * as i3 from "@spartacus/core";
import * as i4 from "@angular/common";
import * as i5 from "../../../../shared/card/card.component";
import * as i6 from "@angular/router";
import * as i7 from "../../../../shared/detail/delete-item-action/delete-item.component";
import * as i8 from "@spartacus/storefront";
export class UnitAddressDetailsComponent {
    constructor(itemService, currentUnitService, userAddressService) {
        this.itemService = itemService;
        this.currentUnitService = currentUnitService;
        this.userAddressService = userAddressService;
        this.unit$ = this.currentUnitService.item$;
        this.model$ = this.itemService.key$.pipe(withLatestFrom(this.unit$), switchMap(([code, unit]) => this.itemService.load(unit?.uid, code)), shareReplay({ bufferSize: 1, refCount: true }));
    }
    getCountry(isoCode) {
        return this.userAddressService.getDeliveryCountries().pipe(tap((countries) => {
            if (Object.keys(countries).length === 0) {
                this.userAddressService.loadDeliveryCountries();
            }
        }), map((countries) => countries.find((country) => country.isocode === isoCode)));
    }
}
UnitAddressDetailsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: UnitAddressDetailsComponent, deps: [{ token: i1.ItemService }, { token: i2.CurrentUnitService }, { token: i3.UserAddressService }], target: i0.ɵɵFactoryTarget.Component });
UnitAddressDetailsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.3", type: UnitAddressDetailsComponent, selector: "cx-org-unit-address-details", host: { classAttribute: "content-wrapper" }, providers: [
        {
            provide: ItemService,
            useExisting: UnitAddressItemService,
        },
    ], ngImport: i0, template: "<ng-container *ngIf=\"unit$ | async as unit\">\n  <cx-org-card\n    *ngIf=\"model$ | async as model\"\n    i18nRoot=\"orgUnitAddress.details\"\n    [subtitle]=\"'orgUnitAddress.details.subtitle' | cxTranslate: { item: unit }\"\n    [cxFocus]=\"{ refreshFocus: model }\"\n  >\n    <a class=\"link\" actions routerLink=\"edit\">\n      {{ 'organization.edit' | cxTranslate }}\n    </a>\n\n    <cx-org-delete-item\n      actions\n      key=\"id\"\n      [additionalParam]=\"unit.uid\"\n      i18nRoot=\"orgUnitAddress\"\n    ></cx-org-delete-item>\n\n    <section main class=\"details\">\n      <div class=\"property\">\n        <label>{{ 'orgUnit.name' | cxTranslate }}</label>\n        <span class=\"value\"> {{ model.firstName }} {{ model.lastName }} </span>\n      </div>\n\n      <div class=\"property\">\n        <label>{{ 'orgUnit.unit' | cxTranslate }}</label>\n        <span class=\"value\">\n          <a\n            [routerLink]=\"\n              {\n                cxRoute: 'orgUnitDetails',\n                params: unit\n              } | cxUrl\n            \"\n          >\n            {{ unit.name }}\n          </a>\n        </span>\n      </div>\n\n      <div class=\"property full-width\">\n        <label>{{ 'orgUnitAddress.formattedAddress' | cxTranslate }}</label>\n        <span class=\"value\">\n          {{ model.formattedAddress }}\n        </span>\n      </div>\n\n      <div class=\"property\">\n        <label>{{ 'orgUnitAddress.country' | cxTranslate }}</label>\n        <span class=\"value\">\n          {{ (getCountry(model.country?.isocode) | async)?.name }}\n        </span>\n      </div>\n    </section>\n  </cx-org-card>\n</ng-container>\n", dependencies: [{ kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i5.CardComponent, selector: "cx-org-card", inputs: ["i18nRoot", "previous", "subtitle", "showHint"] }, { kind: "directive", type: i6.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "component", type: i7.DeleteItemComponent, selector: "cx-org-delete-item", inputs: ["i18nRoot", "key", "additionalParam"] }, { kind: "directive", type: i8.FocusDirective, selector: "[cxFocus]", inputs: ["cxFocus"] }, { kind: "pipe", type: i4.AsyncPipe, name: "async" }, { kind: "pipe", type: i3.UrlPipe, name: "cxUrl" }, { kind: "pipe", type: i3.TranslatePipe, name: "cxTranslate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: UnitAddressDetailsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-org-unit-address-details', changeDetection: ChangeDetectionStrategy.OnPush, host: { class: 'content-wrapper' }, providers: [
                        {
                            provide: ItemService,
                            useExisting: UnitAddressItemService,
                        },
                    ], template: "<ng-container *ngIf=\"unit$ | async as unit\">\n  <cx-org-card\n    *ngIf=\"model$ | async as model\"\n    i18nRoot=\"orgUnitAddress.details\"\n    [subtitle]=\"'orgUnitAddress.details.subtitle' | cxTranslate: { item: unit }\"\n    [cxFocus]=\"{ refreshFocus: model }\"\n  >\n    <a class=\"link\" actions routerLink=\"edit\">\n      {{ 'organization.edit' | cxTranslate }}\n    </a>\n\n    <cx-org-delete-item\n      actions\n      key=\"id\"\n      [additionalParam]=\"unit.uid\"\n      i18nRoot=\"orgUnitAddress\"\n    ></cx-org-delete-item>\n\n    <section main class=\"details\">\n      <div class=\"property\">\n        <label>{{ 'orgUnit.name' | cxTranslate }}</label>\n        <span class=\"value\"> {{ model.firstName }} {{ model.lastName }} </span>\n      </div>\n\n      <div class=\"property\">\n        <label>{{ 'orgUnit.unit' | cxTranslate }}</label>\n        <span class=\"value\">\n          <a\n            [routerLink]=\"\n              {\n                cxRoute: 'orgUnitDetails',\n                params: unit\n              } | cxUrl\n            \"\n          >\n            {{ unit.name }}\n          </a>\n        </span>\n      </div>\n\n      <div class=\"property full-width\">\n        <label>{{ 'orgUnitAddress.formattedAddress' | cxTranslate }}</label>\n        <span class=\"value\">\n          {{ model.formattedAddress }}\n        </span>\n      </div>\n\n      <div class=\"property\">\n        <label>{{ 'orgUnitAddress.country' | cxTranslate }}</label>\n        <span class=\"value\">\n          {{ (getCountry(model.country?.isocode) | async)?.name }}\n        </span>\n      </div>\n    </section>\n  </cx-org-card>\n</ng-container>\n" }]
        }], ctorParameters: function () { return [{ type: i1.ItemService }, { type: i2.CurrentUnitService }, { type: i3.UserAddressService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5pdC1hZGRyZXNzLWRldGFpbHMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL29yZ2FuaXphdGlvbi9hZG1pbmlzdHJhdGlvbi9jb21wb25lbnRzL3VuaXQvbGlua3MvYWRkcmVzc2VzL2RldGFpbHMvdW5pdC1hZGRyZXNzLWRldGFpbHMuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL29yZ2FuaXphdGlvbi9hZG1pbmlzdHJhdGlvbi9jb21wb25lbnRzL3VuaXQvbGlua3MvYWRkcmVzc2VzL2RldGFpbHMvdW5pdC1hZGRyZXNzLWRldGFpbHMuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUVILE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHbkUsT0FBTyxFQUNMLEdBQUcsRUFDSCxXQUFXLEVBQ1gsU0FBUyxFQUNULEdBQUcsRUFDSCxjQUFjLEdBQ2YsTUFBTSxnQkFBZ0IsQ0FBQztBQUN4QixPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFFOUQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sdUNBQXVDLENBQUM7Ozs7Ozs7Ozs7QUFjL0UsTUFBTSxPQUFPLDJCQUEyQjtJQXNCdEMsWUFDWSxXQUFpQyxFQUNqQyxrQkFBc0MsRUFDdEMsa0JBQXNDO1FBRnRDLGdCQUFXLEdBQVgsV0FBVyxDQUFzQjtRQUNqQyx1QkFBa0IsR0FBbEIsa0JBQWtCLENBQW9CO1FBQ3RDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7UUF4QmxELFVBQUssR0FBb0MsSUFBSSxDQUFDLGtCQUFrQixDQUFDLEtBQUssQ0FBQztRQUV2RSxXQUFNLEdBQXdCLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FDdEQsY0FBYyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFDMUIsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUMsRUFDbkUsV0FBVyxDQUFDLEVBQUUsVUFBVSxFQUFFLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FDL0MsQ0FBQztJQW1CQyxDQUFDO0lBakJKLFVBQVUsQ0FBQyxPQUEyQjtRQUNwQyxPQUFPLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxvQkFBb0IsRUFBRSxDQUFDLElBQUksQ0FDeEQsR0FBRyxDQUFDLENBQUMsU0FBb0IsRUFBRSxFQUFFO1lBQzNCLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO2dCQUN2QyxJQUFJLENBQUMsa0JBQWtCLENBQUMscUJBQXFCLEVBQUUsQ0FBQzthQUNqRDtRQUNILENBQUMsQ0FBQyxFQUNGLEdBQUcsQ0FBQyxDQUFDLFNBQVMsRUFBRSxFQUFFLENBQ2hCLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEtBQUssT0FBTyxDQUFDLENBQ3pELENBQ0YsQ0FBQztJQUNKLENBQUM7O3dIQXBCVSwyQkFBMkI7NEdBQTNCLDJCQUEyQixtR0FQM0I7UUFDVDtZQUNFLE9BQU8sRUFBRSxXQUFXO1lBQ3BCLFdBQVcsRUFBRSxzQkFBc0I7U0FDcEM7S0FDRiwwQkM5QkgsNG9EQXdEQTsyRkR4QmEsMkJBQTJCO2tCQVp2QyxTQUFTOytCQUNFLDZCQUE2QixtQkFFdEIsdUJBQXVCLENBQUMsTUFBTSxRQUN6QyxFQUFFLEtBQUssRUFBRSxpQkFBaUIsRUFBRSxhQUN2Qjt3QkFDVDs0QkFDRSxPQUFPLEVBQUUsV0FBVzs0QkFDcEIsV0FBVyxFQUFFLHNCQUFzQjt5QkFDcEM7cUJBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogU1BEWC1GaWxlQ29weXJpZ2h0VGV4dDogMjAyMiBTQVAgU3BhcnRhY3VzIHRlYW0gPHNwYXJ0YWN1cy10ZWFtQHNhcC5jb20+XG4gKlxuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjBcbiAqL1xuXG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBZGRyZXNzLCBCMkJVbml0LCBDb3VudHJ5LCBVc2VyQWRkcmVzc1NlcnZpY2UgfSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHtcbiAgbWFwLFxuICBzaGFyZVJlcGxheSxcbiAgc3dpdGNoTWFwLFxuICB0YXAsXG4gIHdpdGhMYXRlc3RGcm9tLFxufSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBJdGVtU2VydmljZSB9IGZyb20gJy4uLy4uLy4uLy4uL3NoYXJlZC9pdGVtLnNlcnZpY2UnO1xuaW1wb3J0IHsgQ3VycmVudFVuaXRTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vLi4vc2VydmljZXMvY3VycmVudC11bml0LnNlcnZpY2UnO1xuaW1wb3J0IHsgVW5pdEFkZHJlc3NJdGVtU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL3VuaXQtYWRkcmVzcy1pdGVtLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjeC1vcmctdW5pdC1hZGRyZXNzLWRldGFpbHMnLFxuICB0ZW1wbGF0ZVVybDogJy4vdW5pdC1hZGRyZXNzLWRldGFpbHMuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgaG9zdDogeyBjbGFzczogJ2NvbnRlbnQtd3JhcHBlcicgfSxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogSXRlbVNlcnZpY2UsXG4gICAgICB1c2VFeGlzdGluZzogVW5pdEFkZHJlc3NJdGVtU2VydmljZSxcbiAgICB9LFxuICBdLFxufSlcbmV4cG9ydCBjbGFzcyBVbml0QWRkcmVzc0RldGFpbHNDb21wb25lbnQge1xuICB1bml0JDogT2JzZXJ2YWJsZTxCMkJVbml0IHwgdW5kZWZpbmVkPiA9IHRoaXMuY3VycmVudFVuaXRTZXJ2aWNlLml0ZW0kO1xuXG4gIG1vZGVsJDogT2JzZXJ2YWJsZTxBZGRyZXNzPiA9IHRoaXMuaXRlbVNlcnZpY2Uua2V5JC5waXBlKFxuICAgIHdpdGhMYXRlc3RGcm9tKHRoaXMudW5pdCQpLFxuICAgIHN3aXRjaE1hcCgoW2NvZGUsIHVuaXRdKSA9PiB0aGlzLml0ZW1TZXJ2aWNlLmxvYWQodW5pdD8udWlkLCBjb2RlKSksXG4gICAgc2hhcmVSZXBsYXkoeyBidWZmZXJTaXplOiAxLCByZWZDb3VudDogdHJ1ZSB9KVxuICApO1xuXG4gIGdldENvdW50cnkoaXNvQ29kZTogc3RyaW5nIHwgdW5kZWZpbmVkKTogT2JzZXJ2YWJsZTxDb3VudHJ5IHwgdW5kZWZpbmVkPiB7XG4gICAgcmV0dXJuIHRoaXMudXNlckFkZHJlc3NTZXJ2aWNlLmdldERlbGl2ZXJ5Q291bnRyaWVzKCkucGlwZShcbiAgICAgIHRhcCgoY291bnRyaWVzOiBDb3VudHJ5W10pID0+IHtcbiAgICAgICAgaWYgKE9iamVjdC5rZXlzKGNvdW50cmllcykubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgdGhpcy51c2VyQWRkcmVzc1NlcnZpY2UubG9hZERlbGl2ZXJ5Q291bnRyaWVzKCk7XG4gICAgICAgIH1cbiAgICAgIH0pLFxuICAgICAgbWFwKChjb3VudHJpZXMpID0+XG4gICAgICAgIGNvdW50cmllcy5maW5kKChjb3VudHJ5KSA9PiBjb3VudHJ5Lmlzb2NvZGUgPT09IGlzb0NvZGUpXG4gICAgICApXG4gICAgKTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByb3RlY3RlZCBpdGVtU2VydmljZTogSXRlbVNlcnZpY2U8QWRkcmVzcz4sXG4gICAgcHJvdGVjdGVkIGN1cnJlbnRVbml0U2VydmljZTogQ3VycmVudFVuaXRTZXJ2aWNlLFxuICAgIHByb3RlY3RlZCB1c2VyQWRkcmVzc1NlcnZpY2U6IFVzZXJBZGRyZXNzU2VydmljZVxuICApIHt9XG59XG4iLCI8bmctY29udGFpbmVyICpuZ0lmPVwidW5pdCQgfCBhc3luYyBhcyB1bml0XCI+XG4gIDxjeC1vcmctY2FyZFxuICAgICpuZ0lmPVwibW9kZWwkIHwgYXN5bmMgYXMgbW9kZWxcIlxuICAgIGkxOG5Sb290PVwib3JnVW5pdEFkZHJlc3MuZGV0YWlsc1wiXG4gICAgW3N1YnRpdGxlXT1cIidvcmdVbml0QWRkcmVzcy5kZXRhaWxzLnN1YnRpdGxlJyB8IGN4VHJhbnNsYXRlOiB7IGl0ZW06IHVuaXQgfVwiXG4gICAgW2N4Rm9jdXNdPVwieyByZWZyZXNoRm9jdXM6IG1vZGVsIH1cIlxuICA+XG4gICAgPGEgY2xhc3M9XCJsaW5rXCIgYWN0aW9ucyByb3V0ZXJMaW5rPVwiZWRpdFwiPlxuICAgICAge3sgJ29yZ2FuaXphdGlvbi5lZGl0JyB8IGN4VHJhbnNsYXRlIH19XG4gICAgPC9hPlxuXG4gICAgPGN4LW9yZy1kZWxldGUtaXRlbVxuICAgICAgYWN0aW9uc1xuICAgICAga2V5PVwiaWRcIlxuICAgICAgW2FkZGl0aW9uYWxQYXJhbV09XCJ1bml0LnVpZFwiXG4gICAgICBpMThuUm9vdD1cIm9yZ1VuaXRBZGRyZXNzXCJcbiAgICA+PC9jeC1vcmctZGVsZXRlLWl0ZW0+XG5cbiAgICA8c2VjdGlvbiBtYWluIGNsYXNzPVwiZGV0YWlsc1wiPlxuICAgICAgPGRpdiBjbGFzcz1cInByb3BlcnR5XCI+XG4gICAgICAgIDxsYWJlbD57eyAnb3JnVW5pdC5uYW1lJyB8IGN4VHJhbnNsYXRlIH19PC9sYWJlbD5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJ2YWx1ZVwiPiB7eyBtb2RlbC5maXJzdE5hbWUgfX0ge3sgbW9kZWwubGFzdE5hbWUgfX0gPC9zcGFuPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxkaXYgY2xhc3M9XCJwcm9wZXJ0eVwiPlxuICAgICAgICA8bGFiZWw+e3sgJ29yZ1VuaXQudW5pdCcgfCBjeFRyYW5zbGF0ZSB9fTwvbGFiZWw+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwidmFsdWVcIj5cbiAgICAgICAgICA8YVxuICAgICAgICAgICAgW3JvdXRlckxpbmtdPVwiXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBjeFJvdXRlOiAnb3JnVW5pdERldGFpbHMnLFxuICAgICAgICAgICAgICAgIHBhcmFtczogdW5pdFxuICAgICAgICAgICAgICB9IHwgY3hVcmxcbiAgICAgICAgICAgIFwiXG4gICAgICAgICAgPlxuICAgICAgICAgICAge3sgdW5pdC5uYW1lIH19XG4gICAgICAgICAgPC9hPlxuICAgICAgICA8L3NwYW4+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzcz1cInByb3BlcnR5IGZ1bGwtd2lkdGhcIj5cbiAgICAgICAgPGxhYmVsPnt7ICdvcmdVbml0QWRkcmVzcy5mb3JtYXR0ZWRBZGRyZXNzJyB8IGN4VHJhbnNsYXRlIH19PC9sYWJlbD5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJ2YWx1ZVwiPlxuICAgICAgICAgIHt7IG1vZGVsLmZvcm1hdHRlZEFkZHJlc3MgfX1cbiAgICAgICAgPC9zcGFuPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxkaXYgY2xhc3M9XCJwcm9wZXJ0eVwiPlxuICAgICAgICA8bGFiZWw+e3sgJ29yZ1VuaXRBZGRyZXNzLmNvdW50cnknIHwgY3hUcmFuc2xhdGUgfX08L2xhYmVsPlxuICAgICAgICA8c3BhbiBjbGFzcz1cInZhbHVlXCI+XG4gICAgICAgICAge3sgKGdldENvdW50cnkobW9kZWwuY291bnRyeT8uaXNvY29kZSkgfCBhc3luYyk/Lm5hbWUgfX1cbiAgICAgICAgPC9zcGFuPlxuICAgICAgPC9kaXY+XG4gICAgPC9zZWN0aW9uPlxuICA8L2N4LW9yZy1jYXJkPlxuPC9uZy1jb250YWluZXI+XG4iXX0=