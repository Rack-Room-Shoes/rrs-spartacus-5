/*
 * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "./user-group.adapter";
export class UserGroupConnector {
    constructor(adapter) {
        this.adapter = adapter;
    }
    get(userId, userGroupId) {
        return this.adapter.load(userId, userGroupId);
    }
    getList(userId, params) {
        return this.adapter.loadList(userId, params);
    }
    getAvailableOrderApprovalPermissions(userId, userGroupId, params) {
        return this.adapter.loadAvailableOrderApprovalPermissions(userId, userGroupId, params);
    }
    getAvailableOrgCustomers(userId, userGroupId, params) {
        return this.adapter.loadAvailableOrgCustomers(userId, userGroupId, params);
    }
    create(userId, userGroup) {
        return this.adapter.create(userId, userGroup);
    }
    delete(userId, userGroupId) {
        return this.adapter.delete(userId, userGroupId);
    }
    update(userId, userGroupId, userGroup) {
        return this.adapter.update(userId, userGroupId, userGroup);
    }
    assignMember(userId, userGroupId, orgCustomerId) {
        return this.adapter.assignMember(userId, userGroupId, orgCustomerId);
    }
    assignOrderApprovalPermission(userId, userGroupId, orderApprovalPermissionCode) {
        return this.adapter.assignOrderApprovalPermission(userId, userGroupId, orderApprovalPermissionCode);
    }
    unassignMember(userId, userGroupId, orgCustomerId) {
        return this.adapter.unassignMember(userId, userGroupId, orgCustomerId);
    }
    unassignAllMembers(userId, userGroupId) {
        return this.adapter.unassignAllMembers(userId, userGroupId);
    }
    unassignOrderApprovalPermission(userId, userGroupId, orderApprovalPermissionCode) {
        return this.adapter.unassignOrderApprovalPermission(userId, userGroupId, orderApprovalPermissionCode);
    }
}
UserGroupConnector.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: UserGroupConnector, deps: [{ token: i1.UserGroupAdapter }], target: i0.ɵɵFactoryTarget.Injectable });
UserGroupConnector.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: UserGroupConnector, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: UserGroupConnector, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: function () { return [{ type: i1.UserGroupAdapter }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1ncm91cC5jb25uZWN0b3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvb3JnYW5pemF0aW9uL2FkbWluaXN0cmF0aW9uL2NvcmUvY29ubmVjdG9ycy91c2VyLWdyb3VwL3VzZXItZ3JvdXAuY29ubmVjdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0dBSUc7QUFFSCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7QUFVM0MsTUFBTSxPQUFPLGtCQUFrQjtJQUM3QixZQUFzQixPQUF5QjtRQUF6QixZQUFPLEdBQVAsT0FBTyxDQUFrQjtJQUFHLENBQUM7SUFFbkQsR0FBRyxDQUFDLE1BQWMsRUFBRSxXQUFtQjtRQUNyQyxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxXQUFXLENBQUMsQ0FBQztJQUNoRCxDQUFDO0lBRUQsT0FBTyxDQUNMLE1BQWMsRUFDZCxNQUFxQjtRQUVyQixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQztJQUMvQyxDQUFDO0lBRUQsb0NBQW9DLENBQ2xDLE1BQWMsRUFDZCxXQUFtQixFQUNuQixNQUFxQjtRQUVyQixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMscUNBQXFDLENBQ3ZELE1BQU0sRUFDTixXQUFXLEVBQ1gsTUFBTSxDQUNQLENBQUM7SUFDSixDQUFDO0lBRUQsd0JBQXdCLENBQ3RCLE1BQWMsRUFDZCxXQUFtQixFQUNuQixNQUFxQjtRQUVyQixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMseUJBQXlCLENBQUMsTUFBTSxFQUFFLFdBQVcsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUM3RSxDQUFDO0lBRUQsTUFBTSxDQUFDLE1BQWMsRUFBRSxTQUFvQjtRQUN6QyxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxTQUFTLENBQUMsQ0FBQztJQUNoRCxDQUFDO0lBRUQsTUFBTSxDQUFDLE1BQWMsRUFBRSxXQUFtQjtRQUN4QyxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxXQUFXLENBQUMsQ0FBQztJQUNsRCxDQUFDO0lBRUQsTUFBTSxDQUNKLE1BQWMsRUFDZCxXQUFtQixFQUNuQixTQUFvQjtRQUVwQixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxXQUFXLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDN0QsQ0FBQztJQUVELFlBQVksQ0FDVixNQUFjLEVBQ2QsV0FBbUIsRUFDbkIsYUFBcUI7UUFFckIsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxNQUFNLEVBQUUsV0FBVyxFQUFFLGFBQWEsQ0FBQyxDQUFDO0lBQ3ZFLENBQUM7SUFFRCw2QkFBNkIsQ0FDM0IsTUFBYyxFQUNkLFdBQW1CLEVBQ25CLDJCQUFtQztRQUVuQyxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsNkJBQTZCLENBQy9DLE1BQU0sRUFDTixXQUFXLEVBQ1gsMkJBQTJCLENBQzVCLENBQUM7SUFDSixDQUFDO0lBRUQsY0FBYyxDQUNaLE1BQWMsRUFDZCxXQUFtQixFQUNuQixhQUFxQjtRQUVyQixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLE1BQU0sRUFBRSxXQUFXLEVBQUUsYUFBYSxDQUFDLENBQUM7SUFDekUsQ0FBQztJQUVELGtCQUFrQixDQUFDLE1BQWMsRUFBRSxXQUFtQjtRQUNwRCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsa0JBQWtCLENBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQzlELENBQUM7SUFFRCwrQkFBK0IsQ0FDN0IsTUFBYyxFQUNkLFdBQW1CLEVBQ25CLDJCQUFtQztRQUVuQyxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsK0JBQStCLENBQ2pELE1BQU0sRUFDTixXQUFXLEVBQ1gsMkJBQTJCLENBQzVCLENBQUM7SUFDSixDQUFDOzsrR0E1RlUsa0JBQWtCO21IQUFsQixrQkFBa0IsY0FGakIsTUFBTTsyRkFFUCxrQkFBa0I7a0JBSDlCLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIFNQRFgtRmlsZUNvcHlyaWdodFRleHQ6IDIwMjIgU0FQIFNwYXJ0YWN1cyB0ZWFtIDxzcGFydGFjdXMtdGVhbUBzYXAuY29tPlxuICpcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXG4gKi9cblxuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQjJCVXNlciwgRW50aXRpZXNNb2RlbCwgU2VhcmNoQ29uZmlnIH0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IFBlcm1pc3Npb24gfSBmcm9tICcuLi8uLi9tb2RlbC9wZXJtaXNzaW9uLm1vZGVsJztcbmltcG9ydCB7IFVzZXJHcm91cCB9IGZyb20gJy4uLy4uL21vZGVsL3VzZXItZ3JvdXAubW9kZWwnO1xuaW1wb3J0IHsgVXNlckdyb3VwQWRhcHRlciB9IGZyb20gJy4vdXNlci1ncm91cC5hZGFwdGVyJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCcsXG59KVxuZXhwb3J0IGNsYXNzIFVzZXJHcm91cENvbm5lY3RvciB7XG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBhZGFwdGVyOiBVc2VyR3JvdXBBZGFwdGVyKSB7fVxuXG4gIGdldCh1c2VySWQ6IHN0cmluZywgdXNlckdyb3VwSWQ6IHN0cmluZyk6IE9ic2VydmFibGU8VXNlckdyb3VwPiB7XG4gICAgcmV0dXJuIHRoaXMuYWRhcHRlci5sb2FkKHVzZXJJZCwgdXNlckdyb3VwSWQpO1xuICB9XG5cbiAgZ2V0TGlzdChcbiAgICB1c2VySWQ6IHN0cmluZyxcbiAgICBwYXJhbXM/OiBTZWFyY2hDb25maWdcbiAgKTogT2JzZXJ2YWJsZTxFbnRpdGllc01vZGVsPFVzZXJHcm91cD4+IHtcbiAgICByZXR1cm4gdGhpcy5hZGFwdGVyLmxvYWRMaXN0KHVzZXJJZCwgcGFyYW1zKTtcbiAgfVxuXG4gIGdldEF2YWlsYWJsZU9yZGVyQXBwcm92YWxQZXJtaXNzaW9ucyhcbiAgICB1c2VySWQ6IHN0cmluZyxcbiAgICB1c2VyR3JvdXBJZDogc3RyaW5nLFxuICAgIHBhcmFtcz86IFNlYXJjaENvbmZpZ1xuICApOiBPYnNlcnZhYmxlPEVudGl0aWVzTW9kZWw8UGVybWlzc2lvbj4+IHtcbiAgICByZXR1cm4gdGhpcy5hZGFwdGVyLmxvYWRBdmFpbGFibGVPcmRlckFwcHJvdmFsUGVybWlzc2lvbnMoXG4gICAgICB1c2VySWQsXG4gICAgICB1c2VyR3JvdXBJZCxcbiAgICAgIHBhcmFtc1xuICAgICk7XG4gIH1cblxuICBnZXRBdmFpbGFibGVPcmdDdXN0b21lcnMoXG4gICAgdXNlcklkOiBzdHJpbmcsXG4gICAgdXNlckdyb3VwSWQ6IHN0cmluZyxcbiAgICBwYXJhbXM/OiBTZWFyY2hDb25maWdcbiAgKTogT2JzZXJ2YWJsZTxFbnRpdGllc01vZGVsPEIyQlVzZXI+PiB7XG4gICAgcmV0dXJuIHRoaXMuYWRhcHRlci5sb2FkQXZhaWxhYmxlT3JnQ3VzdG9tZXJzKHVzZXJJZCwgdXNlckdyb3VwSWQsIHBhcmFtcyk7XG4gIH1cblxuICBjcmVhdGUodXNlcklkOiBzdHJpbmcsIHVzZXJHcm91cDogVXNlckdyb3VwKTogT2JzZXJ2YWJsZTxVc2VyR3JvdXA+IHtcbiAgICByZXR1cm4gdGhpcy5hZGFwdGVyLmNyZWF0ZSh1c2VySWQsIHVzZXJHcm91cCk7XG4gIH1cblxuICBkZWxldGUodXNlcklkOiBzdHJpbmcsIHVzZXJHcm91cElkOiBzdHJpbmcpOiBPYnNlcnZhYmxlPFVzZXJHcm91cD4ge1xuICAgIHJldHVybiB0aGlzLmFkYXB0ZXIuZGVsZXRlKHVzZXJJZCwgdXNlckdyb3VwSWQpO1xuICB9XG5cbiAgdXBkYXRlKFxuICAgIHVzZXJJZDogc3RyaW5nLFxuICAgIHVzZXJHcm91cElkOiBzdHJpbmcsXG4gICAgdXNlckdyb3VwOiBVc2VyR3JvdXBcbiAgKTogT2JzZXJ2YWJsZTxVc2VyR3JvdXA+IHtcbiAgICByZXR1cm4gdGhpcy5hZGFwdGVyLnVwZGF0ZSh1c2VySWQsIHVzZXJHcm91cElkLCB1c2VyR3JvdXApO1xuICB9XG5cbiAgYXNzaWduTWVtYmVyKFxuICAgIHVzZXJJZDogc3RyaW5nLFxuICAgIHVzZXJHcm91cElkOiBzdHJpbmcsXG4gICAgb3JnQ3VzdG9tZXJJZDogc3RyaW5nXG4gICk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgcmV0dXJuIHRoaXMuYWRhcHRlci5hc3NpZ25NZW1iZXIodXNlcklkLCB1c2VyR3JvdXBJZCwgb3JnQ3VzdG9tZXJJZCk7XG4gIH1cblxuICBhc3NpZ25PcmRlckFwcHJvdmFsUGVybWlzc2lvbihcbiAgICB1c2VySWQ6IHN0cmluZyxcbiAgICB1c2VyR3JvdXBJZDogc3RyaW5nLFxuICAgIG9yZGVyQXBwcm92YWxQZXJtaXNzaW9uQ29kZTogc3RyaW5nXG4gICk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgcmV0dXJuIHRoaXMuYWRhcHRlci5hc3NpZ25PcmRlckFwcHJvdmFsUGVybWlzc2lvbihcbiAgICAgIHVzZXJJZCxcbiAgICAgIHVzZXJHcm91cElkLFxuICAgICAgb3JkZXJBcHByb3ZhbFBlcm1pc3Npb25Db2RlXG4gICAgKTtcbiAgfVxuXG4gIHVuYXNzaWduTWVtYmVyKFxuICAgIHVzZXJJZDogc3RyaW5nLFxuICAgIHVzZXJHcm91cElkOiBzdHJpbmcsXG4gICAgb3JnQ3VzdG9tZXJJZDogc3RyaW5nXG4gICk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgcmV0dXJuIHRoaXMuYWRhcHRlci51bmFzc2lnbk1lbWJlcih1c2VySWQsIHVzZXJHcm91cElkLCBvcmdDdXN0b21lcklkKTtcbiAgfVxuXG4gIHVuYXNzaWduQWxsTWVtYmVycyh1c2VySWQ6IHN0cmluZywgdXNlckdyb3VwSWQ6IHN0cmluZyk6IE9ic2VydmFibGU8YW55PiB7XG4gICAgcmV0dXJuIHRoaXMuYWRhcHRlci51bmFzc2lnbkFsbE1lbWJlcnModXNlcklkLCB1c2VyR3JvdXBJZCk7XG4gIH1cblxuICB1bmFzc2lnbk9yZGVyQXBwcm92YWxQZXJtaXNzaW9uKFxuICAgIHVzZXJJZDogc3RyaW5nLFxuICAgIHVzZXJHcm91cElkOiBzdHJpbmcsXG4gICAgb3JkZXJBcHByb3ZhbFBlcm1pc3Npb25Db2RlOiBzdHJpbmdcbiAgKTogT2JzZXJ2YWJsZTxhbnk+IHtcbiAgICByZXR1cm4gdGhpcy5hZGFwdGVyLnVuYXNzaWduT3JkZXJBcHByb3ZhbFBlcm1pc3Npb24oXG4gICAgICB1c2VySWQsXG4gICAgICB1c2VyR3JvdXBJZCxcbiAgICAgIG9yZGVyQXBwcm92YWxQZXJtaXNzaW9uQ29kZVxuICAgICk7XG4gIH1cbn1cbiJdfQ==