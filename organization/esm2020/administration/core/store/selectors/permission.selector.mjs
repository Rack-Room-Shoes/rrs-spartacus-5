/*
 * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { createSelector } from '@ngrx/store';
import { StateUtils, } from '@spartacus/core';
import { PERMISSION_FEATURE, PERMISSION_TYPES, } from '../organization-state';
import { getOrganizationState } from './feature.selector';
export const getPermissionManagementState = createSelector(getOrganizationState, (state) => state[PERMISSION_FEATURE]);
export const getPermissionsState = createSelector(getPermissionManagementState, (state) => state && state.entities);
export const getPermissionState = (permissionId) => createSelector(getPermissionsState, (state) => StateUtils.entityLoaderStateSelector(state, permissionId));
export const getPermissionTypesState = createSelector(getPermissionManagementState, (state) => state && state.permissionTypes);
export const getPermission = (permissionCode) => createSelector(getPermissionsState, (state) => StateUtils.entityLoaderStateSelector(state, permissionCode));
export const getPermissionValue = (permissionCode) => {
    return createSelector(getPermission(permissionCode), (permissionState) => StateUtils.loaderValueSelector(permissionState));
};
export const getPermissionList = (params) => createSelector(getPermissionManagementState, (state) => StateUtils.denormalizeSearch(state, params));
export const getPermissionTypes = () => createSelector(getPermissionTypesState, (state) => StateUtils.entityLoaderStateSelector(state, PERMISSION_TYPES));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVybWlzc2lvbi5zZWxlY3Rvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9vcmdhbml6YXRpb24vYWRtaW5pc3RyYXRpb24vY29yZS9zdG9yZS9zZWxlY3RvcnMvcGVybWlzc2lvbi5zZWxlY3Rvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBRUgsT0FBTyxFQUFFLGNBQWMsRUFBb0IsTUFBTSxhQUFhLENBQUM7QUFDL0QsT0FBTyxFQUdMLFVBQVUsR0FFWCxNQUFNLGlCQUFpQixDQUFDO0FBRXpCLE9BQU8sRUFHTCxrQkFBa0IsRUFDbEIsZ0JBQWdCLEdBRWpCLE1BQU0sdUJBQXVCLENBQUM7QUFDL0IsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFMUQsTUFBTSxDQUFDLE1BQU0sNEJBQTRCLEdBR3JDLGNBQWMsQ0FDaEIsb0JBQW9CLEVBQ3BCLENBQUMsS0FBd0IsRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLGtCQUFrQixDQUFDLENBQ3hELENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FHNUIsY0FBYyxDQUNoQiw0QkFBNEIsRUFDNUIsQ0FBQyxLQUEyQixFQUFFLEVBQUUsQ0FBQyxLQUFLLElBQUksS0FBSyxDQUFDLFFBQVEsQ0FDekQsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUFHLENBQ2hDLFlBQW9CLEVBSXBCLEVBQUUsQ0FDRixjQUFjLENBQ1osbUJBQW1CLEVBQ25CLENBQUMsS0FBK0MsRUFBRSxFQUFFLENBQ2xELFVBQVUsQ0FBQyx5QkFBeUIsQ0FBQyxLQUFLLEVBQUUsWUFBWSxDQUFDLENBQzVELENBQUM7QUFFSixNQUFNLENBQUMsTUFBTSx1QkFBdUIsR0FHaEMsY0FBYyxDQUNoQiw0QkFBNEIsRUFDNUIsQ0FBQyxLQUEyQixFQUFFLEVBQUUsQ0FBQyxLQUFLLElBQUksS0FBSyxDQUFDLGVBQWUsQ0FDaEUsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRyxDQUMzQixjQUFzQixFQUl0QixFQUFFLENBQ0YsY0FBYyxDQUNaLG1CQUFtQixFQUNuQixDQUFDLEtBQStDLEVBQUUsRUFBRSxDQUNsRCxVQUFVLENBQUMseUJBQXlCLENBQUMsS0FBSyxFQUFFLGNBQWMsQ0FBQyxDQUM5RCxDQUFDO0FBRUosTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQUcsQ0FDaEMsY0FBc0IsRUFDK0IsRUFBRTtJQUN2RCxPQUFPLGNBQWMsQ0FBQyxhQUFhLENBQUMsY0FBYyxDQUFDLEVBQUUsQ0FBQyxlQUFlLEVBQUUsRUFBRSxDQUN2RSxVQUFVLENBQUMsbUJBQW1CLENBQUMsZUFBZSxDQUFDLENBQ2hELENBQUM7QUFDSixDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxDQUMvQixNQUFvQixFQUlwQixFQUFFLENBQ0YsY0FBYyxDQUFDLDRCQUE0QixFQUFFLENBQUMsS0FBMkIsRUFBRSxFQUFFLENBQzNFLFVBQVUsQ0FBQyxpQkFBaUIsQ0FBYSxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQ3hELENBQUM7QUFFSixNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBRyxHQUdoQyxFQUFFLENBQ0YsY0FBYyxDQUNaLHVCQUF1QixFQUN2QixDQUFDLEtBQWtFLEVBQUUsRUFBRSxDQUNyRSxVQUFVLENBQUMseUJBQXlCLENBQUMsS0FBSyxFQUFFLGdCQUFnQixDQUFDLENBQ2hFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogU1BEWC1GaWxlQ29weXJpZ2h0VGV4dDogMjAyMiBTQVAgU3BhcnRhY3VzIHRlYW0gPHNwYXJ0YWN1cy10ZWFtQHNhcC5jb20+XG4gKlxuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjBcbiAqL1xuXG5pbXBvcnQgeyBjcmVhdGVTZWxlY3RvciwgTWVtb2l6ZWRTZWxlY3RvciB9IGZyb20gJ0BuZ3J4L3N0b3JlJztcbmltcG9ydCB7XG4gIEVudGl0aWVzTW9kZWwsXG4gIFNlYXJjaENvbmZpZyxcbiAgU3RhdGVVdGlscyxcbiAgT3JkZXJBcHByb3ZhbFBlcm1pc3Npb25UeXBlLFxufSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xuaW1wb3J0IHsgUGVybWlzc2lvbiB9IGZyb20gJy4uLy4uL21vZGVsL3Blcm1pc3Npb24ubW9kZWwnO1xuaW1wb3J0IHtcbiAgT3JnYW5pemF0aW9uU3RhdGUsXG4gIFBlcm1pc3Npb25NYW5hZ2VtZW50LFxuICBQRVJNSVNTSU9OX0ZFQVRVUkUsXG4gIFBFUk1JU1NJT05fVFlQRVMsXG4gIFN0YXRlV2l0aE9yZ2FuaXphdGlvbixcbn0gZnJvbSAnLi4vb3JnYW5pemF0aW9uLXN0YXRlJztcbmltcG9ydCB7IGdldE9yZ2FuaXphdGlvblN0YXRlIH0gZnJvbSAnLi9mZWF0dXJlLnNlbGVjdG9yJztcblxuZXhwb3J0IGNvbnN0IGdldFBlcm1pc3Npb25NYW5hZ2VtZW50U3RhdGU6IE1lbW9pemVkU2VsZWN0b3I8XG4gIFN0YXRlV2l0aE9yZ2FuaXphdGlvbixcbiAgUGVybWlzc2lvbk1hbmFnZW1lbnRcbj4gPSBjcmVhdGVTZWxlY3RvcihcbiAgZ2V0T3JnYW5pemF0aW9uU3RhdGUsXG4gIChzdGF0ZTogT3JnYW5pemF0aW9uU3RhdGUpID0+IHN0YXRlW1BFUk1JU1NJT05fRkVBVFVSRV1cbik7XG5cbmV4cG9ydCBjb25zdCBnZXRQZXJtaXNzaW9uc1N0YXRlOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhPcmdhbml6YXRpb24sXG4gIFN0YXRlVXRpbHMuRW50aXR5TG9hZGVyU3RhdGU8UGVybWlzc2lvbj5cbj4gPSBjcmVhdGVTZWxlY3RvcihcbiAgZ2V0UGVybWlzc2lvbk1hbmFnZW1lbnRTdGF0ZSxcbiAgKHN0YXRlOiBQZXJtaXNzaW9uTWFuYWdlbWVudCkgPT4gc3RhdGUgJiYgc3RhdGUuZW50aXRpZXNcbik7XG5cbmV4cG9ydCBjb25zdCBnZXRQZXJtaXNzaW9uU3RhdGUgPSAoXG4gIHBlcm1pc3Npb25JZDogc3RyaW5nXG4pOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhPcmdhbml6YXRpb24sXG4gIFN0YXRlVXRpbHMuTG9hZGVyU3RhdGU8UGVybWlzc2lvbj5cbj4gPT5cbiAgY3JlYXRlU2VsZWN0b3IoXG4gICAgZ2V0UGVybWlzc2lvbnNTdGF0ZSxcbiAgICAoc3RhdGU6IFN0YXRlVXRpbHMuRW50aXR5TG9hZGVyU3RhdGU8UGVybWlzc2lvbj4pID0+XG4gICAgICBTdGF0ZVV0aWxzLmVudGl0eUxvYWRlclN0YXRlU2VsZWN0b3Ioc3RhdGUsIHBlcm1pc3Npb25JZClcbiAgKTtcblxuZXhwb3J0IGNvbnN0IGdldFBlcm1pc3Npb25UeXBlc1N0YXRlOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhPcmdhbml6YXRpb24sXG4gIFN0YXRlVXRpbHMuRW50aXR5TG9hZGVyU3RhdGU8T3JkZXJBcHByb3ZhbFBlcm1pc3Npb25UeXBlW10+XG4+ID0gY3JlYXRlU2VsZWN0b3IoXG4gIGdldFBlcm1pc3Npb25NYW5hZ2VtZW50U3RhdGUsXG4gIChzdGF0ZTogUGVybWlzc2lvbk1hbmFnZW1lbnQpID0+IHN0YXRlICYmIHN0YXRlLnBlcm1pc3Npb25UeXBlc1xuKTtcblxuZXhwb3J0IGNvbnN0IGdldFBlcm1pc3Npb24gPSAoXG4gIHBlcm1pc3Npb25Db2RlOiBzdHJpbmdcbik6IE1lbW9pemVkU2VsZWN0b3I8XG4gIFN0YXRlV2l0aE9yZ2FuaXphdGlvbixcbiAgU3RhdGVVdGlscy5Mb2FkZXJTdGF0ZTxQZXJtaXNzaW9uPlxuPiA9PlxuICBjcmVhdGVTZWxlY3RvcihcbiAgICBnZXRQZXJtaXNzaW9uc1N0YXRlLFxuICAgIChzdGF0ZTogU3RhdGVVdGlscy5FbnRpdHlMb2FkZXJTdGF0ZTxQZXJtaXNzaW9uPikgPT5cbiAgICAgIFN0YXRlVXRpbHMuZW50aXR5TG9hZGVyU3RhdGVTZWxlY3RvcihzdGF0ZSwgcGVybWlzc2lvbkNvZGUpXG4gICk7XG5cbmV4cG9ydCBjb25zdCBnZXRQZXJtaXNzaW9uVmFsdWUgPSAoXG4gIHBlcm1pc3Npb25Db2RlOiBzdHJpbmdcbik6IE1lbW9pemVkU2VsZWN0b3I8U3RhdGVXaXRoT3JnYW5pemF0aW9uLCBQZXJtaXNzaW9uPiA9PiB7XG4gIHJldHVybiBjcmVhdGVTZWxlY3RvcihnZXRQZXJtaXNzaW9uKHBlcm1pc3Npb25Db2RlKSwgKHBlcm1pc3Npb25TdGF0ZSkgPT5cbiAgICBTdGF0ZVV0aWxzLmxvYWRlclZhbHVlU2VsZWN0b3IocGVybWlzc2lvblN0YXRlKVxuICApO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldFBlcm1pc3Npb25MaXN0ID0gKFxuICBwYXJhbXM6IFNlYXJjaENvbmZpZ1xuKTogTWVtb2l6ZWRTZWxlY3RvcjxcbiAgU3RhdGVXaXRoT3JnYW5pemF0aW9uLFxuICBTdGF0ZVV0aWxzLkxvYWRlclN0YXRlPEVudGl0aWVzTW9kZWw8UGVybWlzc2lvbj4+XG4+ID0+XG4gIGNyZWF0ZVNlbGVjdG9yKGdldFBlcm1pc3Npb25NYW5hZ2VtZW50U3RhdGUsIChzdGF0ZTogUGVybWlzc2lvbk1hbmFnZW1lbnQpID0+XG4gICAgU3RhdGVVdGlscy5kZW5vcm1hbGl6ZVNlYXJjaDxQZXJtaXNzaW9uPihzdGF0ZSwgcGFyYW1zKVxuICApO1xuXG5leHBvcnQgY29uc3QgZ2V0UGVybWlzc2lvblR5cGVzID0gKCk6IE1lbW9pemVkU2VsZWN0b3I8XG4gIFN0YXRlV2l0aE9yZ2FuaXphdGlvbixcbiAgU3RhdGVVdGlscy5Mb2FkZXJTdGF0ZTxPcmRlckFwcHJvdmFsUGVybWlzc2lvblR5cGVbXT5cbj4gPT5cbiAgY3JlYXRlU2VsZWN0b3IoXG4gICAgZ2V0UGVybWlzc2lvblR5cGVzU3RhdGUsXG4gICAgKHN0YXRlOiBTdGF0ZVV0aWxzLkVudGl0eUxvYWRlclN0YXRlPE9yZGVyQXBwcm92YWxQZXJtaXNzaW9uVHlwZVtdPikgPT5cbiAgICAgIFN0YXRlVXRpbHMuZW50aXR5TG9hZGVyU3RhdGVTZWxlY3RvcihzdGF0ZSwgUEVSTUlTU0lPTl9UWVBFUylcbiAgKTtcbiJdfQ==