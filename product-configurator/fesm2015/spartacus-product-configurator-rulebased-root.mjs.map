{"version":3,"file":"spartacus-product-configurator-rulebased-root.mjs","sources":["../../../feature-libs/product-configurator/rulebased/root/cpq/cpq-configurator-page-layout-handler.ts","../../../feature-libs/product-configurator/rulebased/root/cpq/cpq-configurator-layout.module.ts","../../../feature-libs/product-configurator/rulebased/root/cpq/default-cpq-interactive-routing-config.ts","../../../feature-libs/product-configurator/rulebased/root/cpq/cpq-configurator-interactive.module.ts","../../../feature-libs/product-configurator/rulebased/root/cpq/default-cpq-overview-routing-config.ts","../../../feature-libs/product-configurator/rulebased/root/cpq/cpq-configurator-overview.module.ts","../../../feature-libs/product-configurator/rulebased/root/cpq/interceptor/cpq-access-loader.service.ts","../../../feature-libs/product-configurator/rulebased/root/cpq/interceptor/cpq-configurator-auth.config.ts","../../../feature-libs/product-configurator/rulebased/root/cpq/interceptor/cpq-access-storage.service.ts","../../../feature-libs/product-configurator/rulebased/root/cpq/interceptor/cpq-configurator-rest.interceptor.ts","../../../feature-libs/product-configurator/rulebased/root/cpq/interceptor/default-cpq-configurator-auth.config.ts","../../../feature-libs/product-configurator/rulebased/root/cpq/interceptor/cpq-configurator-interceptor.module.ts","../../../feature-libs/product-configurator/rulebased/root/cpq/cpq-configurator-root.module.ts","../../../feature-libs/product-configurator/rulebased/root/cpq/interceptor/index.ts","../../../feature-libs/product-configurator/rulebased/root/cpq/index.ts","../../../feature-libs/product-configurator/rulebased/root/feature-name.ts","../../../feature-libs/product-configurator/rulebased/root/rulebased-configurator-root-feature.module.ts","../../../feature-libs/product-configurator/rulebased/root/default-rulebased-routing-config.ts","../../../feature-libs/product-configurator/rulebased/root/rulebased-configurator-routing.module.ts","../../../feature-libs/product-configurator/rulebased/root/variant/variant-configurator-interactive-layout.module.ts","../../../feature-libs/product-configurator/rulebased/root/variant/variant-configurator-interactive.module.ts","../../../feature-libs/product-configurator/rulebased/root/variant/variant-configurator-page-layout-handler.ts","../../../feature-libs/product-configurator/rulebased/root/variant/variant-configurator-overview-layout.module.ts","../../../feature-libs/product-configurator/rulebased/root/variant/variant-configurator-overview.module.ts","../../../feature-libs/product-configurator/rulebased/root/rulebased-configurator-root.module.ts","../../../feature-libs/product-configurator/rulebased/root/variant/index.ts","../../../feature-libs/product-configurator/rulebased/root/public_api.ts","../../../feature-libs/product-configurator/rulebased/root/spartacus-product-configurator-rulebased-root.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n  CommonConfiguratorUtilsService,\n  ConfiguratorRouter,\n  ConfiguratorRouterExtractorService,\n} from '@spartacus/product-configurator/common';\nimport {\n  BREAKPOINT,\n  BreakpointService,\n  LayoutConfig,\n  PageLayoutHandler,\n} from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { map, switchMap, take } from 'rxjs/operators';\n\ninterface RouterResolution {\n  isLargeResolution: boolean;\n  routerData: ConfiguratorRouter.Data;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CpqConfiguratorPageLayoutHandler implements PageLayoutHandler {\n  protected static templateName = 'CpqConfigurationTemplate';\n  protected static sectionHeaderDisplayOnly = 'headerDisplayOnly';\n  protected static sectionNavigationDisplayOnly = 'navigationDisplayOnly';\n  protected static sectionHeader = 'header';\n  protected static sectionNavigation = 'navigation';\n  constructor(\n    protected configuratorRouterExtractorService: ConfiguratorRouterExtractorService,\n    protected breakpointService: BreakpointService,\n    protected layoutConfig: LayoutConfig,\n    protected commonConfiguratorUtilsService: CommonConfiguratorUtilsService\n  ) {}\n\n  handle(\n    slots$: Observable<string[]>,\n    pageTemplate?: string,\n    section?: string\n  ) {\n    if (\n      pageTemplate === CpqConfiguratorPageLayoutHandler.templateName &&\n      section === CpqConfiguratorPageLayoutHandler.sectionHeader\n    ) {\n      this.compileRouterAndResolution()\n        .pipe(take(1))\n        .subscribe((cont) => {\n          slots$ = slots$.pipe(\n            map((slots) => this.getHeaderSlots(slots, cont))\n          );\n        });\n    } else if (\n      pageTemplate === CpqConfiguratorPageLayoutHandler.templateName &&\n      section === CpqConfiguratorPageLayoutHandler.sectionNavigation\n    ) {\n      this.compileRouterAndResolution()\n        .pipe(take(1))\n        .subscribe((cont) => {\n          slots$ = slots$.pipe(\n            map((slots) => this.getNavigationSlots(slots, cont))\n          );\n        });\n    }\n    return slots$;\n  }\n\n  protected compileRouterAndResolution(): Observable<RouterResolution> {\n    return this.configuratorRouterExtractorService.extractRouterData().pipe(\n      switchMap((routerData) =>\n        this.breakpointService.isUp(BREAKPOINT.lg).pipe(\n          map((isLargeResolution) => ({\n            isLargeResolution: isLargeResolution,\n            routerData,\n          }))\n        )\n      )\n    );\n  }\n\n  protected getHeaderSlots(slots: string[], cont: RouterResolution): string[] {\n    if (\n      cont.routerData.pageType === ConfiguratorRouter.PageType.CONFIGURATION\n    ) {\n      const extendedSlots = ['PreHeader'];\n      extendedSlots.push(...slots);\n      return extendedSlots;\n    } else if (cont.routerData.displayOnly) {\n      if (cont.isLargeResolution) {\n        return this.commonConfiguratorUtilsService.getSlotsFromLayoutConfiguration(\n          this.layoutConfig,\n          CpqConfiguratorPageLayoutHandler.templateName,\n          CpqConfiguratorPageLayoutHandler.sectionHeaderDisplayOnly,\n          BREAKPOINT.lg\n        );\n      } else {\n        return this.commonConfiguratorUtilsService.getSlotsFromLayoutConfiguration(\n          this.layoutConfig,\n          CpqConfiguratorPageLayoutHandler.templateName,\n          CpqConfiguratorPageLayoutHandler.sectionHeaderDisplayOnly,\n          BREAKPOINT.xs\n        );\n      }\n    } else {\n      return slots;\n    }\n  }\n\n  protected getNavigationSlots(\n    slots: string[],\n    cont: RouterResolution\n  ): string[] {\n    if (\n      cont.routerData.pageType === ConfiguratorRouter.PageType.OVERVIEW &&\n      cont.routerData.displayOnly\n    ) {\n      if (cont.isLargeResolution) {\n        return this.commonConfiguratorUtilsService.getSlotsFromLayoutConfiguration(\n          this.layoutConfig,\n          CpqConfiguratorPageLayoutHandler.templateName,\n          CpqConfiguratorPageLayoutHandler.sectionNavigationDisplayOnly,\n          BREAKPOINT.lg\n        );\n      } else {\n        return this.commonConfiguratorUtilsService.getSlotsFromLayoutConfiguration(\n          this.layoutConfig,\n          CpqConfiguratorPageLayoutHandler.templateName,\n          CpqConfiguratorPageLayoutHandler.sectionNavigationDisplayOnly,\n          BREAKPOINT.xs\n        );\n      }\n    } else {\n      return slots;\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { LayoutConfig, PAGE_LAYOUT_HANDLER } from '@spartacus/storefront';\nimport { CpqConfiguratorPageLayoutHandler } from './cpq-configurator-page-layout-handler';\n\n/**\n *  Contains the layout configuration for the CPQ configurator pages. This configuration is\n *  optional as of version 4.2, and reduces the components that are rendered in the header section.\n *  It needs to be explicitly imported, otherwise the default configuration\n *  from CpqConfiguratorInteractiveModule is active\n */\n@NgModule({\n  providers: [\n    provideDefaultConfig(<LayoutConfig>{\n      layoutSlots: {\n        CpqConfigurationTemplate: {\n          header: {\n            lg: {\n              slots: ['SiteLogo', 'CpqConfigExitButton', 'MiniCart'],\n            },\n            xs: {\n              slots: ['SiteLogo', 'CpqConfigExitButton', 'MiniCart'],\n            },\n          },\n          headerDisplayOnly: {\n            lg: {\n              slots: [\n                'SiteContext',\n                'SiteLinks',\n                'SiteLogo',\n                'SearchBox',\n                'SiteLogin',\n                'MiniCart',\n                'NavigationBar',\n              ],\n            },\n            xs: {\n              slots: ['PreHeader', 'SiteLogo', 'SearchBox', 'MiniCart'],\n            },\n          },\n\n          navigation: {\n            lg: { slots: [] },\n            slots: ['CpqConfigMenu'],\n          },\n\n          navigationDisplayOnly: {\n            lg: { slots: [] },\n            xs: {\n              slots: ['SiteLogin', 'NavigationBar', 'SiteContext', 'SiteLinks'],\n            },\n          },\n\n          lg: {\n            slots: [\n              'CpqConfigHeader',\n              'CpqConfigBanner',\n              'CpqConfigMenu',\n              'CpqConfigContent',\n              'CpqConfigOverviewBanner',\n              'CpqConfigOverviewContent',\n              'CpqConfigBottombar',\n            ],\n          },\n\n          slots: [\n            'CpqConfigHeader',\n            'CpqConfigBanner',\n            'CpqConfigContent',\n            'CpqConfigOverviewBanner',\n            'CpqConfigOverviewContent',\n            'CpqConfigBottombar',\n          ],\n        },\n      },\n    }),\n\n    {\n      provide: PAGE_LAYOUT_HANDLER,\n      useExisting: CpqConfiguratorPageLayoutHandler,\n      multi: true,\n    },\n  ],\n})\nexport class CpqConfiguratorLayoutModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { RoutingConfig } from '@spartacus/core';\n\nexport const defaultCpqInteractiveRoutingConfig: RoutingConfig = {\n  routing: {\n    routes: {\n      configureCLOUDCPQCONFIGURATOR: {\n        paths: ['configure/cpq/:ownerType/entityKey/:entityKey'],\n      },\n    },\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport {\n  CmsPageGuard,\n  HamburgerMenuModule,\n  PageLayoutComponent,\n} from '@spartacus/storefront';\nimport { CpqConfiguratorLayoutModule } from './cpq-configurator-layout.module';\nimport { defaultCpqInteractiveRoutingConfig } from './default-cpq-interactive-routing-config';\n\n/**\n * Takes care of the interactive configuration process (the user enters new attribute values and navigates through the configuration).\n * Provides routing, assignment of ng components to CMS components and assignment of CMS components to the layout slots\n */\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        // We can neither omit the path nor set to undefined\n        // @ts-ignore\n        path: null,\n        data: {\n          cxRoute: 'configureCLOUDCPQCONFIGURATOR',\n        },\n        component: PageLayoutComponent,\n        canActivate: [CmsPageGuard],\n      },\n    ]),\n    HamburgerMenuModule,\n    CpqConfiguratorLayoutModule,\n  ],\n  providers: [provideDefaultConfig(defaultCpqInteractiveRoutingConfig)],\n})\nexport class CpqConfiguratorInteractiveModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { RoutingConfig } from '@spartacus/core';\n\nexport const defaultCpqOverviewRoutingConfig: RoutingConfig = {\n  routing: {\n    routes: {\n      configureOverviewCLOUDCPQCONFIGURATOR: {\n        paths: [\n          'configure-overview/cpq/:ownerType/entityKey/:entityKey/displayOnly/:displayOnly',\n          'configure-overview/cpq/:ownerType/entityKey/:entityKey',\n        ],\n      },\n    },\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { CmsPageGuard, PageLayoutComponent } from '@spartacus/storefront';\nimport { CpqConfiguratorLayoutModule } from './cpq-configurator-layout.module';\nimport { defaultCpqOverviewRoutingConfig } from './default-cpq-overview-routing-config';\n\n/**\n * Takes care of the configuration overview that visualizes the attribute value assignments that have been done already in a condensed, read-only form.\n * The end-user can switch between the interactive view and this overview.\n * Provides routing, assignment of ng components to CMS components and assignment of CMS components to the layout slots.\n * Some of the ng components on this view (tab bar, price summary and addToCart button) are shared between the interactive view and the overview.\n */\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        // We can neither omit the path nor set to undefined\n        // @ts-ignore\n        path: null,\n        component: PageLayoutComponent,\n        data: {\n          cxRoute: 'configureOverviewCLOUDCPQCONFIGURATOR',\n        },\n        canActivate: [CmsPageGuard],\n      },\n    ]),\n    CpqConfiguratorLayoutModule,\n  ],\n  providers: [provideDefaultConfig(defaultCpqOverviewRoutingConfig)],\n})\nexport class CpqConfiguratorOverviewModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { OccEndpointsService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CpqAccessData } from './cpq-access-data.models';\n\n@Injectable({ providedIn: 'root' })\nexport class CpqAccessLoaderService {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpointsService: OccEndpointsService\n  ) {}\n\n  getCpqAccessData(): Observable<CpqAccessData> {\n    return this.http.get<CpqAccessData>(\n      this.occEndpointsService.buildUrl('getCpqAccessData')\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\nimport '@spartacus/product-configurator/common';\n\nexport interface ProductConfiguratorCpqAuthConfig {\n  cpq?: {\n    authentication: {\n      /** We should stop using/sending a token shortly before expiration,\n       * to avoid that it is actually expired when evaluated in the target system.\n       * Time given in ms. */\n      tokenExpirationBuffer: number;\n      /** max time in ms to pass until a token is considered expired and re-fetched,\n       * even if token expiration time is longer */\n      tokenMaxValidity: number;\n      /** min time to pass until a token is re-fetched, even if token expiration time is shorter */\n      tokenMinValidity: number;\n    };\n  };\n}\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class CpqConfiguratorAuthConfig {\n  productConfigurator: ProductConfiguratorCpqAuthConfig;\n}\n\ndeclare module '@spartacus/product-configurator/common' {\n  interface ProductConfiguratorConfig\n    extends ProductConfiguratorCpqAuthConfig {}\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { AuthService } from '@spartacus/core';\nimport { BehaviorSubject, Observable, Subscription, timer } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  expand,\n  filter,\n  switchMap,\n  take,\n} from 'rxjs/operators';\nimport { CpqAccessData } from './cpq-access-data.models';\nimport { CpqAccessLoaderService } from './cpq-access-loader.service';\nimport { CpqConfiguratorAuthConfig } from './cpq-configurator-auth.config';\n\n@Injectable({ providedIn: 'root' })\nexport class CpqAccessStorageService implements OnDestroy {\n  protected readonly EXPIRED_TOKEN: CpqAccessData = {\n    accessToken: 'INVALID DUMMY',\n    accessTokenExpirationTime: 0,\n    endpoint: '',\n  };\n\n  constructor(\n    protected cpqAccessLoaderService: CpqAccessLoaderService,\n    protected authService: AuthService,\n    protected config: CpqConfiguratorAuthConfig\n  ) {}\n\n  ngOnDestroy(): void {\n    this.currentCpqAccessSubscription?.unsubscribe();\n    this.currentAuthServiceSubscription?.unsubscribe();\n  }\n\n  protected cpqAccessData$: Observable<CpqAccessData>;\n  protected currentCpqAccessSubscription: Subscription;\n  protected currentAuthServiceSubscription: Subscription;\n  protected _cpqAccessData$: BehaviorSubject<CpqAccessData>;\n\n  getCpqAccessData(): Observable<CpqAccessData> {\n    if (!this.cpqAccessData$ || this._cpqAccessData$.hasError) {\n      this.initCpqAccessData();\n    }\n    return this.cpqAccessData$;\n  }\n\n  /**\n   * Renews the current access data. All subscribers of getCachedCpqAccessData()\n   * will receive the new data. Will only have an effect, if there are any subscribers\n   * and the user is logged in.\n   */\n  renewCpqAccessData() {\n    // only force token refresh if initialized.\n    if (this.cpqAccessData$) {\n      this.stopAutoFetchingCpqAccessData();\n      this._cpqAccessData$.next(this.EXPIRED_TOKEN); // invalidate cache\n      this.authService\n        .isUserLoggedIn()\n        .pipe(take(1)) // get current login state\n        .subscribe((loggedIn) => {\n          // only fetch new token if user is logged in.\n          if (loggedIn) {\n            this.startAutoFetchingCpqAccessData();\n          }\n        });\n    }\n  }\n\n  protected initCpqAccessData() {\n    this._cpqAccessData$ = new BehaviorSubject(this.EXPIRED_TOKEN);\n    this.cpqAccessData$ = this._cpqAccessData$.pipe(\n      // Never expose expired tokens - either cache was invalidated with expired token,\n      // or the cached one expired before a new one was fetched.\n      filter((data) => !this.isTokenExpired(data))\n    );\n    this.currentAuthServiceSubscription?.unsubscribe(); // cancel subscriptions created for old\n\n    this.currentAuthServiceSubscription = this.authService\n      .isUserLoggedIn()\n      .pipe(distinctUntilChanged()) // only react if user login status changes\n      .subscribe((loggedIn) => {\n        if (loggedIn) {\n          // user logged in - start/stop to ensure token is refreshed\n          this.stopAutoFetchingCpqAccessData();\n          this.startAutoFetchingCpqAccessData();\n        } else {\n          // user logged out - cancel token fetching\n          this.stopAutoFetchingCpqAccessData();\n          this._cpqAccessData$.next(this.EXPIRED_TOKEN); // invalidate cache\n        }\n      });\n  }\n\n  protected stopAutoFetchingCpqAccessData() {\n    this.currentCpqAccessSubscription?.unsubscribe();\n  }\n\n  protected startAutoFetchingCpqAccessData() {\n    this.currentCpqAccessSubscription = this.cpqAccessLoaderService\n      .getCpqAccessData()\n      .pipe(\n        expand((data) =>\n          timer(this.fetchNextTokenIn(data)).pipe(\n            switchMap(() => this.cpqAccessLoaderService.getCpqAccessData())\n          )\n        )\n      )\n      .subscribe(this._cpqAccessData$); // also propagate errors\n  }\n\n  protected fetchNextTokenIn(data: CpqAccessData) {\n    const authSettings = this.config.productConfigurator.cpq?.authentication;\n    if (authSettings) {\n      // we schedule a request to update our cache some time before expiration\n      let fetchNextIn: number =\n        data.accessTokenExpirationTime -\n        Date.now() -\n        authSettings.tokenExpirationBuffer;\n      if (fetchNextIn < authSettings.tokenMinValidity) {\n        fetchNextIn = authSettings.tokenMinValidity;\n      } else if (fetchNextIn > authSettings.tokenMaxValidity) {\n        fetchNextIn = authSettings.tokenMaxValidity;\n      }\n      return fetchNextIn;\n    } else {\n      throw new Error('CPQ authentication configuration not present');\n    }\n  }\n\n  protected isTokenExpired(tokenData: CpqAccessData): boolean {\n    const authSettings = this.config.productConfigurator.cpq?.authentication;\n    if (authSettings) {\n      return (\n        Date.now() >\n        tokenData.accessTokenExpirationTime - authSettings.tokenExpirationBuffer\n      );\n    } else {\n      throw new Error('CPQ authentication configuration not present');\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpHeaders,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, switchMap, take, tap } from 'rxjs/operators';\nimport { CpqAccessData } from './cpq-access-data.models';\nimport { CpqAccessStorageService } from './cpq-access-storage.service';\n\n/**\n * This header attribute shall be used to mark any request made to the CPQ System.\n * The presence of it enables this interceptor to actually intercept\n * this request and to decorate it with the authentication related attributes.\n */\nexport const MARKER_HEADER_CPQ_CONFIGURATOR = 'x-cpq-configurator';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CpqConfiguratorRestInterceptor implements HttpInterceptor {\n  protected readonly HEADER_ATTR_CPQ_SESSION_ID = 'x-cpq-session-id';\n  protected readonly HEADER_ATTR_CPQ_NO_COOKIES = 'x-cpq-disable-cookies';\n\n  /**\n   * Although CPQ API is stateless and can work without session id, it's recommended to always append the CPQ session id to any request.\n   * It enables CPQ load balancer to redirect the request always to the same node, so that configuration related data is already in memory\n   * and does not need to be reloaded from DB. This can have a significant impact on performance nd reduce load in the CPQ system.\n   */\n  protected cpqSessionId: string | null = null;\n\n  constructor(protected cpqAccessStorageService: CpqAccessStorageService) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    if (!request.headers.has(MARKER_HEADER_CPQ_CONFIGURATOR)) {\n      return next.handle(request);\n    }\n    return this.cpqAccessStorageService.getCpqAccessData().pipe(\n      take(1), // avoid request being re-executed when token expires\n      switchMap((cpqData) => {\n        return next.handle(this.enrichHeaders(request, cpqData)).pipe(\n          catchError((errorResponse: any) => {\n            return this.handleError(errorResponse, next, request);\n          }),\n          tap((response) => this.extractCpqSessionId(response))\n        );\n      })\n    );\n  }\n\n  protected handleError(\n    errorResponse: any,\n    next: HttpHandler,\n    request: HttpRequest<any>\n  ): Observable<HttpEvent<any>> {\n    if (errorResponse instanceof HttpErrorResponse) {\n      if (errorResponse.status === 403) {\n        this.cpqAccessStorageService.renewCpqAccessData();\n        return this.cpqAccessStorageService.getCpqAccessData().pipe(\n          take(1),\n          switchMap((newCpqData) => {\n            return next\n              .handle(this.enrichHeaders(request, newCpqData))\n              .pipe(tap((response) => this.extractCpqSessionId(response)));\n          })\n        );\n      }\n    }\n    return throwError(errorResponse); //propagate error\n  }\n\n  protected extractCpqSessionId(response: HttpEvent<any>) {\n    if (\n      response instanceof HttpResponse ||\n      response instanceof HttpErrorResponse\n    ) {\n      if (response.headers.has(this.HEADER_ATTR_CPQ_SESSION_ID)) {\n        this.cpqSessionId = response.headers.get(\n          this.HEADER_ATTR_CPQ_SESSION_ID\n        );\n      }\n    }\n  }\n\n  protected enrichHeaders(\n    request: HttpRequest<any>,\n    cpqData: CpqAccessData\n  ): HttpRequest<any> {\n    let newRequest = request.clone({\n      url: cpqData.endpoint + request.url,\n      headers: new HttpHeaders({\n        Authorization: 'Bearer ' + cpqData.accessToken,\n        [this.HEADER_ATTR_CPQ_NO_COOKIES]: 'true',\n      }),\n    });\n    if (this.cpqSessionId) {\n      newRequest = newRequest.clone({\n        setHeaders: {\n          [this.HEADER_ATTR_CPQ_SESSION_ID]: this.cpqSessionId,\n        },\n      });\n    }\n    return newRequest;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CpqConfiguratorAuthConfig } from './cpq-configurator-auth.config';\n\nexport const defaultCpqConfiguratorAuthConfig: CpqConfiguratorAuthConfig = {\n  productConfigurator: {\n    cpq: {\n      authentication: {\n        tokenExpirationBuffer: 10000,\n        tokenMaxValidity: 24 * 60 * 60 * 1000,\n        tokenMinValidity: 5000, // five seconds\n      },\n    },\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { CpqConfiguratorRestInterceptor } from './cpq-configurator-rest.interceptor';\nimport { defaultCpqConfiguratorAuthConfig } from './default-cpq-configurator-auth.config';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: CpqConfiguratorRestInterceptor,\n      multi: true,\n    },\n    provideDefaultConfig(defaultCpqConfiguratorAuthConfig),\n  ],\n})\nexport class CpqConfiguratorInterceptorModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { CpqConfiguratorInteractiveModule } from './cpq-configurator-interactive.module';\nimport { CpqConfiguratorOverviewModule } from './cpq-configurator-overview.module';\nimport { CpqConfiguratorInterceptorModule } from './interceptor/cpq-configurator-interceptor.module';\n\n/**\n * Exposes the CPQ aspects that we need to load eagerly, like page mappings, routing\n * and interceptor related entities\n */\n@NgModule({\n  imports: [\n    CpqConfiguratorInteractiveModule,\n    CpqConfiguratorOverviewModule,\n    CpqConfiguratorInterceptorModule,\n  ],\n  //force early login\n  providers: [provideDefaultConfig({ routing: { protected: true } })],\n})\nexport class CpqConfiguratorRootModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './cpq-access-data.models';\nexport * from './cpq-access-loader.service';\nexport * from './cpq-access-storage.service';\nexport * from './cpq-configurator-auth.config';\nexport * from './cpq-configurator-interceptor.module';\nexport * from './cpq-configurator-rest.interceptor';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './cpq-configurator-interactive.module';\nexport * from './cpq-configurator-overview.module';\nexport * from './cpq-configurator-root.module';\nexport * from './cpq-configurator-layout.module';\nexport * from './interceptor/index';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport const PRODUCT_CONFIGURATOR_RULEBASED_FEATURE =\n  'productConfiguratorRulebased';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfigFactory } from '@spartacus/core';\nimport { PRODUCT_CONFIGURATOR_RULEBASED_FEATURE } from './feature-name';\n\nconst cmsComponents: string[] = [\n  'ConfiguratorForm',\n  'ConfiguratorOverviewForm',\n  'ConfiguratorUpdateMessage',\n  'ConfiguratorAddToCartButton',\n  'ConfiguratorMenu',\n  'ConfiguratorGroupTitle',\n  'ConfiguratorOverviewBanner',\n  'ConfiguratorPrevNext',\n  'ConfiguratorPriceSummary',\n  'ConfiguratorProductTitle',\n  'ConfiguratorTabBar',\n  'ConfiguratorExitButton',\n  'CpqConfiguratorConflictAndErrorMessagesComponent',\n];\n\n// TODO: Inline this factory when we start releasing Ivy compiled libraries\nexport function defaultProductConfiguratorRulebasedComponentsConfig(): CmsConfig {\n  const config: CmsConfig = {\n    featureModules: {\n      [PRODUCT_CONFIGURATOR_RULEBASED_FEATURE]: {\n        cmsComponents,\n      },\n    },\n  };\n\n  return config;\n}\n\n/**\n * Contains feature module configuration\n */\n@NgModule({\n  imports: [],\n  providers: [\n    provideDefaultConfigFactory(\n      defaultProductConfiguratorRulebasedComponentsConfig\n    ),\n  ],\n})\nexport class RulebasedConfiguratorRootFeatureModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { RoutingConfig } from '@spartacus/core';\n\nexport const defaultRulebasedRoutingConfig: RoutingConfig = {\n  routing: {\n    routes: {\n      configureCPQCONFIGURATOR: {\n        paths: ['configure/vc/:ownerType/entityKey/:entityKey'],\n      },\n      configureOverviewCPQCONFIGURATOR: {\n        paths: [\n          'configure-overview/vc/:ownerType/entityKey/:entityKey/displayOnly/:displayOnly',\n          'configure-overview/vc/:ownerType/entityKey/:entityKey',\n        ],\n      },\n    },\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport {\n  provideDefaultConfig,\n  RoutingModule as CoreRoutingModule,\n} from '@spartacus/core';\nimport { CmsRouteModule } from '@spartacus/storefront';\nimport { defaultRulebasedRoutingConfig } from './default-rulebased-routing-config';\n\n/**\n * Provides the default cx routing configuration for the rulebased configurator\n */\n@NgModule({\n  imports: [CoreRoutingModule.forRoot(), CmsRouteModule],\n})\nexport class RulebasedConfiguratorRoutingModule {\n  static forRoot(): ModuleWithProviders<RulebasedConfiguratorRoutingModule> {\n    return {\n      ngModule: RulebasedConfiguratorRoutingModule,\n      providers: [provideDefaultConfig(defaultRulebasedRoutingConfig)],\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { LayoutConfig } from '@spartacus/storefront';\n\n/**\n *  Contains the layout configuration for the interactive configuration page. This configuration is\n *  optional as of version 4.2, and reduces the components that are rendered in the header section.\n *  It needs to be explicitly imported, otherwise the default configuration\n *  from VariantConfiguratorInteractiveModule is active\n */\n@NgModule({\n  providers: [\n    provideDefaultConfig(<LayoutConfig>{\n      layoutSlots: {\n        VariantConfigurationTemplate: {\n          header: {\n            lg: {\n              slots: [\n                'PreHeader',\n                'SiteLogo',\n                'VariantConfigExitButton',\n                'MiniCart',\n              ],\n            },\n            xs: {\n              slots: [\n                'PreHeader',\n                'SiteLogo',\n                'VariantConfigExitButton',\n                'MiniCart',\n              ],\n            },\n          },\n\n          navigation: {\n            lg: { slots: [] },\n            slots: ['VariantConfigMenu'],\n          },\n\n          lg: {\n            slots: [\n              'VariantConfigHeader',\n              'VariantConfigMenu',\n              'VariantConfigContent',\n              'VariantConfigBottombar',\n            ],\n          },\n\n          slots: [\n            'VariantConfigHeader',\n            'VariantConfigContent',\n            'VariantConfigBottombar',\n          ],\n        },\n      },\n    }),\n  ],\n})\nexport class VariantConfiguratorInteractiveLayoutModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsPageGuard,\n  HamburgerMenuModule,\n  PageLayoutComponent,\n} from '@spartacus/storefront';\nimport { VariantConfiguratorInteractiveLayoutModule } from './variant-configurator-interactive-layout.module';\n\n/**\n * Takes care of the interactive configuration process (the user enters new attribute values and navigates through the configuration).\n * Provides routing, assignment of ng components to CMS components and assignment of CMS components to the layout slots\n */\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        // We can neither omit the path nor set to undefined\n        // @ts-ignore\n        path: null,\n        data: {\n          cxRoute: 'configureCPQCONFIGURATOR',\n        },\n        component: PageLayoutComponent,\n        canActivate: [CmsPageGuard],\n      },\n    ]),\n    HamburgerMenuModule,\n    VariantConfiguratorInteractiveLayoutModule,\n  ],\n})\nexport class VariantConfiguratorInteractiveModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n  CommonConfiguratorUtilsService,\n  ConfiguratorRouterExtractorService,\n} from '@spartacus/product-configurator/common';\nimport {\n  BREAKPOINT,\n  BreakpointService,\n  LayoutConfig,\n  PageLayoutHandler,\n} from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { map, switchMap, take } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root',\n})\nexport class VariantConfiguratorPageLayoutHandler implements PageLayoutHandler {\n  protected static templateName = 'VariantConfigurationOverviewTemplate';\n  protected static sectionDisplayOnlyName = 'headerDisplayOnly';\n  constructor(\n    protected configuratorRouterExtractorService: ConfiguratorRouterExtractorService,\n    protected breakpointService: BreakpointService,\n    protected layoutConfig: LayoutConfig,\n    protected commonConfiguratorUtilsService: CommonConfiguratorUtilsService\n  ) {}\n  handle(\n    slots$: Observable<string[]>,\n    pageTemplate?: string,\n    section?: string\n  ) {\n    if (\n      pageTemplate === VariantConfiguratorPageLayoutHandler.templateName &&\n      section === 'header'\n    ) {\n      this.configuratorRouterExtractorService\n        .extractRouterData()\n        .pipe(take(1))\n        .subscribe((routerData) => {\n          if (routerData.displayOnly) {\n            slots$ = slots$.pipe(\n              switchMap(() => this.breakpointService.isUp(BREAKPOINT.lg)),\n              map((isLargeResolution) => {\n                if (isLargeResolution) {\n                  return this.commonConfiguratorUtilsService.getSlotsFromLayoutConfiguration(\n                    this.layoutConfig,\n                    VariantConfiguratorPageLayoutHandler.templateName,\n                    VariantConfiguratorPageLayoutHandler.sectionDisplayOnlyName,\n                    BREAKPOINT.lg\n                  );\n                } else {\n                  return this.commonConfiguratorUtilsService.getSlotsFromLayoutConfiguration(\n                    this.layoutConfig,\n                    VariantConfiguratorPageLayoutHandler.templateName,\n                    VariantConfiguratorPageLayoutHandler.sectionDisplayOnlyName,\n                    BREAKPOINT.xs\n                  );\n                }\n              })\n            );\n          }\n        });\n    }\n\n    return slots$;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { LayoutConfig, PAGE_LAYOUT_HANDLER } from '@spartacus/storefront';\nimport { VariantConfiguratorPageLayoutHandler } from './variant-configurator-page-layout-handler';\n\n/**\n *  Contains the layout configuration for the overview configuration page. This configuration is\n *  optional as of version 4.2, and reduces the components that are rendered in the header section.\n *  It needs to be explicitly imported, otherwise the default configuration\n *  from VariantConfiguratorOverviewModule is active\n */\n@NgModule({\n  providers: [\n    provideDefaultConfig(<LayoutConfig>{\n      layoutSlots: {\n        VariantConfigurationOverviewTemplate: {\n          header: {\n            lg: {\n              slots: [\n                'SiteLogo',\n                'VariantConfigOverviewExitButton',\n                'MiniCart',\n              ],\n            },\n            xs: {\n              slots: [\n                'SiteLogo',\n                'VariantConfigOverviewExitButton',\n                'MiniCart',\n              ],\n            },\n          },\n          headerDisplayOnly: {\n            lg: {\n              slots: [\n                'SiteContext',\n                'SiteLinks',\n                'SiteLogo',\n                'SearchBox',\n                'SiteLogin',\n                'MiniCart',\n                'NavigationBar',\n              ],\n            },\n            xs: {\n              slots: ['PreHeader', 'SiteLogo', 'SearchBox', 'MiniCart'],\n            },\n          },\n          slots: [\n            'VariantConfigOverviewHeader',\n            'VariantConfigOverviewBanner',\n            'VariantConfigOverviewContent',\n            'VariantConfigOverviewBottombar',\n          ],\n        },\n      },\n    }),\n    {\n      provide: PAGE_LAYOUT_HANDLER,\n      useExisting: VariantConfiguratorPageLayoutHandler,\n      multi: true,\n    },\n  ],\n})\nexport class VariantConfiguratorOverviewLayoutModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsPageGuard, PageLayoutComponent } from '@spartacus/storefront';\nimport { VariantConfiguratorOverviewLayoutModule } from './variant-configurator-overview-layout.module';\n\n/**\n * Takes care of the configuration overview that visualizes the attribute value assignments that have been done already in a condensed, read-only form.\n * The end-user can switch between the interactive view and this overview.\n * Provides routing, assignment of ng components to CMS components and assignment of CMS components to the layout slots.\n * Some of the ng components on this view (tab bar, price summary and addToCart button) are shared between the interactive view and the overview.\n */\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        // We can neither omit the path nor set to undefined\n        // @ts-ignore\n        path: null,\n        component: PageLayoutComponent,\n        data: {\n          cxRoute: 'configureOverviewCPQCONFIGURATOR',\n        },\n        canActivate: [CmsPageGuard],\n      },\n    ]),\n    VariantConfiguratorOverviewLayoutModule,\n  ],\n})\nexport class VariantConfiguratorOverviewModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonConfiguratorModule } from '@spartacus/product-configurator/common';\nimport { RulebasedConfiguratorRootFeatureModule } from './rulebased-configurator-root-feature.module';\nimport { RulebasedConfiguratorRoutingModule } from './rulebased-configurator-routing.module';\nimport { VariantConfiguratorInteractiveModule } from './variant/variant-configurator-interactive.module';\nimport { VariantConfiguratorOverviewModule } from './variant/variant-configurator-overview.module';\n\n/**\n * Exposes the root modules that we need to load statically. Contains page mappings, route configurations\n * and feature configuration\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    CommonConfiguratorModule,\n    RulebasedConfiguratorRootFeatureModule,\n    VariantConfiguratorInteractiveModule,\n    VariantConfiguratorOverviewModule,\n    RulebasedConfiguratorRoutingModule.forRoot(),\n  ],\n})\nexport class RulebasedConfiguratorRootModule {\n  static forRoot(): ModuleWithProviders<RulebasedConfiguratorRootModule> {\n    return {\n      ngModule: RulebasedConfiguratorRootModule,\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './variant-configurator-interactive-layout.module';\nexport * from './variant-configurator-interactive.module';\nexport * from './variant-configurator-overview-layout.module';\nexport * from './variant-configurator-overview.module';\nexport * from './variant-configurator-page-layout-handler';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\n * Public API Surface of the rule based root entry point\n */\n\nexport * from './cpq/index';\nexport * from './feature-name';\nexport * from './rulebased-configurator-root-feature.module';\nexport * from './rulebased-configurator-root.module';\nexport * from './rulebased-configurator-routing.module';\nexport * from './variant/index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1","i2","i1.CpqAccessLoaderService","i3.CpqConfiguratorAuthConfig","i1.CpqAccessStorageService","CoreRoutingModule","i1.RulebasedConfiguratorRoutingModule"],"mappings":"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"}