{"version":3,"file":"spartacus-product-configurator-rulebased.mjs","sources":["../../../feature-libs/product-configurator/rulebased/core/model/configurator.model.ts","../../../feature-libs/product-configurator/rulebased/core/state/configurator-state.ts","../../../feature-libs/product-configurator/rulebased/core/state/actions/configurator-cart.action.ts","../../../feature-libs/product-configurator/rulebased/core/state/actions/configurator.action.ts","../../../feature-libs/product-configurator/rulebased/core/state/actions/configurator-group.actions.ts","../../../feature-libs/product-configurator/rulebased/core/state/actions/index.ts","../../../feature-libs/product-configurator/rulebased/core/state/selectors/configurator.selector.ts","../../../feature-libs/product-configurator/rulebased/core/state/selectors/configurator-group.selectors.ts","../../../feature-libs/product-configurator/rulebased/core/state/selectors/index.ts","../../../feature-libs/product-configurator/rulebased/core/facade/utils/configurator-utils.service.ts","../../../feature-libs/product-configurator/rulebased/core/facade/configurator-cart.service.ts","../../../feature-libs/product-configurator/rulebased/core/facade/configurator-commons.service.ts","../../../feature-libs/product-configurator/rulebased/core/facade/configurator-group-status.service.ts","../../../feature-libs/product-configurator/rulebased/core/facade/configurator-groups.service.ts","../../../feature-libs/product-configurator/rulebased/components/service/configurator-storefront-utils.service.ts","../../../feature-libs/product-configurator/rulebased/components/add-to-cart-button/configurator-add-to-cart-button.component.ts","../../../feature-libs/product-configurator/rulebased/components/add-to-cart-button/configurator-add-to-cart-button.component.html","../../../feature-libs/product-configurator/rulebased/components/add-to-cart-button/configurator-add-to-cart-button.module.ts","../../../feature-libs/product-configurator/rulebased/components/add-to-cart-button/index.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/base/configurator-attribute-base.component.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/footer/configurator-attribute-footer.component.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/footer/configurator-attribute-footer.component.html","../../../feature-libs/product-configurator/rulebased/components/attribute/footer/configurator-attribute-footer.module.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/footer/index.ts","../../../feature-libs/product-configurator/rulebased/core/connectors/rulebased-configurator.adapter.ts","../../../feature-libs/product-configurator/rulebased/core/connectors/rulebased-configurator.connector.ts","../../../feature-libs/product-configurator/rulebased/core/connectors/index.ts","../../../feature-libs/product-configurator/rulebased/core/facade/routing/configurator-router.listener.ts","../../../feature-libs/product-configurator/rulebased/core/facade/routing/configurator-router.module.ts","../../../feature-libs/product-configurator/rulebased/core/facade/routing/index.ts","../../../feature-libs/product-configurator/rulebased/core/facade/utils/index.ts","../../../feature-libs/product-configurator/rulebased/core/facade/index.ts","../../../feature-libs/product-configurator/rulebased/core/state/effects/configurator-basic-effect.service.ts","../../../feature-libs/product-configurator/rulebased/core/state/effects/configurator-basic.effect.ts","../../../feature-libs/product-configurator/rulebased/core/state/effects/configurator-cart.effect.ts","../../../feature-libs/product-configurator/rulebased/core/state/effects/index.ts","../../../feature-libs/product-configurator/rulebased/core/state/configurator-state-utils.ts","../../../feature-libs/product-configurator/rulebased/core/state/reducers/configurator.reducer.ts","../../../feature-libs/product-configurator/rulebased/core/state/reducers/index.ts","../../../feature-libs/product-configurator/rulebased/core/state/rulebased-configurator-state.module.ts","../../../feature-libs/product-configurator/rulebased/core/rulebased-configurator-core.module.ts","../../../feature-libs/product-configurator/rulebased/core/state/index.ts","../../../feature-libs/product-configurator/rulebased/core/index.ts","../../../feature-libs/product-configurator/rulebased/components/config/configurator-ui-settings.config.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/header/configurator-attribute-header.component.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/header/configurator-attribute-header.component.html","../../../feature-libs/product-configurator/rulebased/components/attribute/header/configurator-attribute-header.module.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/header/index.ts","../../../feature-libs/product-configurator/rulebased/components/show-more/configurator-show-more.component.ts","../../../feature-libs/product-configurator/rulebased/components/show-more/configurator-show-more.component.html","../../../feature-libs/product-configurator/rulebased/components/attribute/quantity/configurator-attribute-quantity.component.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/quantity/configurator-attribute-quantity.component.html","../../../feature-libs/product-configurator/rulebased/components/price/configurator-price.component.ts","../../../feature-libs/product-configurator/rulebased/components/price/configurator-price.component.html","../../../feature-libs/product-configurator/rulebased/components/attribute/product-card/configurator-attribute-product-card.component.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/product-card/configurator-attribute-product-card.component.html","../../../feature-libs/product-configurator/rulebased/components/price/configurator-price.module.ts","../../../feature-libs/product-configurator/rulebased/components/show-more/configurator-show-more.module.ts","../../../feature-libs/product-configurator/rulebased/components/config/default-configurator-ui-settings.config.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/quantity/configurator-attribute-quantity.module.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/product-card/configurator-attribute-product-card.module.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/product-card/index.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/quantity/configurator-attribute-quantity.service.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/quantity/index.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/base/configurator-attribute-single-selection-base.component.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/base/configurator-attribute-multi-selection-base.component.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/base/index.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/checkbox-list/configurator-attribute-checkbox-list.component.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/checkbox-list/configurator-attribute-checkbox-list.component.html","../../../feature-libs/product-configurator/rulebased/components/attribute/types/checkbox-list/configurator-attribute-checkbox-list.module.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/checkbox-list/index.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/checkbox/configurator-attribute-checkbox.component.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/checkbox/configurator-attribute-checkbox.component.html","../../../feature-libs/product-configurator/rulebased/components/attribute/types/checkbox/configurator-attribute-checkbox.module.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/checkbox/index.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/input-field/configurator-attribute-input-field.component.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/input-field/configurator-attribute-input-field.component.html","../../../feature-libs/product-configurator/rulebased/components/attribute/types/numeric-input-field/configurator-attribute-numeric-input-field.component.service.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/numeric-input-field/configurator-attribute-numeric-input-field.component.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/numeric-input-field/configurator-attribute-numeric-input-field.component.html","../../../feature-libs/product-configurator/rulebased/components/attribute/types/drop-down/configurator-attribute-drop-down.component.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/drop-down/configurator-attribute-drop-down.component.html","../../../feature-libs/product-configurator/rulebased/components/attribute/types/numeric-input-field/configurator-attribute-numeric-input-field.module.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/input-field/configurator-attribute-input-field.module.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/drop-down/configurator-attribute-drop-down.module.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/drop-down/index.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/input-field/index.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/multi-selection-bundle/configurator-attribute-multi-selection-bundle.component.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/multi-selection-bundle/configurator-attribute-multi-selection-bundle.component.html","../../../feature-libs/product-configurator/rulebased/components/attribute/types/multi-selection-bundle/configurator-attribute-multi-selection-bundle.module.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/multi-selection-bundle/index.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/multi-selection-image/configurator-attribute-multi-selection-image.component.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/multi-selection-image/configurator-attribute-multi-selection-image.component.html","../../../feature-libs/product-configurator/rulebased/components/attribute/types/multi-selection-image/configurator-attribute-multi-selection-image.module.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/multi-selection-image/index.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/numeric-input-field/index.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/radio-button/configurator-attribute-radio-button.component.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/radio-button/configurator-attribute-radio-button.component.html","../../../feature-libs/product-configurator/rulebased/components/attribute/types/radio-button/configurator-attribute-radio-button.module.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/radio-button/index.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/read-only/configurator-attribute-read-only.component.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/read-only/configurator-attribute-read-only.component.html","../../../feature-libs/product-configurator/rulebased/components/attribute/types/read-only/configurator-attribute-read-only.module.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/read-only/index.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/single-selection-bundle-dropdown/configurator-attribute-single-selection-bundle-dropdown.component.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/single-selection-bundle-dropdown/configurator-attribute-single-selection-bundle-dropdown.component.html","../../../feature-libs/product-configurator/rulebased/components/attribute/types/single-selection-bundle-dropdown/configurator-attribute-single-selection-bundle-dropdown.module.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/single-selection-bundle-dropdown/index.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/single-selection-bundle/configurator-attribute-single-selection-bundle.component.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/single-selection-bundle/configurator-attribute-single-selection-bundle.component.html","../../../feature-libs/product-configurator/rulebased/components/attribute/types/single-selection-bundle/configurator-attribute-single-selection-bundle.module.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/single-selection-bundle/index.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/single-selection-image/configurator-attribute-single-selection-image.component.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/single-selection-image/configurator-attribute-single-selection-image.component.html","../../../feature-libs/product-configurator/rulebased/components/attribute/types/single-selection-image/configurator-attribute-single-selection-image.module.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/types/single-selection-image/index.ts","../../../feature-libs/product-configurator/rulebased/components/attribute/index.ts","../../../feature-libs/product-configurator/rulebased/components/config/configurator-message.config.ts","../../../feature-libs/product-configurator/rulebased/components/config/augmented-config.model.ts","../../../feature-libs/product-configurator/rulebased/components/config/index.ts","../../../feature-libs/product-configurator/rulebased/components/conflict-description/configurator-conflict-description.component.ts","../../../feature-libs/product-configurator/rulebased/components/conflict-description/configurator-conflict-description.component.html","../../../feature-libs/product-configurator/rulebased/components/conflict-description/configurator-conflict-description.module.ts","../../../feature-libs/product-configurator/rulebased/components/conflict-description/index.ts","../../../feature-libs/product-configurator/rulebased/components/conflict-suggestion/configurator-conflict-suggestion.component.ts","../../../feature-libs/product-configurator/rulebased/components/conflict-suggestion/configurator-conflict-suggestion.component.html","../../../feature-libs/product-configurator/rulebased/components/conflict-suggestion/configurator-conflict-suggestion.module.ts","../../../feature-libs/product-configurator/rulebased/components/conflict-suggestion/index.ts","../../../feature-libs/product-configurator/rulebased/components/form/configurator-form.component.ts","../../../feature-libs/product-configurator/rulebased/components/form/configurator-form.component.html","../../../feature-libs/product-configurator/rulebased/components/form/configurator-form.event.ts","../../../feature-libs/product-configurator/rulebased/components/form/configurator-form.module.ts","../../../feature-libs/product-configurator/rulebased/components/form/index.ts","../../../feature-libs/product-configurator/rulebased/components/group-menu/configurator-group-menu.component.service.ts","../../../feature-libs/product-configurator/rulebased/components/group-menu/configurator-group-menu.component.ts","../../../feature-libs/product-configurator/rulebased/components/group-menu/configurator-group-menu.component.html","../../../feature-libs/product-configurator/rulebased/components/group-menu/configurator-group-menu.module.ts","../../../feature-libs/product-configurator/rulebased/components/group-menu/index.ts","../../../feature-libs/product-configurator/rulebased/components/group-title/configurator-group-title.component.ts","../../../feature-libs/product-configurator/rulebased/components/group-title/configurator-group-title.component.html","../../../feature-libs/product-configurator/rulebased/components/group-title/configurator-group-title.module.ts","../../../feature-libs/product-configurator/rulebased/components/group-title/index.ts","../../../feature-libs/product-configurator/rulebased/components/overview-attribute/configurator-overview-attribute.component.ts","../../../feature-libs/product-configurator/rulebased/components/overview-attribute/configurator-overview-attribute.component.html","../../../feature-libs/product-configurator/rulebased/components/overview-attribute/configurator-overview-attribute.module.ts","../../../feature-libs/product-configurator/rulebased/components/overview-attribute/index.ts","../../../feature-libs/product-configurator/rulebased/components/overview-bundle-attribute/configurator-overview-bundle-attribute.component.ts","../../../feature-libs/product-configurator/rulebased/components/overview-bundle-attribute/configurator-overview-bundle-attribute.component.html","../../../feature-libs/product-configurator/rulebased/components/overview-bundle-attribute/configurator-overview-bundle-attribute.module.ts","../../../feature-libs/product-configurator/rulebased/components/overview-bundle-attribute/index.ts","../../../feature-libs/product-configurator/rulebased/components/overview-form/configurator-overview-form.component.ts","../../../feature-libs/product-configurator/rulebased/components/overview-form/configurator-overview-form.component.html","../../../feature-libs/product-configurator/rulebased/components/overview-form/configurator-overview-form.module.ts","../../../feature-libs/product-configurator/rulebased/components/overview-form/index.ts","../../../feature-libs/product-configurator/rulebased/components/overview-notification-banner/configurator-overview-notification-banner.component.ts","../../../feature-libs/product-configurator/rulebased/components/overview-notification-banner/configurator-overview-notification-banner.component.html","../../../feature-libs/product-configurator/rulebased/components/overview-notification-banner/configurator-overview-notification-banner.module.ts","../../../feature-libs/product-configurator/rulebased/components/overview-notification-banner/index.ts","../../../feature-libs/product-configurator/rulebased/components/previous-next-buttons/configurator-previous-next-buttons.component.ts","../../../feature-libs/product-configurator/rulebased/components/previous-next-buttons/configurator-previous-next-buttons.component.html","../../../feature-libs/product-configurator/rulebased/components/previous-next-buttons/configurator-previous-next-buttons.module.ts","../../../feature-libs/product-configurator/rulebased/components/previous-next-buttons/index.ts","../../../feature-libs/product-configurator/rulebased/components/price-summary/configurator-price-summary.component.ts","../../../feature-libs/product-configurator/rulebased/components/price-summary/configurator-price-summary.component.html","../../../feature-libs/product-configurator/rulebased/components/price-summary/configurator-price-summary.module.ts","../../../feature-libs/product-configurator/rulebased/components/price-summary/index.ts","../../../feature-libs/product-configurator/rulebased/components/price/index.ts","../../../feature-libs/product-configurator/rulebased/components/product-title/configurator-product-title.component.ts","../../../feature-libs/product-configurator/rulebased/components/product-title/configurator-product-title.component.html","../../../feature-libs/product-configurator/rulebased/components/product-title/configurator-product-title.module.ts","../../../feature-libs/product-configurator/rulebased/components/product-title/index.ts","../../../feature-libs/product-configurator/rulebased/components/tab-bar/configurator-tab-bar.component.ts","../../../feature-libs/product-configurator/rulebased/components/tab-bar/configurator-tab-bar.component.html","../../../feature-libs/product-configurator/rulebased/components/tab-bar/configurator-tab-bar.module.ts","../../../feature-libs/product-configurator/rulebased/components/config/default-configurator-message.config.ts","../../../feature-libs/product-configurator/rulebased/components/update-message/configurator-update-message.component.ts","../../../feature-libs/product-configurator/rulebased/components/update-message/configurator-update-message.component.html","../../../feature-libs/product-configurator/rulebased/components/update-message/configurator-update-message.module.ts","../../../feature-libs/product-configurator/rulebased/components/configurator-conflict-and-error-messages/configurator-conflict-and-error-messages.component.ts","../../../feature-libs/product-configurator/rulebased/components/configurator-conflict-and-error-messages/configurator-conflict-and-error-messages.component.html","../../../feature-libs/product-configurator/rulebased/components/configurator-conflict-and-error-messages/configurator-conflict-and-error-messages.module.ts","../../../feature-libs/product-configurator/rulebased/components/exit-button/configurator-exit-button.component.ts","../../../feature-libs/product-configurator/rulebased/components/exit-button/configurator-exit-button.component.html","../../../feature-libs/product-configurator/rulebased/components/exit-button/configurator-exit-button.module.ts","../../../feature-libs/product-configurator/rulebased/components/rulebased-configurator-components.module.ts","../../../feature-libs/product-configurator/rulebased/components/service/index.ts","../../../feature-libs/product-configurator/rulebased/components/show-more/index.ts","../../../feature-libs/product-configurator/rulebased/components/tab-bar/index.ts","../../../feature-libs/product-configurator/rulebased/components/update-message/index.ts","../../../feature-libs/product-configurator/rulebased/components/configurator-conflict-and-error-messages/index.ts","../../../feature-libs/product-configurator/rulebased/components/exit-button/index.ts","../../../feature-libs/product-configurator/rulebased/components/index.ts","../../../feature-libs/product-configurator/rulebased/occ/variant/converters/occ-configurator-variant-add-to-cart-serializer.ts","../../../feature-libs/product-configurator/rulebased/occ/variant/variant-configurator-occ.models.ts","../../../feature-libs/product-configurator/rulebased/occ/variant/converters/occ-configurator-variant-normalizer.ts","../../../feature-libs/product-configurator/rulebased/occ/variant/variant-configurator-occ.converters.ts","../../../feature-libs/product-configurator/rulebased/occ/variant/converters/occ-configurator-variant-overview-normalizer.ts","../../../feature-libs/product-configurator/rulebased/occ/variant/converters/occ-configurator-variant-price-summary-normalizer.ts","../../../feature-libs/product-configurator/rulebased/occ/variant/converters/occ-configurator-variant-serializer.ts","../../../feature-libs/product-configurator/rulebased/occ/variant/converters/occ-configurator-variant-update-cart-entry-serializer.ts","../../../feature-libs/product-configurator/rulebased/occ/variant/converters/index.ts","../../../feature-libs/product-configurator/rulebased/occ/variant/variant-configurator-occ.adapter.ts","../../../feature-libs/product-configurator/rulebased/occ/variant/converters/occ-configurator-variant-price-normalizer.ts","../../../feature-libs/product-configurator/rulebased/occ/variant/default-occ-configurator-variant-config.ts","../../../feature-libs/product-configurator/rulebased/occ/variant/variant-configurator-occ.module.ts","../../../feature-libs/product-configurator/rulebased/occ/variant/index.ts","../../../feature-libs/product-configurator/rulebased/occ/index.ts","../../../feature-libs/product-configurator/rulebased/rulebased-configurator.module.ts","../../../feature-libs/product-configurator/rulebased/public_api.ts","../../../feature-libs/product-configurator/rulebased/spartacus-product-configurator-rulebased.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonConfigurator } from '@spartacus/product-configurator/common';\n\n// Note that this namespace should be augmentable, therefore it's exposed in the 'public_api.ts'\n// of the rulebased entry point, and there is no index.ts file in this folder\n\nexport namespace Configurator {\n  export interface Attribute {\n    attrCode?: number;\n    name: string;\n    label?: string;\n    description?: string;\n    required?: boolean;\n    incomplete?: boolean;\n    uiType?: UiType;\n    dataType?: DataType;\n    quantity?: number;\n    values?: Value[];\n    groupId?: string;\n    selectedSingleValue?: string;\n    userInput?: string;\n    isLineItem?: boolean;\n    maxlength?: number;\n    images?: Image[];\n    numDecimalPlaces?: number;\n    numTotalLength?: number;\n    negativeAllowed?: boolean;\n    hasConflicts?: boolean;\n    retractTriggered?: boolean;\n    attributePriceTotal?: PriceDetails;\n    intervalInDomain?: boolean;\n    key?: string;\n    validationType?: string;\n  }\n\n  export interface Value {\n    valueCode: string;\n    name?: string;\n    valueDisplay?: string;\n    description?: string;\n    selected?: boolean;\n    quantity?: number;\n    valuePrice?: PriceDetails;\n    valuePriceTotal?: PriceDetails;\n    productSystemId?: string;\n    isCommerceProduct?: boolean;\n    images?: Image[];\n  }\n\n  export interface Group {\n    attributes?: Attribute[];\n    id: string;\n    name?: string;\n    description?: string;\n    groupType?: GroupType;\n    configurable?: boolean;\n    complete?: boolean;\n    consistent?: boolean;\n    subGroups: Group[];\n  }\n\n  export interface ValueSupplement {\n    attributeValueKey: string;\n    priceValue: PriceDetails;\n    obsoletePriceValue: PriceDetails;\n  }\n\n  export interface AttributeSupplement {\n    attributeUiKey: string;\n    valueSupplements: ValueSupplement[];\n  }\n\n  export interface Configuration {\n    configId: string;\n    consistent?: boolean;\n    complete?: boolean;\n    totalNumberOfIssues?: number;\n    productCode: string;\n    groups: Group[];\n    flatGroups: Group[];\n    priceSupplements?: AttributeSupplement[];\n    priceSummary?: PriceSummary;\n    overview?: Overview;\n    owner: CommonConfigurator.Owner;\n    nextOwner?: CommonConfigurator.Owner;\n    isCartEntryUpdateRequired?: boolean;\n    interactionState: InteractionState;\n    updateType?: UpdateType;\n    errorMessages?: string[];\n    warningMessages?: string[];\n  }\n\n  export interface InteractionState {\n    currentGroup?: string;\n    menuParentGroup?: string;\n    groupsVisited?: {\n      [id: string]: boolean;\n    };\n    issueNavigationDone?: boolean;\n  }\n\n  export interface Overview {\n    configId: string;\n    totalNumberOfIssues?: number;\n    numberOfIncompleteCharacteristics?: number;\n    numberOfConflicts?: number;\n    groups?: GroupOverview[];\n    priceSummary?: PriceSummary;\n    productCode: string;\n  }\n\n  export interface GroupOverview {\n    id: string;\n    groupDescription?: string;\n    attributes?: AttributeOverview[];\n    subGroups?: GroupOverview[];\n  }\n\n  export interface AttributeOverview {\n    attribute: string;\n    attributeId?: string;\n    value: string;\n    valueId?: string;\n    productCode?: string;\n    type?: AttributeOverviewType;\n    quantity?: number;\n    valuePrice?: PriceDetails;\n    valuePriceTotal?: PriceDetails;\n  }\n\n  export interface PriceSummary {\n    basePrice?: PriceDetails;\n    currentTotal?: PriceDetails;\n    currentTotalSavings?: PriceSavingDetails;\n    selectedOptions?: PriceDetails;\n  }\n\n  export interface PriceDetails {\n    currencyIso: string;\n    formattedValue?: string;\n    value: number;\n  }\n\n  export interface PriceSavingDetails extends PriceDetails {\n    maxQuantity?: number;\n    minQuantity?: number;\n  }\n\n  export interface AddToCartParameters {\n    userId: string;\n    cartId: string;\n    productCode: string;\n    quantity: number;\n    configId: string;\n    owner: CommonConfigurator.Owner;\n  }\n\n  export interface UpdateConfigurationForCartEntryParameters {\n    userId: string;\n    cartId: string;\n    cartEntryNumber: string;\n    configuration: Configurator.Configuration;\n  }\n\n  export interface Image {\n    type?: ImageType;\n    format?: ImageFormatType;\n    url?: string;\n    altText?: string;\n    galleryIndex?: number;\n  }\n\n  export enum GroupType {\n    ATTRIBUTE_GROUP = 'AttributeGroup',\n    SUB_ITEM_GROUP = 'SubItemGroup',\n    CONFLICT_HEADER_GROUP = 'ConflictHeaderGroup',\n    CONFLICT_GROUP = 'ConflictGroup',\n  }\n\n  export enum UiType {\n    NOT_IMPLEMENTED = 'not_implemented',\n    RADIOBUTTON = 'radioGroup',\n    RADIOBUTTON_ADDITIONAL_INPUT = 'radioGroup_add',\n    CHECKBOX = 'checkBox',\n    CHECKBOXLIST = 'checkBoxList',\n    DROPDOWN = 'dropdown',\n    DROPDOWN_ADDITIONAL_INPUT = 'dropdown_add',\n    LISTBOX = 'listbox',\n    LISTBOX_MULTI = 'listboxmulti',\n    READ_ONLY = 'readonly',\n    STRING = 'string',\n    NUMERIC = 'numeric',\n    AUTO_COMPLETE_CUSTOM = 'input_autocomplete',\n    MULTI_SELECTION_IMAGE = 'multi_selection_image',\n    SINGLE_SELECTION_IMAGE = 'single_selection_image',\n\n    //introduced with CPQ\n\n    CHECKBOXLIST_PRODUCT = 'checkBoxListProduct',\n    DROPDOWN_PRODUCT = 'dropdownProduct',\n    RADIOBUTTON_PRODUCT = 'radioGroupProduct',\n  }\n\n  export enum ImageFormatType {\n    VALUE_IMAGE = 'VALUE_IMAGE',\n    ATTRIBUTE_IMAGE = 'ATTRIBUTE_IMAGE',\n  }\n\n  export enum ImageType {\n    PRIMARY = 'PRIMARY',\n    GALLERY = 'GALLERY',\n  }\n\n  export enum DataType {\n    INPUT_STRING = 'String',\n    INPUT_NUMBER = 'Number',\n    USER_SELECTION_QTY_ATTRIBUTE_LEVEL = 'UserSelectionWithAttributeQuantity',\n    USER_SELECTION_QTY_VALUE_LEVEL = 'UserSelectionWithValueQuantity',\n    USER_SELECTION_NO_QTY = 'UserSelectionWithoutQuantity',\n    NOT_IMPLEMENTED = 'not_implemented',\n  }\n  export enum UpdateType {\n    ATTRIBUTE = 'Attribute',\n    ATTRIBUTE_QUANTITY = 'AttributeQuantity',\n    VALUE_QUANTITY = 'ValueQuantity',\n  }\n\n  export enum AttributeOverviewType {\n    GENERAL = 'general',\n    BUNDLE = 'bundle',\n  }\n\n  export enum ValidationType {\n    NONE = 'NONE',\n    NUMERIC = 'NUMERIC',\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { StateUtils } from '@spartacus/core';\nimport { Configurator } from '../model/configurator.model';\n\nexport const CONFIGURATOR_FEATURE = 'productConfigurator';\nexport const CONFIGURATOR_DATA = '[Configurator] Configuration Data';\n\nexport interface StateWithConfigurator {\n  [CONFIGURATOR_FEATURE]: ConfiguratorState;\n}\n\nexport interface ConfiguratorState {\n  configurations: StateUtils.EntityProcessesLoaderState<Configurator.Configuration>;\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Action } from '@ngrx/store';\nimport { MULTI_CART_DATA } from '@spartacus/cart/base/core';\nimport { StateUtils } from '@spartacus/core';\nimport { CommonConfigurator } from '@spartacus/product-configurator/common';\nimport { Configurator } from '../../model/configurator.model';\nimport { CONFIGURATOR_DATA } from '../configurator-state';\n\nexport const READ_CART_ENTRY_CONFIGURATION =\n  '[Configurator] Read Cart Entry Configuration';\nexport const READ_CART_ENTRY_CONFIGURATION_SUCCESS =\n  '[Configurator] Read Cart Entry Configuration Success';\nexport const READ_CART_ENTRY_CONFIGURATION_FAIL =\n  '[Configurator] Read Cart Entry Configuration Fail';\nexport const READ_ORDER_ENTRY_CONFIGURATION =\n  '[Configurator] Read Order Entry Configuration';\nexport const READ_ORDER_ENTRY_CONFIGURATION_SUCCESS =\n  '[Configurator] Read Order Entry Configuration Success';\nexport const READ_ORDER_ENTRY_CONFIGURATION_FAIL =\n  '[Configurator] Read Order Entry Configuration Fail';\n\nexport const ADD_TO_CART = '[Configurator] Add to cart';\nexport const UPDATE_CART_ENTRY = '[Configurator] Update cart entry';\nexport const UPDATE_CART_ENTRY_SUCCESS =\n  '[Configurator] Update cart entry success';\n\nexport const ADD_NEXT_OWNER = '[Configurator] Add next owner';\nexport const SET_NEXT_OWNER_CART_ENTRY =\n  '[Configurator] Set next owner cart entry';\n\nexport const REMOVE_CART_BOUND_CONFIGURATIONS =\n  '[Configurator] Remove cart bound configurations';\n\nexport class ReadCartEntryConfiguration extends StateUtils.EntityLoadAction {\n  readonly type = READ_CART_ENTRY_CONFIGURATION;\n  constructor(\n    public payload: CommonConfigurator.ReadConfigurationFromCartEntryParameters\n  ) {\n    super(CONFIGURATOR_DATA, payload.owner.key);\n  }\n}\n\nexport class ReadCartEntryConfigurationSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = READ_CART_ENTRY_CONFIGURATION_SUCCESS;\n  constructor(public payload: Configurator.Configuration) {\n    super(CONFIGURATOR_DATA, payload.owner.key);\n  }\n}\n\nexport class ReadCartEntryConfigurationFail extends StateUtils.EntityFailAction {\n  readonly type = READ_CART_ENTRY_CONFIGURATION_FAIL;\n  constructor(public payload: { ownerKey: string; error: any }) {\n    super(CONFIGURATOR_DATA, payload.ownerKey, payload.error);\n  }\n}\n\nexport class ReadOrderEntryConfiguration extends StateUtils.EntityLoadAction {\n  readonly type = READ_ORDER_ENTRY_CONFIGURATION;\n  constructor(\n    public payload: CommonConfigurator.ReadConfigurationFromOrderEntryParameters\n  ) {\n    super(CONFIGURATOR_DATA, payload.owner.key);\n  }\n}\n\nexport class ReadOrderEntryConfigurationSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = READ_ORDER_ENTRY_CONFIGURATION_SUCCESS;\n  constructor(public payload: Configurator.Configuration) {\n    super(CONFIGURATOR_DATA, payload.owner.key);\n  }\n}\n\nexport class ReadOrderEntryConfigurationFail extends StateUtils.EntityFailAction {\n  readonly type = READ_ORDER_ENTRY_CONFIGURATION_FAIL;\n  constructor(public payload: { ownerKey: string; error: any }) {\n    super(CONFIGURATOR_DATA, payload.ownerKey, payload.error);\n  }\n}\n\nexport class AddToCart extends StateUtils.EntityProcessesIncrementAction {\n  readonly type = ADD_TO_CART;\n  constructor(public payload: Configurator.AddToCartParameters) {\n    super(MULTI_CART_DATA, payload.cartId);\n  }\n}\n\nexport class UpdateCartEntry extends StateUtils.EntityProcessesIncrementAction {\n  readonly type = UPDATE_CART_ENTRY;\n  constructor(\n    public payload: Configurator.UpdateConfigurationForCartEntryParameters\n  ) {\n    super(MULTI_CART_DATA, payload.cartId);\n  }\n}\n\nexport class AddNextOwner implements Action {\n  readonly type = ADD_NEXT_OWNER;\n  constructor(public payload: { ownerKey: string; cartEntryNo: string }) {}\n}\n\nexport class RemoveCartBoundConfigurations implements Action {\n  readonly type = REMOVE_CART_BOUND_CONFIGURATIONS;\n  constructor() {\n    // Intentional Empty Constructor\n  }\n}\n\nexport class SetNextOwnerCartEntry extends StateUtils.EntitySuccessAction {\n  readonly type = SET_NEXT_OWNER_CART_ENTRY;\n\n  constructor(\n    public payload: {\n      configuration: Configurator.Configuration;\n      cartEntryNo: string;\n    }\n  ) {\n    super(CONFIGURATOR_DATA, payload.configuration.owner.key);\n  }\n}\n\nexport type ConfiguratorCartAction =\n  | AddNextOwner\n  | SetNextOwnerCartEntry\n  | ReadCartEntryConfiguration\n  | ReadCartEntryConfigurationSuccess\n  | ReadCartEntryConfigurationFail\n  | ReadOrderEntryConfiguration\n  | ReadOrderEntryConfigurationSuccess\n  | ReadOrderEntryConfigurationFail\n  | RemoveCartBoundConfigurations\n  | UpdateCartEntry;\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { StateUtils } from '@spartacus/core';\nimport { CommonConfigurator } from '@spartacus/product-configurator/common';\nimport { Configurator } from '../../model/configurator.model';\nimport { CONFIGURATOR_DATA } from '../configurator-state';\n\nexport const CREATE_CONFIGURATION = '[Configurator] Create Configuration';\nexport const CREATE_CONFIGURATION_FAIL =\n  '[Configurator] Create Configuration Fail';\nexport const CREATE_CONFIGURATION_SUCCESS =\n  '[Configurator] Create Configuration Sucess';\nexport const READ_CONFIGURATION = '[Configurator] Read Configuration';\nexport const READ_CONFIGURATION_FAIL = '[Configurator] Read Configuration Fail';\nexport const READ_CONFIGURATION_SUCCESS =\n  '[Configurator] Read Configuration Sucess';\n\nexport const UPDATE_CONFIGURATION = '[Configurator] Update Configuration';\nexport const UPDATE_CONFIGURATION_FAIL =\n  '[Configurator] Update Configuration Fail';\nexport const UPDATE_CONFIGURATION_SUCCESS =\n  '[Configurator] Update Configuration Success';\n\nexport const UPDATE_CONFIGURATION_FINALIZE_SUCCESS =\n  '[Configurator] Update Configuration finalize success';\nexport const UPDATE_CONFIGURATION_FINALIZE_FAIL =\n  '[Configurator] Update Configuration finalize fail';\nexport const CHANGE_GROUP = '[Configurator] Change group';\nexport const CHANGE_GROUP_FINALIZE = '[Configurator] Change group finalize';\n\nexport const REMOVE_CONFIGURATION = '[Configurator] Remove configuration';\n\nexport const UPDATE_PRICE_SUMMARY =\n  '[Configurator] Update Configuration Summary Price';\nexport const UPDATE_PRICE_SUMMARY_FAIL =\n  '[Configurator] Update Configuration Price Summary fail';\nexport const UPDATE_PRICE_SUMMARY_SUCCESS =\n  '[Configurator] Update Configuration Price Summary success';\n\nexport const GET_CONFIGURATION_OVERVIEW =\n  '[Configurator] Get Configuration Overview';\nexport const GET_CONFIGURATION_OVERVIEW_FAIL =\n  '[Configurator] Get Configuration Overview fail';\nexport const GET_CONFIGURATION_OVERVIEW_SUCCESS =\n  '[Configurator] Get Configuration Overview success';\n\nexport const SET_INTERACTION_STATE = '[Configurator] Set interaction state';\nexport const SET_CURRENT_GROUP = '[Configurator] Set current group to State';\nexport const SET_MENU_PARENT_GROUP =\n  '[Configurator] Set current parent group for menu to State';\n\nexport const SET_GROUPS_VISITED = '[Configurator] Set groups to visited';\n\nexport class CreateConfiguration extends StateUtils.EntityLoadAction {\n  readonly type = CREATE_CONFIGURATION;\n  constructor(public payload: CommonConfigurator.Owner) {\n    super(CONFIGURATOR_DATA, payload.key);\n  }\n}\n\nexport class CreateConfigurationFail extends StateUtils.EntityFailAction {\n  readonly type = CREATE_CONFIGURATION_FAIL;\n  constructor(\n    public payload: {\n      ownerKey: string;\n      error: any;\n    }\n  ) {\n    super(CONFIGURATOR_DATA, payload.ownerKey, payload.error);\n  }\n}\n\nexport class CreateConfigurationSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = CREATE_CONFIGURATION_SUCCESS;\n  constructor(public payload: Configurator.Configuration) {\n    super(CONFIGURATOR_DATA, payload.owner.key);\n  }\n}\n\nexport class ReadConfiguration extends StateUtils.EntityLoadAction {\n  readonly type = READ_CONFIGURATION;\n  constructor(\n    public payload: {\n      configuration: Configurator.Configuration;\n      groupId: string;\n    }\n  ) {\n    super(CONFIGURATOR_DATA, payload.configuration.owner.key);\n  }\n}\n\nexport class ReadConfigurationFail extends StateUtils.EntityFailAction {\n  readonly type = READ_CONFIGURATION_FAIL;\n  constructor(public payload: { ownerKey: string; error: any }) {\n    super(CONFIGURATOR_DATA, payload.ownerKey, payload.error);\n  }\n}\n\nexport class ReadConfigurationSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = READ_CONFIGURATION_SUCCESS;\n  constructor(public payload: Configurator.Configuration) {\n    super(CONFIGURATOR_DATA, payload.owner.key);\n  }\n}\n\nexport class UpdateConfiguration extends StateUtils.EntityProcessesIncrementAction {\n  readonly type = UPDATE_CONFIGURATION;\n  constructor(public payload: Configurator.Configuration) {\n    super(CONFIGURATOR_DATA, payload.owner.key);\n    this.meta.loader = {\n      load: true,\n    };\n  }\n}\n\nexport class UpdateConfigurationFail extends StateUtils.EntityProcessesDecrementAction {\n  readonly type = UPDATE_CONFIGURATION_FAIL;\n  constructor(\n    public payload: { configuration: Configurator.Configuration; error: any }\n  ) {\n    super(CONFIGURATOR_DATA, payload.configuration.owner.key);\n    this.meta.loader = {\n      error: payload.error,\n    };\n  }\n}\n\nexport class UpdateConfigurationSuccess extends StateUtils.EntityProcessesDecrementAction {\n  readonly type = UPDATE_CONFIGURATION_SUCCESS;\n  constructor(public payload: Configurator.Configuration) {\n    super(CONFIGURATOR_DATA, payload.owner.key);\n  }\n}\n\nexport class UpdateConfigurationFinalizeSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = UPDATE_CONFIGURATION_FINALIZE_SUCCESS;\n  constructor(public payload: Configurator.Configuration) {\n    super(CONFIGURATOR_DATA, payload.owner.key);\n  }\n}\n\nexport class UpdateConfigurationFinalizeFail extends StateUtils.EntitySuccessAction {\n  readonly type = UPDATE_CONFIGURATION_FINALIZE_FAIL;\n  constructor(public payload: Configurator.Configuration) {\n    super(CONFIGURATOR_DATA, payload.owner.key);\n  }\n}\n\nexport class UpdatePriceSummary extends StateUtils.EntityLoadAction {\n  readonly type = UPDATE_PRICE_SUMMARY;\n  constructor(public payload: Configurator.Configuration) {\n    super(CONFIGURATOR_DATA, payload.owner.key);\n  }\n}\nexport class UpdatePriceSummaryFail extends StateUtils.EntityFailAction {\n  readonly type = UPDATE_PRICE_SUMMARY_FAIL;\n  constructor(public payload: { ownerKey: string; error: any }) {\n    super(CONFIGURATOR_DATA, payload.ownerKey, payload.error);\n  }\n}\n\nexport class UpdatePriceSummarySuccess extends StateUtils.EntitySuccessAction {\n  readonly type = UPDATE_PRICE_SUMMARY_SUCCESS;\n  constructor(public payload: Configurator.Configuration) {\n    super(CONFIGURATOR_DATA, payload.owner.key);\n  }\n}\n\nexport class ChangeGroup extends StateUtils.EntityLoadAction {\n  readonly type = CHANGE_GROUP;\n  constructor(\n    public payload: {\n      configuration: Configurator.Configuration;\n      groupId: string;\n      /**\n       * Id of parent group. Can be undefined for groups on root level\n       */\n      parentGroupId?: string;\n    }\n  ) {\n    super(CONFIGURATOR_DATA, payload.configuration.owner.key);\n  }\n}\n\nexport class ChangeGroupFinalize extends StateUtils.EntityLoadAction {\n  readonly type = CHANGE_GROUP_FINALIZE;\n  constructor(public payload: Configurator.Configuration) {\n    super(CONFIGURATOR_DATA, payload.owner.key);\n  }\n}\n\nexport class RemoveConfiguration extends StateUtils.EntityLoaderResetAction {\n  readonly type = REMOVE_CONFIGURATION;\n  constructor(public payload: { ownerKey: string | string[] }) {\n    super(CONFIGURATOR_DATA, payload.ownerKey);\n  }\n}\n\nexport class GetConfigurationOverview extends StateUtils.EntityLoadAction {\n  readonly type = GET_CONFIGURATION_OVERVIEW;\n  constructor(public payload: Configurator.Configuration) {\n    super(CONFIGURATOR_DATA, payload.owner.key);\n  }\n}\n\nexport class GetConfigurationOverviewFail extends StateUtils.EntityFailAction {\n  readonly type = GET_CONFIGURATION_OVERVIEW_FAIL;\n  constructor(public payload: { ownerKey: string; error: any }) {\n    super(CONFIGURATOR_DATA, payload.ownerKey, payload.error);\n  }\n}\n\nexport class GetConfigurationOverviewSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = GET_CONFIGURATION_OVERVIEW_SUCCESS;\n  constructor(\n    public payload: { ownerKey: string; overview: Configurator.Overview }\n  ) {\n    super(CONFIGURATOR_DATA, payload.ownerKey);\n  }\n}\n\nexport class SetInteractionState extends StateUtils.EntitySuccessAction {\n  readonly type = SET_INTERACTION_STATE;\n\n  constructor(\n    public payload: {\n      entityKey: string | string[];\n      interactionState: Configurator.InteractionState;\n    }\n  ) {\n    super(CONFIGURATOR_DATA, payload.entityKey, payload.interactionState);\n  }\n}\n\nexport class SetCurrentGroup extends StateUtils.EntitySuccessAction {\n  readonly type = SET_CURRENT_GROUP;\n\n  constructor(\n    public payload: { entityKey: string | string[]; currentGroup: string }\n  ) {\n    super(CONFIGURATOR_DATA, payload.entityKey, payload.currentGroup);\n  }\n}\n\nexport class SetMenuParentGroup extends StateUtils.EntitySuccessAction {\n  readonly type = SET_MENU_PARENT_GROUP;\n\n  constructor(\n    public payload: {\n      entityKey: string | string[];\n      /**\n       * Id of parent group. Can be undefined for groups on root level\n       */\n      menuParentGroup?: string;\n    }\n  ) {\n    super(CONFIGURATOR_DATA, payload.entityKey, payload.menuParentGroup);\n  }\n}\n\nexport class SetGroupsVisited extends StateUtils.EntitySuccessAction {\n  readonly type = SET_GROUPS_VISITED;\n  constructor(public payload: { entityKey: string; visitedGroups: string[] }) {\n    super(CONFIGURATOR_DATA, payload.entityKey, payload.visitedGroups);\n  }\n}\n\nexport type ConfiguratorAction =\n  | CreateConfiguration\n  | CreateConfigurationFail\n  | CreateConfigurationSuccess\n  | ReadConfiguration\n  | ReadConfigurationFail\n  | ReadConfigurationSuccess\n  | UpdateConfiguration\n  | UpdateConfigurationFail\n  | UpdateConfigurationSuccess\n  | UpdateConfigurationFinalizeFail\n  | UpdateConfigurationFinalizeSuccess\n  | UpdatePriceSummary\n  | UpdatePriceSummaryFail\n  | UpdatePriceSummarySuccess\n  | ChangeGroup\n  | ChangeGroupFinalize\n  | GetConfigurationOverview\n  | GetConfigurationOverviewFail\n  | GetConfigurationOverviewSuccess\n  | RemoveConfiguration\n  | SetInteractionState\n  | SetMenuParentGroup\n  | SetCurrentGroup\n  | SetGroupsVisited;\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-cart.action';\nexport * from './configurator.action';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as ConfiguratorActions from './configurator-group.actions';\nexport { ConfiguratorActions };\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  createFeatureSelector,\n  createSelector,\n  MemoizedSelector,\n} from '@ngrx/store';\nimport { StateUtils } from '@spartacus/core';\nimport { Configurator } from '../../model/configurator.model';\nimport {\n  ConfiguratorState,\n  CONFIGURATOR_FEATURE,\n  StateWithConfigurator,\n} from '../configurator-state';\n\nexport const getConfigurationsState: MemoizedSelector<\n  StateWithConfigurator,\n  ConfiguratorState\n> = createFeatureSelector<ConfiguratorState>(CONFIGURATOR_FEATURE);\n\nexport const getConfigurationState: MemoizedSelector<\n  StateWithConfigurator,\n  StateUtils.EntityLoaderState<Configurator.Configuration>\n> = createSelector(\n  getConfigurationsState,\n  (state: ConfiguratorState) => state.configurations\n);\n\nexport const getConfigurationProcessLoaderStateFactory = (\n  code: string\n): MemoizedSelector<\n  StateWithConfigurator,\n  StateUtils.ProcessesLoaderState<Configurator.Configuration>\n> => {\n  return createSelector(getConfigurationState, (details) =>\n    StateUtils.entityProcessesLoaderStateSelector(details, code)\n  );\n};\n\nexport const hasPendingChanges = (\n  code: string\n): MemoizedSelector<StateWithConfigurator, boolean> => {\n  return createSelector(getConfigurationState, (details) =>\n    StateUtils.entityHasPendingProcessesSelector(details, code)\n  );\n};\n\nexport const getConfigurationFactory = (\n  code: string\n): MemoizedSelector<StateWithConfigurator, Configurator.Configuration> => {\n  return createSelector(\n    getConfigurationProcessLoaderStateFactory(code),\n    (configurationState) => StateUtils.loaderValueSelector(configurationState)\n  );\n};\n\nexport const getCurrentGroup = (\n  ownerKey: string\n): MemoizedSelector<StateWithConfigurator, string | undefined> => {\n  return createSelector(\n    getConfigurationFactory(ownerKey),\n    (configuration) => configuration?.interactionState?.currentGroup\n  );\n};\n\nexport const isGroupVisited = (\n  ownerKey: string,\n  groupId: string\n): MemoizedSelector<StateWithConfigurator, boolean> => {\n  return createSelector(getConfigurationFactory(ownerKey), (configuration) => {\n    const groupsVisited = configuration?.interactionState?.groupsVisited;\n    return groupsVisited ? groupsVisited[groupId] : false;\n  });\n};\n\nexport const areGroupsVisited = (\n  ownerKey: string,\n  groupIds: string[]\n): MemoizedSelector<StateWithConfigurator, boolean> => {\n  return createSelector(getConfigurationFactory(ownerKey), (configuration) => {\n    return (\n      groupIds\n        .map((id) => {\n          const groupsVisited = configuration?.interactionState?.groupsVisited;\n          return groupsVisited ? groupsVisited[id] : false;\n        })\n        .filter((visited) => !visited).length === 0\n    );\n  });\n};\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator.selector';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as ConfiguratorSelectors from './configurator-group.selectors';\nexport { ConfiguratorSelectors };\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { StateUtils } from '@spartacus/core';\nimport { Configurator } from '../../model/configurator.model';\n\n/**\n * Utility service for the facade layer. Supposed to be accessed by facade services\n */\n@Injectable({ providedIn: 'root' })\nexport class ConfiguratorUtilsService {\n  /**\n   * Determines the direct parent group for an attribute group\n   * @param {Configurator.Group[]} groups - List of groups where we search for parent\n   * @param {Configurator.Group} group - If already part of groups, no further search is needed, and we return the provided parent group\n   * @param {Configurator.Group} parentGroup - Optional parent group.\n   * @returns {Configurator.Group | undefined} - Parent group. Might be undefined\n   */\n  getParentGroup(\n    groups: Configurator.Group[],\n    group: Configurator.Group,\n    parentGroup?: Configurator.Group\n  ): Configurator.Group | undefined {\n    if (groups.includes(group)) {\n      return parentGroup;\n    }\n\n    return groups\n      .map((currentGroup) => {\n        return currentGroup.subGroups\n          ? this.getParentGroup(currentGroup.subGroups, group, currentGroup)\n          : undefined;\n      })\n      .filter((foundGroup) => foundGroup)\n      .pop();\n  }\n  /**\n   * Finds group identified by its ID, and ensures that we always get a valid group.\n   * If nothing is found in the configuration group list, this methods returns the first group.\n   *\n   * The exceptional case can happen if e.g. an edit in a conflict was done that\n   * resolved the conflict, or if a group vanished due to object dependencies.\n   * @param {Configurator.Group[]} groups - List of groups\n   * @param {string} groupId - Group id\n   * @returns {Configurator.Group} - Group identified by its id, if available. Otherwise first group\n   */\n  getGroupById(\n    groups: Configurator.Group[],\n    groupId: string\n  ): Configurator.Group {\n    const currentGroup = groups.find((group) => group.id === groupId);\n    if (currentGroup) {\n      return currentGroup;\n    }\n    const groupFound = this.getGroupFromSubGroups(groups, groupId);\n    return groupFound ? groupFound : groups[0];\n  }\n\n  /**\n   * Finds group identified by its ID. If nothing is found, this\n   * methods returns undefined\n   * @param {Configurator.Group[]} groups - List of groups\n   * @param {string} groupId - Group id\n   * @returns {Configurator.Group | undefined} - Group identified by its id, if available. Otherwise undefined\n   */\n  getOptionalGroupById(\n    groups: Configurator.Group[],\n    groupId: string\n  ): Configurator.Group | undefined {\n    const currentGroup = groups.find((group) => group.id === groupId);\n    return currentGroup\n      ? currentGroup\n      : this.getGroupFromSubGroups(groups, groupId);\n  }\n\n  protected getGroupByIdIfPresent(\n    groups: Configurator.Group[],\n    groupId: string\n  ): Configurator.Group | undefined {\n    const currentGroup = groups.find((group) => group.id === groupId);\n    if (currentGroup) {\n      return currentGroup;\n    }\n\n    return this.getGroupFromSubGroups(groups, groupId);\n  }\n\n  protected getGroupFromSubGroups(\n    groups: Configurator.Group[],\n    groupId: string\n  ): Configurator.Group | undefined {\n    const groupFound = groups\n      .map((group) => {\n        return group.subGroups\n          ? this.getGroupByIdIfPresent(group.subGroups, groupId)\n          : undefined;\n      })\n      .filter((foundGroup) => foundGroup)\n      .pop();\n    return groupFound;\n  }\n\n  /**\n   * Verifies whether the current group has a subgroups.\n   *\n   * @param {Configurator.Group} group - Current group\n   * @return {boolean} - 'True' if the current group has any subgroups, otherwise 'false'\n   */\n  hasSubGroups(group: Configurator.Group): boolean {\n    return group.subGroups ? group.subGroups.length > 0 : false;\n  }\n\n  /**\n   * Verifies whether the configuration has been created.\n   *\n   * @param {Configurator.Configuration} configuration - Configuration\n   * @return {boolean} - 'True' if the configuration hass been created, otherwise 'false'\n   */\n  isConfigurationCreated(configuration?: Configurator.Configuration): boolean {\n    const configId = configuration?.configId;\n    return (\n      configId !== undefined &&\n      configId.length !== 0 &&\n      configuration !== undefined &&\n      (configuration.flatGroups.length > 0 ||\n        configuration.overview !== undefined)\n    );\n  }\n\n  /**\n   * Creates configuration extract.\n   *\n   * @param {Configurator.Attribute} changedAttribute - changed configuration\n   * @param {Configurator.Configuration} configuration - configuration\n   * @param {Configurator.UpdateType} updateType - updated type\n   * @return {Configurator.Configuration} - Configuration\n   */\n  createConfigurationExtract(\n    changedAttribute: Configurator.Attribute,\n    configuration: Configurator.Configuration,\n    updateType?: Configurator.UpdateType\n  ): Configurator.Configuration {\n    if (!updateType) {\n      updateType = Configurator.UpdateType.ATTRIBUTE;\n    }\n    const newConfiguration: Configurator.Configuration = {\n      configId: configuration.configId,\n      groups: [],\n      flatGroups: [],\n      interactionState: {},\n      owner: configuration.owner,\n      productCode: configuration.productCode,\n      updateType,\n    };\n\n    const groupPath: Configurator.Group[] = [];\n\n    if (changedAttribute.groupId) {\n      this.buildGroupPath(\n        changedAttribute.groupId,\n        configuration.groups,\n        groupPath\n      );\n    } else {\n      throw Error('GroupId must be available at attribute level during update');\n    }\n\n    const groupPathLength = groupPath.length;\n\n    if (groupPathLength === 0) {\n      throw new Error(\n        'At this point we expect that group is available in the configuration: ' +\n          changedAttribute.groupId +\n          ', ' +\n          JSON.stringify(configuration.groups.map((cGroup) => cGroup.id))\n      );\n    }\n\n    let currentGroupInExtract: Configurator.Group = this.buildGroupForExtract(\n      groupPath[groupPathLength - 1]\n    );\n\n    let currentLeafGroupInExtract: Configurator.Group = currentGroupInExtract;\n\n    newConfiguration.groups.push(currentGroupInExtract);\n\n    for (let index = groupPath.length - 1; index > 0; index--) {\n      currentLeafGroupInExtract = this.buildGroupForExtract(\n        groupPath[index - 1]\n      );\n      currentGroupInExtract.subGroups = [currentLeafGroupInExtract];\n      currentGroupInExtract = currentLeafGroupInExtract;\n    }\n\n    currentLeafGroupInExtract.attributes = [changedAttribute];\n    return newConfiguration;\n  }\n\n  /**\n   * Builds group path.\n   *\n   * @param {string} groupId - Group ID\n   * @param { Configurator.Group[]} groupList - List of groups\n   * @param { Configurator.Group[]} groupPath - Path of groups\n   * @return {boolean} - 'True' if the group has been found, otherwise 'false'\n   */\n  buildGroupPath(\n    groupId: string,\n    groupList: Configurator.Group[],\n    groupPath: Configurator.Group[]\n  ): boolean {\n    let haveFoundGroup = false;\n    const group: Configurator.Group | undefined = groupList.find(\n      (currentGroup) => currentGroup.id === groupId\n    );\n\n    if (group) {\n      groupPath.push(group);\n      haveFoundGroup = true;\n    } else {\n      groupList\n        .filter((currentGroup) => currentGroup.subGroups)\n        .forEach((currentGroup) => {\n          if (\n            currentGroup.subGroups &&\n            this.buildGroupPath(groupId, currentGroup.subGroups, groupPath)\n          ) {\n            groupPath.push(currentGroup);\n            haveFoundGroup = true;\n          }\n        });\n    }\n    return haveFoundGroup;\n  }\n  /**\n   * Retrieves the configuration from state, and throws an error in case the configuration is\n   * not available\n   * @param {StateUtils.ProcessesLoaderState<Configurator.Configuration>} configurationState - Process loader state containing product configuration\n   * @returns {Configurator.Configuration} - The actual product configuration\n   */\n  getConfigurationFromState(\n    configurationState: StateUtils.ProcessesLoaderState<Configurator.Configuration>\n  ): Configurator.Configuration {\n    const configuration = configurationState.value;\n    if (configuration) {\n      return configuration;\n    } else {\n      throw new Error('Configuration must be defined at this point');\n    }\n  }\n\n  protected buildGroupForExtract(\n    group: Configurator.Group\n  ): Configurator.Group {\n    const changedGroup: Configurator.Group = {\n      groupType: group.groupType,\n      id: group.id,\n      subGroups: [],\n    };\n    return changedGroup;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { ActiveCartFacade } from '@spartacus/cart/base/root';\nimport { CheckoutQueryFacade } from '@spartacus/checkout/base/root';\nimport {\n  OCC_USER_ID_CURRENT,\n  StateUtils,\n  UserIdService,\n} from '@spartacus/core';\nimport {\n  CommonConfigurator,\n  CommonConfiguratorUtilsService,\n} from '@spartacus/product-configurator/common';\nimport { Observable } from 'rxjs';\nimport { delayWhen, filter, map, take, tap } from 'rxjs/operators';\nimport { Configurator } from '../model/configurator.model';\nimport { ConfiguratorActions } from '../state/actions/index';\nimport { StateWithConfigurator } from '../state/configurator-state';\nimport { ConfiguratorSelectors } from '../state/selectors/index';\nimport { ConfiguratorUtilsService } from './utils/configurator-utils.service';\n\n@Injectable({ providedIn: 'root' })\nexport class ConfiguratorCartService {\n  constructor(\n    protected store: Store<StateWithConfigurator>,\n    protected activeCartService: ActiveCartFacade,\n    protected commonConfigUtilsService: CommonConfiguratorUtilsService,\n    // TODO:#checkout - handle the breaking changes\n    protected checkoutQueryFacade: CheckoutQueryFacade,\n    protected userIdService: UserIdService,\n    protected configuratorUtilsService: ConfiguratorUtilsService\n  ) {}\n\n  /**\n   * Reads a configuratiom that is attached to a cart entry, dispatching the respective action\n   * @param owner Configuration owner\n   * @returns Observable of product configurations\n   */\n  readConfigurationForCartEntry(\n    owner: CommonConfigurator.Owner\n  ): Observable<Configurator.Configuration> {\n    return this.store.pipe(\n      select(\n        ConfiguratorSelectors.getConfigurationProcessLoaderStateFactory(\n          owner.key\n        )\n      ),\n      //needed as we cannot read the cart in general and for the OV\n      //in parallel, this can lead to cache issues with promotions\n      delayWhen(() =>\n        this.activeCartService.isStable().pipe(filter((stable) => stable))\n      ),\n      delayWhen(() =>\n        this.checkoutQueryFacade.getCheckoutDetailsState().pipe(\n          map((state) => state.loading),\n          filter((loading) => !loading)\n        )\n      ),\n      tap((configurationState) => {\n        if (this.configurationNeedsReading(configurationState)) {\n          this.activeCartService\n            .requireLoadedCart()\n            .pipe(take(1))\n            .subscribe((cart) => {\n              this.userIdService\n                .getUserId()\n                .pipe(take(1))\n                .subscribe((userId) => {\n                  const readFromCartEntryParameters: CommonConfigurator.ReadConfigurationFromCartEntryParameters =\n                    {\n                      userId: userId,\n                      cartId: this.commonConfigUtilsService.getCartId(cart),\n                      cartEntryNumber: owner.id,\n                      owner: owner,\n                    };\n                  this.store.dispatch(\n                    new ConfiguratorActions.ReadCartEntryConfiguration(\n                      readFromCartEntryParameters\n                    )\n                  );\n                });\n            });\n        }\n      }),\n      filter(\n        (configurationState) =>\n          configurationState.value !== undefined &&\n          this.isConfigurationCreated(configurationState.value)\n      ),\n      //save to assume configuration is defined after previous filter\n      map((configurationState) =>\n        this.configuratorUtilsService.getConfigurationFromState(\n          configurationState\n        )\n      )\n    );\n  }\n  /**\n   * Reads a configuratiom that is attached to an order entry, dispatching the respective action\n   * @param owner Configuration owner\n   * @returns Observable of product configurations\n   */\n  readConfigurationForOrderEntry(\n    owner: CommonConfigurator.Owner\n  ): Observable<Configurator.Configuration> {\n    return this.store.pipe(\n      select(\n        ConfiguratorSelectors.getConfigurationProcessLoaderStateFactory(\n          owner.key\n        )\n      ),\n      tap((configurationState) => {\n        if (this.configurationNeedsReading(configurationState)) {\n          const ownerIdParts = this.commonConfigUtilsService.decomposeOwnerId(\n            owner.id\n          );\n          const readFromOrderEntryParameters: CommonConfigurator.ReadConfigurationFromOrderEntryParameters =\n            {\n              userId: OCC_USER_ID_CURRENT,\n              orderId: ownerIdParts.documentId,\n              orderEntryNumber: ownerIdParts.entryNumber,\n              owner: owner,\n            };\n          this.store.dispatch(\n            new ConfiguratorActions.ReadOrderEntryConfiguration(\n              readFromOrderEntryParameters\n            )\n          );\n        }\n      }),\n      filter(\n        (configurationState) =>\n          configurationState.value !== undefined &&\n          this.isConfigurationCreated(configurationState.value)\n      ),\n      //save to assume configuration is defined after previous filter\n      map((configurationState) =>\n        this.configuratorUtilsService.getConfigurationFromState(\n          configurationState\n        )\n      )\n    );\n  }\n\n  /**\n   * Adds a configuration to the cart, specified by the product code, a configuration ID and configuration owner key.\n   *\n   * @param productCode - Product code\n   * @param configId - Configuration ID\n   * @param owner Configuration owner\n   */\n  addToCart(\n    productCode: string,\n    configId: string,\n    owner: CommonConfigurator.Owner\n  ): void {\n    this.activeCartService\n      .requireLoadedCart()\n      .pipe(take(1))\n      .subscribe((cart) => {\n        this.userIdService\n          .getUserId()\n          .pipe(take(1))\n          .subscribe((userId) => {\n            const addToCartParameters: Configurator.AddToCartParameters = {\n              userId: userId,\n              cartId: this.commonConfigUtilsService.getCartId(cart),\n              productCode: productCode,\n              quantity: 1,\n              configId: configId,\n              owner: owner,\n            };\n            this.store.dispatch(\n              new ConfiguratorActions.AddToCart(addToCartParameters)\n            );\n          });\n      });\n  }\n\n  /**\n   * Updates a cart entry, specified by the configuration.\n   * The cart entry number for the entry that owns the configuration can be told\n   * from the configuration's owner ID\n   *\n   * @param configuration - Configuration\n   */\n  updateCartEntry(configuration: Configurator.Configuration): void {\n    this.activeCartService\n      .requireLoadedCart()\n      .pipe(take(1))\n      .subscribe((cart) => {\n        this.userIdService\n          .getUserId()\n          .pipe(take(1))\n          .subscribe((userId) => {\n            const parameters: Configurator.UpdateConfigurationForCartEntryParameters =\n              {\n                userId: userId,\n                cartId: this.commonConfigUtilsService.getCartId(cart),\n                cartEntryNumber: configuration.owner.id,\n                configuration: configuration,\n              };\n\n            this.store.dispatch(\n              new ConfiguratorActions.UpdateCartEntry(parameters)\n            );\n          });\n      });\n  }\n  /**\n   * Can be used to check if the active cart has any product configuration issues.\n   * @returns True if and only if there is at least one cart entry with product configuration issues\n   */\n  activeCartHasIssues(): Observable<boolean> {\n    return this.activeCartService.requireLoadedCart().pipe(\n      map((cart) => {\n        return cart ? cart.entries : [];\n      }),\n      map((entries) =>\n        entries\n          ? entries.filter((entry) =>\n              this.commonConfigUtilsService.getNumberOfIssues(entry)\n            )\n          : []\n      ),\n      map((entries) => entries.length > 0)\n    );\n  }\n\n  /**\n   * Remove all configurations that are linked to cart entries\n   */\n  removeCartBoundConfigurations(): void {\n    this.store.dispatch(\n      new ConfiguratorActions.RemoveCartBoundConfigurations()\n    );\n  }\n\n  protected isConfigurationCreated(\n    configuration: Configurator.Configuration\n  ): boolean {\n    const configId: String = configuration.configId;\n    return configId.length !== 0;\n  }\n\n  protected configurationNeedsReading(\n    configurationState: StateUtils.LoaderState<Configurator.Configuration>\n  ): boolean {\n    const configuration = configurationState.value;\n    return (\n      configuration === undefined ||\n      (!this.isConfigurationCreated(configuration) &&\n        !configurationState.loading &&\n        !configurationState.error)\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, isDevMode } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { ActiveCartFacade } from '@spartacus/cart/base/root';\nimport {\n  CommonConfigurator,\n  CommonConfiguratorUtilsService,\n} from '@spartacus/product-configurator/common';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, switchMapTo, take, tap } from 'rxjs/operators';\nimport { Configurator } from '../model/configurator.model';\nimport { ConfiguratorActions } from '../state/actions/index';\nimport { StateWithConfigurator } from '../state/configurator-state';\nimport { ConfiguratorSelectors } from '../state/selectors/index';\nimport { ConfiguratorCartService } from './configurator-cart.service';\nimport { ConfiguratorUtilsService } from './utils/configurator-utils.service';\n\n@Injectable({ providedIn: 'root' })\nexport class ConfiguratorCommonsService {\n  constructor(\n    protected store: Store<StateWithConfigurator>,\n    protected commonConfigUtilsService: CommonConfiguratorUtilsService,\n    protected configuratorCartService: ConfiguratorCartService,\n    protected activeCartService: ActiveCartFacade,\n    protected configuratorUtils: ConfiguratorUtilsService\n  ) {}\n\n  /**\n   * Verifies whether there are any pending configuration changes.\n   *\n   * @param owner - Configuration owner\n   *\n   * @returns {Observable<boolean>} Returns true if there are any pending changes, otherwise false\n   */\n  hasPendingChanges(owner: CommonConfigurator.Owner): Observable<boolean> {\n    return this.store.pipe(\n      select(ConfiguratorSelectors.hasPendingChanges(owner.key))\n    );\n  }\n\n  /**\n   * Verifies whether the configuration is loading.\n   *\n   * @param owner - Configuration owner\n   *\n   * @returns {Observable<boolean>} Returns true if the configuration is loading, otherwise false\n   */\n  isConfigurationLoading(owner: CommonConfigurator.Owner): Observable<boolean> {\n    return this.store.pipe(\n      select(\n        ConfiguratorSelectors.getConfigurationProcessLoaderStateFactory(\n          owner.key\n        )\n      ),\n      map((configurationState) => configurationState.loading ?? false)\n    );\n  }\n\n  /**\n   * Returns a configuration for an owner. Emits only if there are valid configurations\n   * available for the requested owner, does not trigger the re-read or\n   * creation of the configuration in case it's not there\n   *\n   * @param owner - Configuration owner\n   *\n   * @returns {Observable<Configurator.Configuration>}\n   */\n  getConfiguration(\n    owner: CommonConfigurator.Owner\n  ): Observable<Configurator.Configuration> {\n    return this.store.pipe(\n      select(ConfiguratorSelectors.getConfigurationFactory(owner.key)),\n      filter((configuration) =>\n        this.configuratorUtils.isConfigurationCreated(configuration)\n      )\n    );\n  }\n\n  /**\n   * Returns a configuration if it exists or creates a new one.\n   * Emits if there is a valid configuration available and triggers\n   * the configuration creation or read from backend in case it is not\n   * available\n   *\n   * @param owner - Configuration owner\n   *\n   * @returns {Observable<Configurator.Configuration>}\n   */\n  getOrCreateConfiguration(\n    owner: CommonConfigurator.Owner\n  ): Observable<Configurator.Configuration> {\n    switch (owner.type) {\n      case CommonConfigurator.OwnerType.PRODUCT: {\n        return this.getOrCreateConfigurationForProduct(owner);\n      }\n      case CommonConfigurator.OwnerType.CART_ENTRY: {\n        return this.configuratorCartService.readConfigurationForCartEntry(\n          owner\n        );\n      }\n      case CommonConfigurator.OwnerType.ORDER_ENTRY: {\n        return this.configuratorCartService.readConfigurationForOrderEntry(\n          owner\n        );\n      }\n    }\n  }\n\n  /**\n   * Updates a configuration, specified by the configuration owner key, group ID and a changed attribute.\n   *\n   * @param ownerKey - Configuration owner key\n   * @param changedAttribute - Changes attribute\n   */\n  updateConfiguration(\n    ownerKey: string,\n    changedAttribute: Configurator.Attribute,\n    updateType?: Configurator.UpdateType\n  ): void {\n    if (!updateType) {\n      updateType = Configurator.UpdateType.ATTRIBUTE;\n    }\n    // in case cart updates pending: Do nothing, because an addToCart might\n    // be in progress. Can happen if on slow networks addToCart was hit and\n    // afterwards an attribute was changed before the OV navigation has\n    // taken place\n    this.activeCartService\n      .getActive()\n      .pipe(\n        take(1),\n        switchMap((cart) =>\n          this.activeCartService.isStable().pipe(\n            take(1),\n            tap((stable) => {\n              if (isDevMode() && cart.code && !stable) {\n                console.warn('Cart is busy, no configuration updates possible');\n              }\n            }),\n            filter((stable) => !cart.code || stable),\n            switchMapTo(\n              this.store.pipe(\n                select(ConfiguratorSelectors.getConfigurationFactory(ownerKey)),\n                take(1)\n              )\n            )\n          )\n        )\n      )\n      .subscribe((configuration) => {\n        this.store.dispatch(\n          new ConfiguratorActions.UpdateConfiguration(\n            this.configuratorUtils.createConfigurationExtract(\n              changedAttribute,\n              configuration,\n              updateType\n            )\n          )\n        );\n      });\n  }\n\n  /**\n   * Returns a configuration with an overview. Emits valid configurations which\n   * include the overview aspect\n   *\n   * @param configuration - Configuration\n   * @returns Observable of configurations including the overview\n   */\n  getConfigurationWithOverview(\n    configuration: Configurator.Configuration\n  ): Observable<Configurator.Configuration> {\n    return this.store.pipe(\n      select(\n        ConfiguratorSelectors.getConfigurationFactory(configuration.owner.key)\n      ),\n      filter((config) => this.configuratorUtils.isConfigurationCreated(config)),\n      tap((configurationState) => {\n        if (!this.hasConfigurationOverview(configurationState)) {\n          this.store.dispatch(\n            new ConfiguratorActions.GetConfigurationOverview(configuration)\n          );\n        }\n      }),\n      filter((config) => this.hasConfigurationOverview(config))\n    );\n  }\n\n  /**\n   * Removes a configuration.\n   *\n   * @param owner - Configuration owner\n   */\n  removeConfiguration(owner: CommonConfigurator.Owner): void {\n    this.store.dispatch(\n      new ConfiguratorActions.RemoveConfiguration({ ownerKey: owner.key })\n    );\n  }\n\n  /**\n   * Checks if the configuration contains conflicts\n   *\n   * @param owner - Configuration owner\n   *\n   * @returns {Observable<boolean>} - Returns true if the configuration has conflicts, otherwise false\n   */\n  hasConflicts(owner: CommonConfigurator.Owner): Observable<boolean> {\n    return this.getConfiguration(owner).pipe(\n      map(\n        (configuration) =>\n          //We expect that the first group must always be the conflict group\n          configuration.groups[0]?.groupType ===\n          Configurator.GroupType.CONFLICT_HEADER_GROUP\n      )\n    );\n  }\n\n  protected getOrCreateConfigurationForProduct(\n    owner: CommonConfigurator.Owner\n  ): Observable<Configurator.Configuration> {\n    return this.store.pipe(\n      select(\n        ConfiguratorSelectors.getConfigurationProcessLoaderStateFactory(\n          owner.key\n        )\n      ),\n      tap((configurationState) => {\n        if (\n          (configurationState.value === undefined ||\n            !this.configuratorUtils.isConfigurationCreated(\n              configurationState.value\n            )) &&\n          configurationState.loading !== true &&\n          configurationState.error !== true\n        ) {\n          this.store.dispatch(\n            new ConfiguratorActions.CreateConfiguration(owner)\n          );\n        }\n      }),\n      filter(\n        (configurationState) =>\n          configurationState.value !== undefined &&\n          this.configuratorUtils.isConfigurationCreated(\n            configurationState.value\n          )\n      ),\n      //save to assume configuration is defined after previous filter\n      map((configurationState) =>\n        this.configuratorUtils.getConfigurationFromState(configurationState)\n      )\n    );\n  }\n\n  protected hasConfigurationOverview(\n    configuration: Configurator.Configuration\n  ): boolean {\n    return configuration.overview !== undefined;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { CommonConfigurator } from '@spartacus/product-configurator/common';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { Configurator } from '../model/configurator.model';\nimport { ConfiguratorActions } from '../state/actions/index';\nimport { StateWithConfigurator } from '../state/configurator-state';\nimport { ConfiguratorSelectors } from '../state/selectors/index';\nimport { ConfiguratorUtilsService } from './utils/configurator-utils.service';\n\n/**\n * Service for handling group statuses\n */\n@Injectable({ providedIn: 'root' })\nexport class ConfiguratorGroupStatusService {\n  constructor(\n    protected store: Store<StateWithConfigurator>,\n    protected configuratorUtilsService: ConfiguratorUtilsService\n  ) {}\n\n  /**\n   * Verifies whether the group has been visited.\n   *\n   * @param {CommonConfigurator.Owner} owner - Configuration owner\n   * @param {string} groupId - Group ID\n   * @returns {Observable<boolean>} Has group been visited?\n   */\n  isGroupVisited(\n    owner: CommonConfigurator.Owner,\n    groupId: string\n  ): Observable<boolean> {\n    return this.store.select(\n      ConfiguratorSelectors.isGroupVisited(owner.key, groupId)\n    );\n  }\n\n  /**\n   * Returns the first non-conflict group of the configuration which is not completed\n   * and undefined if all are completed.\n   *\n   * @param {Configurator.Configuration} configuration - Configuration\n   *\n   * @return {Configurator.Group} - First incomplete group or undefined\n   */\n  getFirstIncompleteGroup(\n    configuration: Configurator.Configuration\n  ): Configurator.Group | undefined {\n    return configuration.flatGroups\n      ? configuration.flatGroups\n          .filter(\n            (group) => group.groupType !== Configurator.GroupType.CONFLICT_GROUP\n          )\n          .find((group) => !group.complete)\n      : undefined;\n  }\n\n  /**\n   * Determines whether the group has been visited or not.\n   *\n   * @param {Configurator.Configuration} configuration - Configuration\n   * @param {string} groupId - Group ID\n   */\n  setGroupStatusVisited(\n    configuration: Configurator.Configuration,\n    groupId: string\n  ): void {\n    const group = this.configuratorUtilsService.getGroupById(\n      configuration.groups,\n      groupId\n    );\n    const parentGroup = this.configuratorUtilsService.getParentGroup(\n      configuration.groups,\n      this.configuratorUtilsService.getGroupById(configuration.groups, groupId)\n    );\n\n    const visitedGroupIds = [];\n    visitedGroupIds.push(group.id);\n    if (parentGroup) {\n      this.getParentGroupStatusVisited(\n        configuration,\n        group.id,\n        parentGroup,\n        visitedGroupIds\n      );\n    }\n\n    this.store.dispatch(\n      new ConfiguratorActions.SetGroupsVisited({\n        entityKey: configuration.owner.key,\n        visitedGroups: visitedGroupIds,\n      })\n    );\n  }\n\n  protected areGroupsVisited(\n    owner: CommonConfigurator.Owner,\n    groupIds: string[]\n  ): Observable<boolean> {\n    return this.store.select(\n      ConfiguratorSelectors.areGroupsVisited(owner.key, groupIds)\n    );\n  }\n\n  protected getParentGroupStatusVisited(\n    configuration: Configurator.Configuration,\n    groupId: string,\n    parentGroup: Configurator.Group,\n    visitedGroupIds: string[]\n  ) {\n    const subGroups: string[] = [];\n    parentGroup.subGroups.forEach((subGroup) => {\n      //The current group is not set to visited yet, therefore we have to exclude it in the check\n      if (subGroup.id === groupId) {\n        return;\n      }\n      subGroups.push(subGroup.id);\n    });\n\n    this.areGroupsVisited(configuration.owner, subGroups)\n      .pipe(take(1))\n      .subscribe((isVisited) => {\n        if (isVisited) {\n          visitedGroupIds.push(parentGroup.id);\n          const grandParentGroup = this.configuratorUtilsService.getParentGroup(\n            configuration.groups,\n            this.configuratorUtilsService.getGroupById(\n              configuration.groups,\n              parentGroup.id\n            )\n          );\n          if (grandParentGroup) {\n            this.getParentGroupStatusVisited(\n              configuration,\n              parentGroup.id,\n              grandParentGroup,\n              visitedGroupIds\n            );\n          }\n        }\n      });\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { CommonConfigurator } from '@spartacus/product-configurator/common';\nimport { Observable } from 'rxjs';\nimport { map, switchMap, take } from 'rxjs/operators';\nimport { Configurator } from '../model/configurator.model';\nimport { ConfiguratorActions } from '../state/actions/index';\nimport { StateWithConfigurator } from '../state/configurator-state';\nimport { ConfiguratorCommonsService } from './configurator-commons.service';\nimport { ConfiguratorGroupStatusService } from './configurator-group-status.service';\nimport { ConfiguratorUtilsService } from './utils/configurator-utils.service';\n\n/**\n * Service for handling configuration groups\n */\n@Injectable({ providedIn: 'root' })\nexport class ConfiguratorGroupsService {\n  constructor(\n    protected store: Store<StateWithConfigurator>,\n    protected configuratorCommonsService: ConfiguratorCommonsService,\n    protected configuratorUtilsService: ConfiguratorUtilsService,\n    protected configuratorGroupStatusService: ConfiguratorGroupStatusService\n  ) {}\n\n  /**\n   * Returns the current group Id.\n   * In case no group Id is being set before returns the first group of the configuration.\n   * Return null when configuration contains no groups.\n   *\n   * @param {CommonConfigurator.Owner} owner configuration owner\n   * @returns {Observable<string>} Group ID\n   */\n  getCurrentGroupId(owner: CommonConfigurator.Owner): Observable<string> {\n    return this.configuratorCommonsService.getConfiguration(owner).pipe(\n      map((configuration) => {\n        if (configuration?.interactionState.currentGroup) {\n          return configuration.interactionState.currentGroup;\n        } else {\n          return configuration?.groups[0]?.id;\n        }\n      })\n    );\n  }\n\n  /**\n   * Return the first conflict group of a configuration or undefined\n   * if not present\n   *\n   * @param {Configurator.Configuration} configuration - Configuration\n   * @returns {Configurator.Group} Conflict group\n   */\n  getFirstConflictGroup(\n    configuration: Configurator.Configuration\n  ): Configurator.Group | undefined {\n    return configuration.flatGroups.find(\n      (group) => group.groupType === Configurator.GroupType.CONFLICT_GROUP\n    );\n  }\n\n  /**\n   * Navigates to the first non-conflict group of the configuration which is not completed.\n   * This method assumes that the configuration has incomplete groups,\n   * the caller has to verify this prior to calling this method. In case no incomplete group is\n   * present, nothing will happen\n   *\n   * @param {CommonConfigurator.Owner} owner - Configuration owner\n   */\n  navigateToFirstIncompleteGroup(owner: CommonConfigurator.Owner): void {\n    this.configuratorCommonsService\n      .getConfiguration(owner)\n      .pipe(take(1))\n      .subscribe((configuration) => {\n        const groupId =\n          this.configuratorGroupStatusService.getFirstIncompleteGroup(\n            configuration\n          )?.id;\n        if (groupId) {\n          this.navigateToGroup(configuration, groupId, true);\n        }\n      });\n  }\n\n  /**\n   * Navigates to the first conflict group and sets the conflict header as parent group.\n   * This method assumes that the configuration has conflicts,\n   * the caller has to verify this prior to calling this method. In case no conflict group\n   * is present, nothing will happen\n   *\n   * @param {CommonConfigurator.Owner} owner Configuration Owner\n   */\n  navigateToConflictSolver(owner: CommonConfigurator.Owner): void {\n    this.configuratorCommonsService\n      .getConfiguration(owner)\n      .pipe(take(1))\n      .subscribe((configuration) => {\n        const groupId = this.getFirstConflictGroup(configuration)?.id;\n        if (groupId) {\n          this.navigateToGroup(configuration, groupId, true);\n        }\n      });\n  }\n\n  /**\n   * Returns the parent group of the subgroup that is displayed in the group menu.\n   *\n   * @param {CommonConfigurator.Owner} owner - Configuration owner\n   * @returns {Observable<Configurator.Group>} Group\n   */\n  getMenuParentGroup(\n    owner: CommonConfigurator.Owner\n  ): Observable<Configurator.Group | undefined> {\n    return this.configuratorCommonsService.getConfiguration(owner).pipe(\n      map((configuration) => {\n        const menuParentGroup = configuration.interactionState.menuParentGroup;\n        return menuParentGroup\n          ? this.configuratorUtilsService.getOptionalGroupById(\n              configuration.groups,\n              menuParentGroup\n            )\n          : undefined;\n      })\n    );\n  }\n\n  /**\n   * Set the parent group, specified by the group ID, which is displayed in the group menu.\n   *\n   * @param {CommonConfigurator.Owner} owner - Configuration owner\n   * @param {string} groupId - Group ID. Can be ommitted, in this case parent group will be cleared, in case we are on root level\n   */\n  setMenuParentGroup(owner: CommonConfigurator.Owner, groupId?: string): void {\n    this.store.dispatch(\n      new ConfiguratorActions.SetMenuParentGroup({\n        entityKey: owner.key,\n        menuParentGroup: groupId,\n      })\n    );\n  }\n\n  /**\n   * Returns the group that is currently visited.\n   *\n   * @param {CommonConfigurator.Owner} owner - Configuration owner\n   * @return {Observable<Configurator.Group>} Current group\n   */\n  getCurrentGroup(\n    owner: CommonConfigurator.Owner\n  ): Observable<Configurator.Group> {\n    return this.getCurrentGroupId(owner).pipe(\n      switchMap((currentGroupId) => {\n        return this.configuratorCommonsService\n          .getConfiguration(owner)\n          .pipe(\n            map((configuration) =>\n              this.configuratorUtilsService.getGroupById(\n                configuration.groups,\n                currentGroupId\n              )\n            )\n          );\n      })\n    );\n  }\n\n  /**\n   * Determines whether the group has been visited or not.\n   *\n   * @param {CommonConfigurator.Owner} owner - Owner\n   * @param {string} groupId - Group ID\n   */\n  setGroupStatusVisited(\n    owner: CommonConfigurator.Owner,\n    groupId: string\n  ): void {\n    this.configuratorCommonsService\n      .getConfiguration(owner)\n      .pipe(\n        map((configuration) =>\n          this.configuratorGroupStatusService.setGroupStatusVisited(\n            configuration,\n            groupId\n          )\n        ),\n        take(1)\n      )\n      .subscribe();\n  }\n\n  /**\n   * Navigates to the group, specified by its group ID.\n   *\n   * @param {Configurator.Configuration}configuration - Configuration\n   * @param {string} groupId - Group ID\n   * @param {boolean} setStatus - Group status will be set for previous group, default true\n   */\n  navigateToGroup(\n    configuration: Configurator.Configuration,\n    groupId: string,\n    setStatus = true\n  ): void {\n    if (setStatus) {\n      //Set Group status for current group\n      this.getCurrentGroup(configuration.owner)\n        .pipe(take(1))\n        .subscribe((currentGroup) => {\n          this.configuratorGroupStatusService.setGroupStatusVisited(\n            configuration,\n            currentGroup.id\n          );\n        });\n    }\n\n    const parentGroup = this.configuratorUtilsService.getParentGroup(\n      configuration.groups,\n      this.configuratorUtilsService.getGroupById(configuration.groups, groupId)\n    );\n\n    this.store.dispatch(\n      new ConfiguratorActions.ChangeGroup({\n        configuration: configuration,\n        groupId: groupId,\n        parentGroupId: parentGroup ? parentGroup.id : undefined,\n      })\n    );\n  }\n\n  /**\n   * Returns the group ID of the group that is coming after the current one in a sequential order.\n   *\n   * @param {CommonConfigurator.Owner} owner - Configuration owner\n   * @return {Observable<string> | undefined} ID of next group\n   */\n  getNextGroupId(\n    owner: CommonConfigurator.Owner\n  ): Observable<string | undefined> {\n    return this.getNeighboringGroupId(owner, 1);\n  }\n\n  /**\n   * Returns the group ID of the group that is preceding the current one in a sequential order.\n   *\n   * @param {CommonConfigurator.Owner} owner - Configuration owner\n   * @return {Observable<string | undefined >} ID of previous group\n   */\n  getPreviousGroupId(\n    owner: CommonConfigurator.Owner\n  ): Observable<string | undefined> {\n    return this.getNeighboringGroupId(owner, -1);\n  }\n\n  /**\n   * Verifies whether the group has been visited\n   *\n   * @param {CommonConfigurator.Owner} owner - Configuration owner\n   * @param {string} groupId - Group ID\n   * @return {Observable<boolean>} Has been visited?\n   */\n  isGroupVisited(\n    owner: CommonConfigurator.Owner,\n    groupId: string\n  ): Observable<boolean> {\n    return this.configuratorGroupStatusService.isGroupVisited(owner, groupId);\n  }\n\n  /**\n   * Returns a parent group for the given group.\n   *\n   * @param {Configurator.Group[]} groups - List of groups where we search for the parent group\n   * @param {Configurator.Group} group - Given group\n   * @return {Configurator.Group} Parent group or undefined if group is a top-level group\n   */\n  getParentGroup(\n    groups: Configurator.Group[],\n    group: Configurator.Group\n  ): Configurator.Group | undefined {\n    return this.configuratorUtilsService.getParentGroup(groups, group);\n  }\n\n  /**\n   * Verifies whether the given group has sub groups.\n   *\n   * @param {Configurator.Group} group - Given group\n   * @return {boolean} Sub groups available?\n   */\n  hasSubGroups(group: Configurator.Group): boolean {\n    return this.configuratorUtilsService.hasSubGroups(group);\n  }\n\n  /**\n   * Retrieves a group ID of the neighboring group.\n   *\n   * @param {CommonConfigurator.Owner} owner - Configuration owner\n   * @param {number} neighboringIndex - Index of neighboring group\n   * @return {Observable<string>} group ID of the neighboring group\n   */\n  protected getNeighboringGroupId(\n    owner: CommonConfigurator.Owner,\n    neighboringIndex: number\n  ): Observable<string | undefined> {\n    return this.getCurrentGroupId(owner).pipe(\n      switchMap((currentGroupId) => {\n        return this.configuratorCommonsService.getConfiguration(owner).pipe(\n          map((configuration) => {\n            let nextGroup;\n            configuration?.flatGroups.forEach((group, index) => {\n              if (\n                group.id === currentGroupId &&\n                configuration?.flatGroups &&\n                configuration?.flatGroups[index + neighboringIndex] //Check if neighboring group exists\n              ) {\n                nextGroup =\n                  configuration?.flatGroups[index + neighboringIndex].id;\n              }\n            });\n            return nextGroup;\n          }),\n          take(1)\n        );\n      })\n    );\n  }\n\n  /**\n   * Verifies whether the current group is conflict one.\n   *\n   * @param {Configurator.GroupType} groupType - Group type\n   * @return {boolean} - 'True' if the current group is conflict one, otherwise 'false'.\n   */\n  isConflictGroupType(groupType: Configurator.GroupType): boolean {\n    return (\n      groupType === Configurator.GroupType.CONFLICT_HEADER_GROUP ||\n      groupType === Configurator.GroupType.CONFLICT_GROUP\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, isDevMode } from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { WindowRef } from '@spartacus/core';\nimport { CommonConfigurator } from '@spartacus/product-configurator/common';\nimport { KeyboardFocusService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { ConfiguratorGroupsService } from '../../core/facade/configurator-groups.service';\nimport { Configurator } from '../../core/model/configurator.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfiguratorStorefrontUtilsService {\n  constructor(\n    protected configuratorGroupsService: ConfiguratorGroupsService,\n    protected windowRef: WindowRef,\n    protected keyboardFocusService: KeyboardFocusService\n  ) {}\n\n  /**\n   * Does the configuration belong to a cart entry, or has the group been visited already?\n   * In both cases we need to render indications for mandatory attributes.\n   * This method emits only once and then stops further emissions.\n   *\n   * @param {CommonConfigurator.Owner} owner -\n   * @param {string} groupId - Group ID\n   * @return {Observable<boolean>} - Returns 'Observable<true>' if the cart entry or group are visited, otherwise 'Observable<false>'\n   */\n  isCartEntryOrGroupVisited(\n    owner: CommonConfigurator.Owner,\n    groupId: string\n  ): Observable<boolean> {\n    return this.configuratorGroupsService.isGroupVisited(owner, groupId).pipe(\n      take(1),\n      map((result) =>\n        result ? true : owner.type === CommonConfigurator.OwnerType.CART_ENTRY\n      )\n    );\n  }\n\n  /**\n   * Assemble an attribute value with the currently selected values from a checkbox list.\n   *\n   * @param {FormControl[]} controlArray - Control array\n   * @param {Configurator.Attribute} attribute -  Configuration attribute\n   * @return {Configurator.Value[]} - list of configurator values\n   */\n  assembleValuesForMultiSelectAttributes(\n    controlArray: UntypedFormControl[],\n    attribute: Configurator.Attribute\n  ): Configurator.Value[] {\n    const localAssembledValues: Configurator.Value[] = [];\n\n    for (let i = 0; i < controlArray.length; i++) {\n      const value = attribute.values ? attribute.values[i] : undefined;\n      if (value) {\n        const localAttributeValue: Configurator.Value = {\n          valueCode: value.valueCode,\n        };\n        localAttributeValue.name = value.name;\n        localAttributeValue.quantity = value.quantity;\n        localAttributeValue.selected = controlArray[i].value;\n\n        localAssembledValues.push(localAttributeValue);\n      } else {\n        if (isDevMode()) {\n          console.warn(\n            'ControlArray does not match values, at least one value could not been found'\n          );\n        }\n      }\n    }\n    return localAssembledValues;\n  }\n\n  /**\n   * Scrolls to the corresponding HTML element.\n   *\n   * @param {Element | HTMLElement} element - HTML element\n   */\n  protected scroll(element: Element | HTMLElement): void {\n    let topOffset = 0;\n    if (element instanceof HTMLElement) {\n      topOffset = element.offsetTop;\n    }\n    this.windowRef.nativeWindow?.scroll(0, topOffset);\n  }\n\n  /**\n   * Scrolls to the corresponding configuration element in the HTML tree.\n   *\n   * @param {string} selector - Selector of the HTML element\n   */\n  scrollToConfigurationElement(selector: string): void {\n    if (this.windowRef.isBrowser()) {\n      // we don't want to run this logic when doing SSR\n      const element = this.getElement(selector);\n      if (element) {\n        this.scroll(element);\n      }\n    }\n  }\n\n  /**\n   * Focus the first attribute in the form.\n   */\n  focusFirstAttribute(): void {\n    if (!this.windowRef.isBrowser()) {\n      return;\n    }\n    const form = this.getElement('cx-configurator-form');\n    if (form) {\n      const focusableElements: HTMLElement[] =\n        this.keyboardFocusService.findFocusable(form);\n      if (focusableElements && focusableElements.length > 0) {\n        focusableElements[0].focus();\n      }\n    }\n  }\n\n  protected getFocusableElementById(\n    focusableElements: HTMLElement[],\n    id?: string\n  ): HTMLElement | undefined {\n    return focusableElements.find((focusableElement) => {\n      if (id) {\n        if (\n          focusableElement.nodeName.toLocaleLowerCase().indexOf(id) !== -1 ||\n          focusableElement.id.indexOf(id) !== -1\n        ) {\n          return focusableElement;\n        }\n      }\n    });\n  }\n\n  protected getFocusableConflictDescription(\n    focusableElements: HTMLElement[]\n  ): HTMLElement | undefined {\n    return this.getFocusableElementById(\n      focusableElements,\n      'cx-configurator-conflict-description'\n    );\n  }\n\n  protected getFocusableElementByValueUiKey(\n    focusableElements: HTMLElement[],\n    valueUiKey?: string\n  ): HTMLElement | undefined {\n    return this.getFocusableElementById(focusableElements, valueUiKey);\n  }\n\n  protected getFocusableElementByAttributeId(\n    focusableElements: HTMLElement[],\n    attributeName: string\n  ): HTMLElement | undefined {\n    return this.getFocusableElementById(focusableElements, attributeName);\n  }\n\n  protected createAttributeValueUiKey(\n    attributeId: string,\n    valueId: string\n  ): string {\n    return attributeId + '--' + valueId;\n  }\n\n  /**\n   * Focus a value in the form.\n   *\n   * @param {Configurator.Attribute} attribute - Attribute\n   */\n  focusValue(attribute: Configurator.Attribute): void {\n    if (!this.windowRef.isBrowser()) {\n      return;\n    }\n    const form = this.getElement('cx-configurator-form');\n    if (form) {\n      const focusableElements: HTMLElement[] =\n        this.keyboardFocusService.findFocusable(form);\n      if (focusableElements.length > 0) {\n        let foundFocusableElement =\n          this.getFocusableConflictDescription(focusableElements);\n        if (!foundFocusableElement) {\n          const selectedValue = attribute.values?.find(\n            (value) => value.selected\n          );\n          if (selectedValue) {\n            const valueUiKey = this.createAttributeValueUiKey(\n              attribute.name,\n              selectedValue.valueCode\n            );\n            foundFocusableElement = this.getFocusableElementByValueUiKey(\n              focusableElements,\n              valueUiKey\n            );\n          }\n          if (!foundFocusableElement) {\n            foundFocusableElement = this.getFocusableElementByAttributeId(\n              focusableElements,\n              attribute.name\n            );\n          }\n        }\n        if (foundFocusableElement) {\n          foundFocusableElement.focus();\n        }\n      }\n    }\n  }\n\n  /**\n   * Generates a group ID.\n   *\n   * @param {string} groupId - group ID\n   * @returns {string | undefined} - generated group ID\n   */\n  createGroupId(groupId?: string): string | undefined {\n    if (groupId) {\n      return groupId + '-group';\n    }\n  }\n\n  /**\n   * Persist the keyboard focus state for the given key.\n   * The focus is stored globally or for the given group.\n   *\n   * @param {string} key - key\n   * @param {string} group? - Group\n   */\n  setFocus(key?: string, group?: string): void {\n    if (key) {\n      this.keyboardFocusService.set(key, group);\n    }\n  }\n\n  /**\n   * Change styling of element\n   *\n   * @param querySelector - querySelector\n   * @param property - CSS property\n   * @param value - CSS value\n   */\n  changeStyling(querySelector: string, property: string, value: string): void {\n    const element = this.getElement(querySelector);\n    if (element) {\n      element.style.setProperty(property, value);\n    }\n  }\n\n  /**\n   * Get HTML element based on querySelector when running in browser\n   *\n   * @param querySelector - querySelector\n   * @returns selected HTML element\n   */\n  getElement(querySelector: string): HTMLElement | undefined {\n    if (this.windowRef.isBrowser()) {\n      return this.windowRef.document.querySelector(\n        querySelector\n      ) as HTMLElement;\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n} from '@spartacus/core';\nimport { Order, OrderHistoryFacade } from '@spartacus/order/root';\nimport {\n  CommonConfigurator,\n  CommonConfiguratorUtilsService,\n  ConfiguratorModelUtils,\n  ConfiguratorRouter,\n  ConfiguratorRouterExtractorService,\n} from '@spartacus/product-configurator/common';\nimport {\n  IntersectionOptions,\n  IntersectionService,\n} from '@spartacus/storefront';\nimport { Observable, of, Subscription } from 'rxjs';\nimport { delay, filter, map, switchMap, take } from 'rxjs/operators';\nimport { ConfiguratorCartService } from '../../core/facade/configurator-cart.service';\nimport { ConfiguratorCommonsService } from '../../core/facade/configurator-commons.service';\nimport { ConfiguratorGroupsService } from '../../core/facade/configurator-groups.service';\nimport { Configurator } from '../../core/model/configurator.model';\nimport { ConfiguratorStorefrontUtilsService } from '../service/configurator-storefront-utils.service';\n\n@Component({\n  selector: 'cx-configurator-add-to-cart-button',\n  templateUrl: './configurator-add-to-cart-button.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorAddToCartButtonComponent implements OnInit, OnDestroy {\n  protected subscription = new Subscription();\n\n  container$: Observable<{\n    routerData: ConfiguratorRouter.Data;\n    configuration: Configurator.Configuration;\n    hasPendingChanges: boolean;\n  }> = this.configRouterExtractorService.extractRouterData().pipe(\n    switchMap((routerData) =>\n      this.configuratorCommonsService\n        .getConfiguration(routerData.owner)\n        .pipe(map((configuration) => ({ routerData, configuration })))\n        .pipe(\n          switchMap((cont) =>\n            this.configuratorCommonsService\n              .hasPendingChanges(cont.configuration.owner)\n              .pipe(\n                map((hasPendingChanges) => ({\n                  routerData: cont.routerData,\n                  configuration: cont.configuration,\n                  hasPendingChanges,\n                }))\n              )\n          )\n        )\n    )\n  );\n\n  constructor(\n    protected routingService: RoutingService,\n    protected configuratorCommonsService: ConfiguratorCommonsService,\n    protected configuratorCartService: ConfiguratorCartService,\n    protected configuratorGroupsService: ConfiguratorGroupsService,\n    protected configRouterExtractorService: ConfiguratorRouterExtractorService,\n    protected globalMessageService: GlobalMessageService,\n    protected orderHistoryFacade: OrderHistoryFacade,\n    protected commonConfiguratorUtilsService: CommonConfiguratorUtilsService,\n    protected configUtils: ConfiguratorStorefrontUtilsService,\n    protected intersectionService: IntersectionService\n  ) {}\n  ngOnInit(): void {\n    this.makeAddToCartButtonSticky();\n  }\n\n  protected navigateToCart(): void {\n    this.routingService.go('cart');\n  }\n\n  protected navigateToOverview(\n    configuratorType: string,\n    owner: CommonConfigurator.Owner\n  ): void {\n    this.routingService.go({\n      cxRoute: 'configureOverview' + configuratorType,\n      params: { ownerType: 'cartEntry', entityKey: owner.id },\n    });\n  }\n\n  protected displayConfirmationMessage(key: string): void {\n    this.globalMessageService.add(\n      { key: key },\n      GlobalMessageType.MSG_TYPE_CONFIRMATION\n    );\n  }\n\n  /**\n   * Performs the navigation to the corresponding location (cart or overview pages).\n   *\n   * @param {string} configuratorType - Configurator type\n   * @param {CommonConfigurator.Owner} owner - Owner\n   * @param {boolean} isAdd - Is add to cart\n   * @param {boolean} isOverview - Is overview page\n   * @param {boolean} showMessage - Show message\n   */\n  performNavigation(\n    configuratorType: string,\n    owner: CommonConfigurator.Owner,\n    isAdd: boolean,\n    isOverview: boolean,\n    showMessage: boolean\n  ): void {\n    const messageKey = isAdd\n      ? 'configurator.addToCart.confirmation'\n      : 'configurator.addToCart.confirmationUpdate';\n    if (isOverview) {\n      this.navigateToCart();\n    } else {\n      this.navigateToOverview(configuratorType, owner);\n    }\n    if (showMessage) {\n      this.displayConfirmationMessage(messageKey);\n    }\n  }\n\n  /**\n   * Decides on the resource key for the button. Depending on the business process (owner of the configuration) and the\n   * need for a cart update, the text will differ\n   * @param {ConfiguratorRouter.Data} routerData - Reflects the current router state\n   * @param {Configurator.Configuration} configuration - Configuration\n   * @returns {string} The resource key that controls the button description\n   */\n  getButtonResourceKey(\n    routerData: ConfiguratorRouter.Data,\n    configuration: Configurator.Configuration\n  ): string {\n    if (\n      routerData.isOwnerCartEntry &&\n      configuration.isCartEntryUpdateRequired\n    ) {\n      return 'configurator.addToCart.buttonUpdateCart';\n    } else if (\n      routerData.isOwnerCartEntry &&\n      !configuration.isCartEntryUpdateRequired\n    ) {\n      return 'configurator.addToCart.buttonAfterAddToCart';\n    } else {\n      return 'configurator.addToCart.button';\n    }\n  }\n\n  /**\n   * Triggers action and navigation, both depending on the context. Might result in an addToCart, updateCartEntry,\n   * just a cart navigation or a browser back navigation\n   * @param {Configurator.Configuration} configuration - Configuration\n   * @param {ConfiguratorRouter.Data} routerData - Reflects the current router state\n   */\n  onAddToCart(\n    configuration: Configurator.Configuration,\n    routerData: ConfiguratorRouter.Data\n  ): void {\n    const pageType = routerData.pageType;\n    const configuratorType = configuration.owner.configuratorType;\n    const isOverview = pageType === ConfiguratorRouter.PageType.OVERVIEW;\n    const isOwnerCartEntry =\n      routerData.owner.type === CommonConfigurator.OwnerType.CART_ENTRY;\n    const owner = configuration.owner;\n\n    const currentGroup = configuration.interactionState.currentGroup;\n    if (currentGroup) {\n      this.configuratorGroupsService.setGroupStatusVisited(\n        configuration.owner,\n        currentGroup\n      );\n    }\n    this.container$\n      .pipe(\n        filter((cont) => !cont.hasPendingChanges),\n        take(1)\n      )\n      .subscribe(() => {\n        if (isOwnerCartEntry) {\n          if (configuration.isCartEntryUpdateRequired) {\n            this.configuratorCartService.updateCartEntry(configuration);\n          }\n\n          this.performNavigation(\n            configuratorType,\n            owner,\n            false,\n            isOverview,\n            configuration.isCartEntryUpdateRequired ?? false\n          );\n          //Only remove if we are on configuration page, because on final cart navigation,\n          //the configuration will anyhow be removed\n          if (configuration.isCartEntryUpdateRequired && !isOverview) {\n            this.configuratorCommonsService.removeConfiguration(owner);\n          }\n        } else {\n          this.configuratorCartService.addToCart(\n            owner.id,\n            configuration.configId,\n            owner\n          );\n\n          this.configuratorCommonsService\n            .getConfiguration(owner)\n            .pipe(\n              filter(\n                (configWithNextOwner) =>\n                  configWithNextOwner.nextOwner !== undefined\n              ),\n              take(1)\n            )\n            .subscribe((configWithNextOwner) => {\n              //See preceeding filter operator: configWithNextOwner.nextOwner is always defined here\n              const nextOwner =\n                configWithNextOwner.nextOwner ??\n                ConfiguratorModelUtils.createInitialOwner();\n\n              this.performNavigation(\n                configuratorType,\n                nextOwner,\n                true,\n                isOverview,\n                true\n              );\n\n              // we clean up the cart entry related configuration, as we might have a\n              // configuration for the same cart entry number stored already.\n              // (Cart entries might have been deleted)\n\n              // Needs to happen only if we are on configuration page, navigation to\n              // cart will anyhow delete\n\n              // we do not clean up the product bound configuration yet, as existing\n              // observables would instantly trigger a re-create.\n              // Cleaning up this obsolete product bound configuration will only happen\n              // when a new config form requests a new observable for a product bound\n              // configuration\n              if (!isOverview) {\n                this.configuratorCommonsService.removeConfiguration(nextOwner);\n              }\n            });\n        }\n      });\n  }\n  leaveConfigurationOverview(): void {\n    this.container$.pipe(take(1)).subscribe((container) => {\n      if (\n        container.routerData.owner.type ===\n        CommonConfigurator.OwnerType.ORDER_ENTRY\n      ) {\n        this.goToOrderDetails(container.routerData.owner);\n      } else {\n        this.routingService.go({ cxRoute: 'checkoutReviewOrder' });\n      }\n    });\n  }\n\n  protected goToOrderDetails(owner: CommonConfigurator.Owner): void {\n    this.orderHistoryFacade.loadOrderDetails(\n      this.commonConfiguratorUtilsService.decomposeOwnerId(owner.id).documentId\n    );\n    this.orderHistoryFacade\n      .getOrderDetails()\n      .pipe(\n        filter((order: Order) => order !== undefined),\n        take(1)\n      )\n      .subscribe((order: Order) =>\n        this.routingService.go({ cxRoute: 'orderDetails', params: order })\n      );\n  }\n\n  extractConfigPrices(configuration: Configurator.Configuration) {\n    let priceSummary = configuration.priceSummary;\n    let basePrice = priceSummary?.basePrice?.formattedValue;\n    let selectedOptions = priceSummary?.selectedOptions?.formattedValue;\n    let totalPrice = priceSummary?.currentTotal?.formattedValue;\n    let prices = {\n      basePrice: basePrice,\n      selectedOptions: selectedOptions,\n      totalPrice: totalPrice,\n    };\n    if (!basePrice || basePrice === '-') {\n      prices.basePrice = '0';\n    }\n    if (!selectedOptions || selectedOptions === '-') {\n      prices.selectedOptions = '0';\n    }\n    if (!totalPrice || totalPrice === '-') {\n      prices.totalPrice = '0';\n    }\n    return prices;\n  }\n\n  protected makeAddToCartButtonSticky(): void {\n    const options: IntersectionOptions = { rootMargin: '0px 0px -100px 0px' };\n\n    this.subscription.add(\n      this.container$\n        .pipe(\n          take(1),\n          delay(0),\n          map(() => this.configUtils.getElement('.cx-price-summary-container')),\n          switchMap((priceSummary) =>\n            priceSummary\n              ? this.intersectionService.isIntersecting(priceSummary, options)\n              : of(undefined)\n          ),\n          filter((isIntersecting) => isIntersecting !== undefined)\n        )\n        .subscribe((isIntersecting) => {\n          if (isIntersecting) {\n            this.configUtils.changeStyling(\n              'cx-configurator-add-to-cart-button',\n              'position',\n              'sticky'\n            );\n          } else {\n            this.configUtils.changeStyling(\n              'cx-configurator-add-to-cart-button',\n              'position',\n              'fixed'\n            );\n          }\n        })\n    );\n  }\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","<ng-container *ngIf=\"container$ | async as container\">\n  <ng-container *ngIf=\"!container.routerData.displayOnly; else displayOnly\">\n    <div class=\"cx-add-to-cart-btn-container\">\n      <button\n        class=\"cx-btn btn btn-block btn-primary cx-add-to-cart-btn\"\n        (click)=\"onAddToCart(container.configuration, container.routerData)\"\n        [attr.aria-label]=\"\n          (getButtonResourceKey(container.routerData, container.configuration)\n            | cxTranslate) +\n          ' ' +\n          ('configurator.a11y.addToCartPrices'\n            | cxTranslate: extractConfigPrices(container.configuration))\n        \"\n      >\n        {{\n          getButtonResourceKey(container.routerData, container.configuration)\n            | cxTranslate\n        }}\n      </button>\n    </div>\n  </ng-container>\n  <ng-template #displayOnly>\n    <div class=\"cx-display-only-btn-container\">\n      <button\n        class=\"cx-btn btn btn-block btn-primary cx-display-only-btn\"\n        (click)=\"leaveConfigurationOverview()\"\n      >\n        {{ 'configurator.addToCart.buttonDisplayOnly' | cxTranslate }}\n      </button>\n    </div>\n  </ng-template>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { ConfiguratorAddToCartButtonComponent } from './configurator-add-to-cart-button.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ConfiguratorAddToCartButton: {\n          component: ConfiguratorAddToCartButtonComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ConfiguratorAddToCartButtonComponent],\n  exports: [ConfiguratorAddToCartButtonComponent],\n})\nexport class ConfiguratorAddToCartButtonModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-add-to-cart-button.component';\nexport * from './configurator-add-to-cart-button.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Configurator } from '../../../../core/model/configurator.model';\n\n/**\n * Service to provide unique keys for elements on the UI and for sending to configurator\n */\n\nexport class ConfiguratorAttributeBaseComponent {\n  private static SEPERATOR = '--';\n  private static PREFIX = 'cx-configurator';\n  private static PREFIX_LABEL = 'label';\n  private static PREFIX_OPTION_PRICE_VALUE = 'price--optionsPriceValue';\n  private static PREFIX_DDLB_OPTION_PRICE_VALUE = 'option--price';\n\n  /**\n   * Creates unique key for config value on the UI\n   * @param prefix for key depending on usage (e.g. uiType, label)\n   * @param attributeId\n   * @param valueId\n   */\n  createValueUiKey(\n    prefix: string,\n    attributeId: string,\n    valueId: string\n  ): string {\n    return (\n      this.createAttributeUiKey(prefix, attributeId) +\n      ConfiguratorAttributeBaseComponent.SEPERATOR +\n      valueId\n    );\n  }\n\n  /**\n   * Creates unique key for config value to be sent to configurator\n   * @param currentAttribute\n   * @param value\n   */\n  createAttributeValueIdForConfigurator(\n    currentAttribute: Configurator.Attribute,\n    value: string\n  ): string {\n    return this.createValueUiKey(\n      this.getUiType(currentAttribute),\n      currentAttribute.name,\n      value\n    );\n  }\n\n  protected getUiType(attribute: Configurator.Attribute): string {\n    return attribute.uiType\n      ? attribute.uiType\n      : Configurator.UiType.NOT_IMPLEMENTED;\n  }\n\n  /**\n   * Creates unique key for config attribute on the UI\n   * @param prefix for key depending on usage (e.g. uiType, label)\n   * @param attributeId\n   */\n  createAttributeUiKey(prefix: string, attributeId: string): string {\n    return (\n      ConfiguratorAttributeBaseComponent.PREFIX +\n      ConfiguratorAttributeBaseComponent.SEPERATOR +\n      prefix +\n      ConfiguratorAttributeBaseComponent.SEPERATOR +\n      attributeId\n    );\n  }\n\n  /**\n   * Creates unique key for config attribute to be sent to configurator\n   * @param currentAttribute\n   */\n  createAttributeIdForConfigurator(\n    currentAttribute: Configurator.Attribute\n  ): string {\n    return this.createAttributeUiKey(\n      this.getUiType(currentAttribute),\n      currentAttribute.name\n    );\n  }\n\n  /**\n   * Creates unique key for attribute 'aria-labelledby'\n   * @param prefix\n   * @param attributeId\n   * @param valueId\n   * @param hasQuantity\n   */\n  createAriaLabelledBy(\n    prefix: string,\n    attributeId: string,\n    valueId?: string,\n    hasQuantity?: boolean\n  ): string {\n    let attributeUiKey = this.createAttributeUiKey(\n      ConfiguratorAttributeBaseComponent.PREFIX_LABEL,\n      attributeId\n    );\n    if (valueId) {\n      attributeUiKey +=\n        ' ' +\n        this.createAttributeUiKey(prefix, attributeId) +\n        ConfiguratorAttributeBaseComponent.SEPERATOR +\n        valueId +\n        ' ';\n      if (typeof hasQuantity === 'boolean' && !hasQuantity) {\n        attributeUiKey +=\n          this.createAttributeUiKey(\n            ConfiguratorAttributeBaseComponent.PREFIX_DDLB_OPTION_PRICE_VALUE,\n            attributeId\n          ) +\n          ConfiguratorAttributeBaseComponent.SEPERATOR +\n          valueId;\n      } else {\n        attributeUiKey +=\n          this.createAttributeUiKey(\n            ConfiguratorAttributeBaseComponent.PREFIX_OPTION_PRICE_VALUE,\n            attributeId\n          ) +\n          ConfiguratorAttributeBaseComponent.SEPERATOR +\n          valueId;\n      }\n    }\n    return attributeUiKey;\n  }\n\n  /**\n   * Creates a unique key for focus handling for the given attribute and value\n   * @param attributeId\n   * @param valueCode\n   * @returns focus key\n   */\n  createFocusId(attributeId: string, valueCode: string): string {\n    return `${attributeId}--${valueCode}--focus`;\n  }\n\n  /**\n   * Get code from attribute.\n   * The code is not a mandatory attribute (since not available for VC flavour),\n   * still it is mandatory in the context of CPQ. Calling this method therefore only\n   * makes sense when CPQ is active. In case the method is called in the wrong context, an exception will\n   * be thrown\n   *\n   * @param {Configurator.Attribute} Attribute\n   * @returns {number} Attribute code\n   */\n  protected getAttributeCode(attribute: Configurator.Attribute): number {\n    const code = attribute.attrCode;\n    if (code) {\n      return code;\n    } else {\n      throw new Error('No attribute code for: ' + attribute.name);\n    }\n  }\n  /**\n   * Checks if attribute type allows additional values\n   * @param attribute Attribute\n   * @returns true if attribute type allows to enter additional values\n   */\n  protected isWithAdditionalValues(attribute: Configurator.Attribute): boolean {\n    const uiType = attribute.uiType;\n    return (\n      uiType === Configurator.UiType.RADIOBUTTON_ADDITIONAL_INPUT ||\n      uiType === Configurator.UiType.DROPDOWN_ADDITIONAL_INPUT\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { CommonConfigurator } from '@spartacus/product-configurator/common';\nimport { ICON_TYPE } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Configurator } from '../../../core/model/configurator.model';\nimport { ConfiguratorStorefrontUtilsService } from '../../service/configurator-storefront-utils.service';\nimport { ConfiguratorAttributeBaseComponent } from '../types/base/configurator-attribute-base.component';\n\n@Component({\n  selector: 'cx-configurator-attribute-footer',\n  templateUrl: './configurator-attribute-footer.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorAttributeFooterComponent\n  extends ConfiguratorAttributeBaseComponent\n  implements OnInit\n{\n  @Input() attribute: Configurator.Attribute;\n  @Input() owner: CommonConfigurator.Owner;\n  @Input() groupId: string;\n\n  constructor(protected configUtils: ConfiguratorStorefrontUtilsService) {\n    super();\n  }\n\n  iconType = ICON_TYPE;\n  showRequiredMessageForUserInput$: Observable<boolean>;\n\n  ngOnInit(): void {\n    /**\n     * Show message that indicates that attribute is required in case attribute is a\n     * free input field\n     */\n    this.showRequiredMessageForUserInput$ = this.configUtils\n      .isCartEntryOrGroupVisited(this.owner, this.groupId)\n      .pipe(map((result) => (result ? this.needsUserInputMessage() : false)));\n  }\n\n  /**\n   * Checks if attribute is a user input typed attribute with empty value.\n   * Method will return false for domain based attributes\n   * @param {string} input - user input\n   */\n  isUserInputEmpty(input?: string): boolean {\n    return input !== undefined && (!input.trim() || 0 === input.length);\n  }\n\n  protected needsUserInputMessage(): boolean {\n    const uiType = this.attribute.uiType;\n    const needsMessage =\n      this.attribute.required &&\n      this.attribute.incomplete &&\n      (uiType === Configurator.UiType.STRING ||\n        uiType === Configurator.UiType.NUMERIC) &&\n      this.isUserInputEmpty(this.attribute.userInput);\n    return needsMessage ?? false;\n  }\n}\n","<div\n  *ngIf=\"showRequiredMessageForUserInput$ | async\"\n  class=\"cx-required-error-msg\"\n  id=\"{{ createAttributeUiKey('attribute-msg', attribute.name) }}\"\n  [attr.aria-label]=\"\n    'configurator.attribute.defaultRequiredMessage' | cxTranslate\n  \"\n  aria-live=\"assertive\"\n  aria-atomic=\"true\"\n  role=\"alert\"\n>\n  <cx-icon [type]=\"iconType.ERROR\"></cx-icon>\n  {{ 'configurator.attribute.defaultRequiredMessage' | cxTranslate }}\n</div>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '@spartacus/storefront';\nimport { ConfiguratorAttributeFooterComponent } from './configurator-attribute-footer.component';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    I18nModule,\n    IconModule,\n  ],\n  declarations: [ConfiguratorAttributeFooterComponent],\n  exports: [ConfiguratorAttributeFooterComponent],\n})\nexport class ConfiguratorAttributeFooterModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-attribute-footer.component';\nexport * from './configurator-attribute-footer.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CartModification } from '@spartacus/cart/base/root';\nimport { CommonConfigurator } from '@spartacus/product-configurator/common';\nimport { Observable } from 'rxjs';\nimport { Configurator } from '../model/configurator.model';\n\nexport abstract class RulebasedConfiguratorAdapter {\n  /**\n   * Abstract method used to create a configuration\n   *\n   * @param productCode Root product code\n   */\n  abstract createConfiguration(\n    owner: CommonConfigurator.Owner\n  ): Observable<Configurator.Configuration>;\n\n  /**\n   * Abstract method to read a configuration.\n   * If groupId is filled only the attributes of the requested group are returned.\n   * For other groups the attributes list will be empty.\n   *\n   * @param configId configuration id\n   * @param groupId group id\n   */\n  abstract readConfiguration(\n    configId: string,\n    groupId: string,\n    configurationOwner: CommonConfigurator.Owner\n  ): Observable<Configurator.Configuration>;\n\n  /**\n   * Abstract method to update a configuration\n   *\n   * @param configuration updated configuration object\n   */\n  abstract updateConfiguration(\n    configuration: Configurator.Configuration\n  ): Observable<Configurator.Configuration>;\n\n  /**\n   * Abstract method to add a configuration to cart.\n   *\n   * @param parameters add to cart parameters object\n   */\n  abstract addToCart(\n    parameters: Configurator.AddToCartParameters\n  ): Observable<CartModification>;\n\n  /**\n   * Abstract method to read a configuration for a cart entry\n   *\n   * @param parameters read from cart entry parameters object\n   */\n  abstract readConfigurationForCartEntry(\n    parameters: CommonConfigurator.ReadConfigurationFromCartEntryParameters\n  ): Observable<Configurator.Configuration>;\n\n  /**\n   * Abstract method to update a configuration attached to a cart entry\n   *\n   * @param parameters update cart entry configuration parameters object\n   */\n  abstract updateConfigurationForCartEntry(\n    parameters: Configurator.UpdateConfigurationForCartEntryParameters\n  ): Observable<CartModification>;\n\n  /**\n   * Abstract method to read a configuration for an order entry\n   *\n   * @param parameters Contains attributes that we need to read a configuration attached to an order entry\n   * @returns  {Observable<Configurator.Configuration>} Configuration with only the overview aspect provided\n   */\n  abstract readConfigurationForOrderEntry(\n    parameters: CommonConfigurator.ReadConfigurationFromOrderEntryParameters\n  ): Observable<Configurator.Configuration>;\n\n  /**\n   * Abstract method to read a configuration price\n   *\n   * @param configId configuration id\n   */\n  abstract readPriceSummary(\n    configuration: Configurator.Configuration\n  ): Observable<Configurator.Configuration>;\n\n  /**\n   * Abstract method to get configuration overview\n   *\n   * @param configId configuration id\n   * @param owner configuration owner\n   */\n  abstract getConfigurationOverview(\n    configId: string\n  ): Observable<Configurator.Overview>;\n\n  /**\n   * Abstract method to get configuration overview\n   *\n   * @param configId configuration id\n   * @param owner configuration owner\n   */\n  abstract getConfiguratorType(): string;\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { CartModification } from '@spartacus/cart/base/root';\nimport {\n  CommonConfigurator,\n  CommonConfiguratorUtilsService,\n} from '@spartacus/product-configurator/common';\nimport { Observable } from 'rxjs';\nimport { Configurator } from '../model/configurator.model';\nimport { RulebasedConfiguratorAdapter } from './rulebased-configurator.adapter';\n\n//Not provided in root, as this would break lazy loading\n@Injectable()\nexport class RulebasedConfiguratorConnector {\n  static CONFIGURATOR_ADAPTER_LIST = new InjectionToken<\n    RulebasedConfiguratorAdapter[]\n  >('ConfiguratorAdapterList');\n\n  constructor(\n    @Inject(RulebasedConfiguratorConnector.CONFIGURATOR_ADAPTER_LIST)\n    protected adapters: RulebasedConfiguratorAdapter[],\n    protected configUtilsService: CommonConfiguratorUtilsService\n  ) {}\n\n  createConfiguration(\n    owner: CommonConfigurator.Owner\n  ): Observable<Configurator.Configuration> {\n    return this.getAdapter(owner.configuratorType).createConfiguration(owner);\n  }\n\n  readConfiguration(\n    configId: string,\n    groupId: string,\n    configurationOwner: CommonConfigurator.Owner\n  ): Observable<Configurator.Configuration> {\n    return this.getAdapter(\n      configurationOwner.configuratorType\n    ).readConfiguration(configId, groupId, configurationOwner);\n  }\n\n  updateConfiguration(\n    configuration: Configurator.Configuration\n  ): Observable<Configurator.Configuration> {\n    return this.getAdapter(\n      configuration.owner.configuratorType\n    ).updateConfiguration(configuration);\n  }\n\n  addToCart(\n    parameters: Configurator.AddToCartParameters\n  ): Observable<CartModification> {\n    return this.getAdapter(parameters.owner.configuratorType).addToCart(\n      parameters\n    );\n  }\n\n  readConfigurationForCartEntry(\n    parameters: CommonConfigurator.ReadConfigurationFromCartEntryParameters\n  ): Observable<Configurator.Configuration> {\n    return this.getAdapter(\n      parameters.owner.configuratorType\n    ).readConfigurationForCartEntry(parameters);\n  }\n\n  updateConfigurationForCartEntry(\n    parameters: Configurator.UpdateConfigurationForCartEntryParameters\n  ): Observable<CartModification> {\n    return this.getAdapter(\n      parameters.configuration.owner.configuratorType\n    ).updateConfigurationForCartEntry(parameters);\n  }\n\n  readConfigurationForOrderEntry(\n    parameters: CommonConfigurator.ReadConfigurationFromOrderEntryParameters\n  ): Observable<Configurator.Configuration> {\n    return this.getAdapter(\n      parameters.owner.configuratorType\n    ).readConfigurationForOrderEntry(parameters);\n  }\n\n  readPriceSummary(\n    configuration: Configurator.Configuration\n  ): Observable<Configurator.Configuration> {\n    return this.getAdapter(\n      configuration.owner.configuratorType\n    ).readPriceSummary(configuration);\n  }\n\n  getConfigurationOverview(\n    configuration: Configurator.Configuration\n  ): Observable<Configurator.Overview> {\n    return this.getAdapter(\n      configuration.owner.configuratorType\n    ).getConfigurationOverview(configuration.configId);\n  }\n\n  protected getAdapter(configuratorType: string): RulebasedConfiguratorAdapter {\n    const adapterResult = this.adapters.find(\n      (adapter) => adapter.getConfiguratorType() === configuratorType\n    );\n    if (adapterResult) {\n      return adapterResult;\n    } else {\n      throw new Error(\n        'No adapter found for configurator type: ' + configuratorType\n      );\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './rulebased-configurator.adapter';\nexport * from './rulebased-configurator.connector';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { ConfiguratorCartService } from '../configurator-cart.service';\n\n@Injectable({ providedIn: 'root' })\nexport class ConfiguratorRouterListener implements OnDestroy {\n  protected subscription = new Subscription();\n  constructor(\n    protected configuratorCartService: ConfiguratorCartService,\n    protected routingService: RoutingService\n  ) {\n    this.observeRouterChanges();\n  }\n\n  protected observeRouterChanges(): void {\n    this.subscription.add(\n      this.routingService.getRouterState().subscribe((routerState) => {\n        if (!this.isConfiguratorRelatedRoute(routerState.state.semanticRoute)) {\n          this.configuratorCartService.removeCartBoundConfigurations();\n        }\n      })\n    );\n  }\n\n  protected isConfiguratorRelatedRoute(semanticRoute?: string): boolean {\n    return semanticRoute ? semanticRoute.includes('configure') : false;\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { ConfiguratorRouterListener } from './configurator-router.listener';\n\n@NgModule({})\nexport class ConfiguratorRouterModule {\n  constructor(_configuratorRouterListener: ConfiguratorRouterListener) {\n    // Intentional empty constructor\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-router.listener';\nexport * from './configurator-router.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-utils.service';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-cart.service';\nexport * from './configurator-commons.service';\nexport * from './configurator-group-status.service';\nexport * from './configurator-groups.service';\nexport * from './routing/index';\nexport * from './utils/index';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Configurator } from '../../model/configurator.model';\n\n/**\n * Service that provides helper methods for the basic configurator effects,\n * in order to enhance them without the need to introduce new effects\n */\n@Injectable({ providedIn: 'root' })\nexport class ConfiguratorBasicEffectService {\n  /**\n   * Finds first group with attributes for a configuration. Throws error if such a group does not exist,\n   * as this is an illegal state\n   * @param configuration\n   * @returns Group id\n   */\n  getFirstGroupWithAttributes(\n    configuration: Configurator.Configuration\n  ): string {\n    const id = this.getFirstGroupWithAttributesForList(configuration.groups);\n    if (id) {\n      return id;\n    } else {\n      throw new Error('Configuration does not have any attributes');\n    }\n  }\n  /**\n   * Finds first group with attributes in a list of groups\n   * @param groups\n   * @returns Group or undefined if such a group does not exist\n   */\n  protected getFirstGroupWithAttributesForList(\n    groups: Configurator.Group[]\n  ): string | undefined {\n    const groupWithAttributes: Configurator.Group | undefined = groups\n      .filter(\n        (currentGroup) =>\n          currentGroup.attributes && currentGroup.attributes.length > 0\n      )\n      .pop();\n    let id: string | undefined;\n    if (groupWithAttributes) {\n      id = groupWithAttributes.id;\n    } else {\n      id = groups\n        .filter(\n          (currentGroup) =>\n            currentGroup.subGroups && currentGroup.subGroups.length > 0\n        )\n        .flatMap((currentGroup) =>\n          this.getFirstGroupWithAttributesForList(currentGroup.subGroups)\n        )\n        .filter((groupId) => groupId) //Filter undefined strings\n        .pop();\n    }\n    return id;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { normalizeHttpError } from '@spartacus/core';\nimport { CommonConfiguratorUtilsService } from '@spartacus/product-configurator/common';\nimport { Observable } from 'rxjs';\nimport {\n  catchError,\n  filter,\n  map,\n  mergeMap,\n  switchMap,\n  switchMapTo,\n  take,\n} from 'rxjs/operators';\nimport { RulebasedConfiguratorConnector } from '../../connectors/rulebased-configurator.connector';\nimport { ConfiguratorGroupStatusService } from '../../facade/configurator-group-status.service';\nimport { ConfiguratorUtilsService } from '../../facade/utils/configurator-utils.service';\nimport { Configurator } from '../../model/configurator.model';\nimport { ConfiguratorActions } from '../actions/index';\nimport { StateWithConfigurator } from '../configurator-state';\nimport { ConfiguratorSelectors } from '../selectors/index';\nimport { ConfiguratorBasicEffectService } from './configurator-basic-effect.service';\n\n@Injectable()\n/**\n * Common configurator effects, used for complex configurators like variant configurator\n * and CPQ\n */\nexport class ConfiguratorBasicEffects {\n  createConfiguration$: Observable<\n    | ConfiguratorActions.CreateConfigurationSuccess\n    | ConfiguratorActions.CreateConfigurationFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfiguratorActions.CREATE_CONFIGURATION),\n      mergeMap((action: ConfiguratorActions.CreateConfiguration) => {\n        return this.configuratorCommonsConnector\n          .createConfiguration(action.payload)\n          .pipe(\n            switchMap((configuration: Configurator.Configuration) => {\n              const currentGroup =\n                this.configuratorBasicEffectService.getFirstGroupWithAttributes(\n                  configuration\n                );\n              this.store.dispatch(\n                new ConfiguratorActions.UpdatePriceSummary({\n                  ...configuration,\n                  interactionState: { currentGroup: currentGroup },\n                })\n              );\n\n              return [\n                new ConfiguratorActions.CreateConfigurationSuccess(\n                  configuration\n                ),\n              ];\n            }),\n            catchError((error) => [\n              new ConfiguratorActions.CreateConfigurationFail({\n                ownerKey: action.payload.key,\n                error: normalizeHttpError(error),\n              }),\n            ])\n          );\n      })\n    )\n  );\n\n  readConfiguration$: Observable<\n    | ConfiguratorActions.ReadConfigurationSuccess\n    | ConfiguratorActions.ReadConfigurationFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfiguratorActions.READ_CONFIGURATION),\n\n      mergeMap((action: ConfiguratorActions.ReadConfiguration) => {\n        return this.configuratorCommonsConnector\n          .readConfiguration(\n            action.payload.configuration.configId,\n            action.payload.groupId,\n            action.payload.configuration.owner\n          )\n          .pipe(\n            switchMap((configuration: Configurator.Configuration) => {\n              return [\n                new ConfiguratorActions.ReadConfigurationSuccess(configuration),\n              ];\n            }),\n            catchError((error) => [\n              new ConfiguratorActions.ReadConfigurationFail({\n                ownerKey: action.payload.configuration.owner.key,\n                error: normalizeHttpError(error),\n              }),\n            ])\n          );\n      })\n    )\n  );\n\n  updateConfiguration$: Observable<\n    | ConfiguratorActions.UpdateConfigurationSuccess\n    | ConfiguratorActions.UpdateConfigurationFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfiguratorActions.UPDATE_CONFIGURATION),\n      map((action: ConfiguratorActions.UpdateConfiguration) => action.payload),\n      //mergeMap here as we need to process each update\n      //(which only sends one changed attribute at a time),\n      //so we must not cancel inner emissions\n      mergeMap((payload: Configurator.Configuration) => {\n        return this.configuratorCommonsConnector\n          .updateConfiguration(payload)\n          .pipe(\n            map((configuration: Configurator.Configuration) => {\n              return new ConfiguratorActions.UpdateConfigurationSuccess(\n                configuration\n              );\n            }),\n            catchError((error) => {\n              const errorPayload = normalizeHttpError(error);\n              return [\n                new ConfiguratorActions.UpdateConfigurationFail({\n                  configuration: payload,\n                  error: errorPayload,\n                }),\n              ];\n            })\n          );\n      })\n    )\n  );\n\n  updatePriceSummary$: Observable<\n    | ConfiguratorActions.UpdatePriceSummarySuccess\n    | ConfiguratorActions.UpdatePriceSummaryFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfiguratorActions.UPDATE_PRICE_SUMMARY),\n      map(\n        (action: { type: string; payload: Configurator.Configuration }) =>\n          action.payload\n      ),\n      mergeMap((payload) => {\n        return this.configuratorCommonsConnector.readPriceSummary(payload).pipe(\n          map((configuration: Configurator.Configuration) => {\n            return new ConfiguratorActions.UpdatePriceSummarySuccess(\n              configuration\n            );\n          }),\n          catchError((error) => {\n            const errorPayload = normalizeHttpError(error);\n            return [\n              new ConfiguratorActions.UpdatePriceSummaryFail({\n                ownerKey: payload.owner.key,\n                error: errorPayload,\n              }),\n            ];\n          })\n        );\n      })\n    )\n  );\n\n  getOverview$: Observable<\n    | ConfiguratorActions.GetConfigurationOverviewSuccess\n    | ConfiguratorActions.GetConfigurationOverviewFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfiguratorActions.GET_CONFIGURATION_OVERVIEW),\n      map(\n        (action: ConfiguratorActions.GetConfigurationOverview) => action.payload\n      ),\n      mergeMap((payload) => {\n        return this.configuratorCommonsConnector\n          .getConfigurationOverview(payload)\n          .pipe(\n            map((overview: Configurator.Overview) => {\n              return new ConfiguratorActions.GetConfigurationOverviewSuccess({\n                ownerKey: payload.owner.key,\n                overview: overview,\n              });\n            }),\n            catchError((error) => {\n              const errorPayload = normalizeHttpError(error);\n              return [\n                new ConfiguratorActions.GetConfigurationOverviewFail({\n                  ownerKey: payload.owner.key,\n                  error: errorPayload,\n                }),\n              ];\n            })\n          );\n      })\n    )\n  );\n\n  updateConfigurationSuccess$: Observable<\n    | ConfiguratorActions.UpdateConfigurationFinalizeSuccess\n    | ConfiguratorActions.UpdatePriceSummary\n    | ConfiguratorActions.ChangeGroup\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfiguratorActions.UPDATE_CONFIGURATION_SUCCESS),\n      map(\n        (action: ConfiguratorActions.UpdateConfigurationSuccess) =>\n          action.payload\n      ),\n      mergeMap((payload: Configurator.Configuration) => {\n        return this.store.pipe(\n          select(ConfiguratorSelectors.hasPendingChanges(payload.owner.key)),\n          take(1),\n          filter((hasPendingChanges) => hasPendingChanges === false),\n          switchMapTo(\n            this.store.pipe(\n              select(ConfiguratorSelectors.getCurrentGroup(payload.owner.key)),\n              take(1),\n              map((currentGroupId) => {\n                const groupIdFromPayload =\n                  this.configuratorBasicEffectService.getFirstGroupWithAttributes(\n                    payload\n                  );\n                const parentGroupFromPayload =\n                  this.configuratorGroupUtilsService.getParentGroup(\n                    payload.groups,\n                    this.configuratorGroupUtilsService.getGroupById(\n                      payload.groups,\n                      groupIdFromPayload\n                    ),\n                    undefined\n                  );\n                return {\n                  currentGroupId,\n                  groupIdFromPayload,\n                  parentGroupFromPayload,\n                };\n              }),\n              switchMap((container) => {\n                //changeGroup because in cases where a queue of updates exists with a group navigation in between,\n                //we need to ensure that the last update determines the current group.\n                const updateFinalizeSuccessAction =\n                  new ConfiguratorActions.UpdateConfigurationFinalizeSuccess(\n                    payload\n                  );\n                const updatePriceSummaryAction =\n                  new ConfiguratorActions.UpdatePriceSummary({\n                    ...payload,\n                    interactionState: {\n                      currentGroup: container.groupIdFromPayload,\n                    },\n                  });\n                return container.currentGroupId === container.groupIdFromPayload\n                  ? [updateFinalizeSuccessAction, updatePriceSummaryAction]\n                  : [\n                      updateFinalizeSuccessAction,\n                      updatePriceSummaryAction,\n                      new ConfiguratorActions.ChangeGroup({\n                        configuration: payload,\n                        groupId: container.groupIdFromPayload,\n                        parentGroupId: container.parentGroupFromPayload?.id,\n                      }),\n                    ];\n              })\n            )\n          )\n        );\n      })\n    )\n  );\n\n  updateConfigurationFail$: Observable<ConfiguratorActions.UpdateConfigurationFinalizeFail> =\n    createEffect(() =>\n      this.actions$.pipe(\n        ofType(ConfiguratorActions.UPDATE_CONFIGURATION_FAIL),\n        map(\n          (action: ConfiguratorActions.UpdateConfigurationFail) =>\n            action.payload\n        ),\n        mergeMap((payload) => {\n          return this.store.pipe(\n            select(\n              ConfiguratorSelectors.hasPendingChanges(\n                payload.configuration.owner.key\n              )\n            ),\n            take(1),\n            filter((hasPendingChanges) => hasPendingChanges === false),\n            map(\n              () =>\n                new ConfiguratorActions.UpdateConfigurationFinalizeFail(\n                  payload.configuration\n                )\n            )\n          );\n        })\n      )\n    );\n\n  handleErrorOnUpdate$: Observable<ConfiguratorActions.ReadConfiguration> =\n    createEffect(() =>\n      this.actions$.pipe(\n        ofType(ConfiguratorActions.UPDATE_CONFIGURATION_FINALIZE_FAIL),\n        map(\n          (action: ConfiguratorActions.UpdateConfigurationFinalizeFail) =>\n            action.payload\n        ),\n        map(\n          (payload) =>\n            new ConfiguratorActions.ReadConfiguration({\n              configuration: payload,\n              groupId:\n                this.configuratorBasicEffectService.getFirstGroupWithAttributes(\n                  payload\n                ),\n            })\n        )\n      )\n    );\n\n  groupChange$: Observable<\n    | ConfiguratorActions.SetCurrentGroup\n    | ConfiguratorActions.SetMenuParentGroup\n    | ConfiguratorActions.ReadConfigurationFail\n    | ConfiguratorActions.ReadConfigurationSuccess\n    | ConfiguratorActions.UpdatePriceSummary\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfiguratorActions.CHANGE_GROUP),\n      switchMap((action: ConfiguratorActions.ChangeGroup) => {\n        return this.store.pipe(\n          select(\n            ConfiguratorSelectors.hasPendingChanges(\n              action.payload.configuration.owner.key\n            )\n          ),\n          take(1),\n          filter((hasPendingChanges) => hasPendingChanges === false),\n          switchMap(() => {\n            return this.configuratorCommonsConnector\n              .readConfiguration(\n                action.payload.configuration.configId,\n                action.payload.groupId,\n                action.payload.configuration.owner\n              )\n              .pipe(\n                switchMap((configuration: Configurator.Configuration) => {\n                  return [\n                    new ConfiguratorActions.SetCurrentGroup({\n                      entityKey: action.payload.configuration.owner.key,\n                      currentGroup: action.payload.groupId,\n                    }),\n                    new ConfiguratorActions.SetMenuParentGroup({\n                      entityKey: action.payload.configuration.owner.key,\n                      menuParentGroup: action.payload.parentGroupId,\n                    }),\n                    new ConfiguratorActions.ReadConfigurationSuccess(\n                      configuration\n                    ),\n                    new ConfiguratorActions.UpdatePriceSummary({\n                      ...configuration,\n                      interactionState: {\n                        currentGroup: action.payload.groupId,\n                      },\n                    }),\n                  ];\n                }),\n                catchError((error) => [\n                  new ConfiguratorActions.ReadConfigurationFail({\n                    ownerKey: action.payload.configuration.owner.key,\n                    error: normalizeHttpError(error),\n                  }),\n                ])\n              );\n          })\n        );\n      })\n    )\n  );\n\n  constructor(\n    protected actions$: Actions,\n    protected configuratorCommonsConnector: RulebasedConfiguratorConnector,\n    protected commonConfigUtilsService: CommonConfiguratorUtilsService,\n    protected configuratorGroupUtilsService: ConfiguratorUtilsService,\n    protected configuratorGroupStatusService: ConfiguratorGroupStatusService,\n    protected store: Store<StateWithConfigurator>,\n    protected configuratorBasicEffectService: ConfiguratorBasicEffectService\n  ) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { select, Store } from '@ngrx/store';\nimport { CartActions } from '@spartacus/cart/base/core';\nimport { CartModification } from '@spartacus/cart/base/root';\nimport { normalizeHttpError } from '@spartacus/core';\nimport {\n  CommonConfigurator,\n  CommonConfiguratorUtilsService,\n  ConfiguratorModelUtils,\n} from '@spartacus/product-configurator/common';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap, take } from 'rxjs/operators';\nimport { RulebasedConfiguratorConnector } from '../../connectors/rulebased-configurator.connector';\nimport { ConfiguratorUtilsService } from '../../facade/utils/configurator-utils.service';\nimport { Configurator } from '../../model/configurator.model';\nimport { ConfiguratorActions } from '../actions/index';\nimport { StateWithConfigurator } from '../configurator-state';\nimport { ConfiguratorSelectors } from '../selectors/index';\n\nexport const ERROR_MESSAGE_NO_ENTRY_NUMBER_FOUND =\n  'Entry number is required in addToCart response';\n@Injectable()\n/**\n * Common configurator effects related to cart handling\n */\nexport class ConfiguratorCartEffects {\n  addToCart$: Observable<\n    | ConfiguratorActions.AddNextOwner\n    | CartActions.CartAddEntrySuccess\n    | CartActions.CartAddEntryFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfiguratorActions.ADD_TO_CART),\n      map((action: ConfiguratorActions.AddToCart) => action.payload),\n      switchMap((payload: Configurator.AddToCartParameters) => {\n        return this.configuratorCommonsConnector.addToCart(payload).pipe(\n          switchMap((entry: CartModification) => {\n            const entryNumber = entry.entry?.entryNumber;\n            if (entryNumber === undefined) {\n              throw Error(ERROR_MESSAGE_NO_ENTRY_NUMBER_FOUND);\n            } else {\n              return [\n                new ConfiguratorActions.AddNextOwner({\n                  ownerKey: payload.owner.key,\n                  cartEntryNo: entryNumber.toString(),\n                }),\n\n                new CartActions.CartAddEntrySuccess({\n                  ...entry,\n                  userId: payload.userId,\n                  cartId: payload.cartId,\n                  productCode: payload.productCode,\n                  quantity: payload.quantity,\n                  deliveryModeChanged: entry.deliveryModeChanged,\n                  entry: entry.entry,\n                  quantityAdded: entry.quantityAdded,\n                  statusCode: entry.statusCode,\n                  statusMessage: entry.statusMessage,\n                }),\n              ];\n            }\n          }),\n          catchError((error) =>\n            of(\n              new CartActions.CartAddEntryFail({\n                userId: payload.userId,\n                cartId: payload.cartId,\n                productCode: payload.productCode,\n                quantity: payload.quantity,\n                error:\n                  error instanceof HttpErrorResponse\n                    ? normalizeHttpError(error)\n                    : error,\n              })\n            )\n          )\n        );\n      })\n    )\n  );\n\n  updateCartEntry$: Observable<\n    CartActions.CartUpdateEntrySuccess | CartActions.CartUpdateEntryFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfiguratorActions.UPDATE_CART_ENTRY),\n      map((action: ConfiguratorActions.UpdateCartEntry) => action.payload),\n      switchMap(\n        (payload: Configurator.UpdateConfigurationForCartEntryParameters) => {\n          return this.configuratorCommonsConnector\n            .updateConfigurationForCartEntry(payload)\n            .pipe(\n              switchMap((cartModification: CartModification) => {\n                return [\n                  new CartActions.CartUpdateEntrySuccess({\n                    userId: payload.userId,\n                    cartId: payload.cartId,\n                    entryNumber: payload.cartEntryNumber,\n                    quantity: cartModification.quantity,\n                  }),\n                ];\n              }),\n              catchError((error) =>\n                of(\n                  new CartActions.CartUpdateEntryFail({\n                    userId: payload.userId,\n                    cartId: payload.cartId,\n                    entryNumber: payload.cartEntryNumber,\n                    error: normalizeHttpError(error),\n                  })\n                )\n              )\n            );\n        }\n      )\n    )\n  );\n\n  readConfigurationForCartEntry$: Observable<\n    | ConfiguratorActions.ReadCartEntryConfigurationSuccess\n    | ConfiguratorActions.UpdatePriceSummary\n    | ConfiguratorActions.ReadCartEntryConfigurationFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfiguratorActions.READ_CART_ENTRY_CONFIGURATION),\n      switchMap((action: ConfiguratorActions.ReadCartEntryConfiguration) => {\n        const parameters: CommonConfigurator.ReadConfigurationFromCartEntryParameters =\n          action.payload;\n        return this.configuratorCommonsConnector\n          .readConfigurationForCartEntry(parameters)\n          .pipe(\n            switchMap((result: Configurator.Configuration) => [\n              new ConfiguratorActions.ReadCartEntryConfigurationSuccess(result),\n              new ConfiguratorActions.UpdatePriceSummary(result),\n            ]),\n            catchError((error) => [\n              new ConfiguratorActions.ReadCartEntryConfigurationFail({\n                ownerKey: action.payload.owner.key,\n                error: normalizeHttpError(error),\n              }),\n            ])\n          );\n      })\n    )\n  );\n\n  readConfigurationForOrderEntry$: Observable<\n    | ConfiguratorActions.ReadOrderEntryConfigurationSuccess\n    | ConfiguratorActions.ReadOrderEntryConfigurationFail\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfiguratorActions.READ_ORDER_ENTRY_CONFIGURATION),\n      switchMap((action: ConfiguratorActions.ReadOrderEntryConfiguration) => {\n        const parameters: CommonConfigurator.ReadConfigurationFromOrderEntryParameters =\n          action.payload;\n        return this.configuratorCommonsConnector\n          .readConfigurationForOrderEntry(parameters)\n          .pipe(\n            switchMap((result: Configurator.Configuration) => [\n              new ConfiguratorActions.ReadOrderEntryConfigurationSuccess(\n                result\n              ),\n            ]),\n            catchError((error) => [\n              new ConfiguratorActions.ReadOrderEntryConfigurationFail({\n                ownerKey: action.payload.owner.key,\n                error: normalizeHttpError(error),\n              }),\n            ])\n          );\n      })\n    )\n  );\n\n  removeCartBoundConfigurations$: Observable<ConfiguratorActions.RemoveConfiguration> =\n    createEffect(() =>\n      this.actions$.pipe(\n        ofType(ConfiguratorActions.REMOVE_CART_BOUND_CONFIGURATIONS),\n        switchMap(() => {\n          return this.store.pipe(\n            select(ConfiguratorSelectors.getConfigurationsState),\n            take(1),\n            map((configuratorState) => {\n              const entities = configuratorState.configurations.entities;\n\n              const ownerKeysToRemove: string[] = [];\n              const ownerKeysProductBound: string[] = [];\n              for (const ownerKey in entities) {\n                if (\n                  ownerKey.includes(CommonConfigurator.OwnerType.CART_ENTRY)\n                ) {\n                  ownerKeysToRemove.push(ownerKey);\n                } else if (\n                  ownerKey.includes(CommonConfigurator.OwnerType.PRODUCT)\n                ) {\n                  ownerKeysProductBound.push(ownerKey);\n                }\n              }\n\n              ownerKeysProductBound.forEach((ownerKey) => {\n                const configuration = entities[ownerKey];\n                if (configuration.value?.nextOwner !== undefined) {\n                  ownerKeysToRemove.push(ownerKey);\n                }\n              });\n              return new ConfiguratorActions.RemoveConfiguration({\n                ownerKey: ownerKeysToRemove,\n              });\n            })\n          );\n        })\n      )\n    );\n\n  addOwner$: Observable<\n    | ConfiguratorActions.SetNextOwnerCartEntry\n    | ConfiguratorActions.SetInteractionState\n  > = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ConfiguratorActions.ADD_NEXT_OWNER),\n      switchMap((action: ConfiguratorActions.AddNextOwner) => {\n        return this.store.pipe(\n          select(\n            ConfiguratorSelectors.getConfigurationFactory(\n              action.payload.ownerKey\n            )\n          ),\n          take(1),\n          switchMap((configuration) => {\n            const newOwner = ConfiguratorModelUtils.createOwner(\n              CommonConfigurator.OwnerType.CART_ENTRY,\n              action.payload.cartEntryNo\n            );\n            this.commonConfigUtilsService.setOwnerKey(newOwner);\n\n            return [\n              new ConfiguratorActions.SetNextOwnerCartEntry({\n                configuration: configuration,\n                cartEntryNo: action.payload.cartEntryNo,\n              }),\n              new ConfiguratorActions.SetInteractionState({\n                entityKey: newOwner.key,\n                interactionState: configuration.interactionState,\n              }),\n            ];\n          })\n        );\n      })\n    )\n  );\n\n  constructor(\n    protected actions$: Actions,\n    protected configuratorCommonsConnector: RulebasedConfiguratorConnector,\n    protected commonConfigUtilsService: CommonConfiguratorUtilsService,\n    protected configuratorGroupUtilsService: ConfiguratorUtilsService,\n    protected store: Store<StateWithConfigurator>\n  ) {}\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ConfiguratorBasicEffects } from './configurator-basic.effect';\nimport { ConfiguratorCartEffects } from './configurator-cart.effect';\n\nexport const ConfiguratorEffects: any[] = [\n  ConfiguratorBasicEffects,\n  ConfiguratorCartEffects,\n];\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Configurator } from '../model/configurator.model';\n\nexport class ConfiguratorStateUtils {\n  static mergeGroupsWithSupplements(\n    groups: Configurator.Group[],\n    attributeSupplements: Configurator.AttributeSupplement[]\n  ): Configurator.Group[] {\n    const mergedGroups: Configurator.Group[] = [];\n    groups.forEach((group) =>\n      mergedGroups.push(\n        this.mergeGroupWithSupplements(group, attributeSupplements)\n      )\n    );\n    return mergedGroups;\n  }\n\n  protected static mergeGroupWithSupplements(\n    group: Configurator.Group,\n    attributeSupplements: Configurator.AttributeSupplement[]\n  ): Configurator.Group {\n    if (this.isTargetGroup(group, attributeSupplements)) {\n      return this.mergeTargetGroupWithSupplements(group, attributeSupplements);\n    } else {\n      return {\n        ...group,\n        subGroups: this.mergeGroupsWithSupplements(\n          group.subGroups,\n          attributeSupplements\n        ),\n      };\n    }\n  }\n\n  protected static mergeTargetGroupWithSupplements(\n    group: Configurator.Group,\n    attributeSupplements: Configurator.AttributeSupplement[]\n  ): Configurator.Group {\n    let mergedAttributes = group.attributes;\n\n    attributeSupplements.forEach((attributeSupplement) => {\n      const attributeName = ConfiguratorStateUtils.getAttributeName(\n        attributeSupplement.attributeUiKey\n      );\n      mergedAttributes = this.updateArrayElement(\n        mergedAttributes,\n        (attribute) => attribute.name === attributeName,\n        (attribute) => {\n          return {\n            ...attribute,\n            values: this.mergeValuesWithSupplement(\n              attribute.values,\n              attributeSupplement\n            ),\n          };\n        }\n      );\n    });\n\n    return {\n      ...group,\n      attributes: mergedAttributes,\n    };\n  }\n\n  protected static mergeValuesWithSupplement(\n    attributeValues: Configurator.Value[] | undefined,\n    attributeSupplement: Configurator.AttributeSupplement\n  ): Configurator.Value[] | undefined {\n    let mergedValues = attributeValues;\n\n    attributeSupplement.valueSupplements.forEach((valueSupplement) => {\n      mergedValues = this.updateArrayElement(\n        mergedValues,\n        (value) => value.valueCode === valueSupplement.attributeValueKey,\n        (value) => {\n          return {\n            ...value,\n            valuePrice: valueSupplement.priceValue,\n          };\n        }\n      );\n    });\n\n    return mergedValues;\n  }\n\n  protected static isTargetGroup(\n    group: Configurator.Group,\n    attributeSupplements: Configurator.AttributeSupplement[]\n  ): boolean {\n    const firstSupplement = attributeSupplements[0];\n    if (firstSupplement) {\n      const attributeName = ConfiguratorStateUtils.getAttributeName(\n        firstSupplement.attributeUiKey\n      );\n      const attributeUiKey = ConfiguratorStateUtils.getKey(\n        firstSupplement.attributeUiKey,\n        attributeName\n      );\n      return group.id.indexOf(attributeUiKey) >= 0;\n    } else {\n      // that should never happen, as we merge existing groups\n      // with supplements only if supplements are available\n      throw new Error('We expect at least one attribute supplement');\n    }\n  }\n\n  /**\n   * It searches in the given `array` for the first element satisfying the `predicate` function.\n   * Then it returns a fresh array, where this element is replaced with the result of the `projection` function.\n   *\n   * If no element of the `array` satisfied the `predicate`, it returns the original `array`.\n   */\n  protected static updateArrayElement<T>(\n    array: T[] | undefined,\n    predicate: (value: T, index: number, obj: T[]) => unknown,\n    projection: (value: T, index: number) => T\n  ): T[] | undefined {\n    if (array) {\n      const index = array.findIndex(predicate);\n      if (index === -1) {\n        return array;\n      }\n      const value = array[index];\n      const newValue = projection(value, index);\n      const newArray = [...array];\n      newArray[index] = newValue;\n      return newArray;\n    }\n  }\n\n  protected static getAttributeName(attributeUiKey: string): string {\n    const lastIndexOf = attributeUiKey.lastIndexOf('@');\n    return attributeUiKey.slice(lastIndexOf + 1);\n  }\n\n  protected static getKey(key: string, name: string): string {\n    return key.replace('@' + name, '');\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  CommonConfigurator,\n  ConfiguratorModelUtils,\n} from '@spartacus/product-configurator/common';\nimport { Configurator } from '../../model/configurator.model';\nimport { ConfiguratorActions } from '../actions/index';\nimport { ConfiguratorStateUtils } from '../configurator-state-utils';\n\nexport const initialState: Configurator.Configuration = {\n  configId: '',\n  productCode: '',\n  groups: [],\n  flatGroups: [],\n  interactionState: {\n    currentGroup: undefined,\n    groupsVisited: {},\n    menuParentGroup: undefined,\n  },\n  owner: ConfiguratorModelUtils.createInitialOwner(),\n};\nexport const initialStatePendingChanges = 0;\n\nexport function configuratorReducer(\n  state = initialState,\n  action:\n    | ConfiguratorActions.ConfiguratorAction\n    | ConfiguratorActions.ConfiguratorCartAction\n): Configurator.Configuration {\n  switch (action.type) {\n    case ConfiguratorActions.UPDATE_CONFIGURATION_FINALIZE_SUCCESS: {\n      const result: Configurator.Configuration = takeOverChanges(action, state);\n      result.isCartEntryUpdateRequired = true;\n      result.overview = undefined;\n      return result;\n    }\n    case ConfiguratorActions.UPDATE_CART_ENTRY: {\n      const result = { ...state };\n      result.isCartEntryUpdateRequired = false;\n      return result;\n    }\n    case ConfiguratorActions.CREATE_CONFIGURATION_SUCCESS:\n    case ConfiguratorActions.READ_CONFIGURATION_SUCCESS:\n    case ConfiguratorActions.READ_CART_ENTRY_CONFIGURATION_SUCCESS: {\n      return setInitialCurrentGroup(takeOverChanges(action, state));\n    }\n\n    case ConfiguratorActions.UPDATE_PRICE_SUMMARY_SUCCESS: {\n      return setInitialCurrentGroup(takeOverPricingChanges(action, state));\n    }\n\n    case ConfiguratorActions.GET_CONFIGURATION_OVERVIEW_SUCCESS: {\n      const content = { ...action.payload.overview };\n\n      const result: Configurator.Configuration = {\n        ...state,\n        overview: content,\n        priceSummary: content.priceSummary,\n        interactionState: {\n          ...state.interactionState,\n          issueNavigationDone: false,\n        },\n      };\n\n      return result;\n    }\n    case ConfiguratorActions.READ_ORDER_ENTRY_CONFIGURATION_SUCCESS: {\n      const configuration = { ...action.payload };\n\n      const result: Configurator.Configuration = {\n        ...state,\n        ...configuration,\n        priceSummary: configuration.overview?.priceSummary,\n      };\n\n      return result;\n    }\n    case ConfiguratorActions.SET_NEXT_OWNER_CART_ENTRY: {\n      const content = { ...action.payload.configuration };\n      content.nextOwner = ConfiguratorModelUtils.createOwner(\n        CommonConfigurator.OwnerType.CART_ENTRY,\n        action.payload.cartEntryNo\n      );\n      const result = {\n        ...state,\n        ...content,\n      };\n\n      return result;\n    }\n    case ConfiguratorActions.SET_INTERACTION_STATE: {\n      const newInteractionState: Configurator.InteractionState =\n        action.payload.interactionState;\n\n      return {\n        ...state,\n        interactionState: newInteractionState,\n      };\n    }\n    case ConfiguratorActions.SET_CURRENT_GROUP: {\n      const newCurrentGroup: string = action.payload.currentGroup;\n\n      return {\n        ...state,\n        interactionState: {\n          ...state.interactionState,\n          currentGroup: newCurrentGroup,\n        },\n      };\n    }\n    case ConfiguratorActions.SET_MENU_PARENT_GROUP: {\n      const newMenuParentGroup = action.payload.menuParentGroup;\n\n      return {\n        ...state,\n        interactionState: {\n          ...state.interactionState,\n          menuParentGroup: newMenuParentGroup,\n        },\n      };\n    }\n    case ConfiguratorActions.SET_GROUPS_VISITED: {\n      const groupIds: string[] = action.payload.visitedGroups;\n\n      const changedInteractionState: Configurator.InteractionState = {\n        groupsVisited: {},\n      };\n\n      //Set Current state items\n      if (state.interactionState.groupsVisited) {\n        Object.keys(state.interactionState.groupsVisited).forEach((groupId) =>\n          setGroupsVisited(changedInteractionState, groupId)\n        );\n      }\n\n      //Add new Groups\n      groupIds.forEach((groupId) =>\n        setGroupsVisited(changedInteractionState, groupId)\n      );\n\n      return {\n        ...state,\n        interactionState: {\n          ...state.interactionState,\n          groupsVisited: changedInteractionState.groupsVisited,\n        },\n      };\n    }\n  }\n  return state;\n}\n\nfunction setGroupsVisited(\n  changedInteractionState: Configurator.InteractionState,\n  groupId: string\n) {\n  const groupsVisited = changedInteractionState.groupsVisited;\n  if (groupsVisited) {\n    groupsVisited[groupId] = true;\n  }\n}\n\nfunction setInitialCurrentGroup(\n  state: Configurator.Configuration\n): Configurator.Configuration {\n  if (state.interactionState.currentGroup) {\n    return state;\n  }\n  let initialCurrentGroup;\n  const flatGroups = state.flatGroups;\n  if (flatGroups && flatGroups.length > 0) {\n    initialCurrentGroup = flatGroups[0]?.id;\n  }\n\n  const result = {\n    ...state,\n    interactionState: {\n      ...state.interactionState,\n      currentGroup: initialCurrentGroup,\n    },\n  };\n\n  return result;\n}\n\nfunction takeOverChanges(\n  action:\n    | ConfiguratorActions.CreateConfigurationSuccess\n    | ConfiguratorActions.ReadConfigurationSuccess\n    | ConfiguratorActions.UpdateConfigurationFinalizeSuccess\n    | ConfiguratorActions.ReadCartEntryConfigurationSuccess\n    | ConfiguratorActions.ReadOrderEntryConfigurationSuccess,\n  state: Configurator.Configuration\n): Configurator.Configuration {\n  const content = { ...action.payload };\n  const groups = content.groups.length > 0 ? content.groups : state.groups;\n\n  const result: Configurator.Configuration = {\n    ...state,\n    ...content,\n    groups: groups,\n    interactionState: {\n      ...state.interactionState,\n      ...content.interactionState,\n      issueNavigationDone: true,\n    },\n  };\n  return result;\n}\n\nfunction takeOverPricingChanges(\n  action: ConfiguratorActions.UpdatePriceSummarySuccess,\n  state: Configurator.Configuration\n): Configurator.Configuration {\n  const content = { ...action.payload };\n  const priceSupplements = content.priceSupplements;\n  const groups =\n    priceSupplements && priceSupplements.length > 0\n      ? ConfiguratorStateUtils.mergeGroupsWithSupplements(\n          state.groups,\n          priceSupplements\n        )\n      : state.groups;\n\n  const result = {\n    ...state,\n    ...content,\n    groups: groups,\n    interactionState: {\n      ...state.interactionState,\n      ...content.interactionState,\n      issueNavigationDone: true,\n    },\n  };\n  return result;\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken, Provider } from '@angular/core';\nimport { ActionReducerMap } from '@ngrx/store';\nimport { StateUtils } from '@spartacus/core';\nimport { Configurator } from '../../model/configurator.model';\nimport { ConfiguratorState, CONFIGURATOR_DATA } from '../configurator-state';\nimport { configuratorReducer } from './configurator.reducer';\n\nexport function getConfiguratorReducers(): ActionReducerMap<ConfiguratorState> {\n  return {\n    // @ts-ignore TODO (#12620)\n    configurations:\n      StateUtils.entityProcessesLoaderReducer<Configurator.Configuration>(\n        CONFIGURATOR_DATA,\n        // @ts-ignore TODO (#12620)\n        configuratorReducer\n      ),\n  };\n}\n\nexport const configuratorReducerToken: InjectionToken<\n  ActionReducerMap<ConfiguratorState>\n> = new InjectionToken<ActionReducerMap<ConfiguratorState>>(\n  'ConfiguratorReducers'\n);\n\nexport const configuratorReducerProvider: Provider = {\n  provide: configuratorReducerToken,\n  useFactory: getConfiguratorReducers,\n};\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { StateModule } from '@spartacus/core';\nimport { CONFIGURATOR_FEATURE } from './configurator-state';\nimport { ConfiguratorEffects } from './effects/index';\nimport {\n  configuratorReducerProvider,\n  configuratorReducerToken,\n} from './reducers/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    StateModule,\n    StoreModule.forFeature(CONFIGURATOR_FEATURE, configuratorReducerToken),\n    EffectsModule.forFeature(ConfiguratorEffects),\n  ],\n  providers: [configuratorReducerProvider],\n})\nexport class RulebasedConfiguratorStateModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { RulebasedConfiguratorConnector } from './connectors/rulebased-configurator.connector';\nimport { ConfiguratorRouterModule } from './facade/routing/configurator-router.module';\nimport { RulebasedConfiguratorStateModule } from './state/rulebased-configurator-state.module';\n\n/**\n * Exposes the rulebased configurator core entities.\n * Explicit providing of connector because otherwise lazy loading does not work\n */\n@NgModule({\n  imports: [RulebasedConfiguratorStateModule, ConfiguratorRouterModule],\n  providers: [RulebasedConfiguratorConnector],\n})\nexport class RulebasedConfiguratorCoreModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './actions/index';\nexport * from './configurator-state';\nexport * from './effects/configurator-basic-effect.service';\nexport * from './selectors/index';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './connectors/index';\nexport * from './facade/index';\nexport * from './rulebased-configurator-core.module';\nexport * from './state/index';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\nexport interface ProductConfiguratorUISettingsConfig {\n  updateDebounceTime?: {\n    quantity?: number;\n    input?: number;\n  };\n  addRetractOption?: boolean;\n  enableNavigationToConflict?: boolean;\n}\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class ConfiguratorUISettingsConfig {\n  productConfigurator?: ProductConfiguratorUISettingsConfig;\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  isDevMode,\n  OnInit,\n} from '@angular/core';\nimport { CommonConfigurator } from '@spartacus/product-configurator/common';\nimport { ICON_TYPE } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { delay, filter, map, switchMap, take } from 'rxjs/operators';\nimport {\n  ConfiguratorCommonsService,\n  ConfiguratorGroupsService,\n} from '../../../core';\nimport { Configurator } from '../../../core/model/configurator.model';\nimport { ConfiguratorUISettingsConfig } from '../../config/configurator-ui-settings.config';\nimport { ConfiguratorStorefrontUtilsService } from '../../service/configurator-storefront-utils.service';\nimport { ConfiguratorAttributeBaseComponent } from '../types/base/configurator-attribute-base.component';\n\n@Component({\n  selector: 'cx-configurator-attribute-header',\n  templateUrl: './configurator-attribute-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorAttributeHeaderComponent\n  extends ConfiguratorAttributeBaseComponent\n  implements OnInit\n{\n  @Input() attribute: Configurator.Attribute;\n  @Input() owner: CommonConfigurator.Owner;\n  @Input() groupId: string;\n  @Input() groupType: Configurator.GroupType;\n\n  iconTypes = ICON_TYPE;\n  showRequiredMessageForDomainAttribute$: Observable<boolean>;\n\n  constructor(\n    protected configUtils: ConfiguratorStorefrontUtilsService,\n    protected configuratorCommonsService: ConfiguratorCommonsService,\n    protected configuratorGroupsService: ConfiguratorGroupsService,\n    protected configuratorUiSettings: ConfiguratorUISettingsConfig\n  ) {\n    super();\n  }\n  ngOnInit(): void {\n    /**\n     * Show message that indicates that attribute is required in case attribute has a domain of values\n     */\n    this.showRequiredMessageForDomainAttribute$ = this.configUtils\n      .isCartEntryOrGroupVisited(this.owner, this.groupId)\n      .pipe(\n        map((result) => (result ? this.isRequiredAttributeWithDomain() : false))\n      );\n  }\n\n  /**\n   * Get message key for the required message. Is different for multi- and single selection values\n   *  @return {string} - required message key\n   */\n  getRequiredMessageKey(): string {\n    if (this.isSingleSelection()) {\n      return this.isWithAdditionalValues(this.attribute)\n        ? 'configurator.attribute.singleSelectAdditionalRequiredMessage'\n        : 'configurator.attribute.singleSelectRequiredMessage';\n    } else if (this.isMultiSelection) {\n      return 'configurator.attribute.multiSelectRequiredMessage';\n    } else {\n      //input attribute types\n      return 'configurator.attribute.singleSelectRequiredMessage';\n    }\n  }\n\n  protected get isMultiSelection(): boolean {\n    switch (this.attribute.uiType) {\n      case Configurator.UiType.CHECKBOXLIST:\n      case Configurator.UiType.CHECKBOXLIST_PRODUCT:\n      case Configurator.UiType.MULTI_SELECTION_IMAGE: {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  protected isSingleSelection(): boolean {\n    switch (this.attribute.uiType) {\n      case Configurator.UiType.RADIOBUTTON:\n      case Configurator.UiType.RADIOBUTTON_ADDITIONAL_INPUT:\n      case Configurator.UiType.RADIOBUTTON_PRODUCT:\n      case Configurator.UiType.CHECKBOX:\n      case Configurator.UiType.DROPDOWN:\n      case Configurator.UiType.DROPDOWN_ADDITIONAL_INPUT:\n      case Configurator.UiType.DROPDOWN_PRODUCT:\n      case Configurator.UiType.SINGLE_SELECTION_IMAGE: {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  protected isRequiredAttributeWithDomain(): boolean {\n    const uiType = this.attribute.uiType;\n    return (\n      (this.attribute.required &&\n        this.attribute.incomplete &&\n        uiType !== Configurator.UiType.NOT_IMPLEMENTED &&\n        uiType !== Configurator.UiType.STRING &&\n        uiType !== Configurator.UiType.NUMERIC) ??\n      false\n    );\n  }\n\n  /**\n   * Verifies whether the group type is attribute group\n   *\n   * @return {boolean} - 'true' if the group type is 'attribute group' otherwise 'false'\n   */\n  isAttributeGroup(): boolean {\n    if (Configurator.GroupType.ATTRIBUTE_GROUP === this.groupType) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Retrieves a certain conflict link key depending on the current group type for translation.\n   *\n   * @return {string} - the conflict link key\n   */\n  getConflictMessageKey(): string {\n    return this.groupType === Configurator.GroupType.CONFLICT_GROUP\n      ? 'configurator.conflict.viewConfigurationDetails'\n      : this.isNavigationToConflictEnabled()\n      ? 'configurator.conflict.viewConflictDetails'\n      : 'configurator.conflict.conflictDetected';\n  }\n\n  /**\n   * Checks if an image is attached\n   * @returns True if an only if at least one image exists\n   */\n  get hasImage(): boolean {\n    const images = this.attribute.images;\n    return images ? images.length > 0 : false;\n  }\n\n  /**\n   * Returns image attached to the attribute (if available)\n   * @returns Image\n   */\n  get image(): Configurator.Image | undefined {\n    const images = this.attribute.images;\n    return images && this.hasImage ? images[0] : undefined;\n  }\n\n  /**\n   * Navigates to the group.\n   */\n  navigateToGroup(): void {\n    this.configuratorCommonsService\n      .getConfiguration(this.owner)\n      .pipe(take(1))\n      .subscribe((configuration) => {\n        let groupId;\n        if (this.groupType === Configurator.GroupType.CONFLICT_GROUP) {\n          groupId = this.attribute.groupId;\n        } else {\n          groupId = this.findConflictGroupId(configuration, this.attribute);\n        }\n        if (groupId) {\n          this.configuratorGroupsService.navigateToGroup(\n            configuration,\n            groupId\n          );\n          this.focusValue(this.attribute);\n          this.scrollToAttribute(this.attribute.name);\n        } else {\n          this.logError(\n            'Attribute was not found in any conflict group. Note that for this navigation, commerce 22.05 or later is required. Consider to disable setting \"enableNavigationToConflict\"'\n          );\n        }\n      });\n  }\n\n  /**\n   * Scroll to conflicting attribute\n   *\n   * @protected\n   */\n  protected scrollToAttribute(name: string) {\n    this.onNavigationCompleted(() =>\n      this.configUtils.scrollToConfigurationElement(\n        '#' + this.createAttributeUiKey('label', name)\n      )\n    );\n  }\n\n  findConflictGroupId(\n    configuration: Configurator.Configuration,\n    currentAttribute: Configurator.Attribute\n  ): string | undefined {\n    return configuration.flatGroups\n      .filter(\n        (group) => group.groupType === Configurator.GroupType.CONFLICT_GROUP\n      )\n      .find((group) => {\n        return group.attributes?.find(\n          (attribute) => attribute.key === currentAttribute.key\n        );\n      })?.id;\n  }\n\n  protected logError(text: string): void {\n    if (isDevMode()) {\n      console.error(text);\n    }\n  }\n\n  protected focusValue(attribute: Configurator.Attribute): void {\n    this.onNavigationCompleted(() => this.configUtils.focusValue(attribute));\n  }\n\n  /**\n   * The status of the configuration loading is retrieved twice:\n   * firstly, wait that the navigation to the corresponding group is started,\n   * secondly, wait that the navigation is completed and\n   * finally, invoke the callback function\n   *\n   * @protected\n   */\n  protected onNavigationCompleted(callback: () => void): void {\n    this.configuratorCommonsService\n      .isConfigurationLoading(this.owner)\n      .pipe(\n        filter((isLoading) => isLoading),\n        take(1),\n        switchMap(() =>\n          this.configuratorCommonsService\n            .isConfigurationLoading(this.owner)\n            .pipe(\n              filter((isLoading) => !isLoading),\n              take(1),\n              delay(0) //we need to consider the re-rendering of the page\n            )\n        )\n      )\n      .subscribe(callback);\n  }\n  /**\n   * @returns true only if navigation to conflict groups is enabled.\n   */\n  isNavigationToConflictEnabled(): boolean {\n    return (\n      this.configuratorUiSettings.productConfigurator\n        ?.enableNavigationToConflict ?? false\n    );\n  }\n}\n","<label\n  id=\"{{ createAttributeUiKey('label', attribute.name) }}\"\n  [class.cx-required-error]=\"showRequiredMessageForDomainAttribute$ | async\"\n  [attr.aria-label]=\"\n    !attribute.required\n      ? ('configurator.a11y.attribute'\n        | cxTranslate: { attribute: attribute.label })\n      : ('configurator.a11y.requiredAttribute'\n        | cxTranslate: { param: attribute.label })\n  \"\n  ><span\n    [class.cx-required-icon]=\"attribute.required\"\n    [attr.aria-describedby]=\"createAttributeUiKey('label', attribute.name)\"\n    >{{ attribute.label }}</span\n  ></label\n>\n<div\n  *ngIf=\"attribute.hasConflicts\"\n  class=\"cx-conflict-msg\"\n  id=\"{{ createAttributeUiKey('attribute-msg', attribute.name) }}\"\n  [attr.aria-live]=\"isAttributeGroup() ? 'assertive' : 'off'\"\n  [attr.aria-atomic]=\"isAttributeGroup() ? true : false\"\n  [attr.role]=\"isAttributeGroup() ? 'alert' : null\"\n  [attr.aria-label]=\"\n    isAttributeGroup()\n      ? ('configurator.a11y.conflictDetected' | cxTranslate)\n      : ''\n  \"\n>\n  <cx-icon\n    *ngIf=\"isAttributeGroup()\"\n    [type]=\"iconTypes.WARNING\"\n    aria-hidden=\"true\"\n  ></cx-icon>\n  <ng-container *ngIf=\"isAttributeGroup(); else conflictGroup\">\n    <ng-container *ngIf=\"isNavigationToConflictEnabled(); else withoutLink\">\n      <a\n        class=\"cx-conflict-msg link cx-action-link\"\n        (click)=\"navigateToGroup()\"\n        (keydown.enter)=\"navigateToGroup()\"\n        tabindex=\"0\"\n        [attr.aria-label]=\"\n          'configurator.a11y.navigateToConflict'\n            | cxTranslate: { attribute: attribute.label }\n        \"\n      >\n        {{ getConflictMessageKey() | cxTranslate }}\n      </a>\n    </ng-container>\n  </ng-container>\n</div>\n<div\n  *ngIf=\"showRequiredMessageForDomainAttribute$ | async\"\n  class=\"cx-required-error-msg\"\n  id=\"{{ createAttributeUiKey('attribute-msg', attribute.name) }}\"\n  [attr.aria-label]=\"getRequiredMessageKey() | cxTranslate\"\n>\n  <cx-icon [type]=\"iconTypes.ERROR\"></cx-icon>\n  {{ getRequiredMessageKey() | cxTranslate }}\n</div>\n<img\n  *ngIf=\"hasImage\"\n  class=\"cx-attribute-img\"\n  src=\"{{ image?.url }}\"\n  alt=\"{{ image?.altText }}\"\n/>\n\n<ng-template #conflictGroup>\n  <a\n    class=\"cx-conflict-msg link cx-action-link\"\n    (click)=\"navigateToGroup()\"\n    (keydown.enter)=\"navigateToGroup()\"\n    tabindex=\"0\"\n  >\n    {{ getConflictMessageKey() | cxTranslate }}\n  </a>\n</ng-template>\n\n<ng-template #withoutLink>\n  <div class=\"cx-conflict-msg\">\n    {{ getConflictMessageKey() | cxTranslate }}\n  </div>\n</ng-template>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '@spartacus/storefront';\nimport { ConfiguratorAttributeHeaderComponent } from './configurator-attribute-header.component';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    I18nModule,\n    IconModule,\n    NgSelectModule,\n  ],\n  declarations: [ConfiguratorAttributeHeaderComponent],\n  exports: [ConfiguratorAttributeHeaderComponent],\n})\nexport class ConfiguratorAttributeHeaderModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-attribute-header.component';\nexport * from './configurator-attribute-header.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n} from '@angular/core';\n\n@Component({\n  selector: 'cx-configurator-show-more',\n  templateUrl: './configurator-show-more.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorShowMoreComponent implements AfterViewInit {\n  showMore = false;\n  showHiddenText = false;\n  textToShow: string;\n  textNormalized: string;\n\n  @Input() text: string;\n  @Input() textSize = 60;\n  @Input() productName: string;\n\n  constructor(protected cdRef: ChangeDetectorRef) {}\n\n  ngAfterViewInit(): void {\n    this.textNormalized = this.normalize(this.text);\n\n    if (this.textNormalized.length > this.textSize) {\n      this.showMore = true;\n      this.textToShow = this.textNormalized.substring(0, this.textSize);\n    } else {\n      this.textToShow = this.textNormalized;\n    }\n    this.cdRef.detectChanges();\n  }\n\n  toggleShowMore(): void {\n    this.showHiddenText = !this.showHiddenText;\n\n    this.showHiddenText\n      ? (this.textToShow = this.textNormalized)\n      : (this.textToShow = this.textNormalized.substring(0, this.textSize));\n\n    this.cdRef.detectChanges();\n  }\n\n  protected normalize(text: string = ''): string {\n    return text.replace(/<[^>]*>/g, '');\n  }\n}\n","<ng-container *ngIf=\"text\">\n  <span\n    [attr.aria-label]=\"\n      'configurator.a11y.itemDescription'\n        | cxTranslate\n          : {\n              item: productName\n            }\n    \"\n    [innerHTML]=\"textToShow\"\n  ></span>\n\n  <button (click)=\"toggleShowMore()\" *ngIf=\"showMore\" tabindex=\"-1\">\n    <ng-container *ngIf=\"showHiddenText; else less\"\n      >&nbsp;... {{ 'configurator.button.less' | cxTranslate }}</ng-container\n    >\n\n    <ng-template #less>\n      &nbsp;... {{ 'configurator.button.more' | cxTranslate }}</ng-template\n    >\n  </button>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { Observable, Subscription, timer } from 'rxjs';\nimport { debounce, distinct, take } from 'rxjs/operators';\nimport { ConfiguratorUISettingsConfig } from '../../config/configurator-ui-settings.config';\n\nexport interface ConfiguratorAttributeQuantityComponentOptions {\n  allowZero?: boolean;\n  initialQuantity?: number;\n  disableQuantityActions$?: Observable<boolean>;\n}\n\n@Component({\n  selector: 'cx-configurator-attribute-quantity',\n  templateUrl: './configurator-attribute-quantity.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorAttributeQuantityComponent\n  implements OnDestroy, OnInit\n{\n  quantity = new UntypedFormControl(1);\n  optionsChangeSub: Subscription = new Subscription();\n  quantityChangeSub: Subscription = new Subscription();\n  @Input() quantityOptions: ConfiguratorAttributeQuantityComponentOptions;\n  @Output() changeQuantity = new EventEmitter<number>();\n\n  constructor(protected config: ConfiguratorUISettingsConfig) {}\n\n  ngOnInit(): void {\n    this.quantity.setValue(this.quantityOptions?.initialQuantity);\n    this.optionsChangeSub.add(\n      this.quantityOptions.disableQuantityActions$\n        ?.pipe(distinct())\n        .subscribe((disable) => {\n          // stepper always emits an value when it gets enabled regardless, if the original value was changed.\n          // so we subscribe to quantity change when stepper gets enabled and unsubscribe when it gets disabled\n          // this way we will not get the unwanted emission on enabling the stepper.\n          if (disable) {\n            this.quantity.disable();\n            this.quantityChangeSub.unsubscribe();\n          } else {\n            this.quantity.enable();\n            this.quantityChangeSub.add(this.subscribeToQuantityChange());\n          }\n        })\n    );\n  }\n\n  protected subscribeToQuantityChange(): Subscription {\n    return this.quantity.valueChanges\n      .pipe(\n        debounce(() =>\n          timer(this.config.productConfigurator?.updateDebounceTime?.quantity)\n        ),\n        take(1)\n      )\n      .subscribe(() => this.onChangeQuantity());\n  }\n\n  ngOnDestroy(): void {\n    this.optionsChangeSub.unsubscribe();\n    this.quantityChangeSub.unsubscribe();\n  }\n\n  onChangeQuantity(): void {\n    this.changeQuantity.emit(this.quantity?.value);\n  }\n}\n","<div class=\"cx-quantity\">\n  <label>{{ 'configurator.attribute.quantity' | cxTranslate }}</label>\n  <cx-item-counter\n    [allowZero]=\"quantityOptions?.allowZero\"\n    [control]=\"quantity\"\n    [min]=\"quantityOptions?.allowZero ? 0 : 1\"\n  ></cx-item-counter>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { Configurator } from '../../core/model/configurator.model';\n\nexport interface ConfiguratorPriceComponentOptions {\n  quantity?: number;\n  price?: Configurator.PriceDetails;\n  priceTotal?: Configurator.PriceDetails;\n  isLightedUp?: boolean;\n}\n\n@Component({\n  selector: 'cx-configurator-price',\n  templateUrl: './configurator-price.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorPriceComponent {\n  @Input() formula: ConfiguratorPriceComponentOptions;\n\n  /**\n   * Retrieves price.\n   *\n   * @return {string} - value price formula\n   */\n  get price(): string {\n    if (this.formula.priceTotal) {\n      return this.priceTotal;\n    } else {\n      return '+ ' + this.formula.price?.formattedValue;\n    }\n  }\n\n  /**\n   * Retrieves the total price.\n   *\n   * @return {string} - total price formula\n   */\n  get priceTotal(): string {\n    return '+ ' + this.formula.priceTotal?.formattedValue;\n  }\n\n  /**\n   * Verifies whether quantity with price should be displayed.\n   *\n   * @return {boolean} - 'true' if quantity and price should be displayed, otherwise 'false'\n   */\n  displayQuantityAndPrice(): boolean {\n    const quantity = this.formula.quantity;\n    return quantity ? this.formula.price?.value !== 0 && quantity >= 1 : false;\n  }\n\n  /**\n   * Verifies whether only price should be displayed.\n   *\n   * @return {boolean} - 'true' if only price should be displayed, otherwise 'false'\n   */\n  displayPriceOnly(): boolean {\n    const priceValue = this.formula.price?.value ?? 0;\n    const priceTotalValue = this.formula.priceTotal?.value ?? 0;\n    return (\n      (priceValue !== 0 || priceTotalValue !== 0) &&\n      !this.displayQuantityAndPrice()\n    );\n  }\n\n  /**\n   * Verifies whether the price formula should be displayed.\n   *\n   * @return {boolean} - 'true' if price formula should be displayed, otherwise 'false'\n   */\n  displayFormula(): boolean {\n    const displayFormula =\n      (this.formula.quantity && this.formula.quantity !== 0) ||\n      (this.formula.price && this.formula.price?.value !== 0) ||\n      (this.formula.priceTotal && this.formula.priceTotal?.value !== 0);\n    return displayFormula ?? false;\n  }\n\n  /**\n   * Retrieves formula for quantity with price.\n   *\n   * @param {string} formattedQuantity- formatted quantity\n   * @return {string} - price formula\n   */\n  quantityWithPrice(formattedQuantity: string | null): string {\n    return formattedQuantity + 'x(' + this.formula.price?.formattedValue + ')';\n  }\n\n  /**\n   * Verifies whether the price is lighted up.\n   *\n   * @return {boolean} - 'true' if price should be lighted up, otherwise 'false'\n   */\n  isPriceLightedUp(): boolean {\n    return this.formula.isLightedUp ?? false;\n  }\n\n  /**\n   * Retrieves the styling for the corresponding element.\n   *\n   * @return {string} - corresponding style class\n   */\n  get styleClass(): string {\n    let styleClass = 'cx-price';\n    if (!this.isPriceLightedUp()) {\n      styleClass += ' cx-greyed-out';\n    }\n\n    return styleClass;\n  }\n}\n","<ng-container *ngIf=\"displayFormula()\">\n  <ng-container *ngIf=\"displayPriceOnly()\">\n    <div\n      [ngClass]=\"styleClass\"\n      [attr.aria-label]=\"'configurator.a11y.valueSurcharge' | cxTranslate\"\n    >\n      {{ price }}\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"displayQuantityAndPrice()\">\n    <div\n      class=\"cx-quantity-price\"\n      [attr.aria-label]=\"'configurator.a11y.valueSurcharge' | cxTranslate\"\n    >\n      {{ quantityWithPrice(formula?.quantity | cxNumeric) }}\n    </div>\n    <div class=\"cx-price-total\">{{ priceTotal }}</div>\n  </ng-container>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { Product, ProductService, TranslationService } from '@spartacus/core';\nimport { ConfiguratorProductScope } from '@spartacus/product-configurator/common';\nimport {\n  FocusConfig,\n  ICON_TYPE,\n  KeyboardFocusService,\n} from '@spartacus/storefront';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { map, take, tap } from 'rxjs/operators';\nimport { Configurator } from '../../../core/model/configurator.model';\nimport { QuantityUpdateEvent } from '../../form/configurator-form.event';\nimport { ConfiguratorPriceComponentOptions } from '../../price/configurator-price.component';\nimport { ConfiguratorAttributeQuantityComponentOptions } from '../quantity/configurator-attribute-quantity.component';\nimport { ConfiguratorAttributeBaseComponent } from '../types/base/configurator-attribute-base.component';\n\nexport interface ConfiguratorAttributeProductCardComponentOptions {\n  /** If set to `true`, all action buttons will be disabled.  */\n  disableAllButtons?: boolean;\n  /** If set to `true`, the remove/deselect button won't be available. Useful for required attributes,\n   *  where a deselect/remove of last value shall not be possible.  */\n  hideRemoveButton?: boolean;\n  fallbackFocusId?: string;\n  multiSelect?: boolean;\n  productBoundValue: Configurator.Value;\n  singleDropdown?: boolean;\n  withQuantity?: boolean;\n  /**\n   * Used to indicate loading state, for example in case a request triggered by parent component to CPQ is currently in progress.\n   * Component will react on it and disable all controls that could cause a request.\n   * This prevents the user from triggering concurrent requests with potential conflicting content that might cause unexpected behaviour.\n   */\n  loading$?: Observable<boolean>;\n  attributeId: number;\n  attributeLabel?: string;\n  attributeName?: string;\n  itemCount: number;\n  itemIndex: number;\n}\n\n@Component({\n  selector: 'cx-configurator-attribute-product-card',\n  templateUrl: './configurator-attribute-product-card.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorAttributeProductCardComponent\n  extends ConfiguratorAttributeBaseComponent\n  implements OnInit\n{\n  product$: Observable<Product>;\n  loading$ = new BehaviorSubject<boolean>(true);\n  showDeselectionNotPossible = false;\n\n  @Input()\n  productCardOptions: ConfiguratorAttributeProductCardComponentOptions;\n\n  @Output() handleDeselect = new EventEmitter<string>();\n  @Output() handleQuantity = new EventEmitter<QuantityUpdateEvent>();\n  @Output() handleSelect = new EventEmitter<string>();\n\n  constructor(\n    protected productService: ProductService,\n    protected keyBoardFocus: KeyboardFocusService,\n    protected translation: TranslationService\n  ) {\n    super();\n  }\n  iconType = ICON_TYPE;\n\n  ngOnInit() {\n    this.loading$.next(true);\n    const productSystemId =\n      this.productCardOptions.productBoundValue.productSystemId;\n\n    this.product$ = this.productService\n      .get(\n        productSystemId ? productSystemId : '',\n        ConfiguratorProductScope.CONFIGURATOR_PRODUCT_CARD\n      )\n      .pipe(\n        map((respProduct) => {\n          return respProduct\n            ? respProduct\n            : this.transformToProductType(\n                this.productCardOptions.productBoundValue\n              );\n        }),\n        tap(() => this.loading$.next(false))\n      );\n  }\n\n  get showQuantity(): boolean {\n    return (\n      (this.productCardOptions.withQuantity &&\n        this.productCardOptions.productBoundValue.selected &&\n        this.productCardOptions.multiSelect) ??\n      false\n    );\n  }\n\n  get focusConfig(): FocusConfig {\n    const focusConfig = {\n      key: this.createFocusId(\n        this.productCardOptions.attributeId.toString(),\n        this.productCardOptions.productBoundValue.valueCode\n      ),\n    };\n    return focusConfig;\n  }\n\n  onHandleSelect(): void {\n    this.loading$.next(true);\n    if (\n      this.productCardOptions.hideRemoveButton &&\n      this.productCardOptions.fallbackFocusId\n    ) {\n      this.keyBoardFocus.set(this.productCardOptions.fallbackFocusId);\n    }\n    this.handleSelect.emit(this.productCardOptions.productBoundValue.valueCode);\n  }\n\n  onHandleDeselect(): void {\n    {\n      if (\n        this.productCardOptions.productBoundValue.selected &&\n        this.productCardOptions.hideRemoveButton\n      ) {\n        this.showDeselectionNotPossibleMessage();\n        return;\n      }\n      this.loading$.next(true);\n      this.handleDeselect.emit(\n        this.productCardOptions.productBoundValue.valueCode\n      );\n    }\n  }\n\n  onChangeQuantity(eventObject: any): void {\n    if (!eventObject) {\n      this.onHandleDeselect();\n    } else {\n      this.onHandleQuantity(eventObject);\n    }\n  }\n\n  /**\n   * Verifies whether the product card refers to a selected value\n   * @return {boolean} - Selected?\n   */\n  isProductCardSelected(): boolean {\n    const isProductCardSelected =\n      this.productCardOptions.productBoundValue &&\n      this.productCardOptions.productBoundValue.selected &&\n      !this.productCardOptions.singleDropdown;\n\n    return isProductCardSelected ?? false;\n  }\n\n  /**\n   * Checks if price needs to be displayed. This is the\n   * case if either value price, quantity or value price total\n   * are present\n   * @return {boolean} - Price display?\n   */\n  hasPriceDisplay(): boolean {\n    const productPrice =\n      this.productCardOptions.productBoundValue.valuePrice ||\n      this.productCardOptions.productBoundValue.quantity ||\n      this.productCardOptions.productBoundValue.valuePriceTotal;\n\n    return productPrice ? true : false;\n  }\n\n  /**\n   * Extract corresponding price formula parameters\n   *\n   *  @return {ConfiguratorPriceComponentOptions} - New price formula\n   */\n  extractPriceFormulaParameters(): ConfiguratorPriceComponentOptions {\n    if (!this.productCardOptions.multiSelect) {\n      return {\n        price: this.productCardOptions.productBoundValue.valuePrice,\n        isLightedUp: this.productCardOptions.productBoundValue.selected,\n      };\n    }\n    return {\n      quantity: this.productCardOptions.productBoundValue.quantity,\n      price: this.productCardOptions.productBoundValue.valuePrice,\n      priceTotal: this.productCardOptions.productBoundValue.valuePriceTotal,\n      isLightedUp: this.productCardOptions.productBoundValue.selected,\n    };\n  }\n\n  /**\n   *  Extract corresponding quantity parameters\n   *\n   * @return {ConfiguratorAttributeQuantityComponentOptions} - New quantity options\n   */\n  extractQuantityParameters(): ConfiguratorAttributeQuantityComponentOptions {\n    const quantityFromOptions =\n      this.productCardOptions.productBoundValue.quantity;\n\n    const mergedLoading = this.productCardOptions.loading$\n      ? combineLatest([this.loading$, this.productCardOptions.loading$]).pipe(\n          map((values) => {\n            return values[0] || values[1];\n          })\n        )\n      : this.loading$;\n\n    return {\n      allowZero: !this.productCardOptions.hideRemoveButton,\n      initialQuantity: quantityFromOptions ? quantityFromOptions : 0,\n      disableQuantityActions$: mergedLoading,\n    };\n  }\n\n  /**\n   * Verifies whether the value code is defined.\n   *\n   * @param {string} valueCode - Value code\n   * @return {boolean} - 'true' if the value code is defined, otherwise 'false'\n   */\n  isValueCodeDefined(valueCode: string | null | undefined): boolean {\n    return valueCode && valueCode !== '0' ? true : false;\n  }\n\n  protected transformToProductType(\n    value: Configurator.Value | undefined\n  ): Product {\n    return {\n      code: value?.productSystemId,\n      description: value?.description,\n      images: {},\n      name: value?.valueDisplay,\n    };\n  }\n\n  protected onHandleQuantity(quantity: number): void {\n    this.loading$.next(true);\n\n    this.handleQuantity.emit({\n      quantity,\n      valueCode: this.productCardOptions.productBoundValue.valueCode,\n    });\n  }\n\n  showDeselectionNotPossibleMessage() {\n    this.showDeselectionNotPossible = true;\n  }\n\n  getAriaLabelSingleUnselected(product: Product): string {\n    let translatedText = '';\n    let index = this.productCardOptions.itemIndex + 1;\n    if (\n      this.isValueCodeDefined(\n        this.productCardOptions?.productBoundValue?.valueCode\n      )\n    ) {\n      if (\n        this.hasPriceDisplay() &&\n        this.productCardOptions.productBoundValue.valuePrice?.value !== 0\n      ) {\n        this.translation\n          .translate('configurator.a11y.itemOfAttributeUnselectedWithPrice', {\n            item: product.code,\n            attribute: this.productCardOptions?.attributeLabel,\n            itemIndex: index,\n            itemCount: this.productCardOptions.itemCount,\n            price:\n              this.productCardOptions.productBoundValue.valuePriceTotal\n                ?.formattedValue,\n          })\n          .pipe(take(1))\n          .subscribe((text) => (translatedText = text));\n      } else {\n        this.translation\n          .translate('configurator.a11y.itemOfAttributeUnselected', {\n            item: product.code,\n            attribute: this.productCardOptions?.attributeLabel,\n            itemIndex: index,\n            itemCount: this.productCardOptions.itemCount,\n          })\n          .pipe(take(1))\n          .subscribe((text) => (translatedText = text));\n      }\n    } else {\n      this.translation\n        .translate('configurator.a11y.selectNoItemOfAttribute', {\n          attribute: this.productCardOptions?.attributeLabel,\n          itemIndex: index,\n          itemCount: this.productCardOptions.itemCount,\n        })\n        .pipe(take(1))\n        .subscribe((text) => (translatedText = text));\n    }\n    return translatedText;\n  }\n\n  getAriaLabelSingleSelected(product: Product): string {\n    let translatedText = '';\n    let index = this.productCardOptions.itemIndex + 1;\n    if (\n      this.hasPriceDisplay() &&\n      this.productCardOptions.productBoundValue.valuePrice?.value !== 0\n    ) {\n      this.translation\n        .translate(\n          'configurator.a11y.itemOfAttributeSelectedPressToUnselectWithPrice',\n          {\n            item: product.code,\n            attribute: this.productCardOptions?.attributeLabel,\n            itemIndex: index,\n            itemCount: this.productCardOptions.itemCount,\n            price:\n              this.productCardOptions.productBoundValue.valuePriceTotal\n                ?.formattedValue,\n          }\n        )\n        .pipe(take(1))\n        .subscribe((text) => (translatedText = text));\n    } else {\n      this.translation\n        .translate('configurator.a11y.itemOfAttributeSelectedPressToUnselect', {\n          item: product.code,\n          attribute: this.productCardOptions?.attributeLabel,\n          itemIndex: index,\n          itemCount: this.productCardOptions.itemCount,\n        })\n        .pipe(take(1))\n        .subscribe((text) => (translatedText = text));\n    }\n\n    return translatedText;\n  }\n\n  getAriaLabelSingleSelectedNoButton(product: Product): string {\n    let translatedText = '';\n    let index = this.productCardOptions.itemIndex + 1;\n    if (\n      this.hasPriceDisplay() &&\n      this.productCardOptions.productBoundValue.valuePrice?.value !== 0\n    ) {\n      this.translation\n        .translate('configurator.a11y.itemOfAttributeSelectedWithPrice', {\n          item: product.code,\n          attribute: this.productCardOptions?.attributeLabel,\n          itemIndex: index,\n          itemCount: this.productCardOptions.itemCount,\n          price:\n            this.productCardOptions.productBoundValue.valuePriceTotal\n              ?.formattedValue,\n        })\n        .pipe(take(1))\n        .subscribe((text) => (translatedText = text));\n    } else {\n      this.translation\n        .translate('configurator.a11y.itemOfAttributeSelected', {\n          item: product.code,\n          attribute: this.productCardOptions?.attributeLabel,\n          itemIndex: index,\n          itemCount: this.productCardOptions.itemCount,\n        })\n        .pipe(take(1))\n        .subscribe((text) => (translatedText = text));\n    }\n\n    return translatedText;\n  }\n\n  getAriaLabelMultiSelected(product: Product): string {\n    let translatedText = '';\n    let index = this.productCardOptions.itemIndex + 1;\n    if (\n      this.hasPriceDisplay() &&\n      this.productCardOptions.productBoundValue.valuePrice?.value !== 0\n    ) {\n      this.translation\n        .translate(\n          'configurator.a11y.itemOfAttributeSelectedPressToUnselectWithPrice',\n          {\n            item: product.code,\n            attribute: this.productCardOptions?.attributeLabel,\n            itemIndex: index,\n            itemCount: this.productCardOptions.itemCount,\n            price:\n              this.productCardOptions.productBoundValue.valuePriceTotal\n                ?.formattedValue,\n          }\n        )\n        .pipe(take(1))\n        .subscribe((text) => (translatedText = text));\n    } else {\n      this.translation\n        .translate('configurator.a11y.itemOfAttributeSelectedPressToUnselect', {\n          item: product.code,\n          attribute: this.productCardOptions?.attributeLabel,\n          itemIndex: index,\n          itemCount: this.productCardOptions.itemCount,\n        })\n        .pipe(take(1))\n        .subscribe((text) => (translatedText = text));\n    }\n\n    return translatedText;\n  }\n\n  getAriaLabelMultiUnselected(product: Product): string {\n    let translatedText = '';\n    let index = this.productCardOptions.itemIndex + 1;\n    if (\n      this.hasPriceDisplay() &&\n      this.productCardOptions.productBoundValue.valuePrice?.value !== 0\n    ) {\n      this.translation\n        .translate('configurator.a11y.itemOfAttributeUnselectedWithPrice', {\n          item: product.code,\n          attribute: this.productCardOptions?.attributeLabel,\n          itemIndex: index,\n          itemCount: this.productCardOptions.itemCount,\n          price:\n            this.productCardOptions.productBoundValue.valuePriceTotal\n              ?.formattedValue,\n        })\n        .pipe(take(1))\n        .subscribe((text) => (translatedText = text));\n    } else {\n      this.translation\n        .translate('configurator.a11y.itemOfAttributeUnselected', {\n          item: product.code,\n          attribute: this.productCardOptions?.attributeLabel,\n          itemIndex: index,\n          itemCount: this.productCardOptions.itemCount,\n        })\n        .pipe(take(1))\n        .subscribe((text) => (translatedText = text));\n    }\n\n    return translatedText;\n  }\n}\n","<ng-container *ngIf=\"product$ | async as product\">\n  <div\n    class=\"cx-product-card\"\n    [ngClass]=\"{\n      'cx-product-card-selected': isProductCardSelected()\n    }\"\n    [attr.aria-label]=\"\n      'configurator.a11y.itemOfAttribute'\n        | cxTranslate\n          : {\n              attribute: productCardOptions?.attributeLabel\n            }\n    \"\n  >\n    <div class=\"cx-product-card-rows\">\n      <div class=\"cx-product-card-imgs\">\n        <cx-media\n          [container]=\"product?.images?.PRIMARY\"\n          format=\"product\"\n          aria-hidden=\"true\"\n        ></cx-media>\n      </div>\n\n      <div class=\"cx-product-card-info\">\n        <div class=\"cx-product-card-name\">\n          <p>\n            {{ product.name }}\n          </p>\n        </div>\n        <div class=\"cx-product-card-code\" *ngIf=\"product.code\">\n          {{ 'configurator.attribute.id' | cxTranslate }}:\n          {{ product.code }}\n        </div>\n        <cx-configurator-show-more\n          *ngIf=\"product?.description\"\n          [text]=\"product?.description\"\n          [textSize]=\"45\"\n          [productName]=\"product.code\"\n        ></cx-configurator-show-more>\n      </div>\n    </div>\n\n    <div\n      class=\"cx-product-card-rows column\"\n      *ngIf=\"!productCardOptions.singleDropdown || hasPriceDisplay()\"\n    >\n      <div class=\"cx-product-card-quantity-price\">\n        <div class=\"cx-product-card-quantity\">\n          <cx-configurator-attribute-quantity\n            *ngIf=\"showQuantity\"\n            (changeQuantity)=\"onChangeQuantity($event)\"\n            [quantityOptions]=\"extractQuantityParameters()\"\n          ></cx-configurator-attribute-quantity>\n        </div>\n        <div class=\"cx-product-card-price\">\n          <cx-configurator-price\n            [formula]=\"extractPriceFormulaParameters()\"\n          ></cx-configurator-price>\n        </div>\n      </div>\n      <div class=\"cx-product-card-action\">\n        <div\n          class=\"cx-product-card-action-btn\"\n          *ngIf=\"!productCardOptions?.singleDropdown\"\n        >\n          <ng-container *ngIf=\"productCardOptions?.multiSelect; else single\">\n            <button\n              *ngIf=\"\n                productCardOptions?.productBoundValue?.selected;\n                else select\n              \"\n              class=\"btn btn-action\"\n              (click)=\"onHandleDeselect()\"\n              [cxFocus]=\"focusConfig\"\n              [attr.aria-label]=\"getAriaLabelMultiSelected(product)\"\n              [attr.aria-describedby]=\"\n                createAttributeUiKey('label', productCardOptions?.attributeName)\n              \"\n            >\n              {{ 'configurator.button.remove' | cxTranslate }}\n            </button>\n\n            <ng-template #select>\n              <button\n                class=\"btn btn-primary\"\n                (click)=\"onHandleSelect()\"\n                [disabled]=\"\n                  productCardOptions?.disableAllButtons || (loading$ | async)\n                \"\n                [cxFocus]=\"focusConfig\"\n                [attr.aria-label]=\"getAriaLabelMultiUnselected(product)\"\n                [attr.aria-describedby]=\"\n                  createAttributeUiKey(\n                    'label',\n                    productCardOptions?.attributeName\n                  )\n                \"\n              >\n                {{ 'configurator.button.add' | cxTranslate }}\n              </button>\n            </ng-template>\n          </ng-container>\n\n          <ng-template #single>\n            <button\n              class=\"btn btn-primary\"\n              (click)=\"onHandleSelect()\"\n              [disabled]=\"\n                productCardOptions?.disableAllButtons || (loading$ | async)\n              \"\n              *ngIf=\"\n                !productCardOptions?.productBoundValue?.selected;\n                else deselect\n              \"\n              [cxFocus]=\"focusConfig\"\n              [attr.aria-label]=\"getAriaLabelSingleUnselected(product)\"\n              [attr.aria-describedby]=\"\n                createAttributeUiKey('label', productCardOptions?.attributeName)\n              \"\n            >\n              {{ 'configurator.button.select' | cxTranslate }}\n            </button>\n            <ng-template #deselect>\n              <ng-container\n                *ngIf=\"\n                  isValueCodeDefined(\n                    productCardOptions?.productBoundValue?.valueCode\n                  )\n                \"\n              >\n                <button\n                  *ngIf=\"!productCardOptions?.hideRemoveButton\"\n                  class=\"btn btn-action\"\n                  (click)=\"onHandleDeselect()\"\n                  [disabled]=\"\n                    productCardOptions?.hideRemoveButton || (loading$ | async)\n                  \"\n                  [cxFocus]=\"focusConfig\"\n                  [attr.aria-label]=\"getAriaLabelSingleSelected(product)\"\n                  [attr.aria-describedby]=\"\n                    createAttributeUiKey(\n                      'label',\n                      productCardOptions?.attributeName\n                    )\n                  \"\n                >\n                  {{ 'configurator.button.deselect' | cxTranslate }}\n                </button>\n                <span\n                  *ngIf=\"productCardOptions?.hideRemoveButton\"\n                  class=\"cx-visually-hidden\"\n                  tabindex=\"0\"\n                >\n                  {{ getAriaLabelSingleSelectedNoButton(product) }}\n                </span>\n              </ng-container>\n            </ng-template>\n          </ng-template>\n        </div>\n      </div>\n    </div>\n    <ng-container *ngIf=\"showDeselectionNotPossible\">\n      <div\n        class=\"cx-product-card-rows deselection-error-message\"\n        aria-live=\"assertive\"\n        aria-atomic=\"true\"\n        role=\"alert\"\n        id=\"{{\n          createAttributeUiKey(\n            'attribute-msg',\n            productCardOptions?.attributeName\n          )\n        }}\"\n      >\n        <cx-icon class=\"deselection-error-symbol\" type=\"ERROR\"></cx-icon>\n        {{ 'configurator.attribute.deselectionNotPossible' | cxTranslate }}\n      </div>\n    </ng-container>\n  </div>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ConfiguratorPriceComponent } from './configurator-price.component';\nimport { I18nModule } from '@spartacus/core';\n\n@NgModule({\n  declarations: [ConfiguratorPriceComponent],\n  exports: [ConfiguratorPriceComponent],\n  imports: [CommonModule, I18nModule],\n})\nexport class ConfiguratorPriceModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { ConfiguratorShowMoreComponent } from './configurator-show-more.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  declarations: [ConfiguratorShowMoreComponent],\n  exports: [ConfiguratorShowMoreComponent],\n})\nexport class ConfiguratorShowMoreModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ConfiguratorUISettingsConfig } from './configurator-ui-settings.config';\n\nexport const defaultConfiguratorUISettingsConfig: ConfiguratorUISettingsConfig =\n  {\n    productConfigurator: {\n      updateDebounceTime: {\n        quantity: 750,\n        input: 500,\n      },\n      addRetractOption: false,\n      enableNavigationToConflict: false,\n    },\n  };\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { ItemCounterModule, KeyboardFocusModule } from '@spartacus/storefront';\nimport { defaultConfiguratorUISettingsConfig } from '../../config/default-configurator-ui-settings.config';\nimport { ConfiguratorAttributeQuantityComponent } from './configurator-attribute-quantity.component';\n\n@NgModule({\n  declarations: [ConfiguratorAttributeQuantityComponent],\n  exports: [ConfiguratorAttributeQuantityComponent],\n  imports: [CommonModule, I18nModule, ItemCounterModule, KeyboardFocusModule],\n  providers: [provideDefaultConfig(defaultConfiguratorUISettingsConfig)],\n})\nexport class ConfiguratorAttributeQuantityModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport {\n  IconModule,\n  KeyboardFocusModule,\n  MediaModule,\n} from '@spartacus/storefront';\nimport { ConfiguratorPriceModule } from '../../price/configurator-price.module';\nimport { ConfiguratorShowMoreModule } from '../../show-more/configurator-show-more.module';\nimport { ConfiguratorAttributeQuantityModule } from '../quantity/configurator-attribute-quantity.module';\nimport { ConfiguratorAttributeProductCardComponent } from './configurator-attribute-product-card.component';\n\n@NgModule({\n  declarations: [ConfiguratorAttributeProductCardComponent],\n  exports: [ConfiguratorAttributeProductCardComponent],\n  imports: [\n    CommonModule,\n    ConfiguratorShowMoreModule,\n    ConfiguratorAttributeQuantityModule,\n    I18nModule,\n    RouterModule,\n    UrlModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MediaModule,\n    ConfiguratorPriceModule,\n    KeyboardFocusModule,\n    IconModule,\n  ],\n})\nexport class ConfiguratorAttributeProductCardModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-attribute-product-card.component';\nexport * from './configurator-attribute-product-card.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Configurator } from '../../../core/model/configurator.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfiguratorAttributeQuantityService {\n  /**\n   * Checks if the interaction with the quantity control needs\n   * to be disabled\n   * @param {any} value Selected value\n   * @returns {boolean} Quantity actions disabled?\n   */\n  disableQuantityActions(value: any): boolean {\n    return !value || value === '0';\n  }\n\n  /**\n   * Checks if the interaction with the quantity control needs for multiselection components\n   * to be disabled\n   * @param {Configurator.Attribute} attribute Configurator Attribute\n   * @returns {boolean} Quantity actions disabled?\n   */\n  disableQuantityActionsMultiSelection(\n    attribute: Configurator.Attribute\n  ): boolean {\n    return (\n      attribute.dataType ===\n        Configurator.DataType.USER_SELECTION_QTY_ATTRIBUTE_LEVEL &&\n      (!attribute.values ||\n        !attribute.values.find((value) => value.selected) ||\n        attribute.quantity === 0)\n    );\n  }\n\n  /**\n   * Checks if it is supposed to render a quantity control on attribute level\n   *\n   * @param {Configurator.Attribute} attribute Configurator Attribute\n   * @return {boolean} - Display quantity picker on attribute level?\n   */\n  withQuantityOnAttributeLevel(attribute: Configurator.Attribute): boolean {\n    return (\n      attribute.dataType ===\n      Configurator.DataType.USER_SELECTION_QTY_ATTRIBUTE_LEVEL\n    );\n  }\n\n  /**\n   * Checks if an attribute needs to be equipped with the option to select\n   * a quantity\n   * @param {Configurator.DataType} dataType Attribute data type\n   * @param {Configurator.UiType} uiType Attribute ui type, refers to how an attribute must be rendered\n   * @returns  {boolean} Render a quantity component?\n   */\n  withQuantity(\n    dataType: Configurator.DataType,\n    uiType: Configurator.UiType\n  ): boolean {\n    switch (uiType) {\n      case Configurator.UiType.DROPDOWN_PRODUCT:\n      case Configurator.UiType.DROPDOWN:\n      case Configurator.UiType.RADIOBUTTON_PRODUCT:\n      case Configurator.UiType.RADIOBUTTON:\n        return (\n          dataType === Configurator.DataType.USER_SELECTION_QTY_ATTRIBUTE_LEVEL\n        );\n\n      case Configurator.UiType.CHECKBOXLIST:\n      case Configurator.UiType.CHECKBOXLIST_PRODUCT:\n        return (\n          dataType === Configurator.DataType.USER_SELECTION_QTY_VALUE_LEVEL\n        );\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Checks if the zero quantity is allowed\n   *\n   * @param {Configurator.Attribute} attribute Configurator Attribute\n   * @return {boolean} - true when zero quantity is allowed\n   */\n  allowZeroValueQuantity(attribute: Configurator.Attribute): boolean {\n    const selectedValues = attribute.values\n      ? attribute.values.filter((value) => value.selected).length\n      : 0;\n    if (attribute.required && selectedValues < 2) {\n      return false;\n    }\n    return true;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-attribute-quantity.component';\nexport * from './configurator-attribute-quantity.module';\nexport * from './configurator-attribute-quantity.service';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Directive, EventEmitter, Input, Output } from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { TranslationService } from '@spartacus/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { Configurator } from '../../../../core/model/configurator.model';\nimport { ConfigFormUpdateEvent } from '../../../form/configurator-form.event';\nimport { ConfiguratorPriceComponentOptions } from '../../../price/configurator-price.component';\nimport { ConfiguratorAttributeQuantityComponentOptions } from '../../quantity/configurator-attribute-quantity.component';\nimport { ConfiguratorAttributeQuantityService } from '../../quantity/configurator-attribute-quantity.service';\nimport { ConfiguratorAttributeBaseComponent } from './configurator-attribute-base.component';\n\n@Directive()\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport abstract class ConfiguratorAttributeSingleSelectionBaseComponent extends ConfiguratorAttributeBaseComponent {\n  loading$ = new BehaviorSubject<boolean>(false);\n\n  @Input() attribute: Configurator.Attribute;\n  @Input() ownerKey: string;\n  @Input() language: string;\n  @Input() ownerType: string;\n  @Output() selectionChange = new EventEmitter<ConfigFormUpdateEvent>();\n\n  constructor(\n    protected quantityService: ConfiguratorAttributeQuantityService,\n    protected translation: TranslationService\n  ) {\n    super();\n  }\n\n  /**\n   * Checks if we are supposed to render a quantity control, which\n   * can be derived from the attribute meta data\n   *\n   * @return {boolean} - Display quantity picker?\n   */\n  get withQuantity(): boolean {\n    return this.quantityService.withQuantity(\n      this.attribute.dataType ?? Configurator.DataType.NOT_IMPLEMENTED,\n      this.attribute.uiType ?? Configurator.UiType.NOT_IMPLEMENTED\n    );\n  }\n\n  /**\n   * Checks if quantity control should be disabled\n   *\n   * @return {boolean} - Disable quantity picker?\n   */\n  get disableQuantityActions(): boolean {\n    return this.quantityService.disableQuantityActions(\n      this.attribute.selectedSingleValue\n    );\n  }\n\n  onSelect(value: string): void {\n    this.loading$.next(true);\n\n    const event: ConfigFormUpdateEvent = {\n      changedAttribute: {\n        ...this.attribute,\n        selectedSingleValue: value,\n      },\n      ownerKey: this.ownerKey,\n      updateType: Configurator.UpdateType.ATTRIBUTE,\n    };\n\n    this.selectionChange.emit(event);\n  }\n\n  onSelectAdditionalValue(event: ConfigFormUpdateEvent): void {\n    const userInput = event.changedAttribute.userInput;\n\n    if (userInput) {\n      this.loading$.next(true);\n      event.changedAttribute.selectedSingleValue = userInput;\n      this.selectionChange.emit(event);\n    }\n  }\n\n  onHandleQuantity(quantity: number): void {\n    this.loading$.next(true);\n\n    const event: ConfigFormUpdateEvent = {\n      changedAttribute: {\n        ...this.attribute,\n        quantity,\n      },\n      ownerKey: this.ownerKey,\n      updateType: Configurator.UpdateType.ATTRIBUTE_QUANTITY,\n    };\n\n    this.selectionChange.emit(event);\n  }\n\n  onChangeQuantity(eventObject: any, form?: UntypedFormControl): void {\n    if (!eventObject) {\n      if (form) {\n        form.setValue('0');\n      }\n      this.onSelect('');\n    } else {\n      this.onHandleQuantity(eventObject);\n    }\n  }\n\n  protected getInitialQuantity(form?: UntypedFormControl): number {\n    const quantity: number = this.attribute.quantity ?? 0;\n    if (form) {\n      return form.value !== '0' ? quantity : 0;\n    } else {\n      return this.attribute.selectedSingleValue ? quantity : 0;\n    }\n  }\n\n  /**\n   *  Extract corresponding quantity parameters\n   *\n   * @param {FormControl} form - Form control\n   * @return {ConfiguratorAttributeQuantityComponentOptions} - New quantity options\n   */\n  extractQuantityParameters(\n    form?: UntypedFormControl\n  ): ConfiguratorAttributeQuantityComponentOptions {\n    const initialQuantity = this.getInitialQuantity(form);\n    const disableQuantityActions$ = this.loading$.pipe(\n      map((loading) => {\n        return loading || this.disableQuantityActions;\n      })\n    );\n\n    return {\n      allowZero: !this.attribute.required,\n      initialQuantity: initialQuantity,\n      disableQuantityActions$: disableQuantityActions$,\n    };\n  }\n\n  /**\n   * Extract corresponding price formula parameters.\n   * For the single-selection attribute types the complete price formula should be displayed at the attribute level.\n   *\n   * @return {ConfiguratorPriceComponentOptions} - New price formula\n   */\n  extractPriceFormulaParameters(): ConfiguratorPriceComponentOptions {\n    return {\n      quantity: this.attribute.quantity,\n      price: this.getSelectedValuePrice(),\n      priceTotal: this.attribute.attributePriceTotal,\n      isLightedUp: true,\n    };\n  }\n\n  /**\n   * Extract corresponding value price formula parameters.\n   * For the single-selection attribute types only value price should be displayed at the value level.\n   *\n   * @param {Configurator.Value} value - Configurator value\n   * @return {ConfiguratorPriceComponentOptions} - New price formula\n   */\n  extractValuePriceFormulaParameters(\n    value?: Configurator.Value\n  ): ConfiguratorPriceComponentOptions | undefined {\n    if (value) {\n      return {\n        price: value.valuePrice,\n        isLightedUp: value.selected,\n      };\n    }\n  }\n\n  protected getSelectedValuePrice(): Configurator.PriceDetails | undefined {\n    return this.attribute.values?.find((value) => value.selected)?.valuePrice;\n  }\n\n  get isAdditionalValueNumeric(): boolean {\n    return (\n      this.isWithAdditionalValues(this.attribute) &&\n      this.attribute.validationType === Configurator.ValidationType.NUMERIC\n    );\n  }\n\n  get isAdditionalValueAlphaNumeric(): boolean {\n    return (\n      this.isWithAdditionalValues(this.attribute) &&\n      this.attribute.validationType === Configurator.ValidationType.NONE\n    );\n  }\n\n  getAriaLabel(\n    value: Configurator.Value,\n    attribute: Configurator.Attribute\n  ): string {\n    let ariaLabel = this.getAriaLabelWithoutAdditionalValue(value, attribute);\n    if (this.isWithAdditionalValues(this.attribute)) {\n      let ariaLabelWithAdditionalValue = this.getAdditionalValueAriaLabel();\n      return ariaLabel + ' ' + ariaLabelWithAdditionalValue;\n    } else {\n      return ariaLabel;\n    }\n  }\n\n  getAdditionalValueAriaLabel(): string {\n    let ariaLabel = '';\n    this.translation\n      .translate('configurator.a11y.additionalValue')\n      .pipe(take(1))\n      .subscribe((text) => (ariaLabel = text));\n    return ariaLabel;\n  }\n\n  getAriaLabelWithoutAdditionalValue(\n    value: Configurator.Value,\n    attribute: Configurator.Attribute\n  ): string {\n    let ariaLabel = '';\n    if (value.valuePrice && value.valuePrice?.value !== 0) {\n      if (value.valuePriceTotal && value.valuePriceTotal?.value !== 0) {\n        this.translation\n          .translate(\n            'configurator.a11y.selectedValueOfAttributeFullWithPrice',\n            {\n              value: value.valueDisplay,\n              attribute: attribute.label,\n              price: value.valuePriceTotal.formattedValue,\n            }\n          )\n          .pipe(take(1))\n          .subscribe((text) => (ariaLabel = text));\n      } else {\n        this.translation\n          .translate(\n            'configurator.a11y.selectedValueOfAttributeFullWithPrice',\n            {\n              value: value.valueDisplay,\n              attribute: attribute.label,\n              price: value.valuePrice.formattedValue,\n            }\n          )\n          .pipe(take(1))\n          .subscribe((text) => (ariaLabel = text));\n      }\n    } else {\n      this.translation\n        .translate('configurator.a11y.selectedValueOfAttributeFull', {\n          value: value.valueDisplay,\n          attribute: attribute.label,\n        })\n        .pipe(take(1))\n        .subscribe((text) => (ariaLabel = text));\n    }\n    return ariaLabel;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Directive, EventEmitter, Input, Output } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Configurator } from '../../../../core/model/configurator.model';\nimport { ConfigFormUpdateEvent } from '../../../form/configurator-form.event';\nimport { ConfiguratorPriceComponentOptions } from '../../../price/configurator-price.component';\nimport { ConfiguratorAttributeQuantityComponentOptions } from '../../quantity/configurator-attribute-quantity.component';\nimport { ConfiguratorAttributeQuantityService } from '../../quantity/configurator-attribute-quantity.service';\nimport { ConfiguratorAttributeBaseComponent } from './configurator-attribute-base.component';\n\n@Directive()\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport abstract class ConfiguratorAttributeMultiSelectionBaseComponent extends ConfiguratorAttributeBaseComponent {\n  loading$ = new BehaviorSubject<boolean>(false);\n\n  @Input() attribute: Configurator.Attribute;\n  @Input() ownerKey: string;\n  @Output() selectionChange = new EventEmitter<ConfigFormUpdateEvent>();\n\n  constructor(protected quantityService: ConfiguratorAttributeQuantityService) {\n    super();\n  }\n\n  /**\n   * Checks if we are supposed to render a quantity control on attribute level, which\n   * can be derived from the attribute meta data\n   *\n   * @return {boolean} - Display quantity picker on attribute level?\n   */\n  get withQuantityOnAttributeLevel(): boolean {\n    return this.quantityService.withQuantityOnAttributeLevel(this.attribute);\n  }\n\n  /**\n   * Checks if we are supposed to render a quantity control, which\n   * can be derived from the attribute meta data\n   *\n   * @return {boolean} - Display quantity picker?\n   */\n  get withQuantity(): boolean {\n    return this.quantityService.withQuantity(\n      this.attribute.dataType ?? Configurator.DataType.NOT_IMPLEMENTED,\n      this.attribute.uiType ?? Configurator.UiType.NOT_IMPLEMENTED\n    );\n  }\n\n  /**\n   * Checks if quantity control should be disabled\n   *\n   * @return {boolean} - Disable quantity picker?\n   */\n  get disableQuantityActions(): boolean {\n    return this.quantityService.disableQuantityActionsMultiSelection(\n      this.attribute\n    );\n  }\n\n  /**\n   *  Extract corresponding quantity parameters\n   *\n   * @param {number} initialQuantity - Initial quantity\n   * @param {boolean} allowZero - Allow zero\n   * @return {ConfiguratorAttributeQuantityComponentOptions} - New quantity options\n   */\n  extractQuantityParameters(\n    initialQuantity?: number,\n    allowZero?: boolean\n  ): ConfiguratorAttributeQuantityComponentOptions {\n    const disableQuantityActions$ = this.loading$.pipe(\n      map((loading) => {\n        return loading || this.disableQuantityActions;\n      })\n    );\n\n    return {\n      allowZero: allowZero ?? !this.attribute.required,\n      initialQuantity: initialQuantity,\n      disableQuantityActions$: disableQuantityActions$,\n    };\n  }\n\n  protected onHandleAttributeQuantity(quantity: number): void {\n    this.loading$.next(true);\n\n    const event: ConfigFormUpdateEvent = {\n      changedAttribute: {\n        ...this.attribute,\n        quantity,\n      },\n      ownerKey: this.ownerKey,\n      updateType: Configurator.UpdateType.ATTRIBUTE_QUANTITY,\n    };\n\n    this.selectionChange.emit(event);\n  }\n\n  /**\n   * Extract corresponding price formula parameters.\n   * For the multi-selection attribute types only total price of the attribute should be displayed at the attribute level.\n   *\n   * @return {ConfiguratorPriceComponentOptions} - New price formula\n   */\n  extractPriceFormulaParameters(): ConfiguratorPriceComponentOptions {\n    return {\n      quantity: 0,\n      price: {\n        value: 0,\n        currencyIso: '',\n      },\n      priceTotal: this.attribute.attributePriceTotal,\n      isLightedUp: true,\n    };\n  }\n\n  /**\n   * Extract corresponding value price formula parameters.\n   * For the multi-selection attribute types the complete price formula should be displayed at the value level.\n   *\n   * @param {Configurator.Value} value - Configurator value\n   * @return {ConfiguratorPriceComponentOptions} - New price formula\n   */\n  extractValuePriceFormulaParameters(\n    value: Configurator.Value\n  ): ConfiguratorPriceComponentOptions | undefined {\n    return {\n      quantity: value.quantity,\n      price: value.valuePrice,\n      priceTotal: value.valuePriceTotal,\n      isLightedUp: value.selected,\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-attribute-base.component';\nexport * from './configurator-attribute-single-selection-base.component';\nexport * from './configurator-attribute-multi-selection-base.component';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  isDevMode,\n  OnInit,\n} from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { Configurator } from '../../../../core/model/configurator.model';\nimport { ConfigFormUpdateEvent } from '../../../form/configurator-form.event';\nimport { ConfiguratorStorefrontUtilsService } from '../../../service/configurator-storefront-utils.service';\nimport { ConfiguratorAttributeQuantityService } from '../../quantity/configurator-attribute-quantity.service';\nimport { ConfiguratorAttributeMultiSelectionBaseComponent } from '../base/configurator-attribute-multi-selection-base.component';\n\n@Component({\n  selector: 'cx-configurator-attribute-checkbox-list',\n  templateUrl: './configurator-attribute-checkbox-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorAttributeCheckBoxListComponent\n  extends ConfiguratorAttributeMultiSelectionBaseComponent\n  implements OnInit\n{\n  attributeCheckBoxForms = new Array<UntypedFormControl>();\n\n  @Input() group: string;\n\n  constructor(\n    protected configUtilsService: ConfiguratorStorefrontUtilsService,\n    protected quantityService: ConfiguratorAttributeQuantityService\n  ) {\n    super(quantityService);\n  }\n\n  ngOnInit(): void {\n    const disabled = !this.allowZeroValueQuantity;\n\n    for (const value of this.attribute.values ?? []) {\n      let attributeCheckBoxForm;\n\n      if (value.selected) {\n        attributeCheckBoxForm = new UntypedFormControl({\n          value: true,\n          disabled: disabled,\n        });\n      } else {\n        attributeCheckBoxForm = new UntypedFormControl(false);\n      }\n      this.attributeCheckBoxForms.push(attributeCheckBoxForm);\n    }\n  }\n\n  get allowZeroValueQuantity(): boolean {\n    return this.quantityService.allowZeroValueQuantity(this.attribute);\n  }\n\n  onSelect(): void {\n    const selectedValues =\n      this.configUtilsService.assembleValuesForMultiSelectAttributes(\n        this.attributeCheckBoxForms,\n        this.attribute\n      );\n\n    const event: ConfigFormUpdateEvent = {\n      changedAttribute: {\n        ...this.attribute,\n        values: selectedValues,\n      },\n      ownerKey: this.ownerKey,\n      updateType: Configurator.UpdateType.ATTRIBUTE,\n    };\n\n    this.selectionChange.emit(event);\n  }\n\n  onChangeValueQuantity(\n    eventObject: any,\n    valueCode: string,\n    formIndex: number\n  ): void {\n    if (eventObject === 0) {\n      this.attributeCheckBoxForms[formIndex].setValue(false);\n      this.onSelect();\n      return;\n    }\n\n    const value: Configurator.Value | undefined = this.configUtilsService\n      .assembleValuesForMultiSelectAttributes(\n        this.attributeCheckBoxForms,\n        this.attribute\n      )\n      .find((item) => item.valueCode === valueCode);\n\n    if (!value) {\n      if (isDevMode()) {\n        console.warn('no value for event:', eventObject);\n      }\n\n      return;\n    }\n\n    value.quantity = eventObject;\n\n    const event: ConfigFormUpdateEvent = {\n      changedAttribute: {\n        ...this.attribute,\n        values: [value],\n      },\n      ownerKey: this.ownerKey,\n      updateType: Configurator.UpdateType.VALUE_QUANTITY,\n    };\n\n    this.selectionChange.emit(event);\n  }\n\n  onChangeQuantity(eventObject: any): void {\n    if (!eventObject) {\n      this.attributeCheckBoxForms.forEach((_, index) =>\n        this.attributeCheckBoxForms[index].setValue(false)\n      );\n      this.onSelect();\n    } else {\n      this.onHandleAttributeQuantity(eventObject);\n    }\n  }\n}\n","<fieldset>\n  <legend style=\"display: none\">{{ attribute.label }}</legend>\n  <div id=\"{{ createAttributeIdForConfigurator(attribute) }}\">\n    <div\n      *ngIf=\"withQuantityOnAttributeLevel\"\n      class=\"cx-attribute-level-quantity-price\"\n    >\n      <cx-configurator-attribute-quantity\n        (changeQuantity)=\"onChangeQuantity($event)\"\n        [quantityOptions]=\"\n          extractQuantityParameters(attribute.quantity, !attribute.required)\n        \"\n      ></cx-configurator-attribute-quantity>\n      <cx-configurator-price\n        [formula]=\"extractPriceFormulaParameters()\"\n      ></cx-configurator-price>\n    </div>\n    <ng-container *ngFor=\"let value of attribute.values; let i = index\">\n      <div class=\"form-check\">\n        <div class=\"cx-value-label-pair\">\n          <input\n            id=\"{{\n              createAttributeValueIdForConfigurator(attribute, value.valueCode)\n            }}\"\n            type=\"checkbox\"\n            class=\"form-check-input\"\n            [cxFocus]=\"{ key: attribute.name + '-' + value.name }\"\n            [value]=\"value.valueCode\"\n            (change)=\"onSelect()\"\n            [formControl]=\"attributeCheckBoxForms[i]\"\n            name=\"{{ createAttributeIdForConfigurator(attribute) }}\"\n            [attr.aria-label]=\"\n              value.valuePrice && value.valuePrice?.value !== 0\n                ? value.valuePriceTotal && value.valuePriceTotal?.value !== 0\n                  ? ('configurator.a11y.valueOfAttributeFullWithPrice'\n                    | cxTranslate\n                      : {\n                          value: value.valueDisplay,\n                          attribute: attribute.label,\n                          price: value.valuePriceTotal.formattedValue\n                        })\n                  : ('configurator.a11y.valueOfAttributeFullWithPrice'\n                    | cxTranslate\n                      : {\n                          value: value.valueDisplay,\n                          attribute: attribute.label,\n                          price: value.valuePrice.formattedValue\n                        })\n                : ('configurator.a11y.valueOfAttributeFull'\n                  | cxTranslate\n                    : { value: value.valueDisplay, attribute: attribute.label })\n            \"\n            [attr.aria-describedby]=\"\n              createAttributeUiKey('label', attribute.name)\n            \"\n          />\n          <label\n            id=\"{{\n              createValueUiKey('label', attribute.name, value.valueCode)\n            }}\"\n            for=\"{{\n              createAttributeValueIdForConfigurator(attribute, value.valueCode)\n            }}\"\n            aria-hidden=\"true\"\n            class=\"cx-configurator-attribute-value-label form-check-label\"\n            >{{ value.valueDisplay }}</label\n          >\n        </div>\n        <div class=\"cx-value-price\">\n          <cx-configurator-price\n            [formula]=\"extractValuePriceFormulaParameters(value)\"\n          ></cx-configurator-price>\n        </div>\n      </div>\n      <cx-configurator-attribute-quantity\n        *ngIf=\"value.selected && withQuantity && !withQuantityOnAttributeLevel\"\n        (changeQuantity)=\"onChangeValueQuantity($event, value.valueCode, i)\"\n        [quantityOptions]=\"\n          extractQuantityParameters(value.quantity, allowZeroValueQuantity)\n        \"\n      ></cx-configurator-attribute-quantity>\n    </ng-container>\n  </div>\n</fieldset>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { I18nModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '@spartacus/storefront';\nimport { ConfiguratorAttributeQuantityModule } from '../../quantity/configurator-attribute-quantity.module';\nimport { ConfiguratorAttributeCheckBoxListComponent } from './configurator-attribute-checkbox-list.component';\nimport { ConfiguratorPriceModule } from '../../../price/configurator-price.module';\n\n@NgModule({\n  imports: [\n    KeyboardFocusModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    I18nModule,\n    ConfiguratorAttributeQuantityModule,\n    ConfiguratorPriceModule,\n  ],\n  declarations: [ConfiguratorAttributeCheckBoxListComponent],\n  exports: [ConfiguratorAttributeCheckBoxListComponent],\n})\nexport class ConfiguratorAttributeCheckboxListModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-attribute-checkbox-list.component';\nexport * from './configurator-attribute-checkbox-list.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { Configurator } from '../../../../core/model/configurator.model';\nimport { ConfigFormUpdateEvent } from '../../../form/configurator-form.event';\nimport { ConfiguratorPriceComponentOptions } from '../../../price';\nimport { ConfiguratorAttributeBaseComponent } from '../base/configurator-attribute-base.component';\n\n@Component({\n  selector: 'cx-configurator-attribute-checkbox',\n  templateUrl: './configurator-attribute-checkbox.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorAttributeCheckBoxComponent\n  extends ConfiguratorAttributeBaseComponent\n  implements OnInit\n{\n  @Input() attribute: Configurator.Attribute;\n  @Input() group: string;\n  @Input() ownerKey: string;\n  @Output() selectionChange = new EventEmitter<ConfigFormUpdateEvent>();\n\n  attributeCheckBoxForm = new UntypedFormControl('');\n\n  ngOnInit() {\n    this.attributeCheckBoxForm.setValue(this.attribute.selectedSingleValue);\n  }\n\n  /**\n   * Fired when a check box has been selected i.e. when a value has been set\n   */\n  onSelect(): void {\n    const selectedValues = this.assembleSingleValue();\n\n    const event: ConfigFormUpdateEvent = {\n      ownerKey: this.ownerKey,\n      changedAttribute: {\n        ...this.attribute,\n        values: selectedValues,\n      },\n    };\n    this.selectionChange.emit(event);\n  }\n\n  protected assembleSingleValue(): Configurator.Value[] {\n    const localAssembledValues: Configurator.Value[] = [];\n    const value = this.attribute.values ? this.attribute.values[0] : undefined;\n    //we can assume that for this component, value is always present\n    if (value) {\n      const localAttributeValue: Configurator.Value = {\n        valueCode: value.valueCode,\n      };\n\n      localAttributeValue.name = value.name;\n      localAttributeValue.selected = this.attributeCheckBoxForm.value;\n      localAssembledValues.push(localAttributeValue);\n    }\n\n    return localAssembledValues;\n  }\n\n  /**\n   * Extract corresponding value price formula parameters.\n   * For the multi-selection attribute types the complete price formula should be displayed at the value level.\n   *\n   * @param {Configurator.Value} value - Configurator value\n   * @return {ConfiguratorPriceComponentOptions} - New price formula\n   */\n  extractValuePriceFormulaParameters(\n    value: Configurator.Value\n  ): ConfiguratorPriceComponentOptions | undefined {\n    return {\n      quantity: value.quantity,\n      price: value.valuePrice,\n      priceTotal: value.valuePriceTotal,\n      isLightedUp: value.selected,\n    };\n  }\n}\n","<ng-container *cxFeatureLevel=\"'!4.1'\">\n  <div id=\"{{ createAttributeIdForConfigurator(attribute) }}\">\n    <div class=\"form-check\">\n      <input\n        id=\"{{\n          createAttributeValueIdForConfigurator(\n            attribute,\n            attribute?.values[0].valueCode\n          )\n        }}\"\n        type=\"checkbox\"\n        class=\"form-check-input\"\n        [value]=\"attribute?.values[0].valueCode\"\n        [cxFocus]=\"{ key: attribute.name + '-' + attribute?.values[0].name }\"\n        (change)=\"onSelect()\"\n        [formControl]=\"attributeCheckBoxForm\"\n        name=\"{{ createAttributeIdForConfigurator(attribute) }}\"\n        [attr.aria-label]=\"\n          'configurator.a11y.valueOfAttributeFull'\n            | cxTranslate\n              : {\n                  value: attribute?.values[0].valueDisplay,\n                  attribute: attribute.label\n                }\n        \"\n        [attr.aria-describedby]=\"createAttributeUiKey('label', attribute.name)\"\n      />\n      <label\n        id=\"{{\n          createValueUiKey(\n            'label',\n            attribute.name,\n            attribute?.values[0].valueCode\n          )\n        }}\"\n        for=\"{{\n          createAttributeValueIdForConfigurator(\n            attribute,\n            attribute?.values[0].valueCode\n          )\n        }}\"\n        aria-hidden=\"true\"\n        class=\"form-check-label\"\n        >{{ attribute?.values[0].valueDisplay }}</label\n      >\n    </div>\n  </div>\n</ng-container>\n\n<ng-container *cxFeatureLevel=\"'4.1'\">\n  <fieldset>\n    <legend style=\"display: none\">{{ attribute.label }}</legend>\n    <div id=\"{{ createAttributeIdForConfigurator(attribute) }}\">\n      <div class=\"form-check\">\n        <div class=\"cx-value-label-pair\">\n          <input\n            id=\"{{\n              createAttributeValueIdForConfigurator(\n                attribute,\n                attribute?.values[0].valueCode\n              )\n            }}\"\n            type=\"checkbox\"\n            class=\"form-check-input\"\n            [value]=\"attribute?.values[0].valueCode\"\n            [cxFocus]=\"{\n              key: attribute.name + '-' + attribute?.values[0].name\n            }\"\n            (change)=\"onSelect()\"\n            [formControl]=\"attributeCheckBoxForm\"\n            name=\"{{ createAttributeIdForConfigurator(attribute) }}\"\n            [attr.aria-label]=\"\n              attribute?.values[0].valuePrice &&\n              attribute?.values[0].valuePrice?.value !== 0\n                ? ('configurator.a11y.valueOfAttributeFullWithPrice'\n                  | cxTranslate\n                    : {\n                        value: attribute?.values[0].valueDisplay,\n                        attribute: attribute.label,\n                        price: attribute?.values[0].valuePrice.formattedValue\n                      })\n                : ('configurator.a11y.valueOfAttributeFull'\n                  | cxTranslate\n                    : {\n                        value: attribute?.values[0].valueDisplay,\n                        attribute: attribute.label\n                      })\n            \"\n            [attr.aria-describedby]=\"\n              createAttributeUiKey('label', attribute.name) +\n              ' ' +\n              createAttributeUiKey('attribute-msg', attribute.name)\n            \"\n          />\n          <label\n            id=\"{{\n              createValueUiKey(\n                'label',\n                attribute.name,\n                attribute?.values[0].valueCode\n              )\n            }}\"\n            for=\"{{\n              createAttributeValueIdForConfigurator(\n                attribute,\n                attribute?.values[0].valueCode\n              )\n            }}\"\n            aria-hidden=\"true\"\n            class=\"form-check-label\"\n            >{{ attribute?.values[0].valueDisplay }}</label\n          >\n        </div>\n        <div class=\"cx-value-price\">\n          <cx-configurator-price\n            [formula]=\"extractValuePriceFormulaParameters(attribute?.values[0])\"\n          ></cx-configurator-price>\n        </div>\n      </div>\n    </div>\n  </fieldset>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FeaturesConfigModule, I18nModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '@spartacus/storefront';\nimport { ConfiguratorAttributeCheckBoxComponent } from './configurator-attribute-checkbox.component';\nimport { ConfiguratorPriceModule } from '../../../price/configurator-price.module';\n\n@NgModule({\n  imports: [\n    KeyboardFocusModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    I18nModule,\n    FeaturesConfigModule,\n    ConfiguratorPriceModule,\n  ],\n  declarations: [ConfiguratorAttributeCheckBoxComponent],\n  exports: [ConfiguratorAttributeCheckBoxComponent],\n})\nexport class ConfiguratorAttributeCheckboxModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-attribute-checkbox.component';\nexport * from './configurator-attribute-checkbox.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { CommonConfigurator } from '@spartacus/product-configurator/common';\nimport { Subscription, timer } from 'rxjs';\nimport { debounce } from 'rxjs/operators';\nimport { Configurator } from '../../../../core/model/configurator.model';\nimport { ConfiguratorUISettingsConfig } from '../../../config/configurator-ui-settings.config';\nimport { ConfigFormUpdateEvent } from '../../../form/configurator-form.event';\nimport { ConfiguratorAttributeBaseComponent } from '../base/configurator-attribute-base.component';\n\n@Component({\n  selector: 'cx-configurator-attribute-input-field',\n  templateUrl: './configurator-attribute-input-field.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorAttributeInputFieldComponent\n  extends ConfiguratorAttributeBaseComponent\n  implements OnInit, OnDestroy\n{\n  attributeInputForm = new UntypedFormControl('');\n  protected sub: Subscription;\n\n  @Input() ownerType: CommonConfigurator.OwnerType;\n  @Input() attribute: Configurator.Attribute;\n  @Input() group: string;\n  @Input() ownerKey: string;\n\n  @Output() inputChange = new EventEmitter<ConfigFormUpdateEvent>();\n\n  /**\n   * In case no config is injected, or when the debounce time is not configured at all,\n   * this value will be used as fallback.\n   */\n  protected readonly FALLBACK_DEBOUNCE_TIME = 500;\n\n  constructor(protected config: ConfiguratorUISettingsConfig) {\n    super();\n  }\n\n  ngOnInit() {\n    this.attributeInputForm.setValue(this.attribute.userInput);\n    if (\n      this.ownerType === CommonConfigurator.OwnerType.CART_ENTRY &&\n      this.attribute.required &&\n      this.attribute.incomplete &&\n      !this.attributeInputForm.value\n    ) {\n      this.attributeInputForm.markAsTouched();\n    }\n    this.sub = this.attributeInputForm.valueChanges\n      .pipe(\n        debounce(() =>\n          timer(\n            this.config.productConfigurator?.updateDebounceTime?.input ??\n              this.FALLBACK_DEBOUNCE_TIME\n          )\n        )\n      )\n      .subscribe(() => this.onChange());\n  }\n\n  onChange(): void {\n    const event: ConfigFormUpdateEvent = {\n      ownerKey: this.ownerKey,\n      changedAttribute: {\n        ...this.attribute,\n        userInput: this.attributeInputForm.value,\n      },\n    };\n\n    if (!this.attributeInputForm.invalid) {\n      this.inputChange.emit(event);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n\n  /**\n   * Checks if the component needs to be marked as required.\n   * This is never the case if it is used as sub component for an attribute type which allows an additional value\n   * @returns Required?\n   */\n  get isRequired(): boolean {\n    const isNonDomainAttributeType =\n      this.attribute.uiType === Configurator.UiType.STRING ||\n      this.attribute.uiType === Configurator.UiType.NUMERIC;\n    return isNonDomainAttributeType ? this.attribute.required ?? false : false;\n  }\n}\n","<div id=\"{{ createAttributeIdForConfigurator(attribute) }}\" class=\"form-group\">\n  <input\n    [formControl]=\"attributeInputForm\"\n    [required]=\"isRequired\"\n    class=\"form-control\"\n    attr.required=\"{{ attribute.required }}\"\n    maxlength=\"{{ attribute.maxlength }}\"\n    [attr.aria-label]=\"\n      attribute.userInput === undefined || attribute.userInput.length === 0\n        ? ('configurator.a11y.valueOfAttributeBlank'\n          | cxTranslate\n            : {\n                attribute: attribute.label\n              })\n        : ('configurator.a11y.valueOfAttributeFull'\n          | cxTranslate\n            : {\n                value: attribute.userInput,\n                attribute: attribute.label\n              })\n    \"\n    [attr.aria-describedby]=\"createAttributeUiKey('label', attribute.name)\"\n    [cxFocus]=\"{\n      key: createAttributeIdForConfigurator(attribute)\n    }\"\n  />\n</div>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  formatNumber,\n  getLocaleNumberSymbol,\n  NumberSymbol,\n} from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { AbstractControl, ValidatorFn } from '@angular/forms';\nimport { Configurator } from '../../../../core/model/configurator.model';\n\nexport interface ConfiguratorAttributeNumericInterval {\n  minValue?: number;\n  maxValue?: number;\n  minValueIncluded: boolean;\n  maxValueIncluded: boolean;\n}\n\n/**\n * Provides validation and formatting of numeric input\n */\n@Injectable({ providedIn: 'root' })\nexport class ConfiguratorAttributeNumericInputFieldService {\n  /**\n   * Validates numeric input according to settings that are not derived from the locale but from the attribute\n   * meta data like the total number of digits and the maximum number of decimal places.\n   *\n   * @param input Numeric user input, formatted according to session locale\n   * @param groupingSeparator Separator for grouping, e.g. ',' for 'en' locale. We allow the grouping separator but\n   *   do not check exactly on the position of it in the numerical input. This e.g. is ok: '12,12,12', will be converted\n   *   to '121,212' after the next roundtrip\n   * @param decimalSeparator  Decimal separator, e.g. '.' for 'en' locale. Must not occur more that 1 time in the input.\n   * @param numberTotalPlaces  Total number of places e.g. 10\n   * @param numberDecimalPlaces  Number of decimal places e.g. 2\n   *  @returns {boolean} Did we see a validation error?\n   */\n  performValidationAccordingToMetaData(\n    input: string,\n    groupingSeparator: string,\n    decimalSeparator: string,\n    numberTotalPlaces: number,\n    numberDecimalPlaces: number\n  ): boolean {\n    const escape = '\\\\';\n    const search: RegExp = new RegExp(escape + groupingSeparator, 'g');\n    const woGrouping = input.replace(search, '');\n    const splitParts = woGrouping.split(decimalSeparator);\n\n    if (splitParts.length > 2) {\n      return true;\n    }\n    if (splitParts.length === 1) {\n      return woGrouping.length > numberTotalPlaces - numberDecimalPlaces;\n    }\n\n    return (\n      splitParts[0].length > numberTotalPlaces - numberDecimalPlaces ||\n      splitParts[1].length > numberDecimalPlaces\n    );\n  }\n\n  formatIntervalValue(\n    intervalValue: number,\n    decimalPlaces: number | undefined,\n    locale: string\n  ): string {\n    if (decimalPlaces === undefined) {\n      decimalPlaces = 0;\n    }\n    let formatted = formatNumber(\n      intervalValue,\n      locale,\n      '1.' + decimalPlaces + '-' + decimalPlaces\n    );\n    return formatted;\n  }\n\n  /**\n   * Parses the value names and returns the intervals.\n   *\n   * @param values values of the attribute\n   * @returns {ConfiguratorAttributeNumericInterval[]} parsed intervals\n   */\n  getIntervals(\n    values: Configurator.Value[] | undefined\n  ): ConfiguratorAttributeNumericInterval[] {\n    const intervals: ConfiguratorAttributeNumericInterval[] = [];\n    if (values && values.length > 0) {\n      values.forEach((value) => {\n        let interval = this.getInterval(value);\n        if (interval && Object.keys(interval).length !== 0) {\n          intervals.push(interval);\n        }\n      });\n    }\n    return intervals;\n  }\n\n  /**\n   * Parses the value name and returns the interval structure.\n   * Valid interval strings:\n   * Standard Interval\n   * 5 - 10\n   * 5 - <10\n   * >5 - 10\n   * >5 - <10\n   * -10 - -5\n   * 1.25 - 1.35\n   *\n   * Infinite Interval\n   * >5\n   * >=5\n   * <5\n   * <=5\n   * >-5\n   *\n   * @param value value which will be parsed\n   * @returns {ConfiguratorAttributeNumericInterval} parsed interval\n   */\n  getInterval(\n    value: Configurator.Value\n  ): ConfiguratorAttributeNumericInterval | undefined {\n    let interval: ConfiguratorAttributeNumericInterval = {\n      minValue: undefined,\n      maxValue: undefined,\n      minValueIncluded: false,\n      maxValueIncluded: false,\n    };\n    if (!value || !value.name || value.selected) {\n      return undefined;\n    }\n\n    let minVal: string = '';\n    let maxVal: string = '';\n\n    // standard interval a - b\n    if (value.name.includes(' - ')) {\n      let index = value.name.indexOf(' - ');\n      minVal = value.name.substring(0, index);\n      maxVal = value.name.substring(index + 3, value.name.length);\n      interval.minValueIncluded = true;\n      interval.maxValueIncluded = true;\n      if (minVal.includes('>')) {\n        interval.minValueIncluded = false;\n        minVal = minVal.replace('>', '');\n      }\n\n      if (maxVal.includes('<')) {\n        interval.maxValueIncluded = false;\n        maxVal = maxVal.replace('<', '');\n      }\n\n      // infinite interval or single value\n    } else {\n      if (value.name.includes('>')) {\n        minVal = value.name;\n        interval.minValueIncluded = false;\n        minVal = minVal.replace('>', '');\n      }\n      if (value.name.includes('<')) {\n        maxVal = value.name;\n        interval.maxValueIncluded = false;\n        maxVal = maxVal.replace('<', '');\n      }\n      if (value.name.includes('≥')) {\n        minVal = value.name;\n        interval.minValueIncluded = true;\n        minVal = minVal.replace('≥', '');\n      }\n      if (value.name.includes('≤')) {\n        maxVal = value.name;\n        interval.maxValueIncluded = true;\n        maxVal = maxVal.replace('≤', '');\n      }\n      if (\n        !value.name.includes('>') &&\n        !value.name.includes('<') &&\n        !value.name.includes('≤') &&\n        !value.name.includes('≥')\n      ) {\n        minVal = value.name;\n        maxVal = value.name;\n      }\n    }\n\n    if (minVal && minVal.length > 0) {\n      interval.minValue = +minVal;\n    }\n    if (maxVal && maxVal.length > 0) {\n      interval.maxValue = +maxVal;\n    }\n\n    return interval;\n  }\n\n  /**\n   * Get pattern for the message that is displayed when the validation fails. This message e.g. looks like\n   * 'Wrong format, this numerical attribute should be entered according to pattern ##,###,###.##'\n   * for the 'en' locale for an attribute with total length of 10 and 2 decimal places.\n   *\n   * @param decimalPlaces Number of decimal places\n   * @param totalLength Total number of digits\n   * @param negativeAllowed Do we allow negative input?\n   * @param locale  Locale\n   *  @returns {string} The pattern that we display in the validation message\n   */\n  getPatternForValidationMessage(\n    decimalPlaces: number,\n    totalLength: number,\n    negativeAllowed: boolean,\n    locale: string\n  ): string {\n    let input: string = (10 ** totalLength - 1).toString();\n    if (decimalPlaces > 0) {\n      input =\n        input.substring(0, totalLength - decimalPlaces) +\n        '.' +\n        input.substring(totalLength - decimalPlaces, totalLength);\n    }\n    const inputAsNumber: number = Number(input);\n    let formatted = formatNumber(\n      inputAsNumber,\n      locale,\n      '1.' + decimalPlaces + '-' + decimalPlaces\n    ).replace(/9/g, '#');\n    if (negativeAllowed) {\n      formatted = '-' + formatted;\n    }\n    return formatted;\n  }\n\n  /**\n   * Returns the validator for the input component that represents numeric input.\n   * The validator only allows the grouping separator, the decimal separator, an optional '-' sign,\n   * and the digits between 0..9. This validator does not support the scientific notation of\n   * attributes.\n   *\n   * @param locale The locale\n   * @param numberDecimalPlaces Number of decimal places\n   * @param numberTotalPlaces  Total number of digits\n   * @param negativeAllowed: Do we allow negative input?\n   * @returns {ValidatorFn} The validator\n   */\n\n  getNumberFormatValidator(\n    locale: string,\n    numberDecimalPlaces: number,\n    numberTotalPlaces: number,\n    negativeAllowed: boolean\n  ): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } | null => {\n      const input: string = control.value;\n      if (input) {\n        //allowed: only numbers and separators\n\n        const groupingSeparator = getLocaleNumberSymbol(\n          locale,\n          NumberSymbol.Group\n        );\n        const decimalSeparator = getLocaleNumberSymbol(\n          locale,\n          NumberSymbol.Decimal\n        );\n        const expressionPrefix = negativeAllowed ? '^-?' : '^';\n        const expressionOnlyNumericalInput: RegExp = new RegExp(\n          expressionPrefix +\n            '[0123456789' +\n            groupingSeparator +\n            decimalSeparator +\n            ']*$'\n        );\n\n        if (!expressionOnlyNumericalInput.test(input)) {\n          return this.createValidationError(true);\n        }\n        return this.createValidationError(\n          this.performValidationAccordingToMetaData(\n            input,\n            groupingSeparator,\n            decimalSeparator,\n            numberTotalPlaces + (input.includes('-') ? 1 : 0),\n            numberDecimalPlaces\n          )\n        );\n      }\n      return null;\n    };\n  }\n\n  protected createValidationError(\n    isError: boolean\n  ): { [key: string]: any } | null {\n    return isError ? { wrongFormat: {} } : null;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { getLocaleId } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  isDevMode,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { TranslationService } from '@spartacus/core';\nimport { CommonConfigurator } from '@spartacus/product-configurator/common';\nimport { ICON_TYPE } from '@spartacus/storefront';\nimport { timer } from 'rxjs';\nimport { debounce, take } from 'rxjs/operators';\nimport { ConfiguratorUISettingsConfig } from '../../../config/configurator-ui-settings.config';\nimport { ConfiguratorAttributeInputFieldComponent } from '../input-field/configurator-attribute-input-field.component';\nimport {\n  ConfiguratorAttributeNumericInputFieldService,\n  ConfiguratorAttributeNumericInterval,\n} from './configurator-attribute-numeric-input-field.component.service';\n\nclass DefaultSettings {\n  numDecimalPlaces: number;\n  numTotalLength: number;\n  negativeAllowed: boolean;\n}\n\n@Component({\n  selector: 'cx-configurator-attribute-numeric-input-field',\n  templateUrl: './configurator-attribute-numeric-input-field.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorAttributeNumericInputFieldComponent\n  extends ConfiguratorAttributeInputFieldComponent\n  implements OnInit, OnDestroy\n{\n  numericFormatPattern: string;\n  locale: string;\n  iconType = ICON_TYPE;\n  intervals: ConfiguratorAttributeNumericInterval[] = [];\n\n  @Input() language: string;\n\n  constructor(\n    protected configAttributeNumericInputFieldService: ConfiguratorAttributeNumericInputFieldService,\n    protected config: ConfiguratorUISettingsConfig,\n    protected translation: TranslationService\n  ) {\n    super(config);\n  }\n\n  /**\n   * Do we need to display a validation message\n   */\n  mustDisplayValidationMessage(): boolean {\n    const wrongFormat: boolean =\n      (this.attributeInputForm.dirty || this.attributeInputForm.touched) &&\n      this.attributeInputForm.errors?.wrongFormat;\n\n    return wrongFormat;\n  }\n\n  ngOnInit() {\n    //locales are available as 'languages' in the commerce backend\n    this.locale = this.getInstalledLocale(this.language);\n\n    let numDecimalPlaces = this.attribute.numDecimalPlaces;\n    let numTotalLength = this.attribute.numTotalLength;\n    let negativeAllowed = this.attribute.negativeAllowed;\n\n    if (\n      numDecimalPlaces === undefined ||\n      numTotalLength === undefined ||\n      negativeAllowed === undefined\n    ) {\n      //This won't happen in environments with the standard configurators deployed, as numeric\n      //attributes do carry these settings. We still introduce default values to ease development\n      //of extension use cases, but log a warning\n      const defaultSettings = this.getDefaultSettings();\n      numDecimalPlaces = defaultSettings.numDecimalPlaces;\n      numTotalLength = defaultSettings.numTotalLength;\n      negativeAllowed = defaultSettings.negativeAllowed;\n      if (isDevMode()) {\n        console.warn(\n          'Meta data for numeric attribute not present, falling back to defaults'\n        );\n      }\n    }\n\n    this.attributeInputForm = new UntypedFormControl('', [\n      this.configAttributeNumericInputFieldService.getNumberFormatValidator(\n        this.locale,\n        numDecimalPlaces,\n        numTotalLength,\n        negativeAllowed\n      ),\n    ]);\n\n    this.numericFormatPattern =\n      this.configAttributeNumericInputFieldService.getPatternForValidationMessage(\n        numDecimalPlaces,\n        numTotalLength,\n        negativeAllowed,\n        this.locale\n      );\n    if (this.attribute.userInput) {\n      this.attributeInputForm.setValue(this.attribute.userInput);\n    }\n\n    if (\n      this.ownerType === CommonConfigurator.OwnerType.CART_ENTRY &&\n      this.attribute.required &&\n      this.attribute.incomplete &&\n      !this.attributeInputForm.value\n    ) {\n      this.attributeInputForm.markAsTouched();\n    }\n\n    if (this.attribute.intervalInDomain) {\n      this.intervals =\n        this.configAttributeNumericInputFieldService.getIntervals(\n          this.attribute.values\n        );\n    }\n\n    this.sub = this.attributeInputForm.valueChanges\n      .pipe(\n        debounce(() =>\n          timer(\n            this.config.productConfigurator?.updateDebounceTime?.input ??\n              this.FALLBACK_DEBOUNCE_TIME\n          )\n        )\n      )\n      .subscribe(() => this.onChange());\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n  }\n\n  /**\n   * Returns a concatenated help text for multiple intervals.\n   */\n  getHelpTextForInterval(): string {\n    let intervalText = '';\n    let concatenatedIntervalText = '';\n\n    this.intervals.forEach((interval, index) => {\n      intervalText = this.getIntervalText(interval);\n      if (index > 0) {\n        intervalText =\n          intervalText.charAt(0).toLowerCase() + intervalText.slice(1);\n        this.translation\n          .translate('configurator.a11y.combinedIntervalsText', {\n            combinedInterval: concatenatedIntervalText,\n            newInterval: intervalText,\n          })\n          .pipe(take(1))\n          .subscribe((text) => (concatenatedIntervalText = text));\n      } else {\n        concatenatedIntervalText = intervalText;\n      }\n    });\n\n    return concatenatedIntervalText.trim();\n  }\n\n  /**\n   * Returns the combined aria text for attribute and value and the interval help text\n   */\n  getAriaLabelComplete(): string {\n    let completeAriaText = '';\n    if (this.attribute.userInput?.length === 0) {\n      this.translation\n        .translate('configurator.a11y.valueOfAttributeBlank', {\n          attribute: this.attribute.label,\n        })\n        .pipe(take(1))\n        .subscribe((text) => (completeAriaText = text));\n    } else {\n      this.translation\n        .translate('configurator.a11y.valueOfAttributeFull', {\n          value: this.attribute.userInput,\n          attribute: this.attribute.label,\n        })\n        .pipe(take(1))\n        .subscribe((text) => (completeAriaText = text));\n    }\n\n    completeAriaText += ' ';\n    completeAriaText += this.getHelpTextForInterval();\n\n    return completeAriaText;\n  }\n\n  protected getIntervalText(\n    interval: ConfiguratorAttributeNumericInterval\n  ): string {\n    let intervalText = '';\n    let formattedMinValue = '';\n    let formattedMaxValue = '';\n\n    if (interval.minValue) {\n      formattedMinValue =\n        this.configAttributeNumericInputFieldService.formatIntervalValue(\n          interval.minValue,\n          this.attribute.numDecimalPlaces,\n          this.locale\n        );\n    }\n    if (interval.maxValue) {\n      formattedMaxValue =\n        this.configAttributeNumericInputFieldService.formatIntervalValue(\n          interval.maxValue,\n          this.attribute.numDecimalPlaces,\n          this.locale\n        );\n    }\n\n    if (interval.minValue && interval.maxValue) {\n      if (interval.minValue === interval.maxValue) {\n        this.translation\n          .translate('configurator.a11y.numericIntervalSingleValue', {\n            value: formattedMinValue,\n          })\n          .pipe(take(1))\n          .subscribe((text) => (intervalText = text));\n        return intervalText;\n      }\n      this.translation\n        .translate('configurator.a11y.numericIntervalStandard', {\n          minValue: formattedMinValue,\n          maxValue: formattedMaxValue,\n        })\n        .pipe(take(1))\n        .subscribe((text) => (intervalText = text));\n\n      if (!interval.minValueIncluded || !interval.maxValueIncluded) {\n        if (!interval.minValueIncluded && !interval.maxValueIncluded) {\n          intervalText += ' ';\n          intervalText += this.getAdditionalIntervalText(\n            'configurator.a11y.numericIntervalStandardOpen'\n          );\n        } else {\n          if (!interval.minValueIncluded) {\n            intervalText += ' ';\n            intervalText += this.getAdditionalIntervalText(\n              'configurator.a11y.numericIntervalStandardLowerEndpointNotIncluded'\n            );\n          }\n          if (!interval.maxValueIncluded) {\n            intervalText += ' ';\n            intervalText += this.getAdditionalIntervalText(\n              'configurator.a11y.numericIntervalStandardUpperEndpointNotIncluded'\n            );\n          }\n        }\n      }\n    } else {\n      if (interval.minValue) {\n        if (interval.minValueIncluded) {\n          intervalText = this.getInfiniteIntervalText(\n            'configurator.a11y.numericInfiniteIntervalMinValueIncluded',\n            formattedMinValue\n          );\n        } else {\n          intervalText = this.getInfiniteIntervalText(\n            'configurator.a11y.numericInfiniteIntervalMinValue',\n            formattedMinValue\n          );\n        }\n      } else {\n        if (interval.maxValue) {\n          if (interval.maxValueIncluded) {\n            intervalText = this.getInfiniteIntervalText(\n              'configurator.a11y.numericInfiniteIntervalMaxValueIncluded',\n              formattedMaxValue\n            );\n          } else {\n            intervalText = this.getInfiniteIntervalText(\n              'configurator.a11y.numericInfiniteIntervalMaxValue',\n              formattedMaxValue\n            );\n          }\n        }\n      }\n    }\n    return intervalText;\n  }\n\n  protected getAdditionalIntervalText(key: string): string {\n    let intervalText = '';\n    this.translation\n      .translate(key)\n      .pipe(take(1))\n      .subscribe((text) => (intervalText = text));\n    return intervalText;\n  }\n\n  protected getInfiniteIntervalText(key: string, value: string): string {\n    let intervalText = '';\n    this.translation\n      .translate(key, {\n        value: value,\n      })\n      .pipe(take(1))\n      .subscribe((text) => (intervalText = text));\n    return intervalText;\n  }\n\n  protected getDefaultSettings(): DefaultSettings {\n    return { numDecimalPlaces: 2, numTotalLength: 6, negativeAllowed: false };\n  }\n\n  protected getInstalledLocale(locale: string): string {\n    try {\n      getLocaleId(locale);\n      return locale;\n    } catch {\n      this.reportMissingLocaleData(locale);\n      return 'en';\n    }\n  }\n\n  protected reportMissingLocaleData(lang: string): void {\n    if (isDevMode()) {\n      console.warn(\n        `ConfigAttributeNumericInputFieldComponent: No locale data registered for '${lang}' (see https://angular.io/api/common/registerLocaleData).`\n      );\n    }\n  }\n}\n","<label *ngIf=\"attribute.intervalInDomain\" class=\"cx-intervalHelpText\">{{\n  this.getHelpTextForInterval()\n}}</label>\n<div id=\"{{ createAttributeIdForConfigurator(attribute) }}\" class=\"form-group\">\n  <input\n    [formControl]=\"attributeInputForm\"\n    [required]=\"isRequired\"\n    class=\"form-control\"\n    [attr.aria-describedby]=\"\n      mustDisplayValidationMessage()\n        ? createAttributeUiKey('label', attribute.name) +\n          ' ' +\n          createAttributeUiKey('attribute-msg', attribute.name)\n        : createAttributeUiKey('label', attribute.name)\n    \"\n    attr.role=\"{{ attribute.dataType }}\"\n    attr.required=\"{{ attribute.required }}\"\n    (change)=\"onChange()\"\n    maxlength=\"{{ attribute.maxlength }}\"\n    [attr.aria-label]=\"getAriaLabelComplete()\"\n    [cxFocus]=\"{\n      key: createAttributeIdForConfigurator(attribute)\n    }\"\n  />\n</div>\n<div\n  class=\"cx-validation-msg\"\n  id=\"{{ createAttributeUiKey('attribute-msg', attribute.name) }}\"\n  *ngIf=\"mustDisplayValidationMessage()\"\n  aria-live=\"assertive\"\n  aria-atomic=\"true\"\n  role=\"alert\"\n>\n  <cx-icon [type]=\"iconType.WARNING\"></cx-icon>\n  {{\n    'configurator.attribute.wrongNumericFormat'\n      | cxTranslate: { pattern: numericFormatPattern }\n  }}\n</div>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { TranslationService } from '@spartacus/core';\nimport { Configurator } from '../../../../core/model/configurator.model';\nimport { ConfiguratorAttributeQuantityService } from '../../quantity/configurator-attribute-quantity.service';\nimport { ConfiguratorAttributeSingleSelectionBaseComponent } from '../base/configurator-attribute-single-selection-base.component';\n\n@Component({\n  selector: 'cx-configurator-attribute-drop-down',\n  templateUrl: './configurator-attribute-drop-down.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorAttributeDropDownComponent\n  extends ConfiguratorAttributeSingleSelectionBaseComponent\n  implements OnInit\n{\n  attributeDropDownForm = new UntypedFormControl('');\n  @Input() group: string;\n\n  constructor(\n    protected quantityService: ConfiguratorAttributeQuantityService,\n    protected translation: TranslationService\n  ) {\n    super(quantityService, translation);\n  }\n\n  ngOnInit() {\n    this.attributeDropDownForm.setValue(this.attribute.selectedSingleValue);\n  }\n\n  getSelectedValue(): Configurator.Value | undefined {\n    return this.attribute.values?.find((value) => value?.selected);\n  }\n}\n","<div\n  class=\"form-group\"\n  *ngIf=\"attribute.values && attribute.values.length !== 0\"\n>\n  <label\n    for=\"{{ createAttributeIdForConfigurator(attribute) }}\"\n    class=\"cx-visually-hidden\"\n  >\n    {{\n      'configurator.a11y.listbox'\n        | cxTranslate\n          : {\n              count: attribute.values.length\n            }\n    }}\n  </label>\n  <select\n    id=\"{{ createAttributeIdForConfigurator(attribute) }}\"\n    class=\"form-control\"\n    [formControl]=\"attributeDropDownForm\"\n    [cxFocus]=\"{ key: attribute.name }\"\n    (change)=\"onSelect(attributeDropDownForm.value)\"\n    [attr.aria-describedby]=\"createAttributeUiKey('label', attribute.name)\"\n  >\n    <option\n      *ngFor=\"let item of attribute.values\"\n      [label]=\"item.valueDisplay\"\n      [selected]=\"item.selected\"\n      [attr.aria-label]=\"getAriaLabel(item, attribute)\"\n      [value]=\"item.valueCode\"\n    >\n      {{ item.valueDisplay }}\n    </option>\n  </select>\n  <div\n    *ngIf=\"!withQuantity && getSelectedValue()?.valuePrice\"\n    class=\"cx-value-price\"\n  >\n    <cx-configurator-price\n      [formula]=\"extractValuePriceFormulaParameters(getSelectedValue())\"\n    ></cx-configurator-price>\n  </div>\n</div>\n<div *ngIf=\"withQuantity\" class=\"cx-attribute-level-quantity-price\">\n  <cx-configurator-attribute-quantity\n    (changeQuantity)=\"onChangeQuantity($event, attributeDropDownForm)\"\n    [quantityOptions]=\"extractQuantityParameters(attributeDropDownForm)\"\n  ></cx-configurator-attribute-quantity>\n  <cx-configurator-price\n    [formula]=\"extractPriceFormulaParameters()\"\n  ></cx-configurator-price>\n</div>\n\n<cx-configurator-attribute-numeric-input-field\n  *ngIf=\"isAdditionalValueNumeric\"\n  class=\"cx-configurator-attribute-additional-value\"\n  [attribute]=\"attribute\"\n  [ownerType]=\"ownerType\"\n  [ownerKey]=\"ownerKey\"\n  [language]=\"language\"\n  (inputChange)=\"onSelectAdditionalValue($event)\"\n  [attr.aria-label]=\"'configurator.a11y.additionalValue' | cxTranslate\"\n></cx-configurator-attribute-numeric-input-field>\n\n<cx-configurator-attribute-input-field\n  *ngIf=\"isAdditionalValueAlphaNumeric\"\n  class=\"cx-configurator-attribute-additional-value\"\n  [attribute]=\"attribute\"\n  [ownerType]=\"ownerType\"\n  [ownerKey]=\"ownerKey\"\n  (inputChange)=\"onSelectAdditionalValue($event)\"\n  [attr.aria-label]=\"'configurator.a11y.additionalValue' | cxTranslate\"\n>\n</cx-configurator-attribute-input-field>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '@spartacus/storefront';\nimport { KeyboardFocusModule } from '@spartacus/storefront';\nimport { ConfiguratorAttributeNumericInputFieldComponent } from './configurator-attribute-numeric-input-field.component';\n\n@NgModule({\n  imports: [\n    KeyboardFocusModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    I18nModule,\n    IconModule,\n  ],\n  declarations: [ConfiguratorAttributeNumericInputFieldComponent],\n  exports: [ConfiguratorAttributeNumericInputFieldComponent],\n})\nexport class ConfiguratorAttributeNumericInputFieldModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { I18nModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '@spartacus/storefront';\nimport { ConfiguratorAttributeInputFieldComponent } from './configurator-attribute-input-field.component';\n\n@NgModule({\n  imports: [\n    KeyboardFocusModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    I18nModule,\n  ],\n  declarations: [ConfiguratorAttributeInputFieldComponent],\n  exports: [ConfiguratorAttributeInputFieldComponent],\n})\nexport class ConfiguratorAttributeInputFieldModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '@spartacus/storefront';\nimport { ConfiguratorAttributeQuantityModule } from '../../quantity/configurator-attribute-quantity.module';\nimport { ConfiguratorAttributeDropDownComponent } from './configurator-attribute-drop-down.component';\nimport { ConfiguratorPriceModule } from '../../../price/configurator-price.module';\nimport { ConfiguratorAttributeNumericInputFieldModule } from '../numeric-input-field/configurator-attribute-numeric-input-field.module';\nimport { ConfiguratorAttributeInputFieldModule } from '../input-field/configurator-attribute-input-field.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfiguratorAttributeQuantityModule,\n    FormsModule,\n    I18nModule,\n    KeyboardFocusModule,\n    NgSelectModule,\n    ReactiveFormsModule,\n    ConfiguratorPriceModule,\n    ConfiguratorAttributeNumericInputFieldModule,\n    ConfiguratorAttributeInputFieldModule,\n  ],\n  declarations: [ConfiguratorAttributeDropDownComponent],\n  exports: [ConfiguratorAttributeDropDownComponent],\n})\nexport class ConfiguratorAttributeDropDownModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-attribute-drop-down.component';\nexport * from './configurator-attribute-drop-down.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-attribute-input-field.component';\nexport * from './configurator-attribute-input-field.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Configurator } from '../../../../core/model/configurator.model';\nimport { ConfigFormUpdateEvent } from '../../../form/configurator-form.event';\nimport { ConfiguratorPriceComponentOptions } from '../../../price/configurator-price.component';\nimport { ConfiguratorAttributeProductCardComponentOptions } from '../../product-card/configurator-attribute-product-card.component';\nimport { ConfiguratorAttributeMultiSelectionBaseComponent } from '../base/configurator-attribute-multi-selection-base.component';\n\ninterface SelectionValue {\n  name?: string;\n  quantity?: number;\n  selected?: boolean;\n  valueCode: string;\n}\n\n@Component({\n  selector: 'cx-configurator-attribute-multi-selection-bundle',\n  templateUrl: './configurator-attribute-multi-selection-bundle.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorAttributeMultiSelectionBundleComponent\n  extends ConfiguratorAttributeMultiSelectionBaseComponent\n  implements OnInit\n{\n  preventAction$ = new BehaviorSubject<boolean>(false);\n  multipleSelectionValues: SelectionValue[] = [];\n\n  ngOnInit() {\n    this.initialize();\n  }\n\n  /**\n   * Initializes selection values and peventAction observable\n   */\n  protected initialize(): void {\n    if (this.attribute.values && this.attribute.values.length > 0) {\n      this.multipleSelectionValues = this.attribute.values.map(\n        ({ name, quantity, selected, valueCode }) => ({\n          name,\n          quantity,\n          selected,\n          valueCode,\n        })\n      );\n    }\n\n    if (\n      this.attribute.required &&\n      this.multipleSelectionValues.filter((value) => value.selected).length < 2\n    ) {\n      this.preventAction$.next(true);\n    }\n  }\n\n  /**\n   * Updates the value dependent on the provided state\n   *\n   * @param  {any} valueCode - value code to be updated\n   * @param  {any} state - selected state\n   *\n   * @return {ConfigFormUpdateEvent} - form update event\n   */\n  protected updateMultipleSelectionValues(\n    valueCode: any,\n    state: any\n  ): ConfigFormUpdateEvent {\n    const index = this.multipleSelectionValues.findIndex(\n      (value) => value.valueCode === valueCode\n    );\n\n    this.multipleSelectionValues[index] = {\n      ...this.multipleSelectionValues[index],\n      selected: state,\n    };\n\n    const event: ConfigFormUpdateEvent = {\n      changedAttribute: {\n        ...this.attribute,\n        values: this.multipleSelectionValues,\n      },\n      ownerKey: this.ownerKey,\n      updateType: Configurator.UpdateType.ATTRIBUTE,\n    };\n\n    return event;\n  }\n\n  /**\n   * Updates the quantity of the given value\n   *\n   * @param  eventValue - event value\n   *\n   * @return {ConfigFormUpdateEvent} - form update event\n   */\n  protected updateMultipleSelectionValuesQuantity(eventValue: {\n    valueCode: string;\n    quantity: number;\n  }): ConfigFormUpdateEvent | undefined {\n    const value: Configurator.Value | undefined =\n      this.multipleSelectionValues.find(\n        (selectionValue) => selectionValue.valueCode === eventValue.valueCode\n      );\n\n    if (!value) {\n      return;\n    }\n\n    value.quantity = eventValue.quantity;\n\n    const event: ConfigFormUpdateEvent = {\n      changedAttribute: {\n        ...this.attribute,\n        values: [value],\n      },\n      ownerKey: this.ownerKey,\n      updateType: Configurator.UpdateType.VALUE_QUANTITY,\n    };\n\n    return event;\n  }\n\n  onSelect(eventValue: any): void {\n    this.loading$.next(true);\n    this.selectionChange.emit(\n      this.updateMultipleSelectionValues(eventValue, true)\n    );\n  }\n\n  onDeselect(eventValue: any): void {\n    this.loading$.next(true);\n    this.selectionChange.emit(\n      this.updateMultipleSelectionValues(eventValue, false)\n    );\n  }\n\n  onDeselectAll(): void {\n    this.loading$.next(true);\n    const event: ConfigFormUpdateEvent = {\n      changedAttribute: {\n        ...this.attribute,\n        values: [],\n      },\n      ownerKey: this.ownerKey,\n      updateType: Configurator.UpdateType.ATTRIBUTE,\n    };\n    this.selectionChange.emit(event);\n  }\n\n  onChangeValueQuantity(eventValue: any): void {\n    this.loading$.next(true);\n    this.selectionChange.emit(\n      this.updateMultipleSelectionValuesQuantity(eventValue)\n    );\n  }\n\n  onChangeAttributeQuantity(eventObject: any): void {\n    this.loading$.next(true);\n\n    if (!eventObject) {\n      this.onDeselectAll();\n    } else {\n      this.onHandleAttributeQuantity(eventObject);\n    }\n  }\n\n  /**\n   * Extract corresponding price formula parameters\n   *\n   * @return {ConfiguratorPriceComponentOptions} - New price formula\n   */\n  extractPriceFormulaParameters(): ConfiguratorPriceComponentOptions {\n    return {\n      quantity: 0,\n      price: {\n        value: 0,\n        currencyIso: '',\n      },\n      priceTotal: this.attribute.attributePriceTotal,\n      isLightedUp: true,\n    };\n  }\n\n  /**\n   * Extract corresponding product card parameters\n   * @param {boolean} disableAllButtons - Prevent all actions, e.g. while loading\n   * @param {boolean} hideRemoveButton - hide remove action, e.g. if only value required attribute\n   * @param {Configurator.Value} value - Value\n   * @param {number} index - index of current value in list of values of attribute\n   * @return {ConfiguratorAttributeProductCardComponentOptions} - New product card options\n   */\n  extractProductCardParameters(\n    disableAllButtons: boolean | null,\n    hideRemoveButton: boolean | null,\n    value: Configurator.Value,\n    index: number\n  ): ConfiguratorAttributeProductCardComponentOptions {\n    return {\n      disableAllButtons: disableAllButtons ?? false,\n      hideRemoveButton: hideRemoveButton ?? false,\n      productBoundValue: value,\n      multiSelect: true,\n      withQuantity: this.withQuantity,\n      loading$: this.loading$,\n      attributeId: this.getAttributeCode(this.attribute),\n      attributeLabel: this.attribute.label,\n      attributeName: this.attribute.name,\n      itemCount: this.attribute.values?.length\n        ? this.attribute.values.length\n        : 0,\n      itemIndex: index,\n    };\n  }\n}\n","<div\n  id=\"{{ createAttributeIdForConfigurator(attribute) }}\"\n  *ngIf=\"attribute?.values?.length\"\n>\n  <div\n    *ngIf=\"withQuantityOnAttributeLevel\"\n    class=\"cx-attribute-level-quantity-price\"\n  >\n    <cx-configurator-attribute-quantity\n      (changeQuantity)=\"onChangeAttributeQuantity($event)\"\n      [quantityOptions]=\"extractQuantityParameters(attribute.quantity)\"\n    ></cx-configurator-attribute-quantity>\n\n    <cx-configurator-price\n      [formula]=\"extractPriceFormulaParameters()\"\n    ></cx-configurator-price>\n  </div>\n\n  <cx-configurator-attribute-product-card\n    id=\"{{\n      createAttributeValueIdForConfigurator(attribute, value?.valueCode)\n    }}\"\n    (handleDeselect)=\"onDeselect($event)\"\n    (handleQuantity)=\"onChangeValueQuantity($event)\"\n    (handleSelect)=\"onSelect($event)\"\n    *ngFor=\"let value of attribute?.values; let i = index\"\n    [productCardOptions]=\"\n      extractProductCardParameters(\n        loading$ | async,\n        preventAction$ | async,\n        value,\n        i\n      )\n    \"\n  >\n  </cx-configurator-attribute-product-card>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '@spartacus/storefront';\nimport { ConfiguratorPriceModule } from '../../../price/configurator-price.module';\nimport { ConfiguratorAttributeProductCardModule } from '../../product-card/configurator-attribute-product-card.module';\nimport { ConfiguratorAttributeQuantityModule } from '../../quantity/configurator-attribute-quantity.module';\nimport { ConfiguratorAttributeMultiSelectionBundleComponent } from './configurator-attribute-multi-selection-bundle.component';\n\n@NgModule({\n  declarations: [ConfiguratorAttributeMultiSelectionBundleComponent],\n  exports: [ConfiguratorAttributeMultiSelectionBundleComponent],\n  imports: [\n    CommonModule,\n    ConfiguratorAttributeProductCardModule,\n    FormsModule,\n    I18nModule,\n    KeyboardFocusModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    ConfiguratorAttributeQuantityModule,\n    ConfiguratorPriceModule,\n  ],\n})\nexport class ConfiguratorAttributeMultiSelectionBundleModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-attribute-multi-selection-bundle.component';\nexport * from './configurator-attribute-multi-selection-bundle.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { Configurator } from '../../../../core/model/configurator.model';\nimport { ConfigFormUpdateEvent } from '../../../form/configurator-form.event';\nimport { ConfiguratorPriceComponentOptions } from '../../../price/configurator-price.component';\nimport { ConfiguratorStorefrontUtilsService } from '../../../service/configurator-storefront-utils.service';\nimport { ConfiguratorAttributeBaseComponent } from '../base/configurator-attribute-base.component';\n@Component({\n  selector: 'cx-configurator-attribute-multi-selection-image',\n  templateUrl: './configurator-attribute-multi-selection-image.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorAttributeMultiSelectionImageComponent\n  extends ConfiguratorAttributeBaseComponent\n  implements OnInit\n{\n  @Input() attribute: Configurator.Attribute;\n  @Input() ownerKey: string;\n\n  @Output() selectionChange = new EventEmitter<ConfigFormUpdateEvent>();\n\n  constructor(\n    protected configUtilsService: ConfiguratorStorefrontUtilsService\n  ) {\n    super();\n  }\n\n  attributeCheckBoxForms = new Array<UntypedFormControl>();\n\n  ngOnInit() {\n    const values = this.attribute.values;\n    if (values) {\n      for (const value of values) {\n        let attributeCheckBoxForm: UntypedFormControl;\n        if (value.selected) {\n          attributeCheckBoxForm = new UntypedFormControl(true);\n        } else {\n          attributeCheckBoxForm = new UntypedFormControl(false);\n        }\n        this.attributeCheckBoxForms.push(attributeCheckBoxForm);\n      }\n    }\n  }\n\n  /**\n   * Fired when a value has been selected\n   * @param index Index of selected value\n   */\n  onSelect(index: number): void {\n    this.attributeCheckBoxForms[index].setValue(\n      !this.attributeCheckBoxForms[index].value\n    );\n\n    const selectedValues =\n      this.configUtilsService.assembleValuesForMultiSelectAttributes(\n        this.attributeCheckBoxForms,\n        this.attribute\n      );\n\n    const event: ConfigFormUpdateEvent = {\n      ownerKey: this.ownerKey,\n      changedAttribute: {\n        ...this.attribute,\n        values: selectedValues,\n      },\n    };\n\n    this.selectionChange.emit(event);\n  }\n\n  extractValuePriceFormulaParameters(\n    value: Configurator.Value\n  ): ConfiguratorPriceComponentOptions | undefined {\n    return {\n      quantity: value.quantity,\n      price: value.valuePrice,\n      priceTotal: value.valuePriceTotal,\n      isLightedUp: value.selected,\n    };\n  }\n}\n","<div id=\"{{ createAttributeIdForConfigurator(attribute) }}\" class=\"cx-row\">\n  <div\n    *ngFor=\"let value of attribute.values; let i = index\"\n    id=\"{{ createAttributeValueIdForConfigurator(attribute, value.valueCode) }}\"\n    class=\"cx-configurator-select\"\n  >\n    <input\n      id=\"{{\n        createAttributeValueIdForConfigurator(attribute, value.valueCode) +\n          '-input'\n      }}\"\n      type=\"checkbox\"\n      class=\"form-input\"\n      [value]=\"value.valueCode\"\n      [formControl]=\"attributeCheckBoxForms[i]\"\n      name=\"{{ createAttributeIdForConfigurator(attribute) }}\"\n      (click)=\"onSelect(i)\"\n      [attr.aria-label]=\"\n        value.valuePrice && value.valuePrice?.value !== 0\n          ? ('configurator.a11y.valueOfAttributeFullWithPrice'\n            | cxTranslate\n              : {\n                  value: value.valueDisplay,\n                  attribute: attribute.label,\n                  price: value.valuePrice.formattedValue\n                })\n          : ('configurator.a11y.valueOfAttributeFull'\n            | cxTranslate\n              : { value: value.valueDisplay, attribute: attribute.label })\n      \"\n      [attr.aria-describedby]=\"createAttributeUiKey('label', attribute.name)\"\n      [attr.checked]=\"attributeCheckBoxForms[i].value ? 'checked' : null\"\n      [cxFocus]=\"{ key: attribute.name + '-' + value.name }\"\n    />\n    <div class=\"cx-label-container\">\n      <label\n        id=\"{{ createValueUiKey('label', attribute.name, value.valueCode) }}\"\n        for=\"{{\n          createAttributeValueIdForConfigurator(attribute, value.valueCode) +\n            '-input'\n        }}\"\n        aria-hidden=\"true\"\n        class=\"form-check-label\"\n      >\n        <img\n          *ngIf=\"value.images[0]\"\n          class=\"cx-img\"\n          src=\"{{ value.images[0].url }}\"\n          alt=\"{{ value.images[0].altText }}\"\n        />\n        <div *ngIf=\"!value.images[0]\" class=\"cx-img-dummy\"></div>\n        {{ value.valueDisplay }}\n        <cx-configurator-price\n          [formula]=\"extractValuePriceFormulaParameters(value)\"\n        ></cx-configurator-price>\n      </label>\n    </div>\n  </div>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { I18nModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '@spartacus/storefront';\nimport { ConfiguratorAttributeMultiSelectionImageComponent } from './configurator-attribute-multi-selection-image.component';\nimport { ConfiguratorPriceModule } from '../../../price/configurator-price.module';\n\n@NgModule({\n  imports: [\n    KeyboardFocusModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    I18nModule,\n    ConfiguratorPriceModule,\n  ],\n  declarations: [ConfiguratorAttributeMultiSelectionImageComponent],\n  exports: [ConfiguratorAttributeMultiSelectionImageComponent],\n})\nexport class ConfiguratorAttributeMultiSelectionImageModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-attribute-multi-selection-image.component';\nexport * from './configurator-attribute-multi-selection-image.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-attribute-numeric-input-field.component';\nexport * from './configurator-attribute-numeric-input-field.component.service';\nexport * from './configurator-attribute-numeric-input-field.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { TranslationService } from '@spartacus/core';\n\nimport { ConfiguratorAttributeQuantityService } from '../../quantity/configurator-attribute-quantity.service';\nimport { ConfiguratorAttributeSingleSelectionBaseComponent } from '../base/configurator-attribute-single-selection-base.component';\n\n@Component({\n  selector: 'cx-configurator-attribute-radio-button',\n  templateUrl: './configurator-attribute-radio-button.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorAttributeRadioButtonComponent\n  extends ConfiguratorAttributeSingleSelectionBaseComponent\n  implements OnInit\n{\n  attributeRadioButtonForm = new UntypedFormControl('');\n\n  constructor(\n    protected quantityService: ConfiguratorAttributeQuantityService,\n    protected translation: TranslationService\n  ) {\n    super(quantityService, translation);\n  }\n\n  ngOnInit(): void {\n    this.attributeRadioButtonForm.setValue(this.attribute.selectedSingleValue);\n  }\n}\n","<fieldset>\n  <legend style=\"display: none\">{{ attribute.label }}</legend>\n  <div id=\"{{ createAttributeIdForConfigurator(attribute) }}\">\n    <div *ngIf=\"withQuantity\" class=\"cx-attribute-level-quantity-price\">\n      <cx-configurator-attribute-quantity\n        (changeQuantity)=\"onChangeQuantity($event)\"\n        [quantityOptions]=\"extractQuantityParameters()\"\n      ></cx-configurator-attribute-quantity>\n      <cx-configurator-price\n        [formula]=\"extractPriceFormulaParameters()\"\n      ></cx-configurator-price>\n    </div>\n\n    <div class=\"form-check\" *ngFor=\"let value of attribute.values\">\n      <div class=\"cx-value-label-pair\">\n        <input\n          id=\"{{\n            createAttributeValueIdForConfigurator(attribute, value.valueCode)\n          }}\"\n          class=\"form-check-input\"\n          type=\"radio\"\n          formcontrolname=\"attributeRadioButtonForm\"\n          [formControl]=\"attributeRadioButtonForm\"\n          [attr.required]=\"attribute.required\"\n          [value]=\"value.valueCode\"\n          name=\"{{ createAttributeIdForConfigurator(attribute) }}\"\n          attr.name=\"{{ createAttributeIdForConfigurator(attribute) }}\"\n          [cxFocus]=\"{ key: attribute.name + '-' + value.name }\"\n          [attr.aria-label]=\"getAriaLabel(value, attribute)\"\n          [attr.checked]=\"\n            attributeRadioButtonForm.value === value.valueCode\n              ? 'checked'\n              : null\n          \"\n          [attr.aria-describedby]=\"\n            createAttributeUiKey('label', attribute.name)\n          \"\n          (change)=\"onSelect(value.valueCode)\"\n        />\n        <label\n          id=\"{{ createValueUiKey('label', attribute.name, value.valueCode) }}\"\n          for=\"{{\n            createAttributeValueIdForConfigurator(attribute, value.valueCode)\n          }}\"\n          aria-hidden=\"true\"\n          class=\"form-check-label form-radio-label\"\n          >{{ value.valueDisplay }}</label\n        >\n      </div>\n\n      <div class=\"cx-value-price\">\n        <cx-configurator-price\n          [formula]=\"extractValuePriceFormulaParameters(value)\"\n        ></cx-configurator-price>\n      </div>\n    </div>\n\n    <cx-configurator-attribute-numeric-input-field\n      *ngIf=\"isAdditionalValueNumeric\"\n      class=\"cx-configurator-attribute-additional-value\"\n      [attribute]=\"attribute\"\n      [ownerType]=\"ownerType\"\n      [ownerKey]=\"ownerKey\"\n      [language]=\"language\"\n      (inputChange)=\"onSelectAdditionalValue($event)\"\n    ></cx-configurator-attribute-numeric-input-field>\n\n    <cx-configurator-attribute-input-field\n      *ngIf=\"isAdditionalValueAlphaNumeric\"\n      class=\"cx-configurator-attribute-additional-value\"\n      [attribute]=\"attribute\"\n      [ownerType]=\"ownerType\"\n      [ownerKey]=\"ownerKey\"\n      (inputChange)=\"onSelectAdditionalValue($event)\"\n    >\n    </cx-configurator-attribute-input-field>\n  </div>\n</fieldset>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { I18nModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '@spartacus/storefront';\nimport { ConfiguratorPriceModule } from '../../../price/configurator-price.module';\nimport { ConfiguratorAttributeQuantityModule } from '../../quantity/configurator-attribute-quantity.module';\nimport { ConfiguratorAttributeInputFieldModule } from '../input-field/configurator-attribute-input-field.module';\nimport { ConfiguratorAttributeNumericInputFieldModule } from '../numeric-input-field/configurator-attribute-numeric-input-field.module';\nimport { ConfiguratorAttributeRadioButtonComponent } from './configurator-attribute-radio-button.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfiguratorAttributeQuantityModule,\n    FormsModule,\n    I18nModule,\n    KeyboardFocusModule,\n    ReactiveFormsModule,\n    ConfiguratorPriceModule,\n    ConfiguratorAttributeNumericInputFieldModule,\n    ConfiguratorAttributeInputFieldModule,\n  ],\n  declarations: [ConfiguratorAttributeRadioButtonComponent],\n  exports: [ConfiguratorAttributeRadioButtonComponent],\n})\nexport class ConfiguratorAttributeRadioButtonModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-attribute-radio-button.component';\nexport * from './configurator-attribute-radio-button.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { Configurator } from '../../../../core/model/configurator.model';\nimport { ConfiguratorAttributeBaseComponent } from '../base/configurator-attribute-base.component';\n@Component({\n  selector: 'cx-configurator-attribute-read-only',\n  templateUrl: './configurator-attribute-read-only.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorAttributeReadOnlyComponent extends ConfiguratorAttributeBaseComponent {\n  @Input() attribute: Configurator.Attribute;\n  @Input() group: String;\n}\n","<div id=\"{{ createAttributeIdForConfigurator(attribute) }}\">\n  <ng-container\n    *ngIf=\"\n      attribute.values !== undefined && attribute.values.length > 0;\n      else noStaticDomain\n    \"\n  >\n    <ng-container *ngFor=\"let value of attribute.values\">\n      <span\n        *ngIf=\"value.selected\"\n        id=\"{{ createValueUiKey('label', attribute.name, value.valueCode) }}\"\n        tabindex=\"0\"\n        class=\"cx-visually-hidden\"\n      >\n        {{\n          'configurator.a11y.readOnlyValueOfAttributeFull'\n            | cxTranslate\n              : {\n                  value: value.valueDisplay,\n                  attribute: attribute.label\n                }\n        }}\n      </span>\n      <div class=\"cx-read-only-label\" *ngIf=\"value.selected\" aria-hidden=\"true\">\n        <span aria-hidden=\"true\">{{ value.valueDisplay }}</span>\n      </div>\n    </ng-container>\n  </ng-container>\n  <ng-template #noStaticDomain>\n    <ng-container *ngIf=\"attribute.selectedSingleValue\">\n      <span\n        id=\"{{\n          createValueUiKey(\n            'label',\n            attribute.name,\n            attribute.selectedSingleValue\n          )\n        }}\"\n        tabindex=\"0\"\n        class=\"cx-visually-hidden\"\n      >\n        {{\n          'configurator.a11y.readOnlyValueOfAttributeFull'\n            | cxTranslate\n              : {\n                  value: attribute.selectedSingleValue,\n                  attribute: attribute.label\n                }\n        }}\n      </span>\n      <div class=\"cx-read-only-label\" aria-hidden=\"true\">\n        <span aria-hidden=\"true\">{{ attribute.selectedSingleValue }}</span>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"attribute.userInput\">\n      <span\n        id=\"{{\n          createValueUiKey('label', attribute.name, attribute.userInput)\n        }}\"\n        tabindex=\"0\"\n        class=\"cx-visually-hidden\"\n      >\n        {{\n          'configurator.a11y.readOnlyValueOfAttributeFull'\n            | cxTranslate\n              : {\n                  value: attribute.userInput,\n                  attribute: attribute.label\n                }\n        }}\n      </span>\n      <div class=\"cx-read-only-label\">\n        <span aria-hidden=\"true\">{{ attribute.userInput }}</span>\n      </div>\n    </ng-container>\n  </ng-template>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { I18nModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '@spartacus/storefront';\nimport { ConfiguratorAttributeReadOnlyComponent } from './configurator-attribute-read-only.component';\n\n@NgModule({\n  imports: [\n    KeyboardFocusModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    I18nModule,\n  ],\n  declarations: [ConfiguratorAttributeReadOnlyComponent],\n  exports: [ConfiguratorAttributeReadOnlyComponent],\n})\nexport class ConfiguratorAttributeReadOnlyModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-attribute-read-only.component';\nexport * from './configurator-attribute-read-only.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { Configurator } from '../../../../core/model/configurator.model';\nimport { ConfiguratorAttributeProductCardComponentOptions } from '../../product-card/configurator-attribute-product-card.component';\nimport { ConfiguratorAttributeSingleSelectionBaseComponent } from '../base/configurator-attribute-single-selection-base.component';\n\n@Component({\n  selector: 'cx-configurator-attribute-single-selection-bundle-dropdown',\n  templateUrl:\n    './configurator-attribute-single-selection-bundle-dropdown.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorAttributeSingleSelectionBundleDropdownComponent\n  extends ConfiguratorAttributeSingleSelectionBaseComponent\n  implements OnInit\n{\n  attributeDropDownForm = new UntypedFormControl('');\n  selectionValue: Configurator.Value;\n\n  @Input() group: string;\n\n  ngOnInit() {\n    this.attributeDropDownForm.setValue(this.attribute.selectedSingleValue);\n\n    const values = this.attribute.values;\n    if (values && values.length > 0) {\n      const selectedValue = values.find((value) => value.selected);\n      if (selectedValue) {\n        this.selectionValue = selectedValue;\n      }\n    }\n  }\n\n  /**\n   * Extract corresponding product card parameters\n   *\n   * @return {ConfiguratorAttributeProductCardComponentOptions} - New product card options\n   */\n  extractProductCardParameters(): ConfiguratorAttributeProductCardComponentOptions {\n    return {\n      hideRemoveButton: true,\n      productBoundValue: this.selectionValue,\n      singleDropdown: true,\n      withQuantity: false,\n      loading$: this.loading$,\n      attributeId: this.getAttributeCode(this.attribute),\n      attributeName: this.attribute.name,\n      itemCount: 0,\n      itemIndex: 0,\n    };\n  }\n}\n","<div class=\"form-group\" *ngIf=\"attribute?.values?.length\">\n  <label\n    for=\"{{ createAttributeIdForConfigurator(attribute) }}\"\n    class=\"cx-visually-hidden\"\n  >\n    {{\n      'configurator.a11y.listbox'\n        | cxTranslate\n          : {\n              count: attribute.values?.length\n            }\n    }}\n  </label>\n  <select\n    id=\"{{ createAttributeIdForConfigurator(attribute) }}\"\n    class=\"form-control\"\n    [formControl]=\"attributeDropDownForm\"\n    [cxFocus]=\"{ key: attribute.name }\"\n    (change)=\"onSelect(attributeDropDownForm.value)\"\n    [attr.aria-describedby]=\"createAttributeUiKey('label', attribute.name)\"\n  >\n    <option\n      *ngFor=\"let item of attribute.values\"\n      [label]=\"item.valueDisplay\"\n      [selected]=\"item.selected\"\n      [value]=\"item.valueCode\"\n      [attr.aria-label]=\"\n        item.valueCode === '0'\n          ? ('configurator.a11y.forAttribute'\n            | cxTranslate\n              : { value: item.valueDisplay, attribute: attribute.label })\n          : item.valuePrice && item.valuePrice?.value !== 0\n          ? ('configurator.a11y.selectedValueOfAttributeFullWithPrice'\n            | cxTranslate\n              : {\n                  value: item.valueDisplay,\n                  attribute: attribute.label,\n                  price: item.valuePriceTotal.formattedValue\n                })\n          : ('configurator.a11y.selectedValueOfAttributeFull'\n            | cxTranslate\n              : { value: item.valueDisplay, attribute: attribute.label })\n      \"\n      [value]=\"item.valueCode\"\n    >\n      {{ item.valueDisplay }}\n    </option>\n  </select>\n</div>\n\n<cx-configurator-attribute-product-card\n  *ngIf=\"selectionValue?.valueCode !== '0'\"\n  id=\"{{\n    createAttributeValueIdForConfigurator(attribute, selectionValue.valueCode)\n  }}\"\n  (handleDeselect)=\"onSelect('0')\"\n  [productCardOptions]=\"extractProductCardParameters()\"\n>\n</cx-configurator-attribute-product-card>\n\n<div *ngIf=\"withQuantity\" class=\"cx-attribute-level-quantity-price\">\n  <cx-configurator-attribute-quantity\n    (changeQuantity)=\"onChangeQuantity($event, attributeDropDownForm)\"\n    [quantityOptions]=\"extractQuantityParameters(attributeDropDownForm)\"\n  ></cx-configurator-attribute-quantity>\n  <cx-configurator-price\n    [formula]=\"extractPriceFormulaParameters()\"\n  ></cx-configurator-price>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { ConfiguratorAttributeSingleSelectionBundleDropdownComponent } from './configurator-attribute-single-selection-bundle-dropdown.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { I18nModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '@spartacus/storefront';\nimport { NgModule } from '@angular/core';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { ConfiguratorAttributeProductCardModule } from '../../product-card/configurator-attribute-product-card.module';\nimport { ConfiguratorAttributeQuantityModule } from '../../quantity/configurator-attribute-quantity.module';\nimport { ConfiguratorPriceModule } from '../../../price/configurator-price.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfiguratorAttributeProductCardModule,\n    FormsModule,\n    I18nModule,\n    KeyboardFocusModule,\n    NgSelectModule,\n    ReactiveFormsModule,\n    ConfiguratorAttributeQuantityModule,\n    ConfiguratorPriceModule,\n  ],\n  declarations: [ConfiguratorAttributeSingleSelectionBundleDropdownComponent],\n  exports: [ConfiguratorAttributeSingleSelectionBundleDropdownComponent],\n})\nexport class ConfiguratorAttributeSingleSelectionBundleDropdownModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-attribute-single-selection-bundle-dropdown.component';\nexport * from './configurator-attribute-single-selection-bundle-dropdown.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Configurator } from '../../../../core/model/configurator.model';\nimport { ConfiguratorAttributeProductCardComponentOptions } from '../../product-card/configurator-attribute-product-card.component';\nimport { ConfiguratorAttributeSingleSelectionBaseComponent } from '../base/configurator-attribute-single-selection-base.component';\n\n@Component({\n  selector: 'cx-configurator-attribute-single-selection-bundle',\n  templateUrl:\n    './configurator-attribute-single-selection-bundle.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorAttributeSingleSelectionBundleComponent extends ConfiguratorAttributeSingleSelectionBaseComponent {\n  /**\n   * Extract corresponding product card parameters\n   *\n   * @param {Configurator.Value} value - Value\n   * @param {number} index - index of current value in list of values of attribute\n   * @return {ConfiguratorAttributeProductCardComponentOptions} - New product card options\n   */\n  extractProductCardParameters(\n    value: Configurator.Value,\n    index: number\n  ): ConfiguratorAttributeProductCardComponentOptions {\n    return {\n      hideRemoveButton: this.attribute.required,\n      fallbackFocusId: this.getFocusIdOfNearestValue(value),\n      productBoundValue: value,\n      loading$: this.loading$,\n      attributeId: this.getAttributeCode(this.attribute),\n      attributeLabel: this.attribute.label,\n      attributeName: this.attribute.name,\n      itemCount: this.attribute.values?.length\n        ? this.attribute.values.length\n        : 0,\n      itemIndex: index,\n    };\n  }\n\n  protected getFocusIdOfNearestValue(currentValue: Configurator.Value): string {\n    if (!this.attribute.values) {\n      return 'n/a';\n    }\n    let prevIdx = this.attribute.values.findIndex(\n      (value) => value.valueCode === currentValue.valueCode\n    );\n    prevIdx--;\n    if (prevIdx < 0) {\n      prevIdx = this.attribute.values.length > 1 ? 1 : 0;\n    }\n    return this.createFocusId(\n      this.getAttributeCode(this.attribute).toString(),\n      this.attribute.values[prevIdx].valueCode\n    );\n  }\n}\n","<div\n  id=\"{{ createAttributeIdForConfigurator(attribute) }}\"\n  *ngIf=\"attribute?.values?.length\"\n>\n  <div *ngIf=\"withQuantity\" class=\"cx-attribute-level-quantity-price\">\n    <cx-configurator-attribute-quantity\n      (changeQuantity)=\"onChangeQuantity($event)\"\n      [quantityOptions]=\"extractQuantityParameters()\"\n    ></cx-configurator-attribute-quantity>\n\n    <cx-configurator-price\n      [formula]=\"extractPriceFormulaParameters()\"\n    ></cx-configurator-price>\n  </div>\n\n  <cx-configurator-attribute-product-card\n    [id]=\"createAttributeValueIdForConfigurator(attribute, value?.valueCode)\"\n    (handleDeselect)=\"onSelect('')\"\n    (handleSelect)=\"onSelect($event)\"\n    *ngFor=\"let value of attribute?.values; let i = index\"\n    [productCardOptions]=\"extractProductCardParameters(value, i)\"\n  >\n  </cx-configurator-attribute-product-card>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { ItemCounterModule, KeyboardFocusModule } from '@spartacus/storefront';\nimport { ConfiguratorAttributeProductCardModule } from '../../product-card/configurator-attribute-product-card.module';\nimport { ConfiguratorAttributeSingleSelectionBundleComponent } from './configurator-attribute-single-selection-bundle.component';\nimport { ConfiguratorAttributeQuantityModule } from '../../quantity/configurator-attribute-quantity.module';\nimport { ConfiguratorPriceModule } from '../../../price/configurator-price.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfiguratorAttributeProductCardModule,\n    ConfiguratorAttributeQuantityModule,\n    FormsModule,\n    I18nModule,\n    ItemCounterModule,\n    KeyboardFocusModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n    ConfiguratorPriceModule,\n  ],\n  declarations: [ConfiguratorAttributeSingleSelectionBundleComponent],\n  exports: [ConfiguratorAttributeSingleSelectionBundleComponent],\n})\nexport class ConfiguratorAttributeSingleSelectionBundleModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-attribute-single-selection-bundle.component';\nexport * from './configurator-attribute-single-selection-bundle.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { Configurator } from '../../../../core/model/configurator.model';\nimport { ConfigFormUpdateEvent } from '../../../form/configurator-form.event';\nimport { ConfiguratorPriceComponentOptions } from '../../../price/configurator-price.component';\nimport { ConfiguratorAttributeBaseComponent } from '../base/configurator-attribute-base.component';\n\n@Component({\n  selector: 'cx-configurator-attribute-single-selection-image',\n  templateUrl: './configurator-attribute-single-selection-image.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorAttributeSingleSelectionImageComponent\n  extends ConfiguratorAttributeBaseComponent\n  implements OnInit\n{\n  attributeRadioButtonForm = new UntypedFormControl('');\n\n  @Input() attribute: Configurator.Attribute;\n  @Input() ownerKey: string;\n\n  @Output() selectionChange = new EventEmitter<ConfigFormUpdateEvent>();\n\n  ngOnInit(): void {\n    this.attributeRadioButtonForm.setValue(this.attribute.selectedSingleValue);\n  }\n\n  /**\n   * Submits a value.\n   *\n   * @param {string} value - Selected value\n   */\n  onClick(value: string): void {\n    const event: ConfigFormUpdateEvent = {\n      ownerKey: this.ownerKey,\n      changedAttribute: {\n        ...this.attribute,\n        selectedSingleValue: value,\n      },\n    };\n    this.selectionChange.emit(event);\n  }\n\n  extractValuePriceFormulaParameters(\n    value?: Configurator.Value\n  ): ConfiguratorPriceComponentOptions | undefined {\n    if (value) {\n      return {\n        price: value.valuePrice,\n        isLightedUp: value.selected,\n      };\n    }\n  }\n}\n","<div\n  id=\"{{ createAttributeIdForConfigurator(attribute) }}\"\n  class=\"cx-row\"\n  role=\"radiogroup\"\n>\n  <div\n    *ngFor=\"let value of attribute.values\"\n    id=\"{{ createAttributeValueIdForConfigurator(attribute, value.valueCode) }}\"\n    class=\"cx-configurator-select\"\n  >\n    <input\n      id=\"{{\n        createAttributeValueIdForConfigurator(attribute, value.valueCode) +\n          '-input'\n      }}\"\n      type=\"radio\"\n      class=\"form-input\"\n      [value]=\"value.valueCode\"\n      formcontrolname=\"attributeRadioButtonForm\"\n      [formControl]=\"attributeRadioButtonForm\"\n      [value]=\"value.valueCode\"\n      name=\"{{ createAttributeIdForConfigurator(attribute) }}\"\n      attr.name=\"{{ createAttributeIdForConfigurator(attribute) }}\"\n      [attr.required]=\"attribute.required\"\n      [attr.checked]=\"\n        attributeRadioButtonForm.value === value.valueCode ? 'checked' : null\n      \"\n      [attr.aria-checked]=\"\n        attributeRadioButtonForm.value === value.valueCode ? 'true' : 'false'\n      \"\n      [attr.aria-label]=\"\n        value.valuePrice && value.valuePrice?.value !== 0\n          ? ('configurator.a11y.valueOfAttributeFullWithPrice'\n            | cxTranslate\n              : {\n                  value: value.valueDisplay,\n                  attribute: attribute.label,\n                  price: value.valuePrice.formattedValue\n                })\n          : ('configurator.a11y.valueOfAttributeFull'\n            | cxTranslate\n              : { value: value.valueDisplay, attribute: attribute.label })\n      \"\n      [attr.aria-describedby]=\"createAttributeUiKey('label', attribute.name)\"\n      (click)=\"onClick(value.valueCode)\"\n      [cxFocus]=\"{ key: attribute.name + '-' + value.name }\"\n      role=\"radio\"\n    />\n    <div class=\"cx-label-container\">\n      <label\n        id=\"{{ createValueUiKey('label', attribute.name, value.valueCode) }}\"\n        for=\"{{\n          createAttributeValueIdForConfigurator(attribute, value.valueCode) +\n            '-input'\n        }}\"\n        aria-hidden=\"true\"\n        class=\"form-check-label form-radio-label\"\n      >\n        <img\n          *ngIf=\"value.images[0]\"\n          class=\"cx-img\"\n          src=\"{{ value.images[0].url }}\"\n          alt=\"{{ value.images[0].altText }}\"\n        />\n        <div *ngIf=\"!value.images[0]\" class=\"cx-img-dummy\"></div>\n        {{ value.valueDisplay }}\n        <cx-configurator-price\n          [formula]=\"extractValuePriceFormulaParameters(value)\"\n        ></cx-configurator-price>\n      </label>\n    </div>\n  </div>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { I18nModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '@spartacus/storefront';\nimport { ConfiguratorAttributeSingleSelectionImageComponent } from './configurator-attribute-single-selection-image.component';\nimport { ConfiguratorPriceModule } from '../../../price/configurator-price.module';\n\n@NgModule({\n  imports: [\n    KeyboardFocusModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    I18nModule,\n    ConfiguratorPriceModule,\n  ],\n  declarations: [ConfiguratorAttributeSingleSelectionImageComponent],\n  exports: [ConfiguratorAttributeSingleSelectionImageComponent],\n})\nexport class ConfiguratorAttributeSingleSelectionImageModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-attribute-single-selection-image.component';\nexport * from './configurator-attribute-single-selection-image.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './footer/index';\nexport * from './header/index';\nexport * from './product-card/index';\nexport * from './quantity/index';\nexport * from './types/base/index';\nexport * from './types/checkbox-list/index';\nexport * from './types/checkbox/index';\nexport * from './types/drop-down/index';\nexport * from './types/input-field/index';\nexport * from './types/multi-selection-bundle/index';\nexport * from './types/multi-selection-image/index';\nexport * from './types/numeric-input-field/index';\nexport * from './types/radio-button/index';\nexport * from './types/read-only/index';\nexport * from './types/single-selection-bundle-dropdown/index';\nexport * from './types/single-selection-bundle/index';\nexport * from './types/single-selection-image/index';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport interface ProductConfiguratorMessageConfig {\n  updateConfigurationMessage?: {\n    waitingTime?: number;\n  };\n}\n\nexport abstract class ConfiguratorMessageConfig {\n  productConfigurator?: ProductConfiguratorMessageConfig;\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '@spartacus/product-configurator/common';\nimport { ProductConfiguratorMessageConfig } from './configurator-message.config';\nimport { ProductConfiguratorUISettingsConfig } from './configurator-ui-settings.config';\n\ndeclare module '@spartacus/product-configurator/common' {\n  interface ProductConfiguratorConfig\n    extends ProductConfiguratorUISettingsConfig,\n      ProductConfiguratorMessageConfig {}\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport { ConfiguratorMessageConfig } from './configurator-message.config';\nexport { ConfiguratorUISettingsConfig } from './configurator-ui-settings.config';\nimport './augmented-config.model';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  Input,\n} from '@angular/core';\nimport { ICON_TYPE } from '@spartacus/storefront';\nimport { Configurator } from '../../core/model/configurator.model';\n\n@Component({\n  selector: 'cx-configurator-conflict-description',\n  templateUrl: './configurator-conflict-description.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorConflictDescriptionComponent {\n  @Input() currentGroup: Configurator.Group;\n\n  groupType = Configurator.GroupType;\n  iconTypes = ICON_TYPE;\n\n  @HostBinding('tabindex') tabindex = '0';\n\n  constructor() {\n    // Intentional empty constructor\n  }\n\n  /**\n   * Verifies whether the  conflict description should be displayed for the current group.\n   *\n   * @param {Configurator.Group} group - Current group\n   * @return {boolean} - 'True' if the conflict description should be displayed, otherwise 'false'.\n   */\n  displayConflictDescription(group: Configurator.Group): boolean {\n    return group.groupType === Configurator.GroupType.CONFLICT_GROUP;\n  }\n}\n","<ng-container *ngIf=\"displayConflictDescription(currentGroup)\">\n  <cx-icon [type]=\"iconTypes.WARNING\" aria-hidden=\"true\"></cx-icon>\n  {{ currentGroup.name }}\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { IconModule } from '@spartacus/storefront';\nimport { ConfiguratorConflictDescriptionComponent } from './configurator-conflict-description.component';\n\n@NgModule({\n  imports: [CommonModule, IconModule],\n  declarations: [ConfiguratorConflictDescriptionComponent],\n  exports: [ConfiguratorConflictDescriptionComponent],\n})\nexport class ConfiguratorConflictDescriptionModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-conflict-description.component';\nexport * from './configurator-conflict-description.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  Input,\n} from '@angular/core';\nimport { Configurator } from '../../core/model/configurator.model';\n\n@Component({\n  selector: 'cx-configurator-conflict-suggestion',\n  templateUrl: './configurator-conflict-suggestion.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorConflictSuggestionComponent {\n  @Input() currentGroup: Configurator.Group;\n  @Input() attribute: Configurator.Attribute;\n  @Input() suggestionNumber: number;\n\n  groupType = Configurator.GroupType;\n\n  @HostBinding('tabindex') tabindex = '0';\n\n  constructor() {\n    // Intentional empty constructor\n  }\n\n  /**\n   * Verifies whether the conflict suggestion should be displayed for the current group.\n   *\n   * @param {Configurator.Group} group - Current group\n   * @return {boolean} - 'True' if the conflict description should be displayed, otherwise 'false'.\n   */\n  displayConflictSuggestion(group: Configurator.Group): boolean {\n    return group.groupType === Configurator.GroupType.CONFLICT_GROUP &&\n      group.attributes\n      ? group.attributes?.length > 1\n      : false;\n  }\n\n  createSuggestionUiKey(): string {\n    return 'suggestion--' + this.suggestionNumber;\n  }\n}\n","<ng-container *ngIf=\"displayConflictSuggestion(currentGroup)\">\n  <div\n    class=\"cx-title\"\n    [attr.aria-label]=\"\n      ('configurator.conflict.suggestionTitle'\n        | cxTranslate: { number: suggestionNumber + 1 }) +\n      ' ' +\n      ('configurator.conflict.suggestionText'\n        | cxTranslate: { attribute: attribute.label })\n    \"\n  >\n    <span aria-hidden=\"true\">{{\n      'configurator.conflict.suggestionTitle'\n        | cxTranslate: { number: suggestionNumber + 1 }\n    }}</span>\n  </div>\n  <span aria-hidden=\"true\">{{\n    'configurator.conflict.suggestionText'\n      | cxTranslate: { attribute: attribute.label }\n  }}</span>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { ConfiguratorConflictSuggestionComponent } from './configurator-conflict-suggestion.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  declarations: [ConfiguratorConflictSuggestionComponent],\n  exports: [ConfiguratorConflictSuggestionComponent],\n})\nexport class ConfiguratorConflictSuggestionModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-conflict-suggestion.component';\nexport * from './configurator-conflict-suggestion.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { LanguageService } from '@spartacus/core';\nimport {\n  ConfiguratorRouter,\n  ConfiguratorRouterExtractorService,\n} from '@spartacus/product-configurator/common';\nimport { Observable } from 'rxjs';\nimport { filter, switchMap, take } from 'rxjs/operators';\nimport { ConfiguratorCommonsService } from '../../core/facade/configurator-commons.service';\nimport { ConfiguratorGroupsService } from '../../core/facade/configurator-groups.service';\nimport { Configurator } from '../../core/model/configurator.model';\nimport { ConfiguratorStorefrontUtilsService } from '../service/configurator-storefront-utils.service';\nimport { ConfigFormUpdateEvent } from './configurator-form.event';\n\n@Component({\n  selector: 'cx-configurator-form',\n  templateUrl: './configurator-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorFormComponent implements OnInit {\n  configuration$: Observable<Configurator.Configuration> =\n    this.configRouterExtractorService.extractRouterData().pipe(\n      filter(\n        (routerData) =>\n          routerData.pageType === ConfiguratorRouter.PageType.CONFIGURATION\n      ),\n      switchMap((routerData) => {\n        return this.configuratorCommonsService.getOrCreateConfiguration(\n          routerData.owner\n        );\n      })\n    );\n  currentGroup$: Observable<Configurator.Group> =\n    this.configRouterExtractorService\n      .extractRouterData()\n      .pipe(\n        switchMap((routerData) =>\n          this.configuratorGroupsService.getCurrentGroup(routerData.owner)\n        )\n      );\n\n  activeLanguage$: Observable<string> = this.languageService.getActive();\n\n  uiType = Configurator.UiType;\n\n  constructor(\n    protected configuratorCommonsService: ConfiguratorCommonsService,\n    protected configuratorGroupsService: ConfiguratorGroupsService,\n    protected configRouterExtractorService: ConfiguratorRouterExtractorService,\n    protected languageService: LanguageService,\n    protected configUtils: ConfiguratorStorefrontUtilsService\n  ) {}\n\n  ngOnInit(): void {\n    this.configRouterExtractorService\n      .extractRouterData()\n      .pipe(take(1))\n      .subscribe((routingData) => {\n        //In case of resolving issues, check if the configuration contains conflicts,\n        //if not, check if the configuration contains missing mandatory fields and show the group\n        if (routingData.resolveIssues) {\n          this.configuratorCommonsService\n            .hasConflicts(routingData.owner)\n            .pipe(take(1))\n            .subscribe((hasConflicts) => {\n              if (hasConflicts && !routingData.skipConflicts) {\n                this.configuratorGroupsService.navigateToConflictSolver(\n                  routingData.owner\n                );\n\n                //Only check for Incomplete group when there are no conflicts or conflicts should be skipped\n              } else {\n                this.configuratorGroupsService.navigateToFirstIncompleteGroup(\n                  routingData.owner\n                );\n              }\n            });\n        }\n      });\n  }\n\n  updateConfiguration(event: ConfigFormUpdateEvent): void {\n    this.configuratorCommonsService.updateConfiguration(\n      event.ownerKey,\n      event.changedAttribute,\n      event.updateType\n    );\n  }\n\n  isConflictGroupType(groupType: Configurator.GroupType): boolean {\n    return this.configuratorGroupsService.isConflictGroupType(groupType);\n  }\n\n  /**\n   * Generates a group ID.\n   *\n   * @param {string} groupId - group ID\n   * @returns {string | undefined} - generated group ID\n   */\n  createGroupId(groupId?: string): string | undefined {\n    return this.configUtils.createGroupId(groupId);\n  }\n}\n","<ng-container *ngIf=\"configuration$ | async as configuration; else ghostForm\">\n  <ng-container *ngIf=\"currentGroup$ | async as currentGroup\">\n    <div id=\"{{ createGroupId(currentGroup.id) }}\" role=\"tabpanel\">\n      <ng-container *ngIf=\"isConflictGroupType(currentGroup.groupType)\">\n        <cx-configurator-conflict-description\n          [currentGroup]=\"currentGroup\"\n        ></cx-configurator-conflict-description>\n      </ng-container>\n      <div\n        class=\"cx-group-attribute\"\n        *ngFor=\"\n          let attribute of currentGroup.attributes;\n          let indexOfAttribute = index\n        \"\n      >\n        <ng-container *ngIf=\"activeLanguage$ | async as activeLanguage\">\n          <ng-container *ngIf=\"isConflictGroupType(currentGroup.groupType)\">\n            <cx-configurator-conflict-suggestion\n              [currentGroup]=\"currentGroup\"\n              [attribute]=\"attribute\"\n              [suggestionNumber]=\"indexOfAttribute\"\n            ></cx-configurator-conflict-suggestion>\n          </ng-container>\n          <cx-configurator-attribute-header\n            [attribute]=\"attribute\"\n            [owner]=\"configuration.owner\"\n            [groupId]=\"currentGroup.id\"\n            [groupType]=\"currentGroup.groupType\"\n          >\n          </cx-configurator-attribute-header>\n          <!-- Single Selection Radio Button -->\n          <cx-configurator-attribute-radio-button\n            *ngIf=\"\n              attribute.uiType === uiType.RADIOBUTTON ||\n              attribute.uiType === uiType.RADIOBUTTON_ADDITIONAL_INPUT\n            \"\n            [attribute]=\"attribute\"\n            [ownerKey]=\"configuration.owner.key\"\n            [ownerType]=\"configuration.owner.type\"\n            [language]=\"activeLanguage\"\n            (selectionChange)=\"updateConfiguration($event)\"\n          ></cx-configurator-attribute-radio-button>\n\n          <!-- Single Selection Product Bundle -->\n          <cx-configurator-attribute-single-selection-bundle\n            (selectionChange)=\"updateConfiguration($event)\"\n            [attribute]=\"attribute\"\n            [ownerKey]=\"configuration.owner.key\"\n            *ngIf=\"attribute.uiType === uiType.RADIOBUTTON_PRODUCT\"\n          ></cx-configurator-attribute-single-selection-bundle>\n\n          <!-- Multi Selection Product Bundle -->\n          <cx-configurator-attribute-multi-selection-bundle\n            (selectionChange)=\"updateConfiguration($event)\"\n            [attribute]=\"attribute\"\n            [ownerKey]=\"configuration.owner.key\"\n            *ngIf=\"attribute.uiType === uiType.CHECKBOXLIST_PRODUCT\"\n          ></cx-configurator-attribute-multi-selection-bundle>\n\n          <!-- Single Selection Dropdown Product Bundle -->\n          <cx-configurator-attribute-single-selection-bundle-dropdown\n            *ngIf=\"attribute.uiType === uiType.DROPDOWN_PRODUCT\"\n            [attribute]=\"attribute\"\n            [group]=\"currentGroup.id\"\n            [ownerKey]=\"configuration.owner.key\"\n            (selectionChange)=\"updateConfiguration($event)\"\n          ></cx-configurator-attribute-single-selection-bundle-dropdown>\n\n          <!-- Single Selection Dropdown -->\n          <cx-configurator-attribute-drop-down\n            *ngIf=\"\n              attribute.uiType === uiType.DROPDOWN ||\n              attribute.uiType === uiType.DROPDOWN_ADDITIONAL_INPUT\n            \"\n            [attribute]=\"attribute\"\n            [group]=\"currentGroup.id\"\n            [ownerKey]=\"configuration.owner.key\"\n            [ownerType]=\"configuration.owner.type\"\n            [language]=\"activeLanguage\"\n            (selectionChange)=\"updateConfiguration($event)\"\n          ></cx-configurator-attribute-drop-down>\n          <cx-configurator-attribute-input-field\n            *ngIf=\"attribute.uiType === uiType.STRING\"\n            [attribute]=\"attribute\"\n            [group]=\"currentGroup.id\"\n            [ownerType]=\"configuration.owner.type\"\n            [ownerKey]=\"configuration.owner.key\"\n            (inputChange)=\"updateConfiguration($event)\"\n          >\n          </cx-configurator-attribute-input-field>\n\n          <cx-configurator-attribute-numeric-input-field\n            *ngIf=\"attribute.uiType === uiType.NUMERIC\"\n            [attribute]=\"attribute\"\n            [group]=\"currentGroup.id\"\n            [ownerType]=\"configuration.owner.type\"\n            [ownerKey]=\"configuration.owner.key\"\n            [language]=\"activeLanguage\"\n            (inputChange)=\"updateConfiguration($event)\"\n          ></cx-configurator-attribute-numeric-input-field>\n\n          <!-- Multi Selection Checkbox -->\n          <cx-configurator-attribute-checkbox-list\n            *ngIf=\"attribute.uiType === uiType.CHECKBOXLIST\"\n            [attribute]=\"attribute\"\n            [group]=\"currentGroup.id\"\n            [ownerKey]=\"configuration.owner.key\"\n            (selectionChange)=\"updateConfiguration($event)\"\n          ></cx-configurator-attribute-checkbox-list>\n          <cx-configurator-attribute-checkbox\n            *ngIf=\"attribute.uiType === uiType.CHECKBOX\"\n            [attribute]=\"attribute\"\n            [group]=\"currentGroup.id\"\n            [ownerKey]=\"configuration.owner.key\"\n            (selectionChange)=\"updateConfiguration($event)\"\n          ></cx-configurator-attribute-checkbox>\n          <cx-configurator-attribute-read-only\n            *ngIf=\"attribute.uiType === uiType.READ_ONLY\"\n            [attribute]=\"attribute\"\n            [group]=\"currentGroup.id\"\n          ></cx-configurator-attribute-read-only>\n          <cx-configurator-attribute-multi-selection-image\n            *ngIf=\"attribute.uiType === uiType.MULTI_SELECTION_IMAGE\"\n            [attribute]=\"attribute\"\n            [ownerKey]=\"configuration.owner.key\"\n            (selectionChange)=\"updateConfiguration($event)\"\n          ></cx-configurator-attribute-multi-selection-image>\n          <cx-configurator-attribute-single-selection-image\n            *ngIf=\"attribute.uiType === uiType.SINGLE_SELECTION_IMAGE\"\n            [attribute]=\"attribute\"\n            [ownerKey]=\"configuration.owner.key\"\n            (selectionChange)=\"updateConfiguration($event)\"\n          ></cx-configurator-attribute-single-selection-image>\n\n          <em *ngIf=\"attribute.uiType === uiType.NOT_IMPLEMENTED\">{{\n            'configurator.attribute.notSupported' | cxTranslate\n          }}</em>\n\n          <cx-configurator-attribute-footer\n            [attribute]=\"attribute\"\n            [owner]=\"configuration.owner\"\n            [groupId]=\"currentGroup.id\"\n          ></cx-configurator-attribute-footer>\n        </ng-container>\n      </div>\n    </div>\n  </ng-container>\n</ng-container>\n\n<ng-template #ghostForm>\n  <ng-container *ngFor=\"let number of [0, 1, 2]\">\n    <div class=\"cx-ghost-attribute\">\n      <div class=\"cx-ghost-header\">\n        <div class=\"cx-ghost-title ghost\"></div>\n        <div class=\"cx-ghost-icon ghost\"></div>\n      </div>\n      <div class=\"cx-ghost-body\">\n        <div class=\"cx-ghost-text ghost\"></div>\n        <div class=\"cx-ghost-price ghost\"></div>\n      </div>\n    </div>\n\n    <div class=\"cx-ghost-attribute\">\n      <div class=\"cx-ghost-header\">\n        <div class=\"cx-ghost-title ghost\"></div>\n        <div class=\"cx-ghost-icon ghost\"></div>\n        <div class=\"cx-ghost-description-box\">\n          <div class=\"cx-ghost-description ghost\"></div>\n        </div>\n      </div>\n      <div class=\"cx-ghost-body\">\n        <div\n          *ngFor=\"let number of [0, 1, 2]; let i = index\"\n          class=\"cx-ghost-radiobutton-value\"\n        >\n          <div class=\"cx-ghost-value-label-pair\">\n            <div class=\"cx-ghost-value-icon ghost\"></div>\n            <div class=\"cx-ghost-label ghost\"></div>\n          </div>\n          <div class=\"cx-ghost-value-price ghost\">\n            <ng-container *ngIf=\"i !== 0\">\n              <div class=\"cx-ghost-price\"></div>\n            </ng-container>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</ng-template>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Configurator } from '../../core/model/configurator.model';\nexport class ConfigFormUpdateEvent {\n  changedAttribute: Configurator.Attribute;\n  ownerKey: string;\n  updateType?: Configurator.UpdateType;\n}\n\nexport interface QuantityUpdateEvent {\n  quantity: number;\n  valueCode?: string;\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { ConfiguratorAttributeFooterModule } from '../attribute/footer/configurator-attribute-footer.module';\nimport { ConfiguratorAttributeHeaderModule } from '../attribute/header/configurator-attribute-header.module';\nimport { ConfiguratorAttributeCheckboxListModule } from '../attribute/types/checkbox-list/configurator-attribute-checkbox-list.module';\nimport { ConfiguratorAttributeCheckboxModule } from '../attribute/types/checkbox/configurator-attribute-checkbox.module';\nimport { ConfiguratorAttributeDropDownModule } from '../attribute/types/drop-down/configurator-attribute-drop-down.module';\nimport { ConfiguratorAttributeInputFieldModule } from '../attribute/types/input-field/configurator-attribute-input-field.module';\nimport { ConfiguratorAttributeMultiSelectionBundleModule } from '../attribute/types/multi-selection-bundle/configurator-attribute-multi-selection-bundle.module';\nimport { ConfiguratorAttributeMultiSelectionImageModule } from '../attribute/types/multi-selection-image/configurator-attribute-multi-selection-image.module';\nimport { ConfiguratorAttributeNumericInputFieldModule } from '../attribute/types/numeric-input-field/configurator-attribute-numeric-input-field.module';\nimport { ConfiguratorAttributeRadioButtonModule } from '../attribute/types/radio-button/configurator-attribute-radio-button.module';\nimport { ConfiguratorAttributeReadOnlyModule } from '../attribute/types/read-only/configurator-attribute-read-only.module';\nimport { ConfiguratorAttributeSingleSelectionBundleDropdownModule } from '../attribute/types/single-selection-bundle-dropdown/configurator-attribute-single-selection-bundle-dropdown.module';\nimport { ConfiguratorAttributeSingleSelectionBundleModule } from '../attribute/types/single-selection-bundle/configurator-attribute-single-selection-bundle.module';\nimport { ConfiguratorAttributeSingleSelectionImageModule } from '../attribute/types/single-selection-image/configurator-attribute-single-selection-image.module';\nimport { ConfiguratorConflictDescriptionModule } from '../conflict-description/configurator-conflict-description.module';\nimport { ConfiguratorConflictSuggestionModule } from '../conflict-suggestion/configurator-conflict-suggestion.module';\nimport { ConfiguratorFormComponent } from './configurator-form.component';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    I18nModule,\n    NgSelectModule,\n    ConfiguratorAttributeInputFieldModule,\n    ConfiguratorAttributeFooterModule,\n    ConfiguratorAttributeNumericInputFieldModule,\n    ConfiguratorAttributeHeaderModule,\n    ConfiguratorAttributeRadioButtonModule,\n    ConfiguratorAttributeSingleSelectionBundleModule,\n    ConfiguratorAttributeMultiSelectionBundleModule,\n    ConfiguratorAttributeReadOnlyModule,\n    ConfiguratorAttributeSingleSelectionImageModule,\n    ConfiguratorAttributeSingleSelectionBundleDropdownModule,\n    ConfiguratorAttributeCheckboxModule,\n    ConfiguratorAttributeCheckboxListModule,\n    ConfiguratorAttributeDropDownModule,\n    ConfiguratorAttributeMultiSelectionImageModule,\n    ConfiguratorConflictDescriptionModule,\n    ConfiguratorConflictSuggestionModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ConfiguratorForm: {\n          component: ConfiguratorFormComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ConfiguratorFormComponent],\n  exports: [ConfiguratorFormComponent],\n})\nexport class ConfiguratorFormModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-form.component';\nexport * from './configurator-form.event';\nexport * from './configurator-form.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ElementRef, Injectable, QueryList } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\n\n@Injectable({ providedIn: 'root' })\nexport class ConfiguratorGroupMenuService {\n  constructor(protected windowRef: WindowRef) {}\n\n  /**\n   * Retrieves the focused group index.\n   *\n   * @param {QueryList<ElementRef<HTMLElement>>} groups - List of the groups\n   * @returns {number | undefined} - focused group index\n   * @protected\n   */\n  protected getFocusedGroupIndex(\n    groups: QueryList<ElementRef<HTMLElement>>\n  ): number | undefined {\n    if (groups) {\n      const group = groups.find(\n        (groupHTMLEl) =>\n          groupHTMLEl.nativeElement?.id ===\n          this.windowRef?.document?.activeElement?.id\n      );\n      if (group) {\n        return groups.toArray().indexOf(group);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Updates the current group index, if the current group index is not equal focused group index.\n   * Otherwise the current group index stays unchanged.\n   *\n   * @param {number} currentGroupIndex - Current group index\n   * @param {number} focusedGroupIndex - Focused group index\n   * @returns {number} - updated group index\n   * @protected\n   */\n  protected updateCurrentGroupIndex(\n    currentGroupIndex: number,\n    focusedGroupIndex?: number\n  ): number {\n    if (focusedGroupIndex) {\n      return focusedGroupIndex !== currentGroupIndex\n        ? focusedGroupIndex\n        : currentGroupIndex;\n    }\n    return currentGroupIndex;\n  }\n\n  /**\n   * Focuses the next group.\n   *\n   * @param {number} currentGroupIndex - Current group index\n   * @param {QueryList<ElementRef<HTMLElement>>} groups - List of the groups\n   * @protected\n   */\n  protected focusNextGroup(\n    currentGroupIndex: number,\n    groups: QueryList<ElementRef<HTMLElement>>\n  ): void {\n    const focusedGroupIndex = this.getFocusedGroupIndex(groups);\n    currentGroupIndex = this.updateCurrentGroupIndex(\n      currentGroupIndex,\n      focusedGroupIndex\n    );\n\n    if (groups) {\n      if (currentGroupIndex === groups.length - 1) {\n        groups.first?.nativeElement?.focus();\n      } else {\n        groups.toArray()[currentGroupIndex + 1]?.nativeElement.focus();\n      }\n    }\n  }\n\n  /**\n   * Focuses the previous group.\n   *\n   * @param {number} currentGroupIndex - Current group index\n   * @param {QueryList<ElementRef<HTMLElement>>} groups - List of the groups\n   * @protected\n   */\n  protected focusPreviousGroup(\n    currentGroupIndex: number,\n    groups: QueryList<ElementRef<HTMLElement>>\n  ): void {\n    const focusedGroupIndex = this.getFocusedGroupIndex(groups);\n    currentGroupIndex = this.updateCurrentGroupIndex(\n      currentGroupIndex,\n      focusedGroupIndex\n    );\n\n    if (groups) {\n      if (currentGroupIndex === 0) {\n        groups.last?.nativeElement?.focus();\n      } else {\n        groups.toArray()[currentGroupIndex - 1]?.nativeElement?.focus();\n      }\n    }\n  }\n\n  /**\n   * Switches the group on pressing an arrow key.\n   *\n   * @param {KeyboardEvent} event - keyboard event\n   * @param {number} groupIndex - Group index\n   * @param {QueryList<ElementRef<HTMLElement>>} groups - List of the groups\n   */\n  switchGroupOnArrowPress(\n    event: KeyboardEvent,\n    groupIndex: number,\n    groups: QueryList<ElementRef<HTMLElement>>\n  ): void {\n    event.preventDefault();\n    if (event.code === 'ArrowUp') {\n      this.focusPreviousGroup(groupIndex, groups);\n    } else if (event.code === 'ArrowDown') {\n      this.focusNextGroup(groupIndex, groups);\n    }\n  }\n\n  /**\n   * Verifies whether the first group in the group list is `Back` button.\n   *\n   * @param {QueryList<ElementRef<HTMLElement>>} groups - List of the groups\n   * @returns {boolean} - returns `true` if the first group in the group list is `Back` button, otherwise `false`\n   */\n  isBackBtnFocused(\n    groups: QueryList<ElementRef<HTMLElement>>\n  ): boolean | undefined {\n    if (groups) {\n      return (\n        groups.first?.nativeElement?.classList?.value?.indexOf(\n          'cx-menu-back'\n        ) !== -1 &&\n        this.windowRef?.document?.activeElement === groups.first?.nativeElement\n      );\n    }\n    return undefined;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport { TranslationService } from '@spartacus/core';\nimport {\n  ConfiguratorRouter,\n  ConfiguratorRouterExtractorService,\n} from '@spartacus/product-configurator/common';\nimport {\n  DirectionMode,\n  DirectionService,\n  HamburgerMenuService,\n  ICON_TYPE,\n} from '@spartacus/storefront';\nimport { Observable, of } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\nimport { ConfiguratorCommonsService } from '../../core/facade/configurator-commons.service';\nimport { ConfiguratorGroupsService } from '../../core/facade/configurator-groups.service';\nimport { Configurator } from '../../core/model/configurator.model';\nimport { ConfiguratorStorefrontUtilsService } from '../service/configurator-storefront-utils.service';\nimport { ConfiguratorGroupMenuService } from './configurator-group-menu.component.service';\n\n@Component({\n  selector: 'cx-configurator-group-menu',\n  templateUrl: './configurator-group-menu.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorGroupMenuComponent {\n  @ViewChildren('groupItem') groups: QueryList<ElementRef<HTMLElement>>;\n\n  routerData$: Observable<ConfiguratorRouter.Data> =\n    this.configRouterExtractorService.extractRouterData();\n\n  configuration$: Observable<Configurator.Configuration> =\n    this.routerData$.pipe(\n      switchMap((routerData) =>\n        this.configCommonsService\n          .getConfiguration(routerData.owner)\n          .pipe(\n            map((configuration) => ({ routerData, configuration })),\n            //We need to ensure that the navigation to conflict groups or\n            //groups with mandatory attributes already has taken place, as this happens\n            //in an onInit of another component.\n            //otherwise we risk that this component is completely initialized too early,\n            //in dev mode resulting in ExpressionChangedAfterItHasBeenCheckedError\n            filter(\n              (cont) =>\n                (cont.configuration.complete &&\n                  cont.configuration.consistent) ||\n                cont.configuration.interactionState.issueNavigationDone ||\n                !cont.routerData.resolveIssues\n            )\n          )\n\n          .pipe(map((cont) => cont.configuration))\n      )\n    );\n\n  currentGroup$: Observable<Configurator.Group> = this.routerData$.pipe(\n    switchMap((routerData) =>\n      this.configuratorGroupsService.getCurrentGroup(routerData.owner)\n    )\n  );\n  /**\n   * Current parent group. Undefined for top level groups\n   */\n  displayedParentGroup$: Observable<Configurator.Group | undefined> =\n    this.configuration$.pipe(\n      switchMap((configuration) =>\n        this.configuratorGroupsService.getMenuParentGroup(configuration.owner)\n      ),\n      switchMap((parentGroup) => {\n        return parentGroup\n          ? this.getCondensedParentGroup(parentGroup)\n          : of(parentGroup);\n      })\n    );\n\n  displayedGroups$: Observable<Configurator.Group[]> =\n    this.displayedParentGroup$.pipe(\n      switchMap((parentGroup) => {\n        return this.configuration$.pipe(\n          map((configuration) => {\n            if (parentGroup) {\n              return this.condenseGroups(parentGroup.subGroups);\n            } else {\n              return this.condenseGroups(configuration.groups);\n            }\n          })\n        );\n      })\n    );\n\n  iconTypes = ICON_TYPE;\n  ERROR = ' ERROR';\n  COMPLETE = ' COMPLETE';\n  WARNING = ' WARNING';\n  ICON = 'ICON';\n\n  constructor(\n    protected configCommonsService: ConfiguratorCommonsService,\n    protected configuratorGroupsService: ConfiguratorGroupsService,\n    protected hamburgerMenuService: HamburgerMenuService,\n    protected configRouterExtractorService: ConfiguratorRouterExtractorService,\n    protected configUtils: ConfiguratorStorefrontUtilsService,\n    protected configGroupMenuService: ConfiguratorGroupMenuService,\n    protected directionService: DirectionService,\n    protected translation: TranslationService\n  ) {}\n\n  click(group: Configurator.Group): void {\n    this.configuration$.pipe(take(1)).subscribe((configuration) => {\n      if (configuration.interactionState.currentGroup === group.id) {\n        return;\n      }\n      if (!this.configuratorGroupsService.hasSubGroups(group)) {\n        this.configuratorGroupsService.navigateToGroup(configuration, group.id);\n        this.hamburgerMenuService.toggle(true);\n\n        this.configUtils.scrollToConfigurationElement(\n          '.VariantConfigurationTemplate, .CpqConfigurationTemplate'\n        );\n      } else {\n        this.configuratorGroupsService.setMenuParentGroup(\n          configuration.owner,\n          group.id\n        );\n      }\n    });\n  }\n\n  navigateUp(): void {\n    this.displayedParentGroup$\n      .pipe(take(1))\n      .subscribe((displayedParentGroup) => {\n        //we only navigate up if we are not on a sub level group\n        if (displayedParentGroup) {\n          const grandParentGroup$ = this.getParentGroup(displayedParentGroup);\n          this.configuration$.pipe(take(1)).subscribe((configuration) => {\n            grandParentGroup$.pipe(take(1)).subscribe((grandParentGroup) => {\n              this.configuratorGroupsService.setMenuParentGroup(\n                configuration.owner,\n                grandParentGroup ? grandParentGroup.id : undefined\n              );\n            });\n          });\n        }\n      });\n  }\n\n  /**\n   * Retrieves the number of conflicts for the current group.\n   *\n   * @param {Configurator.Group} group - Current group\n   * @return {string} - number of conflicts\n   */\n  getConflictNumber(group: Configurator.Group): string {\n    if (\n      group &&\n      group.groupType === Configurator.GroupType.CONFLICT_HEADER_GROUP\n    ) {\n      return '(' + group.subGroups.length + ')';\n    }\n    return '';\n  }\n\n  /**\n   * Verifies whether the current group has subgroups.\n   *\n   * @param {Configurator.Group} group - Current group\n   * @return {boolean} - Returns 'true' if the current group has a subgroups, otherwise 'false'.\n   */\n  hasSubGroups(group: Configurator.Group): boolean {\n    return this.configuratorGroupsService.hasSubGroups(group);\n  }\n\n  /**\n   * Retrieves observable of parent group for a group\n   * @param group\n   * @returns Parent group, undefined in case input group is already on root level\n   */\n  protected getParentGroup(\n    group: Configurator.Group\n  ): Observable<Configurator.Group | undefined> {\n    return this.configuration$.pipe(\n      map((configuration) =>\n        this.configuratorGroupsService.getParentGroup(\n          configuration.groups,\n          group\n        )\n      )\n    );\n  }\n\n  getCondensedParentGroup(\n    parentGroup: Configurator.Group\n  ): Observable<Configurator.Group | undefined> {\n    if (\n      parentGroup &&\n      parentGroup.subGroups &&\n      parentGroup.subGroups.length === 1 &&\n      parentGroup.groupType !== Configurator.GroupType.CONFLICT_HEADER_GROUP\n    ) {\n      return this.getParentGroup(parentGroup).pipe(\n        switchMap((group) => {\n          return group ? this.getCondensedParentGroup(group) : of(group);\n        })\n      );\n    } else {\n      return of(parentGroup);\n    }\n  }\n\n  condenseGroups(groups: Configurator.Group[]): Configurator.Group[] {\n    return groups.flatMap((group) => {\n      if (\n        group.subGroups.length === 1 &&\n        group.groupType !== Configurator.GroupType.CONFLICT_HEADER_GROUP\n      ) {\n        return this.condenseGroups(group.subGroups);\n      } else {\n        return group;\n      }\n    });\n  }\n\n  /**\n   * Returns true if group has been visited and if the group is not a conflict group.\n   *\n   * @param {Configurator.Group} group - Current group\n   * @param {Configurator.Configuration} configuration - Configuration\n   * @return {Observable<boolean>} - true if visited and not a conflict group\n   */\n  isGroupVisited(\n    group: Configurator.Group,\n    configuration: Configurator.Configuration\n  ): Observable<boolean> {\n    return this.configuratorGroupsService\n      .isGroupVisited(configuration.owner, group.id)\n      .pipe(\n        map(\n          (isVisited) =>\n            isVisited &&\n            !this.isConflictGroupType(\n              group.groupType ?? Configurator.GroupType.ATTRIBUTE_GROUP\n            )\n        ),\n        take(1)\n      );\n  }\n\n  /**\n   * Verifies whether the current group is conflict one.\n   *\n   * @param {Configurator.GroupType} groupType - Group type\n   * @return {boolean} - 'True' if the current group is conflict one, otherwise 'false'.\n   */\n  isConflictGroupType(groupType: Configurator.GroupType): boolean {\n    return this.configuratorGroupsService.isConflictGroupType(groupType);\n  }\n\n  /**\n   * Returns true if group is conflict header group.\n   *\n   * @param {Configurator.Group} group - Current group\n   *  @return {boolean} - Returns 'true' if the current group is conflict header group, otherwise 'false'.\n   */\n  isConflictHeader(group: Configurator.Group): boolean {\n    return (\n      group && group.groupType === Configurator.GroupType.CONFLICT_HEADER_GROUP\n    );\n  }\n\n  /**\n   * Returns true if group is conflict group.\n   *\n   * @param {Configurator.Group} group - Current group\n   *  @return {boolean} - Returns 'true' if the current group is conflict group, otherwise 'false'.\n   */\n  isConflictGroup(group: Configurator.Group): boolean {\n    return group && group.groupType === Configurator.GroupType.CONFLICT_GROUP;\n  }\n\n  /**\n   * Returns group-status style classes dependent on completeness, conflicts, visited status and configurator type.\n   *\n   * @param {Configurator.Group} group - Current group\n   * @param {Configurator.Configuration} configuration - Configuration\n   * @return {Observable<boolean>} - true if visited and not a conflict group\n   */\n  getGroupStatusStyles(\n    group: Configurator.Group,\n    configuration: Configurator.Configuration\n  ): Observable<string> {\n    return this.isGroupVisited(group, configuration).pipe(\n      map((isVisited) => {\n        const CLOUDCPQ_CONFIGURATOR_TYPE = 'CLOUDCPQCONFIGURATOR';\n        let groupStatusStyle: string = 'cx-menu-item';\n        if (\n          configuration.owner.configuratorType !== CLOUDCPQ_CONFIGURATOR_TYPE &&\n          !group.consistent\n        ) {\n          groupStatusStyle = groupStatusStyle + this.WARNING;\n        }\n        if (\n          configuration.owner.configuratorType !== CLOUDCPQ_CONFIGURATOR_TYPE &&\n          group.complete &&\n          group.consistent &&\n          isVisited\n        ) {\n          groupStatusStyle = groupStatusStyle + this.COMPLETE;\n        }\n        if (!group.complete && isVisited) {\n          groupStatusStyle = groupStatusStyle + this.ERROR;\n        }\n        return groupStatusStyle;\n      })\n    );\n  }\n\n  protected isLTRDirection(): boolean {\n    return this.directionService.getDirection() === DirectionMode.LTR;\n  }\n\n  protected isRTLDirection(): boolean {\n    return this.directionService.getDirection() === DirectionMode.RTL;\n  }\n\n  /**\n   * Verifies whether the user navigates into a subgroup of the main group menu.\n   *\n   * @param {KeyboardEvent} event - Keyboard event\n   * @returns {boolean} -'true' if the user navigates into the subgroup, otherwise 'false'.\n   * @protected\n   */\n  protected isForwardsNavigation(event: KeyboardEvent): boolean {\n    return (\n      (event.code === 'ArrowRight' && this.isLTRDirection()) ||\n      (event.code === 'ArrowLeft' && this.isRTLDirection())\n    );\n  }\n\n  /**\n   * Verifies whether the user navigates from a subgroup back to the main group menu.\n   *\n   * @param {KeyboardEvent} event - Keyboard event\n   * @returns {boolean} -'true' if the user navigates back into the main group menu, otherwise 'false'.\n   * @protected\n   */\n  protected isBackNavigation(event: KeyboardEvent): boolean {\n    return (\n      (event.code === 'ArrowLeft' && this.isLTRDirection()) ||\n      (event.code === 'ArrowRight' && this.isRTLDirection())\n    );\n  }\n\n  /**\n   * Switches the group on pressing an arrow key.\n   *\n   * @param {KeyboardEvent} event - Keyboard event\n   * @param {string} groupIndex - Group index\n   * @param {Configurator.Group} targetGroup - Target group\n   * @param {Configurator.Group} currentGroup - Current group\n   */\n  switchGroupOnArrowPress(\n    event: KeyboardEvent,\n    groupIndex: number,\n    targetGroup: Configurator.Group,\n    currentGroup: Configurator.Group\n  ): void {\n    if (event.code === 'ArrowUp' || event.code === 'ArrowDown') {\n      this.configGroupMenuService.switchGroupOnArrowPress(\n        event,\n        groupIndex,\n        this.groups\n      );\n    } else if (this.isForwardsNavigation(event)) {\n      if (targetGroup && this.hasSubGroups(targetGroup)) {\n        this.click(targetGroup);\n        this.setFocusForSubGroup(targetGroup, currentGroup.id);\n      }\n    } else if (this.isBackNavigation(event)) {\n      if (this.configGroupMenuService.isBackBtnFocused(this.groups)) {\n        this.navigateUp();\n        this.setFocusForMainMenu(currentGroup.id);\n      }\n    }\n  }\n\n  /**\n   * Persists the keyboard focus state for the given key\n   * from the main group menu by back navigation.\n   *\n   * @param {string} currentGroupId - Current group ID\n   */\n  setFocusForMainMenu(currentGroupId?: string): void {\n    let key: string | undefined = currentGroupId;\n    this.configuration$.pipe(take(1)).subscribe((configuration) => {\n      configuration.groups?.forEach((group) => {\n        if (\n          group.subGroups?.length !== 1 &&\n          (this.isGroupSelected(group.id, currentGroupId) ||\n            this.containsSelectedGroup(group, currentGroupId))\n        ) {\n          key = group.id;\n        }\n      });\n    });\n    this.configUtils.setFocus(key);\n  }\n\n  /**\n   * Persists the keyboard focus state for the given key\n   * from the subgroup menu by forwards navigation.\n   *\n   * @param {Configurator.Group} group - Group\n   * @param {string} currentGroupId - Current group ID\n   */\n  setFocusForSubGroup(\n    group: Configurator.Group,\n    currentGroupId?: string\n  ): void {\n    let key: string | undefined = 'cx-menu-back';\n    if (this.containsSelectedGroup(group, currentGroupId)) {\n      key = currentGroupId;\n    }\n    this.configUtils.setFocus(key);\n  }\n\n  /**\n   * Verifies whether the parent group contains a selected group.\n   *\n   * @param {Configurator.Group} group - Group\n   * @param {string} currentGroupId - Current group ID\n   * @returns {boolean} - 'true' if the parent group contains a selected group, otherwise 'false'\n   */\n  containsSelectedGroup(\n    group: Configurator.Group,\n    currentGroupId?: string\n  ): boolean {\n    let isCurrentGroupFound = false;\n    group.subGroups?.forEach((subGroup) => {\n      if (this.isGroupSelected(subGroup.id, currentGroupId)) {\n        isCurrentGroupFound = true;\n      }\n    });\n    return isCurrentGroupFound;\n  }\n\n  /**\n   * Retrieves the tab index depending on if the the current group is selected\n   * or the parent group contains the selected group.\n   *\n   * @param {Configurator.Group} group - Group\n   * @param {string} currentGroupId - Current group ID\n   * @returns {number} - tab index\n   */\n  getTabIndex(group: Configurator.Group, currentGroupId: string): number {\n    if (\n      !this.isGroupSelected(group.id, currentGroupId) &&\n      !this.containsSelectedGroup(group, currentGroupId)\n    ) {\n      return -1;\n    } else {\n      return 0;\n    }\n  }\n\n  /**\n   * Verifies whether the current group is selected.\n   *\n   * @param {string} groupId - group ID\n   * @param {string} currentGroupId - Current group ID\n   * @returns {boolean} - 'true' if the current group is selected, otherwise 'false'\n   */\n  isGroupSelected(groupId?: string, currentGroupId?: string): boolean {\n    return groupId === currentGroupId;\n  }\n\n  /**\n   * Generates a group ID for aria-controls.\n   *\n   * @param {string} groupId - group ID\n   * @returns {string | undefined} - generated group ID\n   */\n  createAriaControls(groupId?: string): string | undefined {\n    return this.configUtils.createGroupId(groupId);\n  }\n\n  /**\n   * Generates aria-label for group menu item\n   *\n   * @param {string} groupId - group ID\n   * @returns {string | undefined} - generated group ID\n   */\n  getAriaLabel(group: Configurator.Group): string {\n    let translatedText = '';\n    if (group && group.groupType && this.isConflictGroupType(group.groupType)) {\n      if (this.isConflictHeader(group)) {\n        this.translation\n          .translate('configurator.a11y.conflictsInConfiguration', {\n            numberOfConflicts: this.getConflictNumber(group),\n          })\n          .pipe(take(1))\n          .subscribe((text) => (translatedText = text));\n      } else {\n        translatedText = group.description ? group.description : '';\n      }\n    } else {\n      this.translation\n        .translate('configurator.a11y.groupName', {\n          group: group.description,\n        })\n        .pipe(take(1))\n        .subscribe((text) => (translatedText = text));\n    }\n    return translatedText;\n  }\n\n  /**\n   * Generates an id for icons.\n   *\n   * @param {string} prefix - prefix for type of icon\n   * @param {string} groupId - group id\n   * @returns {string | undefined} - generated icon id\n   */\n  createIconId(type: ICON_TYPE, groupId?: string): string | undefined {\n    return this.ICON + type + groupId;\n  }\n\n  /**\n   * Generates aria-describedby\n   *\n   * @param {Configurator.Group} group - Current group\n   * @param {Configurator.Configuration} configuration - Configuration\n   * @return {Observable<string>} - aria-describedby\n   */\n  getAriaDescribedby(\n    group: Configurator.Group,\n    configuration: Configurator.Configuration\n  ): Observable<string> {\n    return this.isGroupVisited(group, configuration).pipe(\n      map((isVisited) => {\n        const CLOUDCPQ_CONFIGURATOR_TYPE = 'CLOUDCPQCONFIGURATOR';\n        let ariaDescribedby: string = '';\n        if (\n          configuration.owner.configuratorType !== CLOUDCPQ_CONFIGURATOR_TYPE &&\n          !group.consistent &&\n          group.groupType &&\n          !this.isConflictGroupType(group.groupType)\n        ) {\n          ariaDescribedby =\n            ariaDescribedby + this.createIconId(ICON_TYPE.WARNING, group.id);\n        }\n        if (\n          configuration.owner.configuratorType !== CLOUDCPQ_CONFIGURATOR_TYPE &&\n          group.complete &&\n          group.consistent &&\n          isVisited\n        ) {\n          ariaDescribedby =\n            ariaDescribedby +\n            ' ' +\n            this.createIconId(ICON_TYPE.SUCCESS, group.id);\n        }\n        if (!group.complete && isVisited) {\n          ariaDescribedby =\n            ariaDescribedby +\n            ' ' +\n            this.createIconId(ICON_TYPE.ERROR, group.id);\n        }\n        if (this.hasSubGroups(group)) {\n          ariaDescribedby =\n            ariaDescribedby +\n            ' ' +\n            this.createIconId(ICON_TYPE.CARET_RIGHT, group.id);\n        }\n        ariaDescribedby = ariaDescribedby + ' inListOfGroups';\n        return ariaDescribedby;\n      })\n    );\n  }\n}\n","<ng-container *ngIf=\"configuration$ | async as configuration; else ghostGroups\">\n  <div class=\"cx-group-menu\" role=\"tablist\">\n    <span id=\"listOfGroups\" class=\"cx-visually-hidden\">\n      {{ 'configurator.a11y.listOfGroups' | cxTranslate }}\n    </span>\n    <span id=\"inListOfGroups\" class=\"cx-visually-hidden\" aria-hidden=\"true\">\n      {{ 'configurator.a11y.inListOfGroups' | cxTranslate }}\n    </span>\n    <ng-container *ngIf=\"displayedGroups$ | async as groups\">\n      <ng-container *ngIf=\"currentGroup$ | async as currentGroup\">\n        <ng-container *ngFor=\"let group of groups; let groupIndex = index\">\n          <ng-container *ngIf=\"displayedParentGroup$ | async as parentGroup\">\n            <button\n              *ngIf=\"parentGroup !== null && groupIndex === 0\"\n              #groupItem\n              class=\"cx-menu-back\"\n              role=\"tab\"\n              [attr.aria-selected]=\"false\"\n              [attr.aria-label]=\"\n                isConflictGroupType(parentGroup.groupType)\n                  ? ('configurator.a11y.conflictBack' | cxTranslate)\n                  : ('configurator.a11y.groupBack' | cxTranslate)\n              \"\n              aria-describedby=\"listOfGroups\"\n              [cxFocus]=\"{ key: 'cx-menu-back' }\"\n              (click)=\"navigateUp()\"\n              (keydown)=\"\n                switchGroupOnArrowPress($event, groupIndex, group, currentGroup)\n              \"\n            >\n              <cx-icon [type]=\"iconTypes.CARET_LEFT\"></cx-icon>\n              {{ 'configurator.button.back' | cxTranslate }}\n            </button>\n          </ng-container>\n          <button\n            #groupItem\n            id=\"{{ group.id }}\"\n            ngClass=\"{{ getGroupStatusStyles(group, configuration) | async }}\"\n            role=\"tab\"\n            [class.DISABLED]=\"!group.configurable\"\n            [class.cx-menu-conflict]=\"isConflictGroupType(group.groupType)\"\n            [class.active]=\"isGroupSelected(group.id, currentGroup.id)\"\n            [class.disable]=\"!group.configurable\"\n            [attr.aria-describedby]=\"\n              getAriaDescribedby(group, configuration) | async\n            \"\n            [attr.aria-selected]=\"isGroupSelected(group.id, currentGroup.id)\"\n            [attr.aria-controls]=\"\n              isGroupSelected(group.id, currentGroup.id)\n                ? createAriaControls(group.id)\n                : null\n            \"\n            [attr.aria-label]=\"getAriaLabel(group)\"\n            [cxFocus]=\"{\n              key: group.id\n            }\"\n            (click)=\"click(group)\"\n            [tabindex]=\"getTabIndex(group, currentGroup.id)\"\n            (keydown)=\"\n              switchGroupOnArrowPress($event, groupIndex, group, currentGroup)\n            \"\n          >\n            <span title=\"{{ group.description }}\">{{ group.description }}</span>\n            <div class=\"groupIndicators\">\n              <div class=\"conflictNumberIndicator\">\n                {{ getConflictNumber(group) }}\n              </div>\n              <div class=\"groupStatusIndicator\">\n                <cx-icon\n                  class=\"WARNING\"\n                  [type]=\"iconTypes.WARNING\"\n                  id=\"{{ createIconId(iconTypes.WARNING, group.id) }}\"\n                  [attr.aria-label]=\"\n                    'configurator.a11y.iconConflict' | cxTranslate\n                  \"\n                ></cx-icon>\n              </div>\n              <div class=\"groupStatusIndicator\">\n                <cx-icon\n                  class=\"ERROR\"\n                  [type]=\"iconTypes.ERROR\"\n                  id=\"{{ createIconId(iconTypes.ERROR, group.id) }}\"\n                  [attr.aria-label]=\"\n                    'configurator.a11y.iconIncomplete' | cxTranslate\n                  \"\n                ></cx-icon>\n                <cx-icon\n                  class=\"COMPLETE\"\n                  [type]=\"iconTypes.SUCCESS\"\n                  id=\"{{ createIconId(iconTypes.SUCCESS, group.id) }}\"\n                  [attr.aria-label]=\"\n                    'configurator.a11y.iconComplete' | cxTranslate\n                  \"\n                ></cx-icon>\n              </div>\n              <div class=\"subGroupIndicator\">\n                <cx-icon\n                  *ngIf=\"hasSubGroups(group)\"\n                  [type]=\"iconTypes.CARET_RIGHT\"\n                  id=\"{{ createIconId(iconTypes.CARET_RIGHT, group.id) }}\"\n                  [attr.aria-label]=\"\n                    'configurator.a11y.iconSubGroup' | cxTranslate\n                  \"\n                ></cx-icon>\n              </div>\n            </div>\n          </button>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n  </div>\n</ng-container>\n<ng-template #ghostGroups>\n  <div class=\"cx-ghost-group-menu\">\n    <div\n      *ngFor=\"let number of [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\"\n      class=\"cx-ghost-menu-item\"\n    >\n      <div class=\"cx-ghost-item-title ghost\"></div>\n    </div>\n  </div>\n</ng-template>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { IconModule, KeyboardFocusModule } from '@spartacus/storefront';\nimport { ConfiguratorGroupMenuComponent } from './configurator-group-menu.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, IconModule, KeyboardFocusModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ConfiguratorMenu: {\n          component: ConfiguratorGroupMenuComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ConfiguratorGroupMenuComponent],\n  exports: [ConfiguratorGroupMenuComponent],\n})\nexport class ConfiguratorGroupMenuModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-group-menu.component';\nexport * from './configurator-group-menu.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\nimport { ConfiguratorRouterExtractorService } from '@spartacus/product-configurator/common';\nimport { ICON_TYPE } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\nimport { ConfiguratorCommonsService } from '../../core/facade/configurator-commons.service';\nimport { ConfiguratorGroupsService } from '../../core/facade/configurator-groups.service';\nimport { Configurator } from '../../core/model/configurator.model';\n\n@Component({\n  selector: 'cx-configurator-group-title',\n  templateUrl: './configurator-group-title.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorGroupTitleComponent {\n  @HostBinding('class.ghost') ghostStyle = true;\n\n  displayedGroup$: Observable<Configurator.Group> =\n    this.configRouterExtractorService.extractRouterData().pipe(\n      switchMap((routerData) =>\n        this.configuratorGroupsService.getCurrentGroup(routerData.owner).pipe(\n          tap(() => {\n            this.ghostStyle = false;\n          })\n        )\n      )\n    );\n\n  iconTypes = ICON_TYPE;\n\n  constructor(\n    protected configuratorCommonsService: ConfiguratorCommonsService,\n    protected configuratorGroupsService: ConfiguratorGroupsService,\n    protected configRouterExtractorService: ConfiguratorRouterExtractorService\n  ) {}\n}\n","<ng-container *ngIf=\"displayedGroup$ | async as group; else ghostGroup\">\n  <div class=\"cx-group-title\">\n    {{ group.description }}\n  </div> </ng-container\n><ng-template #ghostGroup>\n  <div class=\"cx-ghost-group-title\"></div>\n</ng-template>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { ConfiguratorGroupTitleComponent } from './configurator-group-title.component';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ConfiguratorGroupTitle: {\n          component: ConfiguratorGroupTitleComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ConfiguratorGroupTitleComponent],\n  exports: [ConfiguratorGroupTitleComponent],\n})\nexport class ConfiguratorGroupTitleModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-group-title.component';\nexport * from './configurator-group-title.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { BREAKPOINT, BreakpointService } from '@spartacus/storefront';\nimport { Configurator } from '../../core/model/configurator.model';\nimport { ConfiguratorPriceComponentOptions } from '../price/configurator-price.component';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-configurator-overview-attribute',\n  templateUrl: './configurator-overview-attribute.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorOverviewAttributeComponent {\n  @Input() attributeOverview: Configurator.AttributeOverview;\n\n  constructor(protected breakpointService: BreakpointService) {}\n\n  extractPriceFormulaParameters(): ConfiguratorPriceComponentOptions {\n    return {\n      quantity: this.attributeOverview.quantity,\n      price: this.attributeOverview.valuePrice,\n      priceTotal: this.attributeOverview.valuePriceTotal,\n      isLightedUp: true,\n    };\n  }\n\n  /**\n   * Verifies whether the current screen size equals or is larger than breakpoint `BREAKPOINT.md`.\n   *\n   * @returns {Observable<boolean>} - If the given breakpoint equals or is larger than`BREAKPOINT.md` returns `true`, otherwise `false`.\n   */\n  isDesktop(): Observable<boolean> {\n    return this.breakpointService.isUp(BREAKPOINT.md);\n  }\n}\n","<span class=\"cx-visually-hidden\">\n  {{\n    attributeOverview.valuePrice && attributeOverview.valuePrice?.value !== 0\n      ? attributeOverview.valuePriceTotal &&\n        attributeOverview.valuePriceTotal?.value !== 0\n        ? ('configurator.a11y.valueOfAttributeFullWithPrice'\n          | cxTranslate\n            : {\n                value: attributeOverview.value,\n                attribute: attributeOverview.attribute,\n                price: attributeOverview.valuePriceTotal.formattedValue\n              })\n        : ('configurator.a11y.valueOfAttributeFullWithPrice'\n          | cxTranslate\n            : {\n                value: attributeOverview.value,\n                attribute: attributeOverview.attribute,\n                price: attributeOverview.valuePrice.formattedValue\n              })\n      : ('configurator.a11y.valueOfAttributeFull'\n        | cxTranslate\n          : {\n              value: attributeOverview.value,\n              attribute: attributeOverview.attribute\n            })\n  }}\n</span>\n<div class=\"cx-attribute-value\" aria-hidden=\"true\">\n  {{ attributeOverview.value }}\n</div>\n<ng-container *ngIf=\"isDesktop() | async; else mobile\">\n  <div class=\"cx-attribute-label\" aria-hidden=\"true\">\n    {{ attributeOverview.attribute }}\n  </div>\n  <div class=\"cx-attribute-price\" aria-hidden=\"true\">\n    <cx-configurator-price\n      [formula]=\"extractPriceFormulaParameters()\"\n    ></cx-configurator-price>\n  </div>\n</ng-container>\n<ng-template #mobile>\n  <div class=\"cx-attribute-price\" aria-hidden=\"true\">\n    <cx-configurator-price\n      [formula]=\"extractPriceFormulaParameters()\"\n    ></cx-configurator-price>\n  </div>\n  <div class=\"cx-attribute-label\" aria-hidden=\"true\">\n    {{ attributeOverview.attribute }}\n  </div>\n</ng-template>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { ConfiguratorPriceModule } from '../price/configurator-price.module';\nimport { ConfiguratorOverviewAttributeComponent } from './configurator-overview-attribute.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, ConfiguratorPriceModule],\n  declarations: [ConfiguratorOverviewAttributeComponent],\n  exports: [ConfiguratorOverviewAttributeComponent],\n})\nexport class ConfiguratorOverviewAttributeModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-overview-attribute.component';\nexport * from './configurator-overview-attribute.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport {\n  ImageGroup,\n  Product,\n  ProductScope,\n  ProductService,\n  TranslationService,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { Configurator } from '../../core/model/configurator.model';\nimport { ConfiguratorPriceComponentOptions } from '../price/configurator-price.component';\n\n@Component({\n  selector: 'cx-configurator-cpq-overview-attribute',\n  templateUrl: './configurator-overview-bundle-attribute.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorOverviewBundleAttributeComponent implements OnInit {\n  product$: Observable<Product>;\n\n  @Input() attributeOverview: Configurator.AttributeOverview;\n\n  constructor(\n    protected productService: ProductService,\n    protected translation: TranslationService\n  ) {}\n\n  ngOnInit() {\n    const noCommerceProduct: Product = { images: {} };\n    if (this.attributeOverview.productCode) {\n      this.product$ = this.productService\n        .get(this.attributeOverview.productCode, ProductScope.LIST)\n        .pipe(\n          map((respProduct) => {\n            return respProduct ? respProduct : noCommerceProduct;\n          })\n        );\n    } else {\n      this.product$ = of(noCommerceProduct);\n    }\n  }\n\n  /**\n   * Returns primary image from product object\n   *\n   * @param {Product} product\n   * @returns {(ImageGroup | ImageGroup[] | undefined)} - primary image. View can handle an undefined image\n   */\n  getProductPrimaryImage(\n    product: Product\n  ): ImageGroup | ImageGroup[] | undefined {\n    return product?.images?.PRIMARY;\n  }\n\n  /**\n   * Extract corresponding price formula parameters\n   *\n   * @return {ConfiguratorPriceComponentOptions} - New price formula\n   */\n  extractPriceFormulaParameters(): ConfiguratorPriceComponentOptions {\n    return {\n      quantity: this.attributeOverview.quantity,\n      price: this.attributeOverview.valuePrice,\n      priceTotal: this.attributeOverview.valuePriceTotal,\n      isLightedUp: true,\n    };\n  }\n\n  /**\n   * Verifies whether the quantity should be displayed.\n   *\n   * @return {boolean} - 'true' if the quantity should be displayed, otherwise 'false'\n   */\n  displayQuantity(): boolean {\n    const quantity = this.attributeOverview.quantity;\n    return quantity !== undefined && quantity > 0;\n  }\n\n  /**\n   * Verifies whether the item price should be displayed.\n   *\n   * @return {boolean} - 'true' if the item price price should be displayed, otherwise 'false'\n   */\n  displayPrice(): boolean {\n    return (\n      this.attributeOverview.valuePrice?.value !== undefined &&\n      this.attributeOverview.valuePrice?.value > 0\n    );\n  }\n\n  getAriaLabel(): string {\n    let translatedText = '';\n    if (this.displayQuantity()) {\n      if (\n        this.attributeOverview.valuePrice?.value !== undefined &&\n        this.attributeOverview.valuePrice?.value !== 0\n      ) {\n        this.translation\n          .translate(\n            'configurator.a11y.itemOfAttributeFullWithPriceAndQuantity',\n            {\n              item: this.attributeOverview.value,\n              attribute: this.attributeOverview.attribute,\n              price: this.attributeOverview.valuePriceTotal?.formattedValue,\n              quantity: this.attributeOverview.quantity,\n            }\n          )\n          .pipe(take(1))\n          .subscribe((text) => (translatedText = text));\n      } else {\n        this.translation\n          .translate('configurator.a11y.itemOfAttributeFullWithQuantity', {\n            item: this.attributeOverview.value,\n            attribute: this.attributeOverview.attribute,\n            quantity: this.attributeOverview.quantity,\n          })\n          .pipe(take(1))\n          .subscribe((text) => (translatedText = text));\n      }\n    } else {\n      if (\n        this.attributeOverview.valuePrice?.value !== undefined &&\n        this.attributeOverview.valuePrice?.value !== 0\n      ) {\n        this.translation\n          .translate('configurator.a11y.itemOfAttributeFullWithPrice', {\n            item: this.attributeOverview.value,\n            attribute: this.attributeOverview.attribute,\n            price: this.attributeOverview.valuePriceTotal?.formattedValue,\n          })\n          .pipe(take(1))\n          .subscribe((text) => (translatedText = text));\n      } else {\n        this.translation\n          .translate('configurator.a11y.itemOfAttributeFull', {\n            item: this.attributeOverview.value,\n            attribute: this.attributeOverview.attribute,\n          })\n          .pipe(take(1))\n          .subscribe((text) => (translatedText = text));\n      }\n    }\n    return translatedText;\n  }\n}\n","<ng-container *ngIf=\"product$ | async as product\">\n  <div class=\"cx-value-container\">\n    <div class=\"cx-thumbnail\">\n      <cx-media\n        [container]=\"getProductPrimaryImage(product)\"\n        format=\"product\"\n        aria-hidden=\"true\"\n      ></cx-media>\n    </div>\n    <span class=\"cx-visually-hidden\">\n      {{ getAriaLabel() }}\n    </span>\n    <div class=\"cx-value-info\" aria-hidden=\"true\">\n      <div>\n        {{ attributeOverview.value }}\n      </div>\n      <span class=\"cx-code\" *ngIf=\"attributeOverview?.productCode\">\n        {{ 'configurator.attribute.id' | cxTranslate }}:\n        {{ attributeOverview.productCode }}</span\n      >\n      <div *ngIf=\"displayQuantity()\" class=\"cx-quantity\">\n        <span class=\"cx-identifier\">{{\n          'configurator.attribute.quantity' | cxTranslate\n        }}</span>\n        <span class=\"cx-item\">{{\n          attributeOverview.quantity | cxNumeric\n        }}</span>\n      </div>\n      <div *ngIf=\"displayPrice()\" class=\"cx-price\">\n        <span class=\"cx-identifier\">{{\n          'configurator.overviewForm.itemPrice' | cxTranslate\n        }}</span>\n        <span class=\"cx-item\">{{\n          attributeOverview.valuePrice?.formattedValue\n        }}</span>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"cx-attribute-price-container\" aria-hidden=\"true\">\n    <span class=\"cx-attribute-label\">{{ attributeOverview.attribute }}</span>\n    <cx-configurator-price\n      [formula]=\"extractPriceFormulaParameters()\"\n    ></cx-configurator-price>\n  </div>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { MediaModule } from '@spartacus/storefront';\nimport { ConfiguratorPriceModule } from '../price/configurator-price.module';\nimport { ConfiguratorOverviewBundleAttributeComponent } from './configurator-overview-bundle-attribute.component';\n\n@NgModule({\n  imports: [CommonModule, MediaModule, I18nModule, ConfiguratorPriceModule],\n  declarations: [ConfiguratorOverviewBundleAttributeComponent],\n  exports: [ConfiguratorOverviewBundleAttributeComponent],\n})\nexport class ConfiguratorOverviewBundleAttributeModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-overview-bundle-attribute.component';\nexport * from './configurator-overview-bundle-attribute.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ConfiguratorRouterExtractorService } from '@spartacus/product-configurator/common';\nimport { Observable } from 'rxjs';\nimport { distinctUntilKeyChanged, filter, switchMap } from 'rxjs/operators';\nimport { ConfiguratorCommonsService } from '../../core/facade/configurator-commons.service';\nimport { Configurator } from '../../core/model/configurator.model';\n\n@Component({\n  selector: 'cx-configurator-overview-form',\n  templateUrl: './configurator-overview-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorOverviewFormComponent {\n  attributeOverviewType = Configurator.AttributeOverviewType;\n\n  configuration$: Observable<Configurator.Configuration> =\n    this.configRouterExtractorService.extractRouterData().pipe(\n      switchMap((routerData) =>\n        this.configuratorCommonsService.getOrCreateConfiguration(\n          routerData.owner\n        )\n      ),\n      distinctUntilKeyChanged('configId'),\n      switchMap((configuration) =>\n        this.configuratorCommonsService.getConfigurationWithOverview(\n          configuration\n        )\n      ),\n      filter((configuration) => configuration.overview != null)\n    );\n\n  constructor(\n    protected configuratorCommonsService: ConfiguratorCommonsService,\n    protected configRouterExtractorService: ConfiguratorRouterExtractorService\n  ) {}\n\n  /**\n   * Does the configuration contain any selected attribute values?\n   * @param {Configurator.Configuration} configuration - Current configuration\n   * @returns {boolean} - Any attributes available\n   */\n  hasAttributes(configuration: Configurator.Configuration): boolean {\n    return (\n      configuration.overview?.groups?.find((group) =>\n        group.attributes ? group.attributes.length : 0 > 0\n      ) !== undefined\n    );\n  }\n\n  /**\n   * Verifies whether the next or the previous attributes are same.\n   *\n   * @param {Configurator.AttributeOverview[]} attributes - Attribute array\n   * @param {number} index - Index of the attribute in the array\n   * @return {boolean} - 'True' if it is the same attribute, otherwise 'false'\n   */\n  isSameAttribute(\n    attributes: Configurator.AttributeOverview[],\n    index: number\n  ): boolean {\n    if (attributes.length > 1) {\n      if (index === 0) {\n        return (\n          attributes[index]?.attribute === attributes[index + 1]?.attribute\n        );\n      } else {\n        return (\n          attributes[index]?.attribute === attributes[index - 1]?.attribute\n        );\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Retrieves the styling for the corresponding element.\n   *\n   * @param {Configurator.AttributeOverview[]} attributes - Attribute array\n   * @param {number} index - Index of the attribute in the array\n   * @return {string} - corresponding style class\n   */\n  getStyleClasses(\n    attributes: Configurator.AttributeOverview[],\n    index: number\n  ): string {\n    let styleClass = '';\n\n    switch (attributes[index]?.type) {\n      case this.attributeOverviewType.BUNDLE:\n        styleClass += 'bundle';\n        break;\n      case this.attributeOverviewType.GENERAL:\n        styleClass += 'general';\n        break;\n    }\n\n    if (index === 0 || !this.isSameAttribute(attributes, index)) {\n      styleClass += ' margin';\n    }\n\n    if (\n      !this.isSameAttribute(attributes, index + 1) &&\n      !styleClass.includes('bundle')\n    ) {\n      styleClass += ' last-value-pair';\n    }\n\n    return styleClass;\n  }\n}\n","<ng-container *ngIf=\"configuration$ | async as configuration; else ghostForm\">\n  <ng-container *ngIf=\"hasAttributes(configuration); else noAttributes\">\n    <ng-container\n      *ngTemplateOutlet=\"\n        groups;\n        context: {\n          overviewGroups: configuration.overview.groups,\n          level: 1\n        }\n      \"\n    ></ng-container>\n  </ng-container>\n</ng-container>\n\n<ng-template #noAttributes>\n  <div class=\"cx-no-attribute-value-pairs\">\n    <!-- We currently do not support filtering on overview page so this should never be displayed -->\n    <h2>{{ 'configurator.overviewForm.noAttributeHeader' | cxTranslate }}</h2>\n    <p>{{ 'configurator.overviewForm.noAttributeText' | cxTranslate }}</p>\n  </div>\n</ng-template>\n\n<ng-template #groups let-overviewGroups=\"overviewGroups\" let-level=\"level\">\n  <span class=\"cx-visually-hidden\">\n    {{ 'configurator.a11y.listOfAttributesAndValues' | cxTranslate }}\n  </span>\n  <ng-container *ngFor=\"let group of overviewGroups\">\n    <div\n      class=\"cx-group\"\n      [class.topLevel]=\"level === 1\"\n      [class.subgroupTopLevel]=\"level === 1 && group.subGroups?.length > 0\"\n    >\n      <span class=\"cx-visually-hidden\">\n        {{\n          'configurator.a11y.group'\n            | cxTranslate\n              : {\n                  group: group.groupDescription\n                }\n        }}\n      </span>\n      <h2 aria-hidden=\"true\">\n        <span>{{ group.groupDescription }}</span>\n      </h2>\n\n      <div\n        *ngFor=\"let attributeOverview of group.attributes; let i = index\"\n        class=\"cx-attribute-value-pair\"\n        [ngClass]=\"getStyleClasses(group.attributes, i)\"\n      >\n        <ng-container [ngSwitch]=\"attributeOverview?.type\">\n          <ng-container *ngSwitchCase=\"attributeOverviewType.GENERAL\">\n            <cx-configurator-overview-attribute\n              [attributeOverview]=\"attributeOverview\"\n            >\n            </cx-configurator-overview-attribute>\n          </ng-container>\n\n          <ng-container *ngSwitchCase=\"attributeOverviewType.BUNDLE\">\n            <cx-configurator-cpq-overview-attribute\n              [attributeOverview]=\"attributeOverview\"\n            >\n            </cx-configurator-cpq-overview-attribute>\n          </ng-container>\n\n          <ng-container *ngSwitchDefault>\n            <cx-configurator-overview-attribute\n              [attributeOverview]=\"attributeOverview\"\n            >\n            </cx-configurator-overview-attribute>\n          </ng-container>\n        </ng-container>\n      </div>\n    </div>\n    <ng-container *ngIf=\"group.subGroups?.length > 0\">\n      <ng-container\n        *ngTemplateOutlet=\"\n          groups;\n          context: { overviewGroups: group.subGroups, level: level + 1 }\n        \"\n      ></ng-container>\n    </ng-container>\n  </ng-container>\n</ng-template>\n\n<ng-template #ghostForm>\n  <ng-container *ngFor=\"let number of [0, 1, 2]\">\n    <div class=\"cx-ghost-group\">\n      <div class=\"cx-ghost-header ghost\"></div>\n      <div class=\"cx-ghost-body\">\n        <ng-container *ngFor=\"let number of [0, 1, 2, 3, 4, 5]\">\n          <div class=\"cx-ghost-attribute-value\">\n            <div class=\"cx-ghost-value ghost\"></div>\n          </div>\n          <div class=\"cx-ghost-attribute-label\">\n            <div class=\"cx-ghost-label ghost\"></div>\n          </div>\n          <div class=\"cx-ghost-attribute-price ghost\"></div>\n        </ng-container>\n      </div>\n    </div>\n  </ng-container>\n</ng-template>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { ConfiguratorOverviewAttributeModule } from '../overview-attribute/configurator-overview-attribute.module';\nimport { ConfiguratorOverviewBundleAttributeModule } from '../overview-bundle-attribute/configurator-overview-bundle-attribute.module';\nimport { ConfiguratorOverviewFormComponent } from './configurator-overview-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfiguratorOverviewAttributeModule,\n    ConfiguratorOverviewBundleAttributeModule,\n    I18nModule,\n    FeaturesConfigModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ConfiguratorOverviewForm: {\n          component: ConfiguratorOverviewFormComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ConfiguratorOverviewFormComponent],\n  exports: [ConfiguratorOverviewFormComponent],\n})\nexport class ConfiguratorOverviewFormModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-overview-form.component';\nexport * from './configurator-overview-form.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  CommonConfigurator,\n  CommonConfiguratorUtilsService,\n  ConfiguratorRouter,\n  ConfiguratorRouterExtractorService,\n} from '@spartacus/product-configurator/common';\nimport { ICON_TYPE } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap } from 'rxjs/operators';\nimport { ConfiguratorCommonsService } from '../../core/facade/configurator-commons.service';\nimport { Configurator } from '../../core/model/configurator.model';\n\n@Component({\n  selector: 'cx-configurator-overview-notification-banner',\n  templateUrl: './configurator-overview-notification-banner.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorOverviewNotificationBannerComponent {\n  routerData$: Observable<ConfiguratorRouter.Data> =\n    this.configRouterExtractorService.extractRouterData();\n\n  configuration$: Observable<Configurator.Configuration> =\n    this.routerData$.pipe(\n      filter(\n        (routerData) =>\n          routerData.owner.type === CommonConfigurator.OwnerType.PRODUCT ||\n          routerData.owner.type === CommonConfigurator.OwnerType.CART_ENTRY\n      ),\n      switchMap((routerData) =>\n        this.configuratorCommonsService.getConfiguration(routerData.owner)\n      )\n    );\n\n  configurationOverview$: Observable<Configurator.Overview | undefined> =\n    this.configuration$.pipe(map((configuration) => configuration.overview));\n\n  numberOfIssues$: Observable<number> = this.configuration$.pipe(\n    map((configuration) => {\n      //In case overview carries number of issues: We take it from there.\n      //otherwise configuration's number will be accurate\n      let configOv = configuration.overview;\n      if (configOv?.totalNumberOfIssues) {\n        return configOv.numberOfIncompleteCharacteristics !== undefined\n          ? configOv.numberOfIncompleteCharacteristics\n          : configOv.totalNumberOfIssues;\n      } else {\n        return configuration.totalNumberOfIssues\n          ? configuration.totalNumberOfIssues\n          : 0;\n      }\n    })\n  );\n\n  numberOfConflicts$: Observable<number> = this.configuration$.pipe(\n    map((configuration) => {\n      return configuration.overview?.numberOfConflicts ?? 0;\n    })\n  );\n\n  skipConflictsOnIssueNavigation$: Observable<boolean> =\n    this.configuration$.pipe(\n      map((configuration) => {\n        return (configuration.overview?.numberOfConflicts ?? 0) > 0;\n      })\n    );\n\n  iconTypes = ICON_TYPE;\n\n  constructor(\n    protected configuratorCommonsService: ConfiguratorCommonsService,\n    protected configRouterExtractorService: ConfiguratorRouterExtractorService,\n    protected commonConfigUtilsService: CommonConfiguratorUtilsService\n  ) {}\n}\n","<ng-container *ngIf=\"routerData$ | async as routerData\">\n  <ng-container *ngIf=\"configurationOverview$ | async\">\n    <div\n      class=\"cx-error-notification-banner\"\n      *ngIf=\"numberOfIssues$ | async as numberOfIssues\"\n    >\n      <cx-icon [type]=\"iconTypes.ERROR\"></cx-icon>\n      <div class=\"cx-error-msg\" id=\"cx-configurator-overview-error-msg\">\n        {{\n          'configurator.notificationBanner.numberOfIssues'\n            | cxTranslate: { count: numberOfIssues }\n        }}\n        <button\n          class=\"link cx-action-link\"\n          aria-describedby=\"cx-configurator-overview-error-msg\"\n          [routerLink]=\"\n            {\n              cxRoute: 'configure' + routerData.owner.configuratorType,\n              params: {\n                entityKey: routerData.owner.id,\n                ownerType: routerData.owner.type\n              }\n            } | cxUrl\n          \"\n          [queryParams]=\"{\n            resolveIssues: true,\n            skipConflicts: skipConflictsOnIssueNavigation$ | async\n          }\"\n          cxAutoFocus\n        >\n          {{ 'configurator.header.resolveIssues' | cxTranslate }}\n        </button>\n      </div>\n    </div>\n    <div\n      class=\"cx-conflict-notification-banner\"\n      *ngIf=\"numberOfConflicts$ | async as numberOfConflicts\"\n    >\n      <cx-icon [type]=\"iconTypes.WARNING\"></cx-icon>\n      <div class=\"cx-conflict-msg\" id=\"cx-configurator-overview-conflict-msg\">\n        {{\n          'configurator.notificationBanner.numberOfConflicts'\n            | cxTranslate: { count: numberOfConflicts }\n        }}\n        <button\n          class=\"link cx-action-link\"\n          aria-describedby=\"cx-configurator-overview-conflict-msg\"\n          [routerLink]=\"\n            {\n              cxRoute: 'configure' + routerData.owner.configuratorType,\n              params: {\n                entityKey: routerData.owner.id,\n                ownerType: routerData.owner.type\n              }\n            } | cxUrl\n          \"\n          [queryParams]=\"{ resolveIssues: true }\"\n          cxAutoFocus\n        >\n          {{ 'configurator.header.resolveConflicts' | cxTranslate }}\n        </button>\n      </div>\n    </div>\n  </ng-container>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { IconModule } from '@spartacus/storefront';\nimport { ConfiguratorOverviewNotificationBannerComponent } from './configurator-overview-notification-banner.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, UrlModule, IconModule, RouterModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ConfiguratorOverviewBanner: {\n          component: ConfiguratorOverviewNotificationBannerComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ConfiguratorOverviewNotificationBannerComponent],\n  exports: [ConfiguratorOverviewNotificationBannerComponent],\n})\nexport class ConfiguratorOverviewNotificationBannerModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-overview-notification-banner.component';\nexport * from './configurator-overview-notification-banner.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  CommonConfigurator,\n  ConfiguratorRouterExtractorService,\n} from '@spartacus/product-configurator/common';\nimport { Observable } from 'rxjs';\nimport { delay, filter, map, switchMap, take } from 'rxjs/operators';\nimport { ConfiguratorCommonsService } from '../../core/facade/configurator-commons.service';\nimport { ConfiguratorGroupsService } from '../../core/facade/configurator-groups.service';\nimport { Configurator } from '../../core/model/configurator.model';\nimport { ConfiguratorStorefrontUtilsService } from '../service/configurator-storefront-utils.service';\n\n@Component({\n  selector: 'cx-configurator-previous-next-buttons',\n  templateUrl: './configurator-previous-next-buttons.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorPreviousNextButtonsComponent {\n  configuration$: Observable<Configurator.Configuration> =\n    this.configRouterExtractorService\n      .extractRouterData()\n      .pipe(\n        switchMap((routerData) =>\n          this.configuratorCommonsService.getConfiguration(routerData.owner)\n        )\n      );\n\n  constructor(\n    protected configuratorGroupsService: ConfiguratorGroupsService,\n    protected configuratorCommonsService: ConfiguratorCommonsService,\n    protected configRouterExtractorService: ConfiguratorRouterExtractorService,\n    protected configUtils: ConfiguratorStorefrontUtilsService\n  ) {}\n\n  onPrevious(configuration: Configurator.Configuration): void {\n    this.configuratorGroupsService\n      .getPreviousGroupId(configuration.owner)\n      .pipe(take(1))\n      .subscribe((groupId) => {\n        if (groupId) {\n          this.configuratorGroupsService.navigateToGroup(\n            configuration,\n            groupId\n          );\n          this.focusFirstAttribute();\n        }\n      });\n\n    this.configUtils.scrollToConfigurationElement(\n      '.VariantConfigurationTemplate, .CpqConfigurationTemplate'\n    );\n  }\n\n  onNext(configuration: Configurator.Configuration): void {\n    this.configuratorGroupsService\n      .getNextGroupId(configuration.owner)\n      .pipe(take(1))\n      .subscribe((groupId) => {\n        if (groupId) {\n          this.configuratorGroupsService.navigateToGroup(\n            configuration,\n            groupId\n          );\n          this.focusFirstAttribute();\n        }\n      });\n\n    this.configUtils.scrollToConfigurationElement(\n      '.VariantConfigurationTemplate, .CpqConfigurationTemplate'\n    );\n  }\n\n  isFirstGroup(owner: CommonConfigurator.Owner): Observable<boolean> {\n    return this.configuratorGroupsService\n      .getPreviousGroupId(owner)\n      .pipe(map((group) => !group));\n  }\n\n  isLastGroup(owner: CommonConfigurator.Owner): Observable<boolean> {\n    return this.configuratorGroupsService\n      .getNextGroupId(owner)\n      .pipe(map((group) => !group));\n  }\n\n  protected focusFirstAttribute(): void {\n    this.configRouterExtractorService\n      .extractRouterData()\n      .pipe(\n        switchMap((routerData) =>\n          this.configuratorCommonsService\n            .isConfigurationLoading(routerData.owner)\n            .pipe(\n              filter((isLoading) => isLoading),\n              take(1),\n              switchMap(() =>\n                this.configuratorCommonsService\n                  .isConfigurationLoading(routerData.owner)\n                  .pipe(\n                    filter((isLoading) => !isLoading),\n                    take(1),\n                    delay(0) //we need to consider the re-rendering of the page\n                  )\n              )\n            )\n        )\n      )\n      .subscribe(() => this.configUtils.focusFirstAttribute());\n  }\n}\n","<ng-container *ngIf=\"configuration$ | async as configuration\">\n  <ng-container *ngIf=\"configuration?.groups?.length > 1\">\n    <button\n      class=\"cx-btn btn btn-action\"\n      [disabled]=\"isFirstGroup(configuration.owner) | async\"\n      (click)=\"onPrevious(configuration)\"\n      [attr.aria-label]=\"'configurator.a11y.previous' | cxTranslate\"\n    >\n      {{ 'configurator.button.previous' | cxTranslate }}\n    </button>\n    <button\n      class=\"cx-btn btn btn-secondary\"\n      [disabled]=\"isLastGroup(configuration.owner) | async\"\n      (click)=\"onNext(configuration)\"\n      [attr.aria-label]=\"'configurator.a11y.next' | cxTranslate\"\n    >\n      {{ 'configurator.button.next' | cxTranslate }}\n    </button>\n  </ng-container>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { KeyboardFocusModule } from '@spartacus/storefront';\nimport { ConfiguratorPreviousNextButtonsComponent } from './configurator-previous-next-buttons.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, KeyboardFocusModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ConfiguratorPrevNext: {\n          component: ConfiguratorPreviousNextButtonsComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ConfiguratorPreviousNextButtonsComponent],\n  exports: [ConfiguratorPreviousNextButtonsComponent],\n})\nexport class ConfiguratorPreviousNextButtonsModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-previous-next-buttons.component';\nexport * from './configurator-previous-next-buttons.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ConfiguratorRouterExtractorService } from '@spartacus/product-configurator/common';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { ConfiguratorCommonsService } from '../../core/facade/configurator-commons.service';\nimport { Configurator } from '../../core/model/configurator.model';\n\n@Component({\n  selector: 'cx-configurator-price-summary',\n  templateUrl: './configurator-price-summary.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorPriceSummaryComponent {\n  configuration$: Observable<Configurator.Configuration> =\n    this.configRouterExtractorService.extractRouterData().pipe(\n      switchMap((routerData) => {\n        return this.configuratorCommonsService.getConfiguration(\n          routerData.owner\n        );\n      })\n    );\n\n  constructor(\n    protected configuratorCommonsService: ConfiguratorCommonsService,\n    protected configRouterExtractorService: ConfiguratorRouterExtractorService\n  ) {}\n}\n","<ng-container *ngIf=\"configuration$ | async as configuration\">\n  <div class=\"cx-price-summary-container\">\n    <div class=\"cx-total-summary\">\n      <div class=\"cx-summary-row cx-base-price\">\n        <div class=\"cx-label\">\n          {{ 'configurator.priceSummary.basePrice' | cxTranslate }}:\n        </div>\n        <div class=\"cx-amount\">\n          {{ configuration?.priceSummary?.basePrice?.formattedValue }}\n        </div>\n      </div>\n      <div class=\"cx-summary-row cx-selected-options\">\n        <div class=\"cx-label\">\n          {{ 'configurator.priceSummary.selectedOptions' | cxTranslate }}:\n        </div>\n        <div class=\"cx-amount\">\n          {{ configuration?.priceSummary?.selectedOptions?.formattedValue }}\n        </div>\n      </div>\n      <div class=\"cx-summary-row cx-total-price\">\n        <div class=\"cx-label\">\n          {{ 'configurator.priceSummary.totalPrice' | cxTranslate }}:\n        </div>\n        <div class=\"cx-amount\">\n          {{ configuration?.priceSummary?.currentTotal?.formattedValue }}\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { ConfiguratorPriceSummaryComponent } from './configurator-price-summary.component';\n\n@NgModule({\n  imports: [FormsModule, ReactiveFormsModule, CommonModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ConfiguratorPriceSummary: {\n          component: ConfiguratorPriceSummaryComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ConfiguratorPriceSummaryComponent],\n  exports: [ConfiguratorPriceSummaryComponent],\n})\nexport class ConfiguratorPriceSummaryModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-price-summary.component';\nexport * from './configurator-price-summary.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-price.component';\nexport * from './configurator-price.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\nimport { Product, ProductScope, ProductService } from '@spartacus/core';\nimport {\n  CommonConfigurator,\n  ConfiguratorRouterExtractorService,\n} from '@spartacus/product-configurator/common';\nimport { ICON_TYPE } from '@spartacus/storefront';\nimport { EMPTY, Observable } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { ConfiguratorCommonsService } from '../../core/facade/configurator-commons.service';\n\n@Component({\n  selector: 'cx-configurator-product-title',\n  templateUrl: './configurator-product-title.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorProductTitleComponent {\n  @HostBinding('class.ghost') ghostStyle = true;\n\n  product$: Observable<Product | undefined> = this.configRouterExtractorService\n    .extractRouterData()\n    .pipe(\n      switchMap((routerData) =>\n        this.configuratorCommonsService.getConfiguration(routerData.owner)\n      ),\n      map((configuration) => {\n        switch (configuration.owner.type) {\n          case CommonConfigurator.OwnerType.PRODUCT:\n          case CommonConfigurator.OwnerType.CART_ENTRY:\n            return configuration.productCode;\n          case CommonConfigurator.OwnerType.ORDER_ENTRY:\n            return configuration.overview?.productCode;\n        }\n      }),\n      switchMap((productCode) =>\n        productCode\n          ? this.productService.get(productCode, ProductScope.LIST)\n          : EMPTY\n      )\n    )\n    .pipe(\n      tap(() => {\n        this.ghostStyle = false;\n      })\n    );\n  showMore = false;\n  iconTypes = ICON_TYPE;\n\n  constructor(\n    protected configuratorCommonsService: ConfiguratorCommonsService,\n    protected configRouterExtractorService: ConfiguratorRouterExtractorService,\n    protected productService: ProductService\n  ) {}\n\n  triggerDetails(): void {\n    this.showMore = !this.showMore;\n  }\n}\n","<ng-container *ngIf=\"product$ | async as product; else ghostProductTitle\">\n  <div class=\"cx-general-product-info\">\n    <div class=\"cx-title\">\n      <span> {{ product.name }} </span>\n    </div>\n    <button (click)=\"triggerDetails()\" [attr.aria-expanded]=\"showMore\">\n      <ng-container *ngIf=\"!showMore\">\n        <div\n          class=\"cx-toggle-details-link-text\"\n          [attr.aria-label]=\"\n            'configurator.a11y.showMoreProductInfo'\n              | cxTranslate: { product: product.name }\n          \"\n        >\n          <span aria-hidden=\"true\">{{\n            'configurator.header.showMore' | cxTranslate\n          }}</span>\n        </div>\n        <cx-icon [type]=\"iconTypes.CARET_DOWN\"></cx-icon>\n      </ng-container>\n\n      <ng-container *ngIf=\"showMore\">\n        <div\n          class=\"cx-toggle-details-link-text\"\n          [attr.aria-label]=\"\n            'configurator.a11y.showLessProductInfo'\n              | cxTranslate: { product: product.name }\n          \"\n        >\n          {{ 'configurator.header.showLess' | cxTranslate }}\n        </div>\n        <cx-icon [type]=\"iconTypes.CARET_UP\"></cx-icon>\n      </ng-container>\n    </button>\n    <div class=\"cx-details\" [class.open]=\"showMore\">\n      <div class=\"cx-details-image\" aria-hidden=\"true\">\n        <cx-media\n          [container]=\"product?.images?.PRIMARY\"\n          format=\"product\"\n        ></cx-media>\n      </div>\n      <div\n        class=\"cx-details-content\"\n        [attr.aria-hidden]=\"showMore ? false : true\"\n      >\n        <div class=\"cx-detail-title\">\n          <span\n            *ngIf=\"product.name\"\n            [attr.aria-label]=\"'configurator.a11y.productName' | cxTranslate\"\n          >\n            {{ product.name }}\n          </span>\n        </div>\n        <div class=\"cx-code\">\n          <span\n            *ngIf=\"product.code\"\n            [attr.aria-label]=\"'configurator.a11y.productCode' | cxTranslate\"\n          >\n            {{ product.code }}\n          </span>\n        </div>\n        <div class=\"cx-description\">\n          <span\n            *ngIf=\"product.description\"\n            [attr.aria-label]=\"\n              'configurator.a11y.productDescription' | cxTranslate\n            \"\n          >\n            {{ product.description }}\n          </span>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-container>\n<ng-template #ghostProductTitle>\n  <div class=\"cx-ghost-general-product-info\"></div>\n</ng-template>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport {\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { IconModule, MediaModule } from '@spartacus/storefront';\nimport { ConfiguratorProductTitleComponent } from './configurator-product-title.component';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    CommonModule,\n    I18nModule,\n    IconModule,\n    MediaModule,\n    FeaturesConfigModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ConfiguratorProductTitle: {\n          component: ConfiguratorProductTitleComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ConfiguratorProductTitleComponent],\n  exports: [ConfiguratorProductTitleComponent],\n})\nexport class ConfiguratorProductTitleModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-product-title.component';\nexport * from './configurator-product-title.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\nimport {\n  ConfiguratorRouter,\n  ConfiguratorRouterExtractorService,\n} from '@spartacus/product-configurator/common';\nimport {} from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { ConfiguratorCommonsService } from '../../core/facade/configurator-commons.service';\nimport { Configurator } from '../../core/model/configurator.model';\n\n@Component({\n  selector: 'cx-configurator-tab-bar',\n  templateUrl: './configurator-tab-bar.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorTabBarComponent {\n  @HostBinding('class.ghost') ghostStyle = true;\n\n  routerData$: Observable<ConfiguratorRouter.Data> =\n    this.configRouterExtractorService.extractRouterData();\n\n  configuration$: Observable<Configurator.Configuration> =\n    this.routerData$.pipe(\n      switchMap((routerData) =>\n        this.configuratorCommonsService.getConfiguration(routerData.owner).pipe(\n          tap(() => {\n            this.ghostStyle = false;\n          })\n        )\n      )\n    );\n\n  isOverviewPage$: Observable<boolean> = this.routerData$.pipe(\n    map(\n      (routerData) =>\n        routerData.pageType === ConfiguratorRouter.PageType.OVERVIEW\n    )\n  );\n\n  constructor(\n    protected configRouterExtractorService: ConfiguratorRouterExtractorService,\n    protected configuratorCommonsService: ConfiguratorCommonsService\n  ) {}\n}\n","<ng-container *ngIf=\"routerData$ | async as routerData\">\n  <ng-container *ngIf=\"configuration$ | async; else ghostTabBar\">\n    <ng-container *ngIf=\"!routerData.displayOnly\">\n      <div class=\"cx-tab-bar\">\n        <a\n          tabindex=\"0\"\n          [class.active]=\"!(isOverviewPage$ | async)\"\n          [routerLink]=\"\n            {\n              cxRoute: 'configure' + routerData.owner.configuratorType,\n              params: {\n                entityKey: routerData.owner.id,\n                ownerType: routerData.owner.type\n              }\n            } | cxUrl\n          \"\n          [attr.aria-label]=\"\n            !(isOverviewPage$ | async)\n              ? ('configurator.a11y.configurationPage' | cxTranslate)\n              : ('configurator.a11y.configurationPageLink' | cxTranslate)\n          \"\n          >{{ 'configurator.tabBar.configuration' | cxTranslate }}</a\n        >\n        <a\n          tabindex=\"0\"\n          [class.active]=\"isOverviewPage$ | async\"\n          [routerLink]=\"\n            {\n              cxRoute: 'configureOverview' + routerData.owner.configuratorType,\n              params: {\n                entityKey: routerData.owner.id,\n                ownerType: routerData.owner.type\n              }\n            } | cxUrl\n          \"\n          [attr.aria-label]=\"\n            (isOverviewPage$ | async)\n              ? ('configurator.a11y.overviewPage' | cxTranslate)\n              : ('configurator.a11y.overviewPageLink' | cxTranslate)\n          \"\n          >{{ 'configurator.tabBar.overview' | cxTranslate }}</a\n        >\n      </div>\n    </ng-container>\n  </ng-container>\n  <ng-template #ghostTabBar>\n    <div class=\"cx-ghost-tab-bar\"></div>\n  </ng-template>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { ConfiguratorTabBarComponent } from './configurator-tab-bar.component';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    CommonModule,\n    I18nModule,\n    UrlModule,\n    RouterModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ConfiguratorTabBar: {\n          component: ConfiguratorTabBarComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ConfiguratorTabBarComponent],\n  exports: [ConfiguratorTabBarComponent],\n})\nexport class ConfiguratorTabBarModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ConfiguratorMessageConfig } from './configurator-message.config';\n\nexport const defaultConfiguratorMessageConfig: ConfiguratorMessageConfig = {\n  productConfigurator: {\n    updateConfigurationMessage: {\n      waitingTime: 1000,\n    },\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ConfiguratorRouterExtractorService } from '@spartacus/product-configurator/common';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport { ConfiguratorCommonsService } from '../../core/facade/configurator-commons.service';\nimport { ConfiguratorMessageConfig } from '../config/configurator-message.config';\n\n@Component({\n  selector: 'cx-configurator-update-message',\n  templateUrl: './configurator-update-message.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorUpdateMessageComponent {\n  hasPendingChanges$: Observable<boolean> = this.configRouterExtractorService\n    .extractRouterData()\n    .pipe(\n      switchMap((routerData) =>\n        this.configuratorCommonsService.hasPendingChanges(routerData.owner)\n      ),\n      distinctUntilChanged() // avoid subsequent emissions of the same value from the source observable\n    );\n\n  constructor(\n    protected configuratorCommonsService: ConfiguratorCommonsService,\n    protected configRouterExtractorService: ConfiguratorRouterExtractorService,\n    protected config: ConfiguratorMessageConfig\n  ) {}\n}\n","<div aria-live=\"polite\" aria-atomic=\"false\">\n  <div class=\"cx-update-msg\" [class.visible]=\"hasPendingChanges$ | async\">\n    <cx-spinner></cx-spinner>\n    <strong>{{ 'configurator.header.updateMessage' | cxTranslate }}</strong>\n  </div>\n</div>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { Config, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { SpinnerModule } from '@spartacus/storefront';\nimport { ConfiguratorMessageConfig } from '../config/configurator-message.config';\nimport { defaultConfiguratorMessageConfig } from '../config/default-configurator-message.config';\nimport { ConfiguratorUpdateMessageComponent } from './configurator-update-message.component';\n\n@NgModule({\n  imports: [CommonModule, SpinnerModule, I18nModule],\n  providers: [\n    provideDefaultConfig({\n      cmsComponents: {\n        ConfiguratorUpdateMessage: {\n          component: ConfiguratorUpdateMessageComponent,\n        },\n      },\n    }),\n    provideDefaultConfig(defaultConfiguratorMessageConfig),\n    { provide: ConfiguratorMessageConfig, useExisting: Config },\n  ],\n  declarations: [ConfiguratorUpdateMessageComponent],\n  exports: [ConfiguratorUpdateMessageComponent],\n})\nexport class ConfiguratorUpdateMessageModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ConfiguratorRouterExtractorService } from '@spartacus/product-configurator/common';\nimport { ICON_TYPE } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { ConfiguratorCommonsService } from '../../core/facade/configurator-commons.service';\nimport { Configurator } from '../../core/model/configurator.model';\n\n@Component({\n  selector: 'cx-configuration-conflict-and-error-messages',\n  templateUrl: './configurator-conflict-and-error-messages.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfiguratorConflictAndErrorMessagesComponent {\n  iconTypes = ICON_TYPE;\n  configuration$: Observable<Configurator.Configuration> =\n    this.configRouterExtractorService\n      .extractRouterData()\n      .pipe(\n        switchMap((routerData) =>\n          this.configuratorCommonsService.getConfiguration(routerData.owner)\n        )\n      );\n\n  showWarnings = false;\n\n  toggleWarnings(): void {\n    this.showWarnings = !this.showWarnings;\n  }\n\n  showErrors = false;\n\n  toggleErrors(): void {\n    this.showErrors = !this.showErrors;\n  }\n\n  constructor(\n    protected configuratorCommonsService: ConfiguratorCommonsService,\n    protected configRouterExtractorService: ConfiguratorRouterExtractorService\n  ) {}\n}\n","<ng-container *ngIf=\"configuration$ | async as configuration\">\n  <ng-container *ngIf=\"configuration?.warningMessages?.length > 0\">\n    <div\n      aria-live=\"assertive\"\n      aria-atomic=\"true\"\n      class=\"alert-message alert-message-invalid-warning\"\n    >\n      <span class=\"alert-icon\">\n        <cx-icon type=\"WARNING\"></cx-icon>\n      </span>\n      <span\n        class=\"cx-warning-text\"\n        *ngIf=\"configuration?.warningMessages?.length > 1\"\n      >\n        {{ 'configurator.header.multipleWarnings' | cxTranslate }}</span\n      >\n      <button\n        (click)=\"toggleWarnings()\"\n        *ngIf=\"configuration?.warningMessages?.length > 1\"\n        class=\"cx-warning-toggle\"\n        [attr.aria-expanded]=\"showWarnings\"\n      >\n        {{ 'configurator.header.reviewWarnings' | cxTranslate }}\n\n        <ng-container *ngIf=\"!showWarnings\">\n          <cx-icon type=\"CARET_DOWN\"></cx-icon>\n        </ng-container>\n\n        <ng-container *ngIf=\"showWarnings\">\n          <cx-icon type=\"CARET_UP\"></cx-icon>\n        </ng-container>\n      </button>\n      <div\n        class=\"cx-warning-messages\"\n        [class.inline]=\"configuration?.warningMessages?.length === 1\"\n      >\n        <div\n          class=\"cx-warning-message\"\n          [class.open]=\"\n            showWarnings || configuration?.warningMessages?.length === 1\n          \"\n          *ngFor=\"let warningMessage of configuration.warningMessages\"\n        >\n          {{ warningMessage }}\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"configuration?.errorMessages?.length > 0\">\n    <div\n      aria-live=\"assertive\"\n      aria-atomic=\"true\"\n      role=\"alert\"\n      class=\"alert-message alert-message-error\"\n    >\n      <span class=\"alert-icon\">\n        <cx-icon type=\"ERROR\"></cx-icon>\n      </span>\n      <span\n        class=\"cx-error-text\"\n        *ngIf=\"configuration?.errorMessages?.length > 1\"\n      >\n        {{ 'configurator.header.multipleErrors' | cxTranslate }}</span\n      >\n      <button\n        (click)=\"toggleErrors()\"\n        *ngIf=\"configuration?.errorMessages?.length > 1\"\n        class=\"cx-error-toggle\"\n        [attr.aria-expanded]=\"showErrors\"\n      >\n        {{ 'configurator.header.reviewErrors' | cxTranslate }}\n        <ng-container *ngIf=\"!showErrors\">\n          <cx-icon type=\"CARET_DOWN\"></cx-icon>\n        </ng-container>\n\n        <ng-container *ngIf=\"showErrors\">\n          <cx-icon type=\"CARET_UP\"></cx-icon>\n        </ng-container>\n      </button>\n      <div\n        class=\"cx-error-messages\"\n        [class.inline]=\"configuration?.errorMessages?.length === 1\"\n      >\n        <div\n          class=\"cx-error-message\"\n          [class.open]=\"\n            showErrors || configuration?.errorMessages?.length === 1\n          \"\n          *ngFor=\"let errorMessage of configuration.errorMessages\"\n        >\n          {{ errorMessage }}\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { IconModule } from '@spartacus/storefront';\nimport { ConfiguratorConflictAndErrorMessagesComponent } from './configurator-conflict-and-error-messages.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule, IconModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CpqConfiguratorConflictAndErrorMessagesComponent: {\n          component: ConfiguratorConflictAndErrorMessagesComponent,\n        },\n      },\n    }),\n  ],\n\n  declarations: [ConfiguratorConflictAndErrorMessagesComponent],\n  exports: [ConfiguratorConflictAndErrorMessagesComponent],\n})\nexport class ConfiguratorConflictAndErrorMessagesModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Location } from '@angular/common';\nimport { Component } from '@angular/core';\nimport {\n  Product,\n  ProductService,\n  RoutingService,\n  WindowRef,\n} from '@spartacus/core';\nimport {\n  CommonConfigurator,\n  ConfiguratorRouter,\n  ConfiguratorRouterExtractorService,\n} from '@spartacus/product-configurator/common';\nimport { BREAKPOINT, BreakpointService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { map, switchMap, take } from 'rxjs/operators';\nimport { ConfiguratorCommonsService } from '../../core/facade/configurator-commons.service';\nimport { Configurator } from '../../core/model/configurator.model';\n\n@Component({\n  selector: 'cx-configurator-exit-button',\n  templateUrl: './configurator-exit-button.component.html',\n})\nexport class ConfiguratorExitButtonComponent {\n  container$: Observable<{\n    routerData: ConfiguratorRouter.Data;\n    configuration: Configurator.Configuration;\n    product: Product | undefined;\n  }> = this.configRouterExtractorService.extractRouterData().pipe(\n    switchMap((routerData) =>\n      this.configuratorCommonsService\n        .getConfiguration(routerData.owner)\n        .pipe(map((configuration) => ({ routerData, configuration })))\n        .pipe(\n          switchMap((cont) =>\n            this.productService.get(cont.configuration.productCode).pipe(\n              map((product) => ({\n                routerData: cont.routerData,\n                configuration: cont.configuration,\n                product,\n              }))\n            )\n          )\n        )\n    )\n  );\n\n  constructor(\n    protected productService: ProductService,\n    protected routingService: RoutingService,\n    protected configRouterExtractorService: ConfiguratorRouterExtractorService,\n    protected configuratorCommonsService: ConfiguratorCommonsService,\n    protected breakpointService: BreakpointService,\n    protected windowRef: WindowRef,\n    protected location: Location\n  ) {}\n\n  protected navigateToCart(): void {\n    this.routingService.go('cart');\n  }\n  /**\n   * Navigates to the product detail page of the product that is being configured.\n   */\n  exitConfiguration() {\n    this.container$.pipe(take(1)).subscribe((container) => {\n      if (\n        container.routerData.owner.type ===\n        CommonConfigurator.OwnerType.CART_ENTRY\n      ) {\n        this.navigateToCart();\n      } else {\n        this.routingService.go({\n          cxRoute: 'product',\n          params: container.product,\n        });\n      }\n    });\n  }\n\n  /**\n   * Verifies whether the current screen size equals or is larger than breakpoint `BREAKPOINT.md`.\n   *\n   * @returns {Observable<boolean>} - If the given breakpoint equals or is larger than`BREAKPOINT.md` returns `true`, otherwise `false`.\n   */\n  isDesktop(): Observable<boolean> {\n    return this.breakpointService.isUp(BREAKPOINT.md);\n  }\n\n  /**\n   * Verifies whether the current screen size equals or is smaller than breakpoint `BREAKPOINT.sm`.\n   *\n   * @returns {Observable<boolean>} - If the given breakpoint equals or is smaller than`BREAKPOINT.sm` returns `true`, otherwise `false`.\n   */\n  isMobile(): Observable<boolean> {\n    return this.breakpointService.isDown(BREAKPOINT.sm);\n  }\n}\n","<ng-container *ngIf=\"container$ | async as container\">\n  <button\n    class=\"cx-config-exit-button\"\n    tabindex=\"0\"\n    (click)=\"exitConfiguration()\"\n  >\n    <ng-container *ngIf=\"!container.routerData.isOwnerCartEntry\">\n      <ng-container *ngIf=\"isDesktop() | async\">\n        {{ 'configurator.button.exit' | cxTranslate }}\n      </ng-container>\n      <ng-container *ngIf=\"isMobile() | async\">\n        {{ 'configurator.button.exitMobile' | cxTranslate }}\n      </ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"container.routerData.isOwnerCartEntry\">\n      <ng-container *ngIf=\"isMobile() | async\">\n        {{ 'configurator.button.cancelConfigurationMobile' | cxTranslate }}\n      </ng-container>\n      <ng-container *ngIf=\"isDesktop() | async\">\n        {{ 'configurator.button.cancelConfiguration' | cxTranslate }}\n      </ng-container>\n    </ng-container>\n  </button>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  WindowRef,\n} from '@spartacus/core';\nimport { ConfiguratorExitButtonComponent } from './configurator-exit-button.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ConfiguratorExitButton: {\n          component: ConfiguratorExitButtonComponent,\n        },\n      },\n    }),\n    WindowRef,\n  ],\n  declarations: [ConfiguratorExitButtonComponent],\n  exports: [ConfiguratorExitButtonComponent],\n})\nexport class ConfiguratorExitButtonModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { ConfiguratorAddToCartButtonModule } from './add-to-cart-button/configurator-add-to-cart-button.module';\nimport { ConfiguratorFormModule } from './form/configurator-form.module';\nimport { ConfiguratorGroupMenuModule } from './group-menu/configurator-group-menu.module';\nimport { ConfiguratorGroupTitleModule } from './group-title/configurator-group-title.module';\nimport { ConfiguratorOverviewAttributeModule } from './overview-attribute/configurator-overview-attribute.module';\nimport { ConfiguratorOverviewFormModule } from './overview-form/configurator-overview-form.module';\nimport { ConfiguratorOverviewNotificationBannerModule } from './overview-notification-banner/configurator-overview-notification-banner.module';\nimport { ConfiguratorPreviousNextButtonsModule } from './previous-next-buttons/configurator-previous-next-buttons.module';\nimport { ConfiguratorPriceSummaryModule } from './price-summary/configurator-price-summary.module';\nimport { ConfiguratorProductTitleModule } from './product-title/configurator-product-title.module';\nimport { ConfiguratorTabBarModule } from './tab-bar/configurator-tab-bar.module';\nimport { ConfiguratorUpdateMessageModule } from './update-message/configurator-update-message.module';\nimport { ConfiguratorConflictAndErrorMessagesModule } from './configurator-conflict-and-error-messages/configurator-conflict-and-error-messages.module';\nimport { ConfiguratorExitButtonModule } from './exit-button/configurator-exit-button.module';\n\n@NgModule({\n  imports: [\n    ConfiguratorPriceSummaryModule,\n    ConfiguratorAddToCartButtonModule,\n    ConfiguratorGroupMenuModule,\n    ConfiguratorProductTitleModule,\n    ConfiguratorTabBarModule,\n    ConfiguratorFormModule,\n    ConfiguratorGroupTitleModule,\n    ConfiguratorUpdateMessageModule,\n    ConfiguratorPreviousNextButtonsModule,\n    ConfiguratorOverviewAttributeModule,\n    ConfiguratorOverviewFormModule,\n    ConfiguratorOverviewNotificationBannerModule,\n    ConfiguratorConflictAndErrorMessagesModule,\n    ConfiguratorExitButtonModule,\n  ],\n})\nexport class RulebasedConfiguratorComponentsModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-storefront-utils.service';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-show-more.component';\nexport * from './configurator-show-more.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-tab-bar.component';\nexport * from './configurator-tab-bar.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-update-message.component';\nexport * from './configurator-update-message.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-conflict-and-error-messages.component';\nexport * from './configurator-conflict-and-error-messages.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-exit-button.component';\nexport * from './configurator-exit-button.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './add-to-cart-button/index';\nexport * from './attribute/index';\nexport * from './config/index';\nexport * from './conflict-description/index';\nexport * from './conflict-suggestion/index';\nexport * from './form/index';\nexport * from './group-menu/index';\nexport * from './group-title/index';\nexport * from './overview-attribute/index';\nexport * from './overview-bundle-attribute/index';\nexport * from './overview-form/index';\nexport * from './overview-notification-banner/index';\nexport * from './previous-next-buttons/index';\nexport * from './price-summary/index';\nexport * from './price/index';\nexport * from './product-title/index';\nexport * from './rulebased-configurator-components.module';\nexport * from './service/index';\nexport * from './show-more/index';\nexport * from './tab-bar/index';\nexport * from './update-message/index';\nexport * from './configurator-conflict-and-error-messages/index';\nexport * from './exit-button/index';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Converter } from '@spartacus/core';\nimport { OccConfigurator } from '../variant-configurator-occ.models';\nimport { Configurator } from './../../../core/model/configurator.model';\n\n@Injectable({ providedIn: 'root' })\nexport class OccConfiguratorVariantAddToCartSerializer\n  implements\n    Converter<\n      Configurator.AddToCartParameters,\n      OccConfigurator.AddToCartParameters\n    >\n{\n  constructor() {\n    // Intentional empty constructor\n  }\n\n  convert(\n    source: Configurator.AddToCartParameters,\n    target?: OccConfigurator.AddToCartParameters\n  ): OccConfigurator.AddToCartParameters {\n    const resultTarget: OccConfigurator.AddToCartParameters = {\n      ...target,\n      userId: source.userId,\n      cartId: source.cartId,\n      product: { code: source.productCode },\n      quantity: source.quantity,\n      configId: source.configId,\n    };\n\n    return resultTarget;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport namespace OccConfigurator {\n  /**\n   *\n   * An interface representing the variant configuration consumed through OCC.\n   */\n  export interface Configuration {\n    /**\n     * @member {string} [configId]\n     */\n    configId: string;\n    /**\n     * @member {boolean} [complete]\n     */\n    complete?: boolean;\n    /**\n     * Configuration is consistent, meaning it does not contain conflicts\n     *\n     * @member {boolean}\n     */\n    consistent?: boolean;\n    totalNumberOfIssues?: number;\n    groups?: Group[];\n    rootProduct: string;\n  }\n\n  export interface Prices {\n    configId: string;\n    attributes?: Supplements[];\n    pricingError?: boolean;\n    showDeltaPrices?: boolean;\n    priceSummary?: PriceSummary;\n  }\n\n  export interface Supplements {\n    csticUiKey: string;\n    selectedValues: string[];\n    priceSupplements: ValueSupplements[];\n  }\n\n  export interface ValueSupplements {\n    attributeValueKey: string;\n    priceValue: PriceDetails;\n    obsoletePriceValue: PriceDetails;\n  }\n\n  export interface PriceSummary {\n    basePrice?: PriceDetails;\n    currentTotal?: PriceDetails;\n    currentTotalSavings?: PriceSavingDetails;\n    selectedOptions?: PriceDetails;\n  }\n\n  export interface PriceDetails {\n    currencyIso: string;\n    formattedValue?: string;\n    value: number;\n  }\n\n  export interface PriceSavingDetails extends PriceDetails {\n    maxQuantity?: number;\n    minQuantity?: number;\n  }\n\n  export interface Group {\n    configurable?: boolean;\n    complete?: boolean;\n    consistent?: boolean;\n    attributes?: Attribute[];\n    description?: string;\n    groupType: GroupType;\n    id: string;\n    name?: string;\n    subGroups?: Group[];\n  }\n\n  export interface Attribute {\n    name: string;\n    langDepName?: string;\n    type?: UiType;\n    domainValues?: Value[];\n    required?: boolean;\n    value?: string;\n    key: string;\n    formattedValue?: string;\n    maxlength?: number;\n    images?: Image[];\n    typeLength?: number;\n    numberScale?: number;\n    negativeAllowed?: boolean;\n    conflicts?: string[];\n    retractTriggered?: boolean;\n    intervalInDomain?: boolean;\n    retractBlocked?: boolean;\n    validationType?: string;\n  }\n\n  export interface Value {\n    key: string;\n    name?: string;\n    langDepName?: string;\n    readonly?: boolean;\n    selected?: boolean;\n    images?: Image[];\n  }\n\n  export interface AddToCartParameters {\n    userId?: string;\n    cartId?: string;\n    product?: AddToCartProductData;\n    quantity?: number;\n    configId?: string;\n  }\n\n  export interface UpdateConfigurationForCartEntryParameters {\n    userId?: string;\n    cartId?: string;\n    product?: AddToCartProductData;\n    quantity?: number;\n    configId: string;\n    entryNumber: string;\n    configurationInfos: ConfigurationInfo[];\n  }\n\n  export interface ConfigurationInfo {\n    configuratorType: string;\n  }\n\n  export interface AddToCartProductData {\n    code?: string;\n  }\n\n  export interface Overview {\n    id: string;\n    totalNumberOfIssues?: number;\n    numberOfIncompleteCharacteristics?: number;\n    numberOfConflicts?: number;\n    groups?: GroupOverview[];\n    pricing?: PriceSummary;\n    productCode: string;\n  }\n\n  export interface GroupOverview {\n    id: string;\n    groupDescription?: string;\n    characteristicValues?: CharacteristicOverview[];\n    subGroups?: GroupOverview[];\n  }\n\n  export interface CharacteristicOverview {\n    characteristic: string;\n    characteristicId?: string;\n    value: string;\n    valueId?: string;\n    price?: PriceDetails;\n  }\n  export interface Image {\n    imageType: ImageType;\n    format: ImageFormatType;\n    url?: string;\n    altText?: string;\n    galleryIndex?: number;\n  }\n\n  export enum GroupType {\n    CSTIC_GROUP = 'CSTIC_GROUP',\n    INSTANCE = 'INSTANCE',\n    CONFLICT_HEADER = 'CONFLICT_HEADER',\n    CONFLICT = 'CONFLICT',\n  }\n\n  export enum UiType {\n    STRING = 'STRING',\n    NUMERIC = 'NUMERIC',\n    CHECK_BOX = 'CHECK_BOX',\n    CHECK_BOX_LIST = 'CHECK_BOX_LIST',\n    RADIO_BUTTON = 'RADIO_BUTTON',\n    RADIO_BUTTON_ADDITIONAL_INPUT = 'RADIO_BUTTON_ADDITIONAL_INPUT',\n    DROPDOWN = 'DROPDOWN',\n    DROPDOWN_ADDITIONAL_INPUT = 'DROPDOWN_ADDITIONAL_INPUT',\n    READ_ONLY = 'READ_ONLY',\n    NOT_IMPLEMENTED = 'NOT_IMPLEMENTED',\n    SINGLE_SELECTION_IMAGE = 'SINGLE_SELECTION_IMAGE',\n    MULTI_SELECTION_IMAGE = 'MULTI_SELECTION_IMAGE',\n  }\n\n  export enum PriceType {\n    BUY = 'BUY',\n  }\n\n  export enum ImageFormatType {\n    VALUE_IMAGE = 'VALUE_IMAGE',\n    CSTIC_IMAGE = 'CSTIC_IMAGE',\n  }\n\n  export enum ImageType {\n    PRIMARY = 'PRIMARY',\n    GALLERY = 'GALLERY',\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Converter, OccConfig, TranslationService } from '@spartacus/core';\nimport { ConfiguratorModelUtils } from '@spartacus/product-configurator/common';\nimport { take } from 'rxjs/operators';\nimport { ConfiguratorUISettingsConfig } from '../../../components/config/configurator-ui-settings.config';\nimport { OccConfigurator } from '../variant-configurator-occ.models';\nimport { Configurator } from './../../../core/model/configurator.model';\n\n@Injectable({ providedIn: 'root' })\nexport class OccConfiguratorVariantNormalizer\n  implements\n    Converter<OccConfigurator.Configuration, Configurator.Configuration>\n{\n  static readonly RETRACT_VALUE_CODE = '###RETRACT_VALUE_CODE###';\n\n  constructor(\n    protected config: OccConfig,\n    protected translation: TranslationService,\n    protected uiSettingsConfig: ConfiguratorUISettingsConfig\n  ) {}\n\n  convert(\n    source: OccConfigurator.Configuration,\n    target?: Configurator.Configuration\n  ): Configurator.Configuration {\n    const resultTarget: Configurator.Configuration = {\n      ...target,\n      owner: target?.owner ?? ConfiguratorModelUtils.createInitialOwner(),\n      interactionState: target?.interactionState ?? {},\n      configId: source.configId,\n      complete: source.complete,\n      consistent: source.consistent,\n      totalNumberOfIssues: source.totalNumberOfIssues,\n      productCode: source.rootProduct,\n      groups: [],\n      flatGroups: [],\n    };\n    const flatGroups: Configurator.Group[] = [];\n    source.groups?.forEach((group) =>\n      this.convertGroup(group, resultTarget.groups, flatGroups)\n    );\n    resultTarget.flatGroups = flatGroups;\n\n    return resultTarget;\n  }\n\n  convertGroup(\n    source: OccConfigurator.Group,\n    groupList: Configurator.Group[],\n    flatGroupList: Configurator.Group[]\n  ) {\n    const attributes: Configurator.Attribute[] = [];\n    if (source.attributes) {\n      source.attributes.forEach((sourceAttribute) =>\n        this.convertAttribute(sourceAttribute, attributes)\n      );\n    }\n\n    const group: Configurator.Group = {\n      description: source.description,\n      configurable: source.configurable,\n      complete: source.complete,\n      consistent: source.consistent,\n      groupType: this.convertGroupType(source.groupType),\n      name: source.name,\n      id: source.id,\n      attributes: attributes,\n      subGroups: [],\n    };\n\n    this.setGroupDescription(group);\n\n    if (source.subGroups) {\n      source.subGroups.forEach((sourceSubGroup) =>\n        this.convertGroup(sourceSubGroup, group.subGroups, flatGroupList)\n      );\n    }\n\n    if (\n      group.groupType === Configurator.GroupType.ATTRIBUTE_GROUP ||\n      group.groupType === Configurator.GroupType.CONFLICT_GROUP\n    ) {\n      flatGroupList.push(group);\n    }\n\n    groupList.push(group);\n  }\n\n  getGroupId(key: string, name: string): string {\n    return key.replace('@' + name, '');\n  }\n\n  convertAttribute(\n    sourceAttribute: OccConfigurator.Attribute,\n    attributeList: Configurator.Attribute[]\n  ): void {\n    const numberOfConflicts = sourceAttribute.conflicts\n      ? sourceAttribute.conflicts.length\n      : 0;\n\n    const attributeImages: Configurator.Image[] = [];\n    const attributeValues: Configurator.Value[] = [];\n\n    if (sourceAttribute.images) {\n      sourceAttribute.images.forEach((occImage) =>\n        this.convertImage(occImage, attributeImages)\n      );\n    }\n\n    this.addRetractValue(sourceAttribute, attributeValues);\n\n    if (sourceAttribute.domainValues) {\n      sourceAttribute.domainValues.forEach((value) =>\n        this.convertValue(value, attributeValues)\n      );\n    }\n    const uiType = this.convertAttributeType(sourceAttribute);\n    const attribute: Configurator.Attribute = {\n      name: sourceAttribute.name,\n      label: sourceAttribute.langDepName,\n      required: sourceAttribute.required,\n      uiType: uiType,\n      groupId: this.getGroupId(sourceAttribute.key, sourceAttribute.name),\n      userInput:\n        uiType === Configurator.UiType.NUMERIC ||\n        uiType === Configurator.UiType.STRING\n          ? sourceAttribute.formattedValue\n            ? sourceAttribute.formattedValue\n            : ''\n          : undefined,\n      maxlength:\n        (sourceAttribute.maxlength ?? 0) +\n        (sourceAttribute.negativeAllowed ? 1 : 0),\n      numDecimalPlaces: sourceAttribute.numberScale,\n      negativeAllowed: sourceAttribute.negativeAllowed,\n      numTotalLength: sourceAttribute.typeLength,\n      selectedSingleValue: undefined,\n      hasConflicts: numberOfConflicts > 0,\n      images: attributeImages,\n      values: attributeValues,\n      intervalInDomain: sourceAttribute.intervalInDomain,\n      key: sourceAttribute.key,\n      validationType: sourceAttribute.validationType,\n    };\n\n    this.setSelectedSingleValue(attribute);\n\n    //Has to be called after setSelectedSingleValue because it depends on the value of this property\n    this.compileAttributeIncomplete(attribute);\n    attributeList.push(attribute);\n  }\n\n  setSelectedSingleValue(attribute: Configurator.Attribute) {\n    if (attribute.values) {\n      const selectedValues = attribute.values\n        .map((entry) => entry)\n        .filter((entry) => entry.selected);\n      if (selectedValues && selectedValues.length === 1) {\n        attribute.selectedSingleValue = selectedValues[0].valueCode;\n      }\n    }\n  }\n\n  protected isRetractValueSelected(\n    sourceAttribute: OccConfigurator.Attribute\n  ): boolean {\n    return sourceAttribute.domainValues &&\n      sourceAttribute.domainValues.filter((value) => value.selected).length\n      ? false\n      : true;\n  }\n\n  protected setRetractValueDisplay(\n    attributeType: Configurator.UiType,\n    value: Configurator.Value\n  ) {\n    if (\n      attributeType === Configurator.UiType.DROPDOWN ||\n      attributeType === Configurator.UiType.RADIOBUTTON\n    ) {\n      if (attributeType === Configurator.UiType.DROPDOWN && value.selected) {\n        this.translation\n          .translate('configurator.attribute.dropDownSelectMsg')\n          .pipe(take(1))\n          .subscribe((text) => (value.valueDisplay = text));\n      } else {\n        this.translation\n          .translate('configurator.attribute.noOptionSelectedMsg')\n          .pipe(take(1))\n          .subscribe((text) => (value.valueDisplay = text));\n      }\n    }\n  }\n\n  protected hasSourceAttributeConflicts(\n    sourceAttribute: OccConfigurator.Attribute\n  ): boolean {\n    return sourceAttribute.conflicts\n      ? sourceAttribute.conflicts.length > 0\n      : false;\n  }\n\n  protected isSourceAttributeTypeReadOnly(\n    sourceAttribute: OccConfigurator.Attribute\n  ): boolean {\n    return sourceAttribute.type === OccConfigurator.UiType.READ_ONLY;\n  }\n\n  protected isRetractBlocked(\n    sourceAttribute: OccConfigurator.Attribute\n  ): boolean {\n    return sourceAttribute.retractBlocked\n      ? sourceAttribute.retractBlocked\n      : false;\n  }\n\n  protected addRetractValue(\n    sourceAttribute: OccConfigurator.Attribute,\n    values: Configurator.Value[]\n  ) {\n    const isRetractBlocked = this.isRetractBlocked(sourceAttribute);\n    const isConflicting = this.hasSourceAttributeConflicts(sourceAttribute);\n\n    if (!isRetractBlocked) {\n      if (\n        this.uiSettingsConfig?.productConfigurator?.addRetractOption ||\n        (this.isSourceAttributeTypeReadOnly(sourceAttribute) && isConflicting)\n      ) {\n        const attributeType = this.convertAttributeType(sourceAttribute);\n        if (\n          attributeType === Configurator.UiType.RADIOBUTTON ||\n          attributeType === Configurator.UiType.DROPDOWN\n        ) {\n          const value: Configurator.Value = {\n            valueCode: OccConfiguratorVariantNormalizer.RETRACT_VALUE_CODE,\n            selected: this.isRetractValueSelected(sourceAttribute),\n          };\n\n          this.setRetractValueDisplay(attributeType, value);\n\n          values.push(value);\n        }\n      }\n    }\n  }\n\n  convertValue(\n    occValue: OccConfigurator.Value,\n    values: Configurator.Value[]\n  ): void {\n    const valueImages: Configurator.Image[] = [];\n    if (occValue.images) {\n      occValue.images.forEach((occImage) =>\n        this.convertImage(occImage, valueImages)\n      );\n    }\n\n    const value: Configurator.Value = {\n      valueCode: occValue.key,\n      valueDisplay: occValue.langDepName,\n      name: occValue.name,\n      selected: occValue.selected,\n      images: valueImages,\n    };\n\n    values.push(value);\n  }\n\n  convertImage(\n    occImage: OccConfigurator.Image,\n    images: Configurator.Image[]\n  ): void {\n    const image: Configurator.Image = {\n      /**\n       * Traditionally, in an on-prem world, medias and other backend related calls\n       * are hosted at the same platform, but in a cloud setup, applications are\n       * typically distributed cross different environments. For media, we use the\n       * `backend.media.baseUrl` by default, but fallback to `backend.occ.baseUrl`\n       * if none provided.\n       */\n      url:\n        (this.config?.backend?.media?.baseUrl ||\n          this.config?.backend?.occ?.baseUrl ||\n          '') + occImage.url,\n      altText: occImage.altText,\n      galleryIndex: occImage.galleryIndex,\n      type: this.convertImageType(occImage.imageType),\n      format: this.convertImageFormatType(occImage.format),\n    };\n    images.push(image);\n  }\n\n  convertAttributeType(\n    sourceAttribute: OccConfigurator.Attribute\n  ): Configurator.UiType {\n    let uiType: Configurator.UiType;\n    switch (sourceAttribute.type) {\n      case OccConfigurator.UiType.RADIO_BUTTON: {\n        uiType = Configurator.UiType.RADIOBUTTON;\n        break;\n      }\n      case OccConfigurator.UiType.RADIO_BUTTON_ADDITIONAL_INPUT: {\n        uiType = Configurator.UiType.RADIOBUTTON_ADDITIONAL_INPUT;\n        break;\n      }\n      case OccConfigurator.UiType.DROPDOWN: {\n        uiType = Configurator.UiType.DROPDOWN;\n        break;\n      }\n      case OccConfigurator.UiType.DROPDOWN_ADDITIONAL_INPUT: {\n        uiType = Configurator.UiType.DROPDOWN_ADDITIONAL_INPUT;\n        break;\n      }\n      case OccConfigurator.UiType.STRING: {\n        uiType = Configurator.UiType.STRING;\n        break;\n      }\n      case OccConfigurator.UiType.NUMERIC: {\n        uiType = Configurator.UiType.NUMERIC;\n        break;\n      }\n      case OccConfigurator.UiType.READ_ONLY: {\n        uiType =\n          !sourceAttribute.retractBlocked &&\n          this.hasSourceAttributeConflicts(sourceAttribute)\n            ? Configurator.UiType.RADIOBUTTON\n            : Configurator.UiType.READ_ONLY;\n        break;\n      }\n      case OccConfigurator.UiType.CHECK_BOX_LIST: {\n        uiType = Configurator.UiType.CHECKBOXLIST;\n        break;\n      }\n      case OccConfigurator.UiType.CHECK_BOX: {\n        uiType = Configurator.UiType.CHECKBOX;\n        break;\n      }\n      case OccConfigurator.UiType.MULTI_SELECTION_IMAGE: {\n        uiType = Configurator.UiType.MULTI_SELECTION_IMAGE;\n        break;\n      }\n      case OccConfigurator.UiType.SINGLE_SELECTION_IMAGE: {\n        uiType = Configurator.UiType.SINGLE_SELECTION_IMAGE;\n        break;\n      }\n      default: {\n        uiType = Configurator.UiType.NOT_IMPLEMENTED;\n      }\n    }\n    return uiType;\n  }\n\n  convertGroupType(\n    groupType: OccConfigurator.GroupType\n  ): Configurator.GroupType {\n    switch (groupType) {\n      case OccConfigurator.GroupType.CSTIC_GROUP:\n        return Configurator.GroupType.ATTRIBUTE_GROUP;\n      case OccConfigurator.GroupType.INSTANCE:\n        return Configurator.GroupType.SUB_ITEM_GROUP;\n      case OccConfigurator.GroupType.CONFLICT_HEADER:\n        return Configurator.GroupType.CONFLICT_HEADER_GROUP;\n      case OccConfigurator.GroupType.CONFLICT:\n        return Configurator.GroupType.CONFLICT_GROUP;\n    }\n  }\n\n  setGroupDescription(group: Configurator.Group): void {\n    switch (group.groupType) {\n      case Configurator.GroupType.CONFLICT_HEADER_GROUP:\n        this.translation\n          .translate('configurator.group.conflictHeader')\n          .pipe(take(1))\n          .subscribe(\n            (conflictHeaderText) => (group.description = conflictHeaderText)\n          );\n        break;\n      case Configurator.GroupType.CONFLICT_GROUP:\n        const conflictDescription = group.description;\n        this.translation\n          .translate('configurator.group.conflictGroup', {\n            attribute: group.name,\n          })\n          .pipe(take(1))\n          .subscribe(\n            (conflictGroupText) => (group.description = conflictGroupText)\n          );\n        group.name = conflictDescription;\n        break;\n      default:\n        if (group.name !== '_GEN') {\n          return;\n        }\n        this.translation\n          .translate('configurator.group.general')\n          .pipe(take(1))\n          .subscribe((generalText) => (group.description = generalText));\n    }\n  }\n\n  convertImageType(\n    imageType: OccConfigurator.ImageType\n  ): Configurator.ImageType {\n    switch (imageType) {\n      case OccConfigurator.ImageType.GALLERY:\n        return Configurator.ImageType.GALLERY;\n      case OccConfigurator.ImageType.PRIMARY:\n        return Configurator.ImageType.PRIMARY;\n    }\n  }\n\n  convertImageFormatType(\n    formatType: OccConfigurator.ImageFormatType\n  ): Configurator.ImageFormatType {\n    switch (formatType) {\n      case OccConfigurator.ImageFormatType.VALUE_IMAGE:\n        return Configurator.ImageFormatType.VALUE_IMAGE;\n      case OccConfigurator.ImageFormatType.CSTIC_IMAGE:\n        return Configurator.ImageFormatType.ATTRIBUTE_IMAGE;\n    }\n  }\n\n  compileAttributeIncomplete(attribute: Configurator.Attribute) {\n    //Default value for incomplete is false\n    attribute.incomplete = false;\n\n    switch (attribute.uiType) {\n      case Configurator.UiType.RADIOBUTTON:\n      case Configurator.UiType.RADIOBUTTON_ADDITIONAL_INPUT:\n      case Configurator.UiType.DROPDOWN_ADDITIONAL_INPUT:\n      case Configurator.UiType.DROPDOWN: {\n        if (\n          !attribute.selectedSingleValue ||\n          attribute.selectedSingleValue ===\n            OccConfiguratorVariantNormalizer.RETRACT_VALUE_CODE\n        ) {\n          attribute.incomplete = true;\n        }\n        break;\n      }\n      case Configurator.UiType.SINGLE_SELECTION_IMAGE: {\n        if (!attribute.selectedSingleValue) {\n          attribute.incomplete = true;\n        }\n        break;\n      }\n      case Configurator.UiType.NUMERIC:\n      case Configurator.UiType.STRING: {\n        if (!attribute.userInput) {\n          attribute.incomplete = true;\n        }\n        break;\n      }\n\n      case Configurator.UiType.CHECKBOXLIST:\n      case Configurator.UiType.CHECKBOX:\n      case Configurator.UiType.MULTI_SELECTION_IMAGE: {\n        const isOneValueSelected =\n          attribute.values?.find((value) => value.selected) !== undefined;\n        attribute.incomplete = !isOneValueSelected;\n        break;\n      }\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { Converter } from '@spartacus/core';\nimport { Configurator } from '../../core/model/configurator.model';\nimport { OccConfigurator } from './variant-configurator-occ.models';\n\nexport const VARIANT_CONFIGURATOR_NORMALIZER = new InjectionToken<\n  Converter<OccConfigurator.Configuration, Configurator.Configuration>\n>('VariantConfiguratorNormalizer');\n\nexport const VARIANT_CONFIGURATOR_SERIALIZER = new InjectionToken<\n  Converter<Configurator.Configuration, OccConfigurator.Configuration>\n>('VariantConfiguratorSerializer');\n\nexport const VARIANT_CONFIGURATOR_PRICE_SUMMARY_NORMALIZER = new InjectionToken<\n  Converter<OccConfigurator.PriceSummary, Configurator.PriceSummary>\n>('VariantConfiguratorPriceSummaryNormalizer');\n\nexport const VARIANT_CONFIGURATOR_PRICE_NORMALIZER = new InjectionToken<\n  Converter<OccConfigurator.PriceSummary, Configurator.Configuration>\n>('VariantConfiguratorPriceNormalizer');\n\nexport const VARIANT_CONFIGURATOR_ADD_TO_CART_SERIALIZER = new InjectionToken<\n  Converter<\n    Configurator.AddToCartParameters,\n    OccConfigurator.AddToCartParameters\n  >\n>('VariantConfiguratorAddToCartSerializer');\n\nexport const VARIANT_CONFIGURATOR_UPDATE_CART_ENTRY_SERIALIZER =\n  new InjectionToken<\n    Converter<\n      Configurator.UpdateConfigurationForCartEntryParameters,\n      OccConfigurator.UpdateConfigurationForCartEntryParameters\n    >\n  >('VariantConfiguratorUpdateCartEntrySerializer');\n\nexport const VARIANT_CONFIGURATOR_OVERVIEW_NORMALIZER = new InjectionToken<\n  Converter<OccConfigurator.Overview, Configurator.Overview>\n>('VariantConfiguratorOverviewNormalizer');\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n  Converter,\n  ConverterService,\n  TranslationService,\n} from '@spartacus/core';\nimport { take } from 'rxjs/operators';\nimport { OccConfigurator } from '../variant-configurator-occ.models';\nimport { Configurator } from './../../../core/model/configurator.model';\nimport { VARIANT_CONFIGURATOR_PRICE_SUMMARY_NORMALIZER } from './../variant-configurator-occ.converters';\n\n@Injectable({ providedIn: 'root' })\nexport class OccConfiguratorVariantOverviewNormalizer\n  implements Converter<OccConfigurator.Overview, Configurator.Overview>\n{\n  constructor(\n    protected translation: TranslationService,\n    protected converterService: ConverterService\n  ) {}\n\n  convert(\n    source: OccConfigurator.Overview,\n    target?: Configurator.Overview\n  ): Configurator.Overview {\n    const prices: OccConfigurator.Prices = {\n      priceSummary: source.pricing,\n      configId: source.id,\n    };\n    const resultTarget: Configurator.Overview = {\n      ...target,\n      configId: source.id,\n      groups: source.groups?.flatMap((group) => this.convertGroup(group)),\n      priceSummary: this.converterService.convert(\n        prices,\n        VARIANT_CONFIGURATOR_PRICE_SUMMARY_NORMALIZER\n      ),\n      productCode: source.productCode,\n    };\n    this.setIssueCounters(resultTarget, source);\n    return resultTarget;\n  }\n\n  convertGroup(\n    source: OccConfigurator.GroupOverview\n  ): Configurator.GroupOverview[] {\n    const result: Configurator.GroupOverview[] = [];\n    const characteristicValues:\n      | OccConfigurator.CharacteristicOverview[]\n      | undefined = source.characteristicValues;\n    const subGroups: OccConfigurator.GroupOverview[] | undefined =\n      source.subGroups;\n    const group: Configurator.GroupOverview = {\n      id: source.id,\n      groupDescription: source.groupDescription,\n      attributes: characteristicValues\n        ? characteristicValues.map((characteristic) => {\n            return {\n              attribute: characteristic.characteristic,\n              attributeId: characteristic.characteristicId,\n              value: characteristic.value,\n              valueId: characteristic.valueId,\n              valuePrice: characteristic.price,\n            };\n          })\n        : [],\n    };\n\n    this.setGeneralDescription(group);\n    if (subGroups) {\n      const resultSubGroups: Configurator.GroupOverview[] = [];\n      subGroups.forEach((subGroup) =>\n        this.convertGroup(subGroup).forEach((groupArray) =>\n          resultSubGroups.push(groupArray)\n        )\n      );\n      group.subGroups = resultSubGroups;\n    }\n    result.push(group);\n    return result;\n  }\n\n  setGeneralDescription(group: Configurator.GroupOverview): void {\n    if (group.id !== '_GEN') {\n      return;\n    }\n    this.translation\n      .translate('configurator.group.general')\n      .pipe(take(1))\n      .subscribe((generalText) => (group.groupDescription = generalText));\n  }\n\n  protected setIssueCounters(\n    target: Configurator.Overview,\n    source: OccConfigurator.Overview\n  ) {\n    target.totalNumberOfIssues = source.totalNumberOfIssues;\n    target.numberOfConflicts = source.numberOfConflicts;\n    target.numberOfIncompleteCharacteristics =\n      source.numberOfIncompleteCharacteristics;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Converter } from '@spartacus/core';\nimport { OccConfigurator } from '../variant-configurator-occ.models';\nimport { Configurator } from './../../../core/model/configurator.model';\n\n@Injectable({ providedIn: 'root' })\nexport class OccConfiguratorVariantPriceSummaryNormalizer\n  implements Converter<OccConfigurator.Prices, Configurator.PriceSummary>\n{\n  convert(\n    source: OccConfigurator.Prices,\n    target?: Configurator.PriceSummary\n  ): Configurator.PriceSummary {\n    const resultTarget: Configurator.PriceSummary = {\n      ...target,\n      ...source.priceSummary,\n    };\n\n    return resultTarget;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Converter } from '@spartacus/core';\nimport { OccConfigurator } from '../variant-configurator-occ.models';\nimport { Configurator } from './../../../core/model/configurator.model';\n\n@Injectable({ providedIn: 'root' })\nexport class OccConfiguratorVariantSerializer\n  implements\n    Converter<Configurator.Configuration, OccConfigurator.Configuration>\n{\n  static readonly RETRACT_VALUE_CODE = '###RETRACT_VALUE_CODE###';\n\n  convert(\n    source: Configurator.Configuration,\n    target?: OccConfigurator.Configuration\n  ): OccConfigurator.Configuration {\n    const resultGroups: OccConfigurator.Group[] = [];\n    source.groups.forEach((group) => this.convertGroup(group, resultGroups));\n\n    const resultTarget: OccConfigurator.Configuration = {\n      ...target,\n      configId: source.configId,\n      rootProduct: source.productCode,\n      complete: source.complete,\n      groups: resultGroups,\n    };\n\n    return resultTarget;\n  }\n\n  convertGroup(source: Configurator.Group, occGroups: OccConfigurator.Group[]) {\n    const resultSubGroups: OccConfigurator.Group[] = [];\n    const resultAttributes: OccConfigurator.Attribute[] = [];\n\n    if (source.attributes) {\n      source.attributes.forEach((attribute) =>\n        this.convertAttribute(attribute, resultAttributes)\n      );\n    }\n    if (source.subGroups) {\n      source.subGroups.forEach((subGroup) =>\n        this.convertGroup(subGroup, resultSubGroups)\n      );\n    }\n\n    const group: OccConfigurator.Group = {\n      name: source.name,\n      id: source.id,\n      configurable: source.configurable,\n      groupType: this.convertGroupType(\n        source.groupType ?? Configurator.GroupType.ATTRIBUTE_GROUP\n      ),\n      description: source.description,\n      attributes: resultAttributes,\n      subGroups: resultSubGroups,\n    };\n\n    occGroups.push(group);\n  }\n\n  protected isRetractValue(attribute: Configurator.Attribute): boolean {\n    return (\n      attribute.selectedSingleValue ===\n      OccConfiguratorVariantSerializer.RETRACT_VALUE_CODE\n    );\n  }\n\n  protected getRetractedValue(\n    attribute: Configurator.Attribute\n  ): string | undefined {\n    return attribute.values?.find((value) => value.selected)?.valueCode;\n  }\n\n  protected retractValue(\n    attribute: Configurator.Attribute,\n    targetAttribute: OccConfigurator.Attribute\n  ) {\n    if (!this.isRetractValue(attribute)) {\n      targetAttribute.value = attribute.selectedSingleValue;\n    } else {\n      targetAttribute.value = this.getRetractedValue(attribute);\n      targetAttribute.retractTriggered = true;\n    }\n  }\n\n  convertAttribute(\n    attribute: Configurator.Attribute,\n    occAttributes: OccConfigurator.Attribute[]\n  ): void {\n    const targetAttribute: OccConfigurator.Attribute = {\n      key: attribute.name,\n      name: attribute.name,\n      langDepName: attribute.label,\n      required: attribute.required,\n      retractTriggered: attribute.retractTriggered,\n      type: this.convertCharacteristicType(\n        attribute.uiType ?? Configurator.UiType.NOT_IMPLEMENTED\n      ),\n    };\n\n    if (\n      attribute.uiType === Configurator.UiType.DROPDOWN ||\n      attribute.uiType === Configurator.UiType.DROPDOWN_ADDITIONAL_INPUT ||\n      attribute.uiType === Configurator.UiType.RADIOBUTTON ||\n      attribute.uiType === Configurator.UiType.RADIOBUTTON_ADDITIONAL_INPUT ||\n      attribute.uiType === Configurator.UiType.SINGLE_SELECTION_IMAGE\n    ) {\n      this.retractValue(attribute, targetAttribute);\n    } else if (attribute.uiType === Configurator.UiType.STRING) {\n      targetAttribute.value = attribute.userInput;\n    } else if (attribute.uiType === Configurator.UiType.NUMERIC) {\n      targetAttribute.formattedValue = attribute.userInput;\n    } else if (\n      attribute.uiType === Configurator.UiType.CHECKBOXLIST ||\n      attribute.uiType === Configurator.UiType.CHECKBOX ||\n      attribute.uiType === Configurator.UiType.MULTI_SELECTION_IMAGE\n    ) {\n      const domainValues: OccConfigurator.Value[] = [];\n      if (attribute.values) {\n        attribute.values.forEach((value) => {\n          this.convertValue(value, domainValues);\n        });\n      }\n      targetAttribute.domainValues = domainValues;\n    }\n\n    occAttributes.push(targetAttribute);\n  }\n\n  convertValue(value: Configurator.Value, values: OccConfigurator.Value[]) {\n    values.push({\n      key: value.valueCode,\n      langDepName: value.valueDisplay,\n      name: value.name,\n      selected: value.selected,\n    });\n  }\n\n  convertCharacteristicType(type: Configurator.UiType): OccConfigurator.UiType {\n    let uiType: OccConfigurator.UiType;\n    switch (type) {\n      case Configurator.UiType.RADIOBUTTON: {\n        uiType = OccConfigurator.UiType.RADIO_BUTTON;\n        break;\n      }\n      case Configurator.UiType.RADIOBUTTON_ADDITIONAL_INPUT: {\n        uiType = OccConfigurator.UiType.RADIO_BUTTON_ADDITIONAL_INPUT;\n        break;\n      }\n      case Configurator.UiType.DROPDOWN: {\n        uiType = OccConfigurator.UiType.DROPDOWN;\n        break;\n      }\n      case Configurator.UiType.DROPDOWN_ADDITIONAL_INPUT: {\n        uiType = OccConfigurator.UiType.DROPDOWN_ADDITIONAL_INPUT;\n        break;\n      }\n      case Configurator.UiType.STRING: {\n        uiType = OccConfigurator.UiType.STRING;\n        break;\n      }\n      case Configurator.UiType.NUMERIC: {\n        uiType = OccConfigurator.UiType.NUMERIC;\n        break;\n      }\n      case Configurator.UiType.CHECKBOX: {\n        uiType = OccConfigurator.UiType.CHECK_BOX;\n        break;\n      }\n      case Configurator.UiType.CHECKBOXLIST: {\n        uiType = OccConfigurator.UiType.CHECK_BOX_LIST;\n        break;\n      }\n      case Configurator.UiType.MULTI_SELECTION_IMAGE: {\n        uiType = OccConfigurator.UiType.MULTI_SELECTION_IMAGE;\n        break;\n      }\n      case Configurator.UiType.SINGLE_SELECTION_IMAGE: {\n        uiType = OccConfigurator.UiType.SINGLE_SELECTION_IMAGE;\n        break;\n      }\n      default: {\n        uiType = OccConfigurator.UiType.NOT_IMPLEMENTED;\n      }\n    }\n    return uiType;\n  }\n\n  convertGroupType(\n    groupType: Configurator.GroupType\n  ): OccConfigurator.GroupType {\n    switch (groupType) {\n      case Configurator.GroupType.ATTRIBUTE_GROUP:\n        return OccConfigurator.GroupType.CSTIC_GROUP;\n      case Configurator.GroupType.SUB_ITEM_GROUP:\n        return OccConfigurator.GroupType.INSTANCE;\n      case Configurator.GroupType.CONFLICT_GROUP:\n        return OccConfigurator.GroupType.CONFLICT;\n      case Configurator.GroupType.CONFLICT_HEADER_GROUP:\n        return OccConfigurator.GroupType.CONFLICT_HEADER;\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Converter } from '@spartacus/core';\nimport { ConfiguratorType } from '@spartacus/product-configurator/common';\nimport { OccConfigurator } from '../variant-configurator-occ.models';\nimport { Configurator } from './../../../core/model/configurator.model';\n\n@Injectable({ providedIn: 'root' })\nexport class OccConfiguratorVariantUpdateCartEntrySerializer\n  implements\n    Converter<\n      Configurator.UpdateConfigurationForCartEntryParameters,\n      OccConfigurator.UpdateConfigurationForCartEntryParameters\n    >\n{\n  convert(\n    source: Configurator.UpdateConfigurationForCartEntryParameters,\n    target?: OccConfigurator.UpdateConfigurationForCartEntryParameters\n  ): OccConfigurator.UpdateConfigurationForCartEntryParameters {\n    const resultTarget: OccConfigurator.UpdateConfigurationForCartEntryParameters =\n      {\n        ...target,\n        userId: source.userId,\n        cartId: source.cartId,\n        product: { code: source.configuration.productCode },\n        entryNumber: source.cartEntryNumber,\n        configId: source.configuration.configId,\n        configurationInfos: [{ configuratorType: ConfiguratorType.VARIANT }],\n      };\n\n    return resultTarget;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './occ-configurator-variant-add-to-cart-serializer';\nexport * from './occ-configurator-variant-normalizer';\nexport * from './occ-configurator-variant-overview-normalizer';\nexport * from './occ-configurator-variant-price-summary-normalizer';\nexport * from './occ-configurator-variant-serializer';\nexport * from './occ-configurator-variant-update-cart-entry-serializer';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {\n  CartModification,\n  CART_MODIFICATION_NORMALIZER,\n} from '@spartacus/cart/base/root';\nimport { ConverterService, OccEndpointsService } from '@spartacus/core';\nimport {\n  CommonConfigurator,\n  ConfiguratorModelUtils,\n  ConfiguratorType,\n} from '@spartacus/product-configurator/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RulebasedConfiguratorAdapter } from '../../core/connectors/rulebased-configurator.adapter';\nimport { Configurator } from '../../core/model/configurator.model';\nimport {\n  VARIANT_CONFIGURATOR_ADD_TO_CART_SERIALIZER,\n  VARIANT_CONFIGURATOR_NORMALIZER,\n  VARIANT_CONFIGURATOR_OVERVIEW_NORMALIZER,\n  VARIANT_CONFIGURATOR_PRICE_NORMALIZER,\n  VARIANT_CONFIGURATOR_SERIALIZER,\n  VARIANT_CONFIGURATOR_UPDATE_CART_ENTRY_SERIALIZER,\n} from './variant-configurator-occ.converters';\nimport { OccConfigurator } from './variant-configurator-occ.models';\n\n@Injectable()\nexport class VariantConfiguratorOccAdapter\n  implements RulebasedConfiguratorAdapter\n{\n  constructor(\n    protected http: HttpClient,\n    protected occEndpointsService: OccEndpointsService,\n    protected converterService: ConverterService\n  ) {}\n\n  getConfiguratorType(): string {\n    return ConfiguratorType.VARIANT;\n  }\n\n  createConfiguration(\n    owner: CommonConfigurator.Owner\n  ): Observable<Configurator.Configuration> {\n    const productCode = owner.id;\n    return this.http\n      .get<OccConfigurator.Configuration>(\n        this.occEndpointsService.buildUrl('createVariantConfiguration', {\n          urlParams: { productCode },\n        })\n      )\n      .pipe(\n        this.converterService.pipeable(VARIANT_CONFIGURATOR_NORMALIZER),\n        map((resultConfiguration) => {\n          return {\n            ...resultConfiguration,\n            owner: owner,\n          };\n        })\n      );\n  }\n\n  readConfiguration(\n    configId: string,\n    groupId: string,\n    configurationOwner: CommonConfigurator.Owner\n  ): Observable<Configurator.Configuration> {\n    return this.http\n      .get<OccConfigurator.Configuration>(\n        this.occEndpointsService.buildUrl('readVariantConfiguration', {\n          urlParams: { configId },\n          queryParams: { groupId },\n        })\n      )\n      .pipe(\n        this.converterService.pipeable(VARIANT_CONFIGURATOR_NORMALIZER),\n        map((resultConfiguration) => {\n          return {\n            ...resultConfiguration,\n            owner: configurationOwner,\n          };\n        })\n      );\n  }\n\n  updateConfiguration(\n    configuration: Configurator.Configuration\n  ): Observable<Configurator.Configuration> {\n    const configId = configuration.configId;\n    const url = this.occEndpointsService.buildUrl(\n      'updateVariantConfiguration',\n      {\n        urlParams: { configId },\n      }\n    );\n    const occConfiguration = this.converterService.convert(\n      configuration,\n      VARIANT_CONFIGURATOR_SERIALIZER\n    );\n\n    return this.http\n      .patch<OccConfigurator.Configuration>(url, occConfiguration)\n      .pipe(\n        this.converterService.pipeable(VARIANT_CONFIGURATOR_NORMALIZER),\n        map((resultConfiguration) => {\n          return {\n            ...resultConfiguration,\n            owner: configuration.owner,\n          };\n        })\n      );\n  }\n\n  addToCart(\n    parameters: Configurator.AddToCartParameters\n  ): Observable<CartModification> {\n    const url = this.occEndpointsService.buildUrl(\n      'addVariantConfigurationToCart',\n      { urlParams: { userId: parameters.userId, cartId: parameters.cartId } }\n    );\n\n    const occAddToCartParameters = this.converterService.convert(\n      parameters,\n      VARIANT_CONFIGURATOR_ADD_TO_CART_SERIALIZER\n    );\n\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n\n    return this.http\n      .post<CartModification>(url, occAddToCartParameters, { headers })\n      .pipe(this.converterService.pipeable(CART_MODIFICATION_NORMALIZER));\n  }\n\n  readConfigurationForCartEntry(\n    parameters: CommonConfigurator.ReadConfigurationFromCartEntryParameters\n  ): Observable<Configurator.Configuration> {\n    const url = this.occEndpointsService.buildUrl(\n      'readVariantConfigurationForCartEntry',\n      {\n        urlParams: {\n          userId: parameters.userId,\n          cartId: parameters.cartId,\n          cartEntryNumber: parameters.cartEntryNumber,\n        },\n      }\n    );\n\n    return this.http.get<OccConfigurator.Configuration>(url).pipe(\n      this.converterService.pipeable(VARIANT_CONFIGURATOR_NORMALIZER),\n      map((resultConfiguration) => {\n        return {\n          ...resultConfiguration,\n          owner: parameters.owner,\n        };\n      })\n    );\n  }\n\n  updateConfigurationForCartEntry(\n    parameters: Configurator.UpdateConfigurationForCartEntryParameters\n  ): Observable<CartModification> {\n    const url = this.occEndpointsService.buildUrl(\n      'updateVariantConfigurationForCartEntry',\n      {\n        urlParams: {\n          userId: parameters.userId,\n          cartId: parameters.cartId,\n          cartEntryNumber: parameters.cartEntryNumber,\n        },\n      }\n    );\n\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    });\n\n    const occUpdateCartEntryParameters = this.converterService.convert(\n      parameters,\n      VARIANT_CONFIGURATOR_UPDATE_CART_ENTRY_SERIALIZER\n    );\n\n    return this.http\n      .put<CartModification>(url, occUpdateCartEntryParameters, { headers })\n      .pipe(this.converterService.pipeable(CART_MODIFICATION_NORMALIZER));\n  }\n\n  readConfigurationForOrderEntry(\n    parameters: CommonConfigurator.ReadConfigurationFromOrderEntryParameters\n  ): Observable<Configurator.Configuration> {\n    const url = this.occEndpointsService.buildUrl(\n      'readVariantConfigurationOverviewForOrderEntry',\n      {\n        urlParams: {\n          userId: parameters.userId,\n          orderId: parameters.orderId,\n          orderEntryNumber: parameters.orderEntryNumber,\n        },\n      }\n    );\n\n    return this.http.get<OccConfigurator.Overview>(url).pipe(\n      this.converterService.pipeable(VARIANT_CONFIGURATOR_OVERVIEW_NORMALIZER),\n      map((overview) => {\n        const configuration: Configurator.Configuration = {\n          configId: overview.configId,\n          productCode: overview.productCode,\n          groups: [],\n          flatGroups: [],\n          interactionState: {},\n          overview: overview,\n          owner: ConfiguratorModelUtils.createInitialOwner(),\n        };\n        return configuration;\n      }),\n      map((resultConfiguration) => {\n        return {\n          ...resultConfiguration,\n          owner: parameters.owner,\n        };\n      })\n    );\n  }\n\n  readPriceSummary(\n    configuration: Configurator.Configuration\n  ): Observable<Configurator.Configuration> {\n    const url = this.occEndpointsService.buildUrl(\n      'readVariantConfigurationPriceSummary',\n      {\n        urlParams: {\n          configId: configuration.configId,\n        },\n        queryParams: { groupId: configuration.interactionState.currentGroup },\n      }\n    );\n\n    return this.http.get(url).pipe(\n      this.converterService.pipeable(VARIANT_CONFIGURATOR_PRICE_NORMALIZER),\n      map((configResult) => {\n        const result: Configurator.Configuration = {\n          ...configuration,\n          priceSummary: configResult.priceSummary,\n          priceSupplements: configResult.priceSupplements,\n        };\n        return result;\n      })\n    );\n  }\n\n  getConfigurationOverview(\n    configId: string\n  ): Observable<Configurator.Overview> {\n    const url = this.occEndpointsService.buildUrl(\n      'getVariantConfigurationOverview',\n      { urlParams: { configId } }\n    );\n\n    return this.http\n      .get<OccConfigurator.Overview>(url)\n      .pipe(\n        this.converterService.pipeable(VARIANT_CONFIGURATOR_OVERVIEW_NORMALIZER)\n      );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Converter } from '@spartacus/core';\nimport { ConfiguratorModelUtils } from '@spartacus/product-configurator/common';\nimport { OccConfigurator } from '../variant-configurator-occ.models';\nimport { Configurator } from './../../../core/model/configurator.model';\n\n@Injectable({ providedIn: 'root' })\nexport class OccConfiguratorVariantPriceNormalizer\n  implements Converter<OccConfigurator.Prices, Configurator.Configuration>\n{\n  convert(\n    source: OccConfigurator.Prices,\n    target?: Configurator.Configuration\n  ): Configurator.Configuration {\n    const priceSupplements: Configurator.AttributeSupplement[] = [];\n    source.attributes?.forEach((attr) => {\n      this.convertAttributeSupplements(attr, priceSupplements);\n    });\n\n    //fine to build an incomplete configuratiom here,\n    //as we later on only take over the pricing related aspects\n    const resultTarget: Configurator.Configuration = {\n      ...target,\n      configId: source.configId,\n      productCode: '',\n      groups: [],\n      flatGroups: [],\n      owner: ConfiguratorModelUtils.createInitialOwner(),\n      interactionState: {},\n      priceSummary: source?.priceSummary,\n      priceSupplements: priceSupplements,\n    };\n\n    return resultTarget;\n  }\n\n  convertAttributeSupplements(\n    source: OccConfigurator.Supplements,\n    priceSupplements: Configurator.AttributeSupplement[]\n  ) {\n    let attributeSupplement: Configurator.AttributeSupplement = {\n      attributeUiKey: source?.csticUiKey,\n      valueSupplements: [],\n    };\n\n    source?.priceSupplements?.forEach((value) => {\n      this.convertValueSupplement(value, attributeSupplement?.valueSupplements);\n    });\n    priceSupplements.push(attributeSupplement);\n  }\n\n  convertValueSupplement(\n    source: OccConfigurator.ValueSupplements,\n    valueSupplements: Configurator.ValueSupplement[]\n  ) {\n    let valueSupplement: Configurator.ValueSupplement = {\n      attributeValueKey: source?.attributeValueKey,\n      priceValue: source?.priceValue,\n      obsoletePriceValue: source?.obsoletePriceValue,\n    };\n    valueSupplements.push(valueSupplement);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { OccConfig } from '@spartacus/core';\n\nexport function defaultOccVariantConfiguratorConfigFactory(): OccConfig {\n  return {\n    backend: {\n      occ: {\n        endpoints: {\n          createVariantConfiguration:\n            'products/${productCode}/configurators/ccpconfigurator',\n\n          readVariantConfiguration: 'ccpconfigurator/${configId}',\n\n          updateVariantConfiguration: 'ccpconfigurator/${configId}',\n\n          addVariantConfigurationToCart:\n            'users/${userId}/carts/${cartId}/entries/ccpconfigurator',\n\n          readVariantConfigurationForCartEntry:\n            'users/${userId}/carts/${cartId}/entries/${cartEntryNumber}/ccpconfigurator',\n\n          updateVariantConfigurationForCartEntry:\n            'users/${userId}/carts/${cartId}/entries/${cartEntryNumber}/ccpconfigurator',\n\n          readVariantConfigurationOverviewForOrderEntry:\n            'users/${userId}/orders/${orderId}/entries/${orderEntryNumber}/ccpconfigurator/configurationOverview',\n\n          readVariantConfigurationPriceSummary:\n            'ccpconfigurator/${configId}/pricing',\n\n          getVariantConfigurationOverview:\n            'ccpconfigurator/${configId}/configurationOverview',\n        },\n      },\n    },\n  };\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ConfigModule } from '@spartacus/core';\nimport { RulebasedConfiguratorConnector } from '../../core/connectors/rulebased-configurator.connector';\nimport { OccConfiguratorVariantAddToCartSerializer } from './converters/occ-configurator-variant-add-to-cart-serializer';\nimport { OccConfiguratorVariantNormalizer } from './converters/occ-configurator-variant-normalizer';\nimport { OccConfiguratorVariantOverviewNormalizer } from './converters/occ-configurator-variant-overview-normalizer';\nimport { OccConfiguratorVariantPriceSummaryNormalizer } from './converters/occ-configurator-variant-price-summary-normalizer';\nimport { OccConfiguratorVariantPriceNormalizer } from './converters/occ-configurator-variant-price-normalizer';\nimport { OccConfiguratorVariantSerializer } from './converters/occ-configurator-variant-serializer';\nimport { OccConfiguratorVariantUpdateCartEntrySerializer } from './converters/occ-configurator-variant-update-cart-entry-serializer';\nimport { defaultOccVariantConfiguratorConfigFactory } from './default-occ-configurator-variant-config';\nimport { VariantConfiguratorOccAdapter } from './variant-configurator-occ.adapter';\nimport {\n  VARIANT_CONFIGURATOR_ADD_TO_CART_SERIALIZER,\n  VARIANT_CONFIGURATOR_NORMALIZER,\n  VARIANT_CONFIGURATOR_OVERVIEW_NORMALIZER,\n  VARIANT_CONFIGURATOR_PRICE_NORMALIZER,\n  VARIANT_CONFIGURATOR_PRICE_SUMMARY_NORMALIZER,\n  VARIANT_CONFIGURATOR_SERIALIZER,\n  VARIANT_CONFIGURATOR_UPDATE_CART_ENTRY_SERIALIZER,\n} from './variant-configurator-occ.converters';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfigFactory(defaultOccVariantConfiguratorConfigFactory),\n  ],\n  providers: [\n    {\n      provide: RulebasedConfiguratorConnector.CONFIGURATOR_ADAPTER_LIST,\n      useClass: VariantConfiguratorOccAdapter,\n      multi: true,\n    },\n    {\n      provide: VARIANT_CONFIGURATOR_NORMALIZER,\n      useExisting: OccConfiguratorVariantNormalizer,\n      multi: true,\n    },\n    {\n      provide: VARIANT_CONFIGURATOR_SERIALIZER,\n      useExisting: OccConfiguratorVariantSerializer,\n      multi: true,\n    },\n    {\n      provide: VARIANT_CONFIGURATOR_PRICE_SUMMARY_NORMALIZER,\n      useExisting: OccConfiguratorVariantPriceSummaryNormalizer,\n      multi: true,\n    },\n    {\n      provide: VARIANT_CONFIGURATOR_PRICE_NORMALIZER,\n      useExisting: OccConfiguratorVariantPriceNormalizer,\n      multi: true,\n    },\n    {\n      provide: VARIANT_CONFIGURATOR_ADD_TO_CART_SERIALIZER,\n      useExisting: OccConfiguratorVariantAddToCartSerializer,\n      multi: true,\n    },\n    {\n      provide: VARIANT_CONFIGURATOR_UPDATE_CART_ENTRY_SERIALIZER,\n      useExisting: OccConfiguratorVariantUpdateCartEntrySerializer,\n      multi: true,\n    },\n    {\n      provide: VARIANT_CONFIGURATOR_OVERVIEW_NORMALIZER,\n      useExisting: OccConfiguratorVariantOverviewNormalizer,\n      multi: true,\n    },\n  ],\n})\nexport class VariantConfiguratorOccModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './converters/index';\nexport * from './variant-configurator-occ.adapter';\nexport * from './variant-configurator-occ.converters';\nexport * from './variant-configurator-occ.models';\nexport * from './variant-configurator-occ.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './variant/index';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { RulebasedConfiguratorComponentsModule } from './components/rulebased-configurator-components.module';\nimport { RulebasedConfiguratorCoreModule } from './core/rulebased-configurator-core.module';\nimport { VariantConfiguratorOccModule } from './occ/variant/variant-configurator-occ.module';\n\n@NgModule({\n  imports: [\n    VariantConfiguratorOccModule,\n    RulebasedConfiguratorCoreModule,\n    RulebasedConfiguratorComponentsModule,\n  ],\n})\nexport class RulebasedConfiguratorModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\n * Public API Surface of the rule based configurator\n */\n\nexport * from './components/index';\nexport * from './core/index';\nexport * from './occ/index';\nexport * from './rulebased-configurator.module';\n\n/** AUGMENTABLE_TYPES_START */\nexport { Configurator } from './core/model/configurator.model';\n/** AUGMENTABLE_TYPES_END */\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["ConfiguratorSelectors.getConfigurationProcessLoaderStateFactory","ConfiguratorActions.ReadCartEntryConfiguration","ConfiguratorActions.ReadOrderEntryConfiguration","ConfiguratorActions.AddToCart","ConfiguratorActions.UpdateCartEntry","ConfiguratorActions.RemoveCartBoundConfigurations","i3","i5","i6.ConfiguratorUtilsService","ConfiguratorSelectors.hasPendingChanges","ConfiguratorSelectors.getConfigurationFactory","ConfiguratorActions.UpdateConfiguration","ConfiguratorActions.GetConfigurationOverview","ConfiguratorActions.RemoveConfiguration","ConfiguratorActions.CreateConfiguration","i2","i3.ConfiguratorCartService","i4","i5.ConfiguratorUtilsService","ConfiguratorSelectors.isGroupVisited","ConfiguratorActions.SetGroupsVisited","ConfiguratorSelectors.areGroupsVisited","i2.ConfiguratorUtilsService","ConfiguratorActions.SetMenuParentGroup","ConfiguratorActions.ChangeGroup","i2.ConfiguratorCommonsService","i3.ConfiguratorUtilsService","i4.ConfiguratorGroupStatusService","i1.ConfiguratorGroupsService","i1","i4.ConfiguratorGroupsService","i7.ConfiguratorStorefrontUtilsService","i8","i9","i1.ConfiguratorStorefrontUtilsService","i1.ConfiguratorCartService","i1.ConfiguratorRouterListener","ConfiguratorActions.CREATE_CONFIGURATION","ConfiguratorActions.UpdatePriceSummary","ConfiguratorActions.CreateConfigurationSuccess","ConfiguratorActions.CreateConfigurationFail","ConfiguratorActions.READ_CONFIGURATION","ConfiguratorActions.ReadConfigurationSuccess","ConfiguratorActions.ReadConfigurationFail","ConfiguratorActions.UPDATE_CONFIGURATION","ConfiguratorActions.UpdateConfigurationSuccess","ConfiguratorActions.UpdateConfigurationFail","ConfiguratorActions.UPDATE_PRICE_SUMMARY","ConfiguratorActions.UpdatePriceSummarySuccess","ConfiguratorActions.UpdatePriceSummaryFail","ConfiguratorActions.GET_CONFIGURATION_OVERVIEW","ConfiguratorActions.GetConfigurationOverviewSuccess","ConfiguratorActions.GetConfigurationOverviewFail","ConfiguratorActions.UPDATE_CONFIGURATION_SUCCESS","ConfiguratorSelectors.getCurrentGroup","ConfiguratorActions.UpdateConfigurationFinalizeSuccess","ConfiguratorActions.UPDATE_CONFIGURATION_FAIL","ConfiguratorActions.UpdateConfigurationFinalizeFail","ConfiguratorActions.UPDATE_CONFIGURATION_FINALIZE_FAIL","ConfiguratorActions.ReadConfiguration","ConfiguratorActions.CHANGE_GROUP","ConfiguratorActions.SetCurrentGroup","i2.RulebasedConfiguratorConnector","i4.ConfiguratorUtilsService","i5.ConfiguratorGroupStatusService","i6","i7.ConfiguratorBasicEffectService","ConfiguratorActions.ADD_TO_CART","ConfiguratorActions.AddNextOwner","ConfiguratorActions.UPDATE_CART_ENTRY","ConfiguratorActions.READ_CART_ENTRY_CONFIGURATION","ConfiguratorActions.ReadCartEntryConfigurationSuccess","ConfiguratorActions.ReadCartEntryConfigurationFail","ConfiguratorActions.READ_ORDER_ENTRY_CONFIGURATION","ConfiguratorActions.ReadOrderEntryConfigurationSuccess","ConfiguratorActions.ReadOrderEntryConfigurationFail","ConfiguratorActions.REMOVE_CART_BOUND_CONFIGURATIONS","ConfiguratorSelectors.getConfigurationsState","ConfiguratorActions.ADD_NEXT_OWNER","ConfiguratorActions.SetNextOwnerCartEntry","ConfiguratorActions.SetInteractionState","ConfiguratorActions.UPDATE_CONFIGURATION_FINALIZE_SUCCESS","ConfiguratorActions.CREATE_CONFIGURATION_SUCCESS","ConfiguratorActions.READ_CONFIGURATION_SUCCESS","ConfiguratorActions.READ_CART_ENTRY_CONFIGURATION_SUCCESS","ConfiguratorActions.UPDATE_PRICE_SUMMARY_SUCCESS","ConfiguratorActions.GET_CONFIGURATION_OVERVIEW_SUCCESS","ConfiguratorActions.READ_ORDER_ENTRY_CONFIGURATION_SUCCESS","ConfiguratorActions.SET_NEXT_OWNER_CART_ENTRY","ConfiguratorActions.SET_INTERACTION_STATE","ConfiguratorActions.SET_CURRENT_GROUP","ConfiguratorActions.SET_MENU_PARENT_GROUP","ConfiguratorActions.SET_GROUPS_VISITED","i2.ConfiguratorGroupsService","i3.ConfiguratorUISettingsConfig","i1.ConfiguratorUISettingsConfig","i4.ConfiguratorShowMoreComponent","i5.ConfiguratorAttributeQuantityComponent","i6.ConfiguratorPriceComponent","i1.ConfiguratorAttributeQuantityService","i2.ConfiguratorAttributeQuantityService","i6.ConfiguratorAttributeQuantityComponent","i7.ConfiguratorPriceComponent","i4.ConfiguratorPriceComponent","i1.ConfiguratorAttributeNumericInputFieldService","i2.ConfiguratorUISettingsConfig","i4.ConfiguratorAttributeQuantityComponent","i8.ConfiguratorAttributeNumericInputFieldComponent","i9.ConfiguratorAttributeInputFieldComponent","i2.ConfiguratorAttributeProductCardComponent","i3.ConfiguratorAttributeQuantityComponent","i5.ConfiguratorPriceComponent","i7","i1.ConfiguratorCommonsService","i5.ConfiguratorStorefrontUtilsService","i7.ConfiguratorAttributeInputFieldComponent","i8.ConfiguratorAttributeFooterComponent","i9.ConfiguratorAttributeNumericInputFieldComponent","i10.ConfiguratorAttributeHeaderComponent","i11.ConfiguratorAttributeRadioButtonComponent","i12.ConfiguratorAttributeSingleSelectionBundleComponent","i13.ConfiguratorAttributeMultiSelectionBundleComponent","i14.ConfiguratorAttributeReadOnlyComponent","i15.ConfiguratorAttributeSingleSelectionImageComponent","i16.ConfiguratorAttributeSingleSelectionBundleDropdownComponent","i17.ConfiguratorAttributeCheckBoxComponent","i18.ConfiguratorAttributeCheckBoxListComponent","i19.ConfiguratorAttributeDropDownComponent","i20.ConfiguratorAttributeMultiSelectionImageComponent","i21.ConfiguratorConflictDescriptionComponent","i22.ConfiguratorConflictSuggestionComponent","i6.ConfiguratorGroupMenuService","i3.ConfiguratorPriceComponent","i4.ConfiguratorOverviewAttributeComponent","i5.ConfiguratorOverviewBundleAttributeComponent","i4.ConfiguratorStorefrontUtilsService","i3.ConfiguratorMessageConfig","i3.ConfiguratorCommonsService"],"mappings":"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"}