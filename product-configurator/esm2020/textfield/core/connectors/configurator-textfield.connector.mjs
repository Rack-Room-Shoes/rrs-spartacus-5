/*
 * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "./configurator-textfield.adapter";
export class ConfiguratorTextfieldConnector {
    constructor(adapter) {
        this.adapter = adapter;
    }
    /**
     * Creates default configuration for a product that is textfield-configurable
     * @param productCode Product code
     * @param owner Owner of the configuration
     * @returns Observable of product configurations
     */
    createConfiguration(productCode, owner) {
        return this.adapter.createConfiguration(productCode, owner);
    }
    /**
     * Reads an existing configuration for a cart entry
     * @param parameters Attributes needed to read a product configuration for a cart entry
     * @returns Observable of product configurations
     */
    readConfigurationForCartEntry(parameters) {
        return this.adapter.readConfigurationForCartEntry(parameters);
    }
    /**
     * Reads an existing configuration for an order entry
     * @param {CommonConfigurator.ReadConfigurationFromOrderEntryParameters} parameters Attributes needed to read a product configuration for an order entry
     * @returns {Observable<ConfiguratorTextfield.Configuration>} Observable of product configurations
     */
    readConfigurationForOrderEntry(parameters) {
        return this.adapter.readConfigurationForOrderEntry(parameters);
    }
    /**
     * Updates a configuration that is attached to a cart entry
     * @param parameters Attributes needed to update a cart entries' configuration
     * @returns Observable of cart modifications
     */
    updateConfigurationForCartEntry(parameters) {
        return this.adapter.updateConfigurationForCartEntry(parameters);
    }
    /**
     * Adds a textfield-configurable product to the cart, and passes along its configuration
     * @param parameters Attributes needed to add a textfield product along with its configuration to the cart
     * @returns Observable of cart modifications
     */
    addToCart(parameters) {
        return this.adapter.addToCart(parameters);
    }
}
ConfiguratorTextfieldConnector.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: ConfiguratorTextfieldConnector, deps: [{ token: i1.ConfiguratorTextfieldAdapter }], target: i0.ɵɵFactoryTarget.Injectable });
ConfiguratorTextfieldConnector.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: ConfiguratorTextfieldConnector });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: ConfiguratorTextfieldConnector, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.ConfiguratorTextfieldAdapter }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlndXJhdG9yLXRleHRmaWVsZC5jb25uZWN0b3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvcHJvZHVjdC1jb25maWd1cmF0b3IvdGV4dGZpZWxkL2NvcmUvY29ubmVjdG9ycy9jb25maWd1cmF0b3ItdGV4dGZpZWxkLmNvbm5lY3Rvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBRUgsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7O0FBUTNDLE1BQU0sT0FBTyw4QkFBOEI7SUFDekMsWUFBc0IsT0FBcUM7UUFBckMsWUFBTyxHQUFQLE9BQU8sQ0FBOEI7SUFBRyxDQUFDO0lBRS9EOzs7OztPQUtHO0lBQ0gsbUJBQW1CLENBQ2pCLFdBQW1CLEVBQ25CLEtBQStCO1FBRS9CLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxXQUFXLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDOUQsQ0FBQztJQUNEOzs7O09BSUc7SUFDSCw2QkFBNkIsQ0FDM0IsVUFBdUU7UUFFdkUsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLDZCQUE2QixDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ2hFLENBQUM7SUFDRDs7OztPQUlHO0lBQ0gsOEJBQThCLENBQzVCLFVBQXdFO1FBRXhFLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyw4QkFBOEIsQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUNqRSxDQUFDO0lBQ0Q7Ozs7T0FJRztJQUNILCtCQUErQixDQUM3QixVQUEyRDtRQUUzRCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsK0JBQStCLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDbEUsQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxTQUFTLENBQ1AsVUFBcUQ7UUFFckQsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUM1QyxDQUFDOzsySEF2RFUsOEJBQThCOytIQUE5Qiw4QkFBOEI7MkZBQTlCLDhCQUE4QjtrQkFEMUMsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBTUERYLUZpbGVDb3B5cmlnaHRUZXh0OiAyMDIyIFNBUCBTcGFydGFjdXMgdGVhbSA8c3BhcnRhY3VzLXRlYW1Ac2FwLmNvbT5cbiAqXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuICovXG5cbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENhcnRNb2RpZmljYXRpb24gfSBmcm9tICdAc3BhcnRhY3VzL2NhcnQvYmFzZS9yb290JztcbmltcG9ydCB7IENvbW1vbkNvbmZpZ3VyYXRvciB9IGZyb20gJ0BzcGFydGFjdXMvcHJvZHVjdC1jb25maWd1cmF0b3IvY29tbW9uJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IENvbmZpZ3VyYXRvclRleHRmaWVsZCB9IGZyb20gJy4uL21vZGVsL2NvbmZpZ3VyYXRvci10ZXh0ZmllbGQubW9kZWwnO1xuaW1wb3J0IHsgQ29uZmlndXJhdG9yVGV4dGZpZWxkQWRhcHRlciB9IGZyb20gJy4vY29uZmlndXJhdG9yLXRleHRmaWVsZC5hZGFwdGVyJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIENvbmZpZ3VyYXRvclRleHRmaWVsZENvbm5lY3RvciB7XG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBhZGFwdGVyOiBDb25maWd1cmF0b3JUZXh0ZmllbGRBZGFwdGVyKSB7fVxuXG4gIC8qKlxuICAgKiBDcmVhdGVzIGRlZmF1bHQgY29uZmlndXJhdGlvbiBmb3IgYSBwcm9kdWN0IHRoYXQgaXMgdGV4dGZpZWxkLWNvbmZpZ3VyYWJsZVxuICAgKiBAcGFyYW0gcHJvZHVjdENvZGUgUHJvZHVjdCBjb2RlXG4gICAqIEBwYXJhbSBvd25lciBPd25lciBvZiB0aGUgY29uZmlndXJhdGlvblxuICAgKiBAcmV0dXJucyBPYnNlcnZhYmxlIG9mIHByb2R1Y3QgY29uZmlndXJhdGlvbnNcbiAgICovXG4gIGNyZWF0ZUNvbmZpZ3VyYXRpb24oXG4gICAgcHJvZHVjdENvZGU6IHN0cmluZyxcbiAgICBvd25lcjogQ29tbW9uQ29uZmlndXJhdG9yLk93bmVyXG4gICk6IE9ic2VydmFibGU8Q29uZmlndXJhdG9yVGV4dGZpZWxkLkNvbmZpZ3VyYXRpb24+IHtcbiAgICByZXR1cm4gdGhpcy5hZGFwdGVyLmNyZWF0ZUNvbmZpZ3VyYXRpb24ocHJvZHVjdENvZGUsIG93bmVyKTtcbiAgfVxuICAvKipcbiAgICogUmVhZHMgYW4gZXhpc3RpbmcgY29uZmlndXJhdGlvbiBmb3IgYSBjYXJ0IGVudHJ5XG4gICAqIEBwYXJhbSBwYXJhbWV0ZXJzIEF0dHJpYnV0ZXMgbmVlZGVkIHRvIHJlYWQgYSBwcm9kdWN0IGNvbmZpZ3VyYXRpb24gZm9yIGEgY2FydCBlbnRyeVxuICAgKiBAcmV0dXJucyBPYnNlcnZhYmxlIG9mIHByb2R1Y3QgY29uZmlndXJhdGlvbnNcbiAgICovXG4gIHJlYWRDb25maWd1cmF0aW9uRm9yQ2FydEVudHJ5KFxuICAgIHBhcmFtZXRlcnM6IENvbW1vbkNvbmZpZ3VyYXRvci5SZWFkQ29uZmlndXJhdGlvbkZyb21DYXJ0RW50cnlQYXJhbWV0ZXJzXG4gICk6IE9ic2VydmFibGU8Q29uZmlndXJhdG9yVGV4dGZpZWxkLkNvbmZpZ3VyYXRpb24+IHtcbiAgICByZXR1cm4gdGhpcy5hZGFwdGVyLnJlYWRDb25maWd1cmF0aW9uRm9yQ2FydEVudHJ5KHBhcmFtZXRlcnMpO1xuICB9XG4gIC8qKlxuICAgKiBSZWFkcyBhbiBleGlzdGluZyBjb25maWd1cmF0aW9uIGZvciBhbiBvcmRlciBlbnRyeVxuICAgKiBAcGFyYW0ge0NvbW1vbkNvbmZpZ3VyYXRvci5SZWFkQ29uZmlndXJhdGlvbkZyb21PcmRlckVudHJ5UGFyYW1ldGVyc30gcGFyYW1ldGVycyBBdHRyaWJ1dGVzIG5lZWRlZCB0byByZWFkIGEgcHJvZHVjdCBjb25maWd1cmF0aW9uIGZvciBhbiBvcmRlciBlbnRyeVxuICAgKiBAcmV0dXJucyB7T2JzZXJ2YWJsZTxDb25maWd1cmF0b3JUZXh0ZmllbGQuQ29uZmlndXJhdGlvbj59IE9ic2VydmFibGUgb2YgcHJvZHVjdCBjb25maWd1cmF0aW9uc1xuICAgKi9cbiAgcmVhZENvbmZpZ3VyYXRpb25Gb3JPcmRlckVudHJ5KFxuICAgIHBhcmFtZXRlcnM6IENvbW1vbkNvbmZpZ3VyYXRvci5SZWFkQ29uZmlndXJhdGlvbkZyb21PcmRlckVudHJ5UGFyYW1ldGVyc1xuICApOiBPYnNlcnZhYmxlPENvbmZpZ3VyYXRvclRleHRmaWVsZC5Db25maWd1cmF0aW9uPiB7XG4gICAgcmV0dXJuIHRoaXMuYWRhcHRlci5yZWFkQ29uZmlndXJhdGlvbkZvck9yZGVyRW50cnkocGFyYW1ldGVycyk7XG4gIH1cbiAgLyoqXG4gICAqIFVwZGF0ZXMgYSBjb25maWd1cmF0aW9uIHRoYXQgaXMgYXR0YWNoZWQgdG8gYSBjYXJ0IGVudHJ5XG4gICAqIEBwYXJhbSBwYXJhbWV0ZXJzIEF0dHJpYnV0ZXMgbmVlZGVkIHRvIHVwZGF0ZSBhIGNhcnQgZW50cmllcycgY29uZmlndXJhdGlvblxuICAgKiBAcmV0dXJucyBPYnNlcnZhYmxlIG9mIGNhcnQgbW9kaWZpY2F0aW9uc1xuICAgKi9cbiAgdXBkYXRlQ29uZmlndXJhdGlvbkZvckNhcnRFbnRyeShcbiAgICBwYXJhbWV0ZXJzOiBDb25maWd1cmF0b3JUZXh0ZmllbGQuVXBkYXRlQ2FydEVudHJ5UGFyYW1ldGVyc1xuICApOiBPYnNlcnZhYmxlPENhcnRNb2RpZmljYXRpb24+IHtcbiAgICByZXR1cm4gdGhpcy5hZGFwdGVyLnVwZGF0ZUNvbmZpZ3VyYXRpb25Gb3JDYXJ0RW50cnkocGFyYW1ldGVycyk7XG4gIH1cblxuICAvKipcbiAgICogQWRkcyBhIHRleHRmaWVsZC1jb25maWd1cmFibGUgcHJvZHVjdCB0byB0aGUgY2FydCwgYW5kIHBhc3NlcyBhbG9uZyBpdHMgY29uZmlndXJhdGlvblxuICAgKiBAcGFyYW0gcGFyYW1ldGVycyBBdHRyaWJ1dGVzIG5lZWRlZCB0byBhZGQgYSB0ZXh0ZmllbGQgcHJvZHVjdCBhbG9uZyB3aXRoIGl0cyBjb25maWd1cmF0aW9uIHRvIHRoZSBjYXJ0XG4gICAqIEByZXR1cm5zIE9ic2VydmFibGUgb2YgY2FydCBtb2RpZmljYXRpb25zXG4gICAqL1xuICBhZGRUb0NhcnQoXG4gICAgcGFyYW1ldGVyczogQ29uZmlndXJhdG9yVGV4dGZpZWxkLkFkZFRvQ2FydFBhcmFtZXRlcnNcbiAgKTogT2JzZXJ2YWJsZTxDYXJ0TW9kaWZpY2F0aW9uPiB7XG4gICAgcmV0dXJuIHRoaXMuYWRhcHRlci5hZGRUb0NhcnQocGFyYW1ldGVycyk7XG4gIH1cbn1cbiJdfQ==