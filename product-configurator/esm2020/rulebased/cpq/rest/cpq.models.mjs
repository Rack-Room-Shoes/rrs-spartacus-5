/*
 * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
/**
 *
 * An interface representing the models used for the communication with the CPQ configurator
 */
export var Cpq;
(function (Cpq) {
    /**
     *
     * An enum representing possible displayAs value.
     */
    let DisplayAs;
    (function (DisplayAs) {
        DisplayAs[DisplayAs["RADIO_BUTTON"] = 1] = "RADIO_BUTTON";
        DisplayAs[DisplayAs["CHECK_BOX"] = 2] = "CHECK_BOX";
        DisplayAs[DisplayAs["DROPDOWN"] = 3] = "DROPDOWN";
        DisplayAs[DisplayAs["LIST_BOX"] = 4] = "LIST_BOX";
        DisplayAs[DisplayAs["LIST_BOX_MULTI"] = 5] = "LIST_BOX_MULTI";
        DisplayAs[DisplayAs["READ_ONLY"] = 71] = "READ_ONLY";
        DisplayAs[DisplayAs["INPUT"] = 95] = "INPUT";
        DisplayAs[DisplayAs["AUTO_COMPLETE_CUSTOM"] = 102] = "AUTO_COMPLETE_CUSTOM";
    })(DisplayAs = Cpq.DisplayAs || (Cpq.DisplayAs = {}));
    let DataType;
    (function (DataType) {
        DataType["INPUT_STRING"] = "String";
        DataType["INPUT_NUMBER"] = "Number";
        DataType["QTY_ATTRIBUTE_LEVEL"] = "Quantity";
        DataType["QTY_VALUE_LEVEL"] = "Attr.Quantity";
        DataType["N_A"] = "N/A";
    })(DataType = Cpq.DataType || (Cpq.DataType = {}));
})(Cpq || (Cpq = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3BxLm1vZGVscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9wcm9kdWN0LWNvbmZpZ3VyYXRvci9ydWxlYmFzZWQvY3BxL3Jlc3QvY3BxLm1vZGVscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBRUg7OztHQUdHO0FBQ0gsTUFBTSxLQUFXLEdBQUcsQ0FpSm5CO0FBakpELFdBQWlCLEdBQUc7SUEySGxCOzs7T0FHRztJQUNILElBQVksU0FTWDtJQVRELFdBQVksU0FBUztRQUNuQix5REFBZ0IsQ0FBQTtRQUNoQixtREFBYSxDQUFBO1FBQ2IsaURBQVksQ0FBQTtRQUNaLGlEQUFZLENBQUE7UUFDWiw2REFBa0IsQ0FBQTtRQUNsQixvREFBYyxDQUFBO1FBQ2QsNENBQVUsQ0FBQTtRQUNWLDJFQUEwQixDQUFBO0lBQzVCLENBQUMsRUFUVyxTQUFTLEdBQVQsYUFBUyxLQUFULGFBQVMsUUFTcEI7SUFFRCxJQUFZLFFBTVg7SUFORCxXQUFZLFFBQVE7UUFDbEIsbUNBQXVCLENBQUE7UUFDdkIsbUNBQXVCLENBQUE7UUFDdkIsNENBQWdDLENBQUE7UUFDaEMsNkNBQWlDLENBQUE7UUFDakMsdUJBQVcsQ0FBQTtJQUNiLENBQUMsRUFOVyxRQUFRLEdBQVIsWUFBUSxLQUFSLFlBQVEsUUFNbkI7QUFDSCxDQUFDLEVBakpnQixHQUFHLEtBQUgsR0FBRyxRQWlKbkIiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogU1BEWC1GaWxlQ29weXJpZ2h0VGV4dDogMjAyMiBTQVAgU3BhcnRhY3VzIHRlYW0gPHNwYXJ0YWN1cy10ZWFtQHNhcC5jb20+XG4gKlxuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjBcbiAqL1xuXG4vKipcbiAqXG4gKiBBbiBpbnRlcmZhY2UgcmVwcmVzZW50aW5nIHRoZSBtb2RlbHMgdXNlZCBmb3IgdGhlIGNvbW11bmljYXRpb24gd2l0aCB0aGUgQ1BRIGNvbmZpZ3VyYXRvclxuICovXG5leHBvcnQgbmFtZXNwYWNlIENwcSB7XG4gIC8qKlxuICAgKiBSZXNwb25zZSBvZiBjcmVhdGUgY29uZmlndXJhdGlvbiByZXF1ZXN0c1xuICAgKi9cbiAgZXhwb3J0IGludGVyZmFjZSBDb25maWd1cmF0aW9uQ3JlYXRlZFJlc3BvbnNlRGF0YSB7XG4gICAgLyoqXG4gICAgICogQ1BRIGNvbmZpZ3VyYXRpb24gSUQgb2YgdGhlIG5ld2x5IGNyZWF0ZWQgY29uZmlndXJhdGlvblxuICAgICAqL1xuICAgIGNvbmZpZ3VyYXRpb25JZDogc3RyaW5nO1xuICB9XG5cbiAgLyoqXG4gICAqIEFuIGludGVyZmFjZSByZXByZXNlbnRpbmcgdGhlIENQUSBjb25maWd1cmF0aW9uLlxuICAgKi9cbiAgZXhwb3J0IGludGVyZmFjZSBDb25maWd1cmF0aW9uIHtcbiAgICBwcm9kdWN0U3lzdGVtSWQ6IHN0cmluZztcbiAgICBwcm9kdWN0TmFtZT86IHN0cmluZztcbiAgICBjb21wbGV0ZWQ/OiBib29sZWFuO1xuICAgIGluY29tcGxldGVNZXNzYWdlcz86IHN0cmluZ1tdO1xuICAgIGluY29tcGxldGVBdHRyaWJ1dGVzPzogc3RyaW5nW107XG4gICAgaW52YWxpZE1lc3NhZ2VzPzogc3RyaW5nW107XG4gICAgZmFpbGVkVmFsaWRhdGlvbnM/OiBzdHJpbmdbXTtcbiAgICBlcnJvck1lc3NhZ2VzPzogc3RyaW5nW107XG4gICAgY29uZmxpY3RNZXNzYWdlcz86IHN0cmluZ1tdO1xuICAgIG51bWJlck9mQ29uZmxpY3RzPzogbnVtYmVyO1xuICAgIGN1cnJlbmN5SVNPQ29kZTogc3RyaW5nO1xuICAgIGN1cnJlbmN5U2lnbj86IHN0cmluZztcbiAgICByZXNwb25kZXI/OiBDcHEuUmVzcG9uZGVyO1xuICAgIHRhYnM/OiBUYWJbXTtcbiAgICBhdHRyaWJ1dGVzPzogQXR0cmlidXRlW107IC8vIGF0dHJpYnV0ZXMgb2YgY3VycmVudCBzZWxlY3RlZCB0YWJcbiAgfVxuXG4gIC8qKlxuICAgKlxuICAgKiBBbiBpbnRlcmZhY2UgcmVwcmVzZW50aW5nIHRoZSBDUFEgY29uZmlndXJhdGlvbiByZXNwb25kZXIuXG4gICAqL1xuICBleHBvcnQgaW50ZXJmYWNlIFJlc3BvbmRlciB7XG4gICAgdG90YWxQcmljZT86IHN0cmluZztcbiAgICBiYXNlUHJvZHVjdFByaWNlPzogc3RyaW5nO1xuICB9XG5cbiAgLyoqXG4gICAqXG4gICAqIEFuIGludGVyZmFjZSByZXByZXNlbnRpbmcgdGhlIENQUSBjb25maWd1cmF0aW9uIHRhYi5cbiAgICovXG4gIGV4cG9ydCBpbnRlcmZhY2UgVGFiIHtcbiAgICBpZDogbnVtYmVyO1xuICAgIG5hbWU/OiBzdHJpbmc7XG4gICAgZGlzcGxheU5hbWU/OiBzdHJpbmc7XG4gICAgaXNJbmNvbXBsZXRlPzogYm9vbGVhbjtcbiAgICBpc1NlbGVjdGVkPzogYm9vbGVhbjtcbiAgICBhdHRyaWJ1dGVzPzogQXR0cmlidXRlW107IC8vIHVzZWQgZm9yIG92ZXJ2aWV3IC0gaGFzIHRvIGJlIHBvcHVsYXRlZCBleHBsaWNpdGx5XG4gIH1cblxuICAvKipcbiAgICpcbiAgICogQW4gaW50ZXJmYWNlIHJlcHJlc2VudGluZyB0aGUgQ1BRIGNvbmZpZ3VyYXRpb24gYXR0cmlidXRlLlxuICAgKi9cbiAgZXhwb3J0IGludGVyZmFjZSBBdHRyaWJ1dGUge1xuICAgIHBBX0lEOiBudW1iZXI7XG4gICAgc3RkQXR0ckNvZGU6IG51bWJlcjtcbiAgICBuYW1lPzogc3RyaW5nO1xuICAgIGRlc2NyaXB0aW9uPzogc3RyaW5nO1xuICAgIGxhYmVsPzogc3RyaW5nO1xuICAgIGRpc3BsYXlBcz86IG51bWJlcjtcbiAgICBkYXRhVHlwZT86IENwcS5EYXRhVHlwZTtcbiAgICByZXF1aXJlZD86IGJvb2xlYW47XG4gICAgaW5jb21wbGV0ZT86IGJvb2xlYW47XG4gICAgaXNFbmFibGVkPzogYm9vbGVhbjtcbiAgICBpc0xpbmVJdGVtPzogYm9vbGVhbjtcbiAgICBoYXNDb25mbGljdD86IGJvb2xlYW47XG4gICAgdXNlcklucHV0Pzogc3RyaW5nO1xuICAgIHF1YW50aXR5Pzogc3RyaW5nO1xuICAgIHZhbHVlcz86IFZhbHVlW107XG4gIH1cblxuICAvKipcbiAgICpcbiAgICogQW4gaW50ZXJmYWNlIHJlcHJlc2VudGluZyB0aGUgQ1BRIGNvbmZpZ3VyYXRpb24gYXR0cmlidXRlIHZhbHVlLlxuICAgKi9cbiAgZXhwb3J0IGludGVyZmFjZSBWYWx1ZSB7XG4gICAgcGFWX0lEOiBudW1iZXI7XG4gICAgdmFsdWVDb2RlPzogc3RyaW5nO1xuICAgIHZhbHVlRGlzcGxheT86IHN0cmluZztcbiAgICBkZXNjcmlwdGlvbj86IHN0cmluZztcbiAgICBwcm9kdWN0U3lzdGVtSWQ/OiBzdHJpbmc7XG4gICAgc2VsZWN0ZWQ/OiBib29sZWFuO1xuICAgIHByaWNlPzogc3RyaW5nO1xuICAgIHF1YW50aXR5Pzogc3RyaW5nO1xuICB9XG5cbiAgLyoqXG4gICAqXG4gICAqIEFuIGludGVyZmFjZSByZXByZXNlbnRpbmcgdGhlIHN0cnVjdHVyZSBmb3IgdXBkYXRlIG9mIENQUSBjb25maWd1cmF0aW9uIGF0dHJpYnV0ZS5cbiAgICovXG4gIGV4cG9ydCBpbnRlcmZhY2UgVXBkYXRlQXR0cmlidXRlIHtcbiAgICBjb25maWd1cmF0aW9uSWQ6IHN0cmluZztcbiAgICBzdGFuZGFyZEF0dHJpYnV0ZUNvZGU6IHN0cmluZztcbiAgICBjaGFuZ2VBdHRyaWJ1dGVWYWx1ZTogQ2hhbmdlQXR0cmlidXRlVmFsdWU7XG4gICAgdGFiSWQ6IHN0cmluZztcbiAgfVxuXG4gIC8qKlxuICAgKlxuICAgKiBBbiBpbnRlcmZhY2UgcmVwcmVzZW50aW5nIHRoZSB1cGRhdGUgcmVxdWVzdCBib2R5IHN0cnVjdHVyZSBmb3IgdXBkYXRlIG9mIENQUSBjb25maWd1cmF0aW9uIGF0dHJpYnV0ZS5cbiAgICovXG4gIGV4cG9ydCBpbnRlcmZhY2UgQ2hhbmdlQXR0cmlidXRlVmFsdWUge1xuICAgIGF0dHJpYnV0ZVZhbHVlSWRzPzogc3RyaW5nO1xuICAgIHVzZXJJbnB1dD86IHN0cmluZztcbiAgICBxdWFudGl0eT86IG51bWJlcjtcbiAgfVxuICAvKipcbiAgICpcbiAgICogQW4gaW50ZXJmYWNlIHJlcHJlc2VudGluZyB0aGUgc3RydWN0dXJlIGZvciB1cGRhdGUgcXVhbnRpdHkgb2YgQ1BRIGNvbmZpZ3VyYXRpb24gYXR0cmlidXRlIHZhbHVlLlxuICAgKi9cbiAgZXhwb3J0IGludGVyZmFjZSBVcGRhdGVWYWx1ZSB7XG4gICAgY29uZmlndXJhdGlvbklkOiBzdHJpbmc7XG4gICAgc3RhbmRhcmRBdHRyaWJ1dGVDb2RlOiBzdHJpbmc7XG4gICAgYXR0cmlidXRlVmFsdWVJZDogc3RyaW5nO1xuICAgIHF1YW50aXR5OiBudW1iZXI7XG4gICAgdGFiSWQ6IHN0cmluZztcbiAgfVxuXG4gIC8qKlxuICAgKlxuICAgKiBBbiBlbnVtIHJlcHJlc2VudGluZyBwb3NzaWJsZSBkaXNwbGF5QXMgdmFsdWUuXG4gICAqL1xuICBleHBvcnQgZW51bSBEaXNwbGF5QXMge1xuICAgIFJBRElPX0JVVFRPTiA9IDEsXG4gICAgQ0hFQ0tfQk9YID0gMixcbiAgICBEUk9QRE9XTiA9IDMsXG4gICAgTElTVF9CT1ggPSA0LFxuICAgIExJU1RfQk9YX01VTFRJID0gNSxcbiAgICBSRUFEX09OTFkgPSA3MSxcbiAgICBJTlBVVCA9IDk1LFxuICAgIEFVVE9fQ09NUExFVEVfQ1VTVE9NID0gMTAyLFxuICB9XG5cbiAgZXhwb3J0IGVudW0gRGF0YVR5cGUge1xuICAgIElOUFVUX1NUUklORyA9ICdTdHJpbmcnLFxuICAgIElOUFVUX05VTUJFUiA9ICdOdW1iZXInLFxuICAgIFFUWV9BVFRSSUJVVEVfTEVWRUwgPSAnUXVhbnRpdHknLFxuICAgIFFUWV9WQUxVRV9MRVZFTCA9ICdBdHRyLlF1YW50aXR5JyxcbiAgICBOX0EgPSAnTi9BJyxcbiAgfVxufVxuIl19