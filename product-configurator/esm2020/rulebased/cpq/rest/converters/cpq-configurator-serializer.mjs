/*
 * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { Injectable } from '@angular/core';
import { Configurator } from '@spartacus/product-configurator/rulebased';
import { CpqConfiguratorUtils } from './../cpq-configurator-utils';
import * as i0 from "@angular/core";
const VALUE_SEPARATOR = ',';
export class CpqConfiguratorSerializer {
    convert(source) {
        const attribute = CpqConfiguratorUtils.findFirstChangedAttribute(source);
        let updateAttribute;
        if (source.updateType === Configurator.UpdateType.ATTRIBUTE_QUANTITY) {
            updateAttribute = this.convertQuantity(attribute, source.configId);
        }
        else {
            updateAttribute = this.convertAttribute(attribute, source.configId);
        }
        return updateAttribute;
    }
    convertQuantity(attribute, configId) {
        const updateInformation = CpqConfiguratorUtils.getUpdateInformation(attribute);
        const updateAttribute = {
            configurationId: configId,
            standardAttributeCode: updateInformation.standardAttributeCode,
            changeAttributeValue: { quantity: attribute.quantity },
            tabId: updateInformation.tabId,
        };
        return updateAttribute;
    }
    convertAttribute(attribute, configurationId) {
        const updateInformation = CpqConfiguratorUtils.getUpdateInformation(attribute);
        const updateAttribute = {
            configurationId: configurationId,
            standardAttributeCode: updateInformation.standardAttributeCode,
            changeAttributeValue: {},
            tabId: updateInformation.tabId,
        };
        if (attribute.uiType === Configurator.UiType.DROPDOWN ||
            attribute.uiType === Configurator.UiType.DROPDOWN_PRODUCT ||
            attribute.uiType === Configurator.UiType.RADIOBUTTON ||
            attribute.uiType === Configurator.UiType.RADIOBUTTON_PRODUCT ||
            attribute.uiType === Configurator.UiType.SINGLE_SELECTION_IMAGE) {
            updateAttribute.changeAttributeValue.attributeValueIds =
                this.processSelectedSingleValue(attribute.selectedSingleValue);
        }
        else if (attribute.uiType === Configurator.UiType.CHECKBOXLIST ||
            attribute.uiType === Configurator.UiType.CHECKBOXLIST_PRODUCT ||
            attribute.uiType === Configurator.UiType.CHECKBOX ||
            attribute.uiType === Configurator.UiType.MULTI_SELECTION_IMAGE) {
            updateAttribute.changeAttributeValue.attributeValueIds =
                this.prepareValueIds(attribute);
        }
        else if (attribute.uiType === Configurator.UiType.STRING ||
            attribute.uiType === Configurator.UiType.NUMERIC) {
            updateAttribute.changeAttributeValue.userInput = attribute.userInput;
            if (!updateAttribute.changeAttributeValue?.userInput) {
                updateAttribute.changeAttributeValue.userInput = ' ';
            }
        }
        return updateAttribute;
    }
    processSelectedSingleValue(singleValue) {
        let processedValue = singleValue;
        if (!processedValue) {
            // Is required to remove the value
            processedValue = VALUE_SEPARATOR;
        }
        return processedValue;
    }
    prepareValueIds(attribute) {
        let valueIds = '';
        const selectedValues = attribute.values?.filter((value) => value.selected);
        if (selectedValues && selectedValues.length > 0) {
            selectedValues.forEach((value) => {
                valueIds += value.valueCode + VALUE_SEPARATOR;
            });
        }
        else {
            // Is required to remove the value
            valueIds = VALUE_SEPARATOR;
        }
        return valueIds;
    }
}
CpqConfiguratorSerializer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: CpqConfiguratorSerializer, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
CpqConfiguratorSerializer.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: CpqConfiguratorSerializer });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: CpqConfiguratorSerializer, decorators: [{
            type: Injectable
        }] });
//# sourceMappingURL=data:application/json;base64,