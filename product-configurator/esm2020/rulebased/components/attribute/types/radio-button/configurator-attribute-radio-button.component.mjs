/*
 * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { UntypedFormControl } from '@angular/forms';
import { ConfiguratorAttributeSingleSelectionBaseComponent } from '../base/configurator-attribute-single-selection-base.component';
import * as i0 from "@angular/core";
import * as i1 from "../../quantity/configurator-attribute-quantity.service";
import * as i2 from "@spartacus/core";
import * as i3 from "@angular/common";
import * as i4 from "../../quantity/configurator-attribute-quantity.component";
import * as i5 from "@angular/forms";
import * as i6 from "@spartacus/storefront";
import * as i7 from "../../../price/configurator-price.component";
import * as i8 from "../numeric-input-field/configurator-attribute-numeric-input-field.component";
import * as i9 from "../input-field/configurator-attribute-input-field.component";
export class ConfiguratorAttributeRadioButtonComponent extends ConfiguratorAttributeSingleSelectionBaseComponent {
    constructor(quantityService, translation) {
        super(quantityService, translation);
        this.quantityService = quantityService;
        this.translation = translation;
        this.attributeRadioButtonForm = new UntypedFormControl('');
    }
    ngOnInit() {
        this.attributeRadioButtonForm.setValue(this.attribute.selectedSingleValue);
    }
}
ConfiguratorAttributeRadioButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: ConfiguratorAttributeRadioButtonComponent, deps: [{ token: i1.ConfiguratorAttributeQuantityService }, { token: i2.TranslationService }], target: i0.ɵɵFactoryTarget.Component });
ConfiguratorAttributeRadioButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.3", type: ConfiguratorAttributeRadioButtonComponent, selector: "cx-configurator-attribute-radio-button", usesInheritance: true, ngImport: i0, template: "<fieldset>\n  <legend style=\"display: none\">{{ attribute.label }}</legend>\n  <div id=\"{{ createAttributeIdForConfigurator(attribute) }}\">\n    <div *ngIf=\"withQuantity\" class=\"cx-attribute-level-quantity-price\">\n      <cx-configurator-attribute-quantity\n        (changeQuantity)=\"onChangeQuantity($event)\"\n        [quantityOptions]=\"extractQuantityParameters()\"\n      ></cx-configurator-attribute-quantity>\n      <cx-configurator-price\n        [formula]=\"extractPriceFormulaParameters()\"\n      ></cx-configurator-price>\n    </div>\n\n    <div class=\"form-check\" *ngFor=\"let value of attribute.values\">\n      <div class=\"cx-value-label-pair\">\n        <input\n          id=\"{{\n            createAttributeValueIdForConfigurator(attribute, value.valueCode)\n          }}\"\n          class=\"form-check-input\"\n          type=\"radio\"\n          formcontrolname=\"attributeRadioButtonForm\"\n          [formControl]=\"attributeRadioButtonForm\"\n          [attr.required]=\"attribute.required\"\n          [value]=\"value.valueCode\"\n          name=\"{{ createAttributeIdForConfigurator(attribute) }}\"\n          attr.name=\"{{ createAttributeIdForConfigurator(attribute) }}\"\n          [cxFocus]=\"{ key: attribute.name + '-' + value.name }\"\n          [attr.aria-label]=\"getAriaLabel(value, attribute)\"\n          [attr.checked]=\"\n            attributeRadioButtonForm.value === value.valueCode\n              ? 'checked'\n              : null\n          \"\n          [attr.aria-describedby]=\"\n            createAttributeUiKey('label', attribute.name)\n          \"\n          (change)=\"onSelect(value.valueCode)\"\n        />\n        <label\n          id=\"{{ createValueUiKey('label', attribute.name, value.valueCode) }}\"\n          for=\"{{\n            createAttributeValueIdForConfigurator(attribute, value.valueCode)\n          }}\"\n          aria-hidden=\"true\"\n          class=\"form-check-label form-radio-label\"\n          >{{ value.valueDisplay }}</label\n        >\n      </div>\n\n      <div class=\"cx-value-price\">\n        <cx-configurator-price\n          [formula]=\"extractValuePriceFormulaParameters(value)\"\n        ></cx-configurator-price>\n      </div>\n    </div>\n\n    <cx-configurator-attribute-numeric-input-field\n      *ngIf=\"isAdditionalValueNumeric\"\n      class=\"cx-configurator-attribute-additional-value\"\n      [attribute]=\"attribute\"\n      [ownerType]=\"ownerType\"\n      [ownerKey]=\"ownerKey\"\n      [language]=\"language\"\n      (inputChange)=\"onSelectAdditionalValue($event)\"\n    ></cx-configurator-attribute-numeric-input-field>\n\n    <cx-configurator-attribute-input-field\n      *ngIf=\"isAdditionalValueAlphaNumeric\"\n      class=\"cx-configurator-attribute-additional-value\"\n      [attribute]=\"attribute\"\n      [ownerType]=\"ownerType\"\n      [ownerKey]=\"ownerKey\"\n      (inputChange)=\"onSelectAdditionalValue($event)\"\n    >\n    </cx-configurator-attribute-input-field>\n  </div>\n</fieldset>\n", dependencies: [{ kind: "directive", type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i4.ConfiguratorAttributeQuantityComponent, selector: "cx-configurator-attribute-quantity", inputs: ["quantityOptions"], outputs: ["changeQuantity"] }, { kind: "directive", type: i5.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i5.RadioControlValueAccessor, selector: "input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]", inputs: ["name", "formControlName", "value"] }, { kind: "directive", type: i5.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i5.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { kind: "directive", type: i6.FocusDirective, selector: "[cxFocus]", inputs: ["cxFocus"] }, { kind: "directive", type: i5.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "component", type: i7.ConfiguratorPriceComponent, selector: "cx-configurator-price", inputs: ["formula"] }, { kind: "component", type: i8.ConfiguratorAttributeNumericInputFieldComponent, selector: "cx-configurator-attribute-numeric-input-field", inputs: ["language"] }, { kind: "component", type: i9.ConfiguratorAttributeInputFieldComponent, selector: "cx-configurator-attribute-input-field", inputs: ["ownerType", "attribute", "group", "ownerKey"], outputs: ["inputChange"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: ConfiguratorAttributeRadioButtonComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-configurator-attribute-radio-button', changeDetection: ChangeDetectionStrategy.OnPush, template: "<fieldset>\n  <legend style=\"display: none\">{{ attribute.label }}</legend>\n  <div id=\"{{ createAttributeIdForConfigurator(attribute) }}\">\n    <div *ngIf=\"withQuantity\" class=\"cx-attribute-level-quantity-price\">\n      <cx-configurator-attribute-quantity\n        (changeQuantity)=\"onChangeQuantity($event)\"\n        [quantityOptions]=\"extractQuantityParameters()\"\n      ></cx-configurator-attribute-quantity>\n      <cx-configurator-price\n        [formula]=\"extractPriceFormulaParameters()\"\n      ></cx-configurator-price>\n    </div>\n\n    <div class=\"form-check\" *ngFor=\"let value of attribute.values\">\n      <div class=\"cx-value-label-pair\">\n        <input\n          id=\"{{\n            createAttributeValueIdForConfigurator(attribute, value.valueCode)\n          }}\"\n          class=\"form-check-input\"\n          type=\"radio\"\n          formcontrolname=\"attributeRadioButtonForm\"\n          [formControl]=\"attributeRadioButtonForm\"\n          [attr.required]=\"attribute.required\"\n          [value]=\"value.valueCode\"\n          name=\"{{ createAttributeIdForConfigurator(attribute) }}\"\n          attr.name=\"{{ createAttributeIdForConfigurator(attribute) }}\"\n          [cxFocus]=\"{ key: attribute.name + '-' + value.name }\"\n          [attr.aria-label]=\"getAriaLabel(value, attribute)\"\n          [attr.checked]=\"\n            attributeRadioButtonForm.value === value.valueCode\n              ? 'checked'\n              : null\n          \"\n          [attr.aria-describedby]=\"\n            createAttributeUiKey('label', attribute.name)\n          \"\n          (change)=\"onSelect(value.valueCode)\"\n        />\n        <label\n          id=\"{{ createValueUiKey('label', attribute.name, value.valueCode) }}\"\n          for=\"{{\n            createAttributeValueIdForConfigurator(attribute, value.valueCode)\n          }}\"\n          aria-hidden=\"true\"\n          class=\"form-check-label form-radio-label\"\n          >{{ value.valueDisplay }}</label\n        >\n      </div>\n\n      <div class=\"cx-value-price\">\n        <cx-configurator-price\n          [formula]=\"extractValuePriceFormulaParameters(value)\"\n        ></cx-configurator-price>\n      </div>\n    </div>\n\n    <cx-configurator-attribute-numeric-input-field\n      *ngIf=\"isAdditionalValueNumeric\"\n      class=\"cx-configurator-attribute-additional-value\"\n      [attribute]=\"attribute\"\n      [ownerType]=\"ownerType\"\n      [ownerKey]=\"ownerKey\"\n      [language]=\"language\"\n      (inputChange)=\"onSelectAdditionalValue($event)\"\n    ></cx-configurator-attribute-numeric-input-field>\n\n    <cx-configurator-attribute-input-field\n      *ngIf=\"isAdditionalValueAlphaNumeric\"\n      class=\"cx-configurator-attribute-additional-value\"\n      [attribute]=\"attribute\"\n      [ownerType]=\"ownerType\"\n      [ownerKey]=\"ownerKey\"\n      (inputChange)=\"onSelectAdditionalValue($event)\"\n    >\n    </cx-configurator-attribute-input-field>\n  </div>\n</fieldset>\n" }]
        }], ctorParameters: function () { return [{ type: i1.ConfiguratorAttributeQuantityService }, { type: i2.TranslationService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlndXJhdG9yLWF0dHJpYnV0ZS1yYWRpby1idXR0b24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL3Byb2R1Y3QtY29uZmlndXJhdG9yL3J1bGViYXNlZC9jb21wb25lbnRzL2F0dHJpYnV0ZS90eXBlcy9yYWRpby1idXR0b24vY29uZmlndXJhdG9yLWF0dHJpYnV0ZS1yYWRpby1idXR0b24uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL3Byb2R1Y3QtY29uZmlndXJhdG9yL3J1bGViYXNlZC9jb21wb25lbnRzL2F0dHJpYnV0ZS90eXBlcy9yYWRpby1idXR0b24vY29uZmlndXJhdG9yLWF0dHJpYnV0ZS1yYWRpby1idXR0b24uY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUVILE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDM0UsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFJcEQsT0FBTyxFQUFFLGlEQUFpRCxFQUFFLE1BQU0sZ0VBQWdFLENBQUM7Ozs7Ozs7Ozs7O0FBT25JLE1BQU0sT0FBTyx5Q0FDWCxTQUFRLGlEQUFpRDtJQUt6RCxZQUNZLGVBQXFELEVBQ3JELFdBQStCO1FBRXpDLEtBQUssQ0FBQyxlQUFlLEVBQUUsV0FBVyxDQUFDLENBQUM7UUFIMUIsb0JBQWUsR0FBZixlQUFlLENBQXNDO1FBQ3JELGdCQUFXLEdBQVgsV0FBVyxDQUFvQjtRQUozQyw2QkFBd0IsR0FBRyxJQUFJLGtCQUFrQixDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBT3RELENBQUM7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLHdCQUF3QixDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLG1CQUFtQixDQUFDLENBQUM7SUFDN0UsQ0FBQzs7c0lBZlUseUNBQXlDOzBIQUF6Qyx5Q0FBeUMscUdDbEJ0RCwrOEZBOEVBOzJGRDVEYSx5Q0FBeUM7a0JBTHJELFNBQVM7K0JBQ0Usd0NBQXdDLG1CQUVqQyx1QkFBdUIsQ0FBQyxNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIFNQRFgtRmlsZUNvcHlyaWdodFRleHQ6IDIwMjIgU0FQIFNwYXJ0YWN1cyB0ZWFtIDxzcGFydGFjdXMtdGVhbUBzYXAuY29tPlxuICpcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXG4gKi9cblxuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBVbnR5cGVkRm9ybUNvbnRyb2wgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBUcmFuc2xhdGlvblNlcnZpY2UgfSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xuXG5pbXBvcnQgeyBDb25maWd1cmF0b3JBdHRyaWJ1dGVRdWFudGl0eVNlcnZpY2UgfSBmcm9tICcuLi8uLi9xdWFudGl0eS9jb25maWd1cmF0b3ItYXR0cmlidXRlLXF1YW50aXR5LnNlcnZpY2UnO1xuaW1wb3J0IHsgQ29uZmlndXJhdG9yQXR0cmlidXRlU2luZ2xlU2VsZWN0aW9uQmFzZUNvbXBvbmVudCB9IGZyb20gJy4uL2Jhc2UvY29uZmlndXJhdG9yLWF0dHJpYnV0ZS1zaW5nbGUtc2VsZWN0aW9uLWJhc2UuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY3gtY29uZmlndXJhdG9yLWF0dHJpYnV0ZS1yYWRpby1idXR0b24nLFxuICB0ZW1wbGF0ZVVybDogJy4vY29uZmlndXJhdG9yLWF0dHJpYnV0ZS1yYWRpby1idXR0b24uY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgQ29uZmlndXJhdG9yQXR0cmlidXRlUmFkaW9CdXR0b25Db21wb25lbnRcbiAgZXh0ZW5kcyBDb25maWd1cmF0b3JBdHRyaWJ1dGVTaW5nbGVTZWxlY3Rpb25CYXNlQ29tcG9uZW50XG4gIGltcGxlbWVudHMgT25Jbml0XG57XG4gIGF0dHJpYnV0ZVJhZGlvQnV0dG9uRm9ybSA9IG5ldyBVbnR5cGVkRm9ybUNvbnRyb2woJycpO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByb3RlY3RlZCBxdWFudGl0eVNlcnZpY2U6IENvbmZpZ3VyYXRvckF0dHJpYnV0ZVF1YW50aXR5U2VydmljZSxcbiAgICBwcm90ZWN0ZWQgdHJhbnNsYXRpb246IFRyYW5zbGF0aW9uU2VydmljZVxuICApIHtcbiAgICBzdXBlcihxdWFudGl0eVNlcnZpY2UsIHRyYW5zbGF0aW9uKTtcbiAgfVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIHRoaXMuYXR0cmlidXRlUmFkaW9CdXR0b25Gb3JtLnNldFZhbHVlKHRoaXMuYXR0cmlidXRlLnNlbGVjdGVkU2luZ2xlVmFsdWUpO1xuICB9XG59XG4iLCI8ZmllbGRzZXQ+XG4gIDxsZWdlbmQgc3R5bGU9XCJkaXNwbGF5OiBub25lXCI+e3sgYXR0cmlidXRlLmxhYmVsIH19PC9sZWdlbmQ+XG4gIDxkaXYgaWQ9XCJ7eyBjcmVhdGVBdHRyaWJ1dGVJZEZvckNvbmZpZ3VyYXRvcihhdHRyaWJ1dGUpIH19XCI+XG4gICAgPGRpdiAqbmdJZj1cIndpdGhRdWFudGl0eVwiIGNsYXNzPVwiY3gtYXR0cmlidXRlLWxldmVsLXF1YW50aXR5LXByaWNlXCI+XG4gICAgICA8Y3gtY29uZmlndXJhdG9yLWF0dHJpYnV0ZS1xdWFudGl0eVxuICAgICAgICAoY2hhbmdlUXVhbnRpdHkpPVwib25DaGFuZ2VRdWFudGl0eSgkZXZlbnQpXCJcbiAgICAgICAgW3F1YW50aXR5T3B0aW9uc109XCJleHRyYWN0UXVhbnRpdHlQYXJhbWV0ZXJzKClcIlxuICAgICAgPjwvY3gtY29uZmlndXJhdG9yLWF0dHJpYnV0ZS1xdWFudGl0eT5cbiAgICAgIDxjeC1jb25maWd1cmF0b3ItcHJpY2VcbiAgICAgICAgW2Zvcm11bGFdPVwiZXh0cmFjdFByaWNlRm9ybXVsYVBhcmFtZXRlcnMoKVwiXG4gICAgICA+PC9jeC1jb25maWd1cmF0b3ItcHJpY2U+XG4gICAgPC9kaXY+XG5cbiAgICA8ZGl2IGNsYXNzPVwiZm9ybS1jaGVja1wiICpuZ0Zvcj1cImxldCB2YWx1ZSBvZiBhdHRyaWJ1dGUudmFsdWVzXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiY3gtdmFsdWUtbGFiZWwtcGFpclwiPlxuICAgICAgICA8aW5wdXRcbiAgICAgICAgICBpZD1cInt7XG4gICAgICAgICAgICBjcmVhdGVBdHRyaWJ1dGVWYWx1ZUlkRm9yQ29uZmlndXJhdG9yKGF0dHJpYnV0ZSwgdmFsdWUudmFsdWVDb2RlKVxuICAgICAgICAgIH19XCJcbiAgICAgICAgICBjbGFzcz1cImZvcm0tY2hlY2staW5wdXRcIlxuICAgICAgICAgIHR5cGU9XCJyYWRpb1wiXG4gICAgICAgICAgZm9ybWNvbnRyb2xuYW1lPVwiYXR0cmlidXRlUmFkaW9CdXR0b25Gb3JtXCJcbiAgICAgICAgICBbZm9ybUNvbnRyb2xdPVwiYXR0cmlidXRlUmFkaW9CdXR0b25Gb3JtXCJcbiAgICAgICAgICBbYXR0ci5yZXF1aXJlZF09XCJhdHRyaWJ1dGUucmVxdWlyZWRcIlxuICAgICAgICAgIFt2YWx1ZV09XCJ2YWx1ZS52YWx1ZUNvZGVcIlxuICAgICAgICAgIG5hbWU9XCJ7eyBjcmVhdGVBdHRyaWJ1dGVJZEZvckNvbmZpZ3VyYXRvcihhdHRyaWJ1dGUpIH19XCJcbiAgICAgICAgICBhdHRyLm5hbWU9XCJ7eyBjcmVhdGVBdHRyaWJ1dGVJZEZvckNvbmZpZ3VyYXRvcihhdHRyaWJ1dGUpIH19XCJcbiAgICAgICAgICBbY3hGb2N1c109XCJ7IGtleTogYXR0cmlidXRlLm5hbWUgKyAnLScgKyB2YWx1ZS5uYW1lIH1cIlxuICAgICAgICAgIFthdHRyLmFyaWEtbGFiZWxdPVwiZ2V0QXJpYUxhYmVsKHZhbHVlLCBhdHRyaWJ1dGUpXCJcbiAgICAgICAgICBbYXR0ci5jaGVja2VkXT1cIlxuICAgICAgICAgICAgYXR0cmlidXRlUmFkaW9CdXR0b25Gb3JtLnZhbHVlID09PSB2YWx1ZS52YWx1ZUNvZGVcbiAgICAgICAgICAgICAgPyAnY2hlY2tlZCdcbiAgICAgICAgICAgICAgOiBudWxsXG4gICAgICAgICAgXCJcbiAgICAgICAgICBbYXR0ci5hcmlhLWRlc2NyaWJlZGJ5XT1cIlxuICAgICAgICAgICAgY3JlYXRlQXR0cmlidXRlVWlLZXkoJ2xhYmVsJywgYXR0cmlidXRlLm5hbWUpXG4gICAgICAgICAgXCJcbiAgICAgICAgICAoY2hhbmdlKT1cIm9uU2VsZWN0KHZhbHVlLnZhbHVlQ29kZSlcIlxuICAgICAgICAvPlxuICAgICAgICA8bGFiZWxcbiAgICAgICAgICBpZD1cInt7IGNyZWF0ZVZhbHVlVWlLZXkoJ2xhYmVsJywgYXR0cmlidXRlLm5hbWUsIHZhbHVlLnZhbHVlQ29kZSkgfX1cIlxuICAgICAgICAgIGZvcj1cInt7XG4gICAgICAgICAgICBjcmVhdGVBdHRyaWJ1dGVWYWx1ZUlkRm9yQ29uZmlndXJhdG9yKGF0dHJpYnV0ZSwgdmFsdWUudmFsdWVDb2RlKVxuICAgICAgICAgIH19XCJcbiAgICAgICAgICBhcmlhLWhpZGRlbj1cInRydWVcIlxuICAgICAgICAgIGNsYXNzPVwiZm9ybS1jaGVjay1sYWJlbCBmb3JtLXJhZGlvLWxhYmVsXCJcbiAgICAgICAgICA+e3sgdmFsdWUudmFsdWVEaXNwbGF5IH19PC9sYWJlbFxuICAgICAgICA+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdiBjbGFzcz1cImN4LXZhbHVlLXByaWNlXCI+XG4gICAgICAgIDxjeC1jb25maWd1cmF0b3ItcHJpY2VcbiAgICAgICAgICBbZm9ybXVsYV09XCJleHRyYWN0VmFsdWVQcmljZUZvcm11bGFQYXJhbWV0ZXJzKHZhbHVlKVwiXG4gICAgICAgID48L2N4LWNvbmZpZ3VyYXRvci1wcmljZT5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuXG4gICAgPGN4LWNvbmZpZ3VyYXRvci1hdHRyaWJ1dGUtbnVtZXJpYy1pbnB1dC1maWVsZFxuICAgICAgKm5nSWY9XCJpc0FkZGl0aW9uYWxWYWx1ZU51bWVyaWNcIlxuICAgICAgY2xhc3M9XCJjeC1jb25maWd1cmF0b3ItYXR0cmlidXRlLWFkZGl0aW9uYWwtdmFsdWVcIlxuICAgICAgW2F0dHJpYnV0ZV09XCJhdHRyaWJ1dGVcIlxuICAgICAgW293bmVyVHlwZV09XCJvd25lclR5cGVcIlxuICAgICAgW293bmVyS2V5XT1cIm93bmVyS2V5XCJcbiAgICAgIFtsYW5ndWFnZV09XCJsYW5ndWFnZVwiXG4gICAgICAoaW5wdXRDaGFuZ2UpPVwib25TZWxlY3RBZGRpdGlvbmFsVmFsdWUoJGV2ZW50KVwiXG4gICAgPjwvY3gtY29uZmlndXJhdG9yLWF0dHJpYnV0ZS1udW1lcmljLWlucHV0LWZpZWxkPlxuXG4gICAgPGN4LWNvbmZpZ3VyYXRvci1hdHRyaWJ1dGUtaW5wdXQtZmllbGRcbiAgICAgICpuZ0lmPVwiaXNBZGRpdGlvbmFsVmFsdWVBbHBoYU51bWVyaWNcIlxuICAgICAgY2xhc3M9XCJjeC1jb25maWd1cmF0b3ItYXR0cmlidXRlLWFkZGl0aW9uYWwtdmFsdWVcIlxuICAgICAgW2F0dHJpYnV0ZV09XCJhdHRyaWJ1dGVcIlxuICAgICAgW293bmVyVHlwZV09XCJvd25lclR5cGVcIlxuICAgICAgW293bmVyS2V5XT1cIm93bmVyS2V5XCJcbiAgICAgIChpbnB1dENoYW5nZSk9XCJvblNlbGVjdEFkZGl0aW9uYWxWYWx1ZSgkZXZlbnQpXCJcbiAgICA+XG4gICAgPC9jeC1jb25maWd1cmF0b3ItYXR0cmlidXRlLWlucHV0LWZpZWxkPlxuICA8L2Rpdj5cbjwvZmllbGRzZXQ+XG4iXX0=