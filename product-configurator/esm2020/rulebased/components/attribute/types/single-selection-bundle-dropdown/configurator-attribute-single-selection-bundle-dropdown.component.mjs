/*
 * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component, Input, } from '@angular/core';
import { UntypedFormControl } from '@angular/forms';
import { ConfiguratorAttributeSingleSelectionBaseComponent } from '../base/configurator-attribute-single-selection-base.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../../product-card/configurator-attribute-product-card.component";
import * as i3 from "@angular/forms";
import * as i4 from "@spartacus/storefront";
import * as i5 from "../../quantity/configurator-attribute-quantity.component";
import * as i6 from "../../../price/configurator-price.component";
import * as i7 from "@spartacus/core";
export class ConfiguratorAttributeSingleSelectionBundleDropdownComponent extends ConfiguratorAttributeSingleSelectionBaseComponent {
    constructor() {
        super(...arguments);
        this.attributeDropDownForm = new UntypedFormControl('');
    }
    ngOnInit() {
        this.attributeDropDownForm.setValue(this.attribute.selectedSingleValue);
        const values = this.attribute.values;
        if (values && values.length > 0) {
            const selectedValue = values.find((value) => value.selected);
            if (selectedValue) {
                this.selectionValue = selectedValue;
            }
        }
    }
    /**
     * Extract corresponding product card parameters
     *
     * @return {ConfiguratorAttributeProductCardComponentOptions} - New product card options
     */
    extractProductCardParameters() {
        return {
            hideRemoveButton: true,
            productBoundValue: this.selectionValue,
            singleDropdown: true,
            withQuantity: false,
            loading$: this.loading$,
            attributeId: this.getAttributeCode(this.attribute),
            attributeName: this.attribute.name,
            itemCount: 0,
            itemIndex: 0,
        };
    }
}
ConfiguratorAttributeSingleSelectionBundleDropdownComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: ConfiguratorAttributeSingleSelectionBundleDropdownComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
ConfiguratorAttributeSingleSelectionBundleDropdownComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.3", type: ConfiguratorAttributeSingleSelectionBundleDropdownComponent, selector: "cx-configurator-attribute-single-selection-bundle-dropdown", inputs: { group: "group" }, usesInheritance: true, ngImport: i0, template: "<div class=\"form-group\" *ngIf=\"attribute?.values?.length\">\n  <label\n    for=\"{{ createAttributeIdForConfigurator(attribute) }}\"\n    class=\"cx-visually-hidden\"\n  >\n    {{\n      'configurator.a11y.listbox'\n        | cxTranslate\n          : {\n              count: attribute.values?.length\n            }\n    }}\n  </label>\n  <select\n    id=\"{{ createAttributeIdForConfigurator(attribute) }}\"\n    class=\"form-control\"\n    [formControl]=\"attributeDropDownForm\"\n    [cxFocus]=\"{ key: attribute.name }\"\n    (change)=\"onSelect(attributeDropDownForm.value)\"\n    [attr.aria-describedby]=\"createAttributeUiKey('label', attribute.name)\"\n  >\n    <option\n      *ngFor=\"let item of attribute.values\"\n      [label]=\"item.valueDisplay\"\n      [selected]=\"item.selected\"\n      [value]=\"item.valueCode\"\n      [attr.aria-label]=\"\n        item.valueCode === '0'\n          ? ('configurator.a11y.forAttribute'\n            | cxTranslate\n              : { value: item.valueDisplay, attribute: attribute.label })\n          : item.valuePrice && item.valuePrice?.value !== 0\n          ? ('configurator.a11y.selectedValueOfAttributeFullWithPrice'\n            | cxTranslate\n              : {\n                  value: item.valueDisplay,\n                  attribute: attribute.label,\n                  price: item.valuePriceTotal.formattedValue\n                })\n          : ('configurator.a11y.selectedValueOfAttributeFull'\n            | cxTranslate\n              : { value: item.valueDisplay, attribute: attribute.label })\n      \"\n      [value]=\"item.valueCode\"\n    >\n      {{ item.valueDisplay }}\n    </option>\n  </select>\n</div>\n\n<cx-configurator-attribute-product-card\n  *ngIf=\"selectionValue?.valueCode !== '0'\"\n  id=\"{{\n    createAttributeValueIdForConfigurator(attribute, selectionValue.valueCode)\n  }}\"\n  (handleDeselect)=\"onSelect('0')\"\n  [productCardOptions]=\"extractProductCardParameters()\"\n>\n</cx-configurator-attribute-product-card>\n\n<div *ngIf=\"withQuantity\" class=\"cx-attribute-level-quantity-price\">\n  <cx-configurator-attribute-quantity\n    (changeQuantity)=\"onChangeQuantity($event, attributeDropDownForm)\"\n    [quantityOptions]=\"extractQuantityParameters(attributeDropDownForm)\"\n  ></cx-configurator-attribute-quantity>\n  <cx-configurator-price\n    [formula]=\"extractPriceFormulaParameters()\"\n  ></cx-configurator-price>\n</div>\n", dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i2.ConfiguratorAttributeProductCardComponent, selector: "cx-configurator-attribute-product-card", inputs: ["productCardOptions"], outputs: ["handleDeselect", "handleQuantity", "handleSelect"] }, { kind: "directive", type: i3.NgSelectOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i3.ɵNgSelectMultipleOption, selector: "option", inputs: ["ngValue", "value"] }, { kind: "directive", type: i3.SelectControlValueAccessor, selector: "select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]", inputs: ["compareWith"] }, { kind: "directive", type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i4.FocusDirective, selector: "[cxFocus]", inputs: ["cxFocus"] }, { kind: "directive", type: i3.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "component", type: i5.ConfiguratorAttributeQuantityComponent, selector: "cx-configurator-attribute-quantity", inputs: ["quantityOptions"], outputs: ["changeQuantity"] }, { kind: "component", type: i6.ConfiguratorPriceComponent, selector: "cx-configurator-price", inputs: ["formula"] }, { kind: "pipe", type: i7.TranslatePipe, name: "cxTranslate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: ConfiguratorAttributeSingleSelectionBundleDropdownComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-configurator-attribute-single-selection-bundle-dropdown', changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"form-group\" *ngIf=\"attribute?.values?.length\">\n  <label\n    for=\"{{ createAttributeIdForConfigurator(attribute) }}\"\n    class=\"cx-visually-hidden\"\n  >\n    {{\n      'configurator.a11y.listbox'\n        | cxTranslate\n          : {\n              count: attribute.values?.length\n            }\n    }}\n  </label>\n  <select\n    id=\"{{ createAttributeIdForConfigurator(attribute) }}\"\n    class=\"form-control\"\n    [formControl]=\"attributeDropDownForm\"\n    [cxFocus]=\"{ key: attribute.name }\"\n    (change)=\"onSelect(attributeDropDownForm.value)\"\n    [attr.aria-describedby]=\"createAttributeUiKey('label', attribute.name)\"\n  >\n    <option\n      *ngFor=\"let item of attribute.values\"\n      [label]=\"item.valueDisplay\"\n      [selected]=\"item.selected\"\n      [value]=\"item.valueCode\"\n      [attr.aria-label]=\"\n        item.valueCode === '0'\n          ? ('configurator.a11y.forAttribute'\n            | cxTranslate\n              : { value: item.valueDisplay, attribute: attribute.label })\n          : item.valuePrice && item.valuePrice?.value !== 0\n          ? ('configurator.a11y.selectedValueOfAttributeFullWithPrice'\n            | cxTranslate\n              : {\n                  value: item.valueDisplay,\n                  attribute: attribute.label,\n                  price: item.valuePriceTotal.formattedValue\n                })\n          : ('configurator.a11y.selectedValueOfAttributeFull'\n            | cxTranslate\n              : { value: item.valueDisplay, attribute: attribute.label })\n      \"\n      [value]=\"item.valueCode\"\n    >\n      {{ item.valueDisplay }}\n    </option>\n  </select>\n</div>\n\n<cx-configurator-attribute-product-card\n  *ngIf=\"selectionValue?.valueCode !== '0'\"\n  id=\"{{\n    createAttributeValueIdForConfigurator(attribute, selectionValue.valueCode)\n  }}\"\n  (handleDeselect)=\"onSelect('0')\"\n  [productCardOptions]=\"extractProductCardParameters()\"\n>\n</cx-configurator-attribute-product-card>\n\n<div *ngIf=\"withQuantity\" class=\"cx-attribute-level-quantity-price\">\n  <cx-configurator-attribute-quantity\n    (changeQuantity)=\"onChangeQuantity($event, attributeDropDownForm)\"\n    [quantityOptions]=\"extractQuantityParameters(attributeDropDownForm)\"\n  ></cx-configurator-attribute-quantity>\n  <cx-configurator-price\n    [formula]=\"extractPriceFormulaParameters()\"\n  ></cx-configurator-price>\n</div>\n" }]
        }], propDecorators: { group: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,