/*
 * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { ConfiguratorAttributeBaseComponent } from '../base/configurator-attribute-base.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@spartacus/core";
export class ConfiguratorAttributeReadOnlyComponent extends ConfiguratorAttributeBaseComponent {
}
ConfiguratorAttributeReadOnlyComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: ConfiguratorAttributeReadOnlyComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
ConfiguratorAttributeReadOnlyComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.3", type: ConfiguratorAttributeReadOnlyComponent, selector: "cx-configurator-attribute-read-only", inputs: { attribute: "attribute", group: "group" }, usesInheritance: true, ngImport: i0, template: "<div id=\"{{ createAttributeIdForConfigurator(attribute) }}\">\n  <ng-container\n    *ngIf=\"\n      attribute.values !== undefined && attribute.values.length > 0;\n      else noStaticDomain\n    \"\n  >\n    <ng-container *ngFor=\"let value of attribute.values\">\n      <span\n        *ngIf=\"value.selected\"\n        id=\"{{ createValueUiKey('label', attribute.name, value.valueCode) }}\"\n        tabindex=\"0\"\n        class=\"cx-visually-hidden\"\n      >\n        {{\n          'configurator.a11y.readOnlyValueOfAttributeFull'\n            | cxTranslate\n              : {\n                  value: value.valueDisplay,\n                  attribute: attribute.label\n                }\n        }}\n      </span>\n      <div class=\"cx-read-only-label\" *ngIf=\"value.selected\" aria-hidden=\"true\">\n        <span aria-hidden=\"true\">{{ value.valueDisplay }}</span>\n      </div>\n    </ng-container>\n  </ng-container>\n  <ng-template #noStaticDomain>\n    <ng-container *ngIf=\"attribute.selectedSingleValue\">\n      <span\n        id=\"{{\n          createValueUiKey(\n            'label',\n            attribute.name,\n            attribute.selectedSingleValue\n          )\n        }}\"\n        tabindex=\"0\"\n        class=\"cx-visually-hidden\"\n      >\n        {{\n          'configurator.a11y.readOnlyValueOfAttributeFull'\n            | cxTranslate\n              : {\n                  value: attribute.selectedSingleValue,\n                  attribute: attribute.label\n                }\n        }}\n      </span>\n      <div class=\"cx-read-only-label\" aria-hidden=\"true\">\n        <span aria-hidden=\"true\">{{ attribute.selectedSingleValue }}</span>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"attribute.userInput\">\n      <span\n        id=\"{{\n          createValueUiKey('label', attribute.name, attribute.userInput)\n        }}\"\n        tabindex=\"0\"\n        class=\"cx-visually-hidden\"\n      >\n        {{\n          'configurator.a11y.readOnlyValueOfAttributeFull'\n            | cxTranslate\n              : {\n                  value: attribute.userInput,\n                  attribute: attribute.label\n                }\n        }}\n      </span>\n      <div class=\"cx-read-only-label\">\n        <span aria-hidden=\"true\">{{ attribute.userInput }}</span>\n      </div>\n    </ng-container>\n  </ng-template>\n</div>\n", dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "pipe", type: i2.TranslatePipe, name: "cxTranslate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: ConfiguratorAttributeReadOnlyComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-configurator-attribute-read-only', changeDetection: ChangeDetectionStrategy.OnPush, template: "<div id=\"{{ createAttributeIdForConfigurator(attribute) }}\">\n  <ng-container\n    *ngIf=\"\n      attribute.values !== undefined && attribute.values.length > 0;\n      else noStaticDomain\n    \"\n  >\n    <ng-container *ngFor=\"let value of attribute.values\">\n      <span\n        *ngIf=\"value.selected\"\n        id=\"{{ createValueUiKey('label', attribute.name, value.valueCode) }}\"\n        tabindex=\"0\"\n        class=\"cx-visually-hidden\"\n      >\n        {{\n          'configurator.a11y.readOnlyValueOfAttributeFull'\n            | cxTranslate\n              : {\n                  value: value.valueDisplay,\n                  attribute: attribute.label\n                }\n        }}\n      </span>\n      <div class=\"cx-read-only-label\" *ngIf=\"value.selected\" aria-hidden=\"true\">\n        <span aria-hidden=\"true\">{{ value.valueDisplay }}</span>\n      </div>\n    </ng-container>\n  </ng-container>\n  <ng-template #noStaticDomain>\n    <ng-container *ngIf=\"attribute.selectedSingleValue\">\n      <span\n        id=\"{{\n          createValueUiKey(\n            'label',\n            attribute.name,\n            attribute.selectedSingleValue\n          )\n        }}\"\n        tabindex=\"0\"\n        class=\"cx-visually-hidden\"\n      >\n        {{\n          'configurator.a11y.readOnlyValueOfAttributeFull'\n            | cxTranslate\n              : {\n                  value: attribute.selectedSingleValue,\n                  attribute: attribute.label\n                }\n        }}\n      </span>\n      <div class=\"cx-read-only-label\" aria-hidden=\"true\">\n        <span aria-hidden=\"true\">{{ attribute.selectedSingleValue }}</span>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"attribute.userInput\">\n      <span\n        id=\"{{\n          createValueUiKey('label', attribute.name, attribute.userInput)\n        }}\"\n        tabindex=\"0\"\n        class=\"cx-visually-hidden\"\n      >\n        {{\n          'configurator.a11y.readOnlyValueOfAttributeFull'\n            | cxTranslate\n              : {\n                  value: attribute.userInput,\n                  attribute: attribute.label\n                }\n        }}\n      </span>\n      <div class=\"cx-read-only-label\">\n        <span aria-hidden=\"true\">{{ attribute.userInput }}</span>\n      </div>\n    </ng-container>\n  </ng-template>\n</div>\n" }]
        }], propDecorators: { attribute: [{
                type: Input
            }], group: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlndXJhdG9yLWF0dHJpYnV0ZS1yZWFkLW9ubHkuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL3Byb2R1Y3QtY29uZmlndXJhdG9yL3J1bGViYXNlZC9jb21wb25lbnRzL2F0dHJpYnV0ZS90eXBlcy9yZWFkLW9ubHkvY29uZmlndXJhdG9yLWF0dHJpYnV0ZS1yZWFkLW9ubHkuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL3Byb2R1Y3QtY29uZmlndXJhdG9yL3J1bGViYXNlZC9jb21wb25lbnRzL2F0dHJpYnV0ZS90eXBlcy9yZWFkLW9ubHkvY29uZmlndXJhdG9yLWF0dHJpYnV0ZS1yZWFkLW9ubHkuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUVILE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTFFLE9BQU8sRUFBRSxrQ0FBa0MsRUFBRSxNQUFNLCtDQUErQyxDQUFDOzs7O0FBTW5HLE1BQU0sT0FBTyxzQ0FBdUMsU0FBUSxrQ0FBa0M7O21JQUFqRixzQ0FBc0M7dUhBQXRDLHNDQUFzQyxzSkNkbkQscTFFQTZFQTsyRkQvRGEsc0NBQXNDO2tCQUxsRCxTQUFTOytCQUNFLHFDQUFxQyxtQkFFOUIsdUJBQXVCLENBQUMsTUFBTTs4QkFHdEMsU0FBUztzQkFBakIsS0FBSztnQkFDRyxLQUFLO3NCQUFiLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogU1BEWC1GaWxlQ29weXJpZ2h0VGV4dDogMjAyMiBTQVAgU3BhcnRhY3VzIHRlYW0gPHNwYXJ0YWN1cy10ZWFtQHNhcC5jb20+XG4gKlxuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjBcbiAqL1xuXG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29uZmlndXJhdG9yIH0gZnJvbSAnLi4vLi4vLi4vLi4vY29yZS9tb2RlbC9jb25maWd1cmF0b3IubW9kZWwnO1xuaW1wb3J0IHsgQ29uZmlndXJhdG9yQXR0cmlidXRlQmFzZUNvbXBvbmVudCB9IGZyb20gJy4uL2Jhc2UvY29uZmlndXJhdG9yLWF0dHJpYnV0ZS1iYXNlLmNvbXBvbmVudCc7XG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjeC1jb25maWd1cmF0b3ItYXR0cmlidXRlLXJlYWQtb25seScsXG4gIHRlbXBsYXRlVXJsOiAnLi9jb25maWd1cmF0b3ItYXR0cmlidXRlLXJlYWQtb25seS5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBDb25maWd1cmF0b3JBdHRyaWJ1dGVSZWFkT25seUNvbXBvbmVudCBleHRlbmRzIENvbmZpZ3VyYXRvckF0dHJpYnV0ZUJhc2VDb21wb25lbnQge1xuICBASW5wdXQoKSBhdHRyaWJ1dGU6IENvbmZpZ3VyYXRvci5BdHRyaWJ1dGU7XG4gIEBJbnB1dCgpIGdyb3VwOiBTdHJpbmc7XG59XG4iLCI8ZGl2IGlkPVwie3sgY3JlYXRlQXR0cmlidXRlSWRGb3JDb25maWd1cmF0b3IoYXR0cmlidXRlKSB9fVwiPlxuICA8bmctY29udGFpbmVyXG4gICAgKm5nSWY9XCJcbiAgICAgIGF0dHJpYnV0ZS52YWx1ZXMgIT09IHVuZGVmaW5lZCAmJiBhdHRyaWJ1dGUudmFsdWVzLmxlbmd0aCA+IDA7XG4gICAgICBlbHNlIG5vU3RhdGljRG9tYWluXG4gICAgXCJcbiAgPlxuICAgIDxuZy1jb250YWluZXIgKm5nRm9yPVwibGV0IHZhbHVlIG9mIGF0dHJpYnV0ZS52YWx1ZXNcIj5cbiAgICAgIDxzcGFuXG4gICAgICAgICpuZ0lmPVwidmFsdWUuc2VsZWN0ZWRcIlxuICAgICAgICBpZD1cInt7IGNyZWF0ZVZhbHVlVWlLZXkoJ2xhYmVsJywgYXR0cmlidXRlLm5hbWUsIHZhbHVlLnZhbHVlQ29kZSkgfX1cIlxuICAgICAgICB0YWJpbmRleD1cIjBcIlxuICAgICAgICBjbGFzcz1cImN4LXZpc3VhbGx5LWhpZGRlblwiXG4gICAgICA+XG4gICAgICAgIHt7XG4gICAgICAgICAgJ2NvbmZpZ3VyYXRvci5hMTF5LnJlYWRPbmx5VmFsdWVPZkF0dHJpYnV0ZUZ1bGwnXG4gICAgICAgICAgICB8IGN4VHJhbnNsYXRlXG4gICAgICAgICAgICAgIDoge1xuICAgICAgICAgICAgICAgICAgdmFsdWU6IHZhbHVlLnZhbHVlRGlzcGxheSxcbiAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZTogYXR0cmlidXRlLmxhYmVsXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICB9fVxuICAgICAgPC9zcGFuPlxuICAgICAgPGRpdiBjbGFzcz1cImN4LXJlYWQtb25seS1sYWJlbFwiICpuZ0lmPVwidmFsdWUuc2VsZWN0ZWRcIiBhcmlhLWhpZGRlbj1cInRydWVcIj5cbiAgICAgICAgPHNwYW4gYXJpYS1oaWRkZW49XCJ0cnVlXCI+e3sgdmFsdWUudmFsdWVEaXNwbGF5IH19PC9zcGFuPlxuICAgICAgPC9kaXY+XG4gICAgPC9uZy1jb250YWluZXI+XG4gIDwvbmctY29udGFpbmVyPlxuICA8bmctdGVtcGxhdGUgI25vU3RhdGljRG9tYWluPlxuICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJhdHRyaWJ1dGUuc2VsZWN0ZWRTaW5nbGVWYWx1ZVwiPlxuICAgICAgPHNwYW5cbiAgICAgICAgaWQ9XCJ7e1xuICAgICAgICAgIGNyZWF0ZVZhbHVlVWlLZXkoXG4gICAgICAgICAgICAnbGFiZWwnLFxuICAgICAgICAgICAgYXR0cmlidXRlLm5hbWUsXG4gICAgICAgICAgICBhdHRyaWJ1dGUuc2VsZWN0ZWRTaW5nbGVWYWx1ZVxuICAgICAgICAgIClcbiAgICAgICAgfX1cIlxuICAgICAgICB0YWJpbmRleD1cIjBcIlxuICAgICAgICBjbGFzcz1cImN4LXZpc3VhbGx5LWhpZGRlblwiXG4gICAgICA+XG4gICAgICAgIHt7XG4gICAgICAgICAgJ2NvbmZpZ3VyYXRvci5hMTF5LnJlYWRPbmx5VmFsdWVPZkF0dHJpYnV0ZUZ1bGwnXG4gICAgICAgICAgICB8IGN4VHJhbnNsYXRlXG4gICAgICAgICAgICAgIDoge1xuICAgICAgICAgICAgICAgICAgdmFsdWU6IGF0dHJpYnV0ZS5zZWxlY3RlZFNpbmdsZVZhbHVlLFxuICAgICAgICAgICAgICAgICAgYXR0cmlidXRlOiBhdHRyaWJ1dGUubGFiZWxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgIH19XG4gICAgICA8L3NwYW4+XG4gICAgICA8ZGl2IGNsYXNzPVwiY3gtcmVhZC1vbmx5LWxhYmVsXCIgYXJpYS1oaWRkZW49XCJ0cnVlXCI+XG4gICAgICAgIDxzcGFuIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPnt7IGF0dHJpYnV0ZS5zZWxlY3RlZFNpbmdsZVZhbHVlIH19PC9zcGFuPlxuICAgICAgPC9kaXY+XG4gICAgPC9uZy1jb250YWluZXI+XG4gICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImF0dHJpYnV0ZS51c2VySW5wdXRcIj5cbiAgICAgIDxzcGFuXG4gICAgICAgIGlkPVwie3tcbiAgICAgICAgICBjcmVhdGVWYWx1ZVVpS2V5KCdsYWJlbCcsIGF0dHJpYnV0ZS5uYW1lLCBhdHRyaWJ1dGUudXNlcklucHV0KVxuICAgICAgICB9fVwiXG4gICAgICAgIHRhYmluZGV4PVwiMFwiXG4gICAgICAgIGNsYXNzPVwiY3gtdmlzdWFsbHktaGlkZGVuXCJcbiAgICAgID5cbiAgICAgICAge3tcbiAgICAgICAgICAnY29uZmlndXJhdG9yLmExMXkucmVhZE9ubHlWYWx1ZU9mQXR0cmlidXRlRnVsbCdcbiAgICAgICAgICAgIHwgY3hUcmFuc2xhdGVcbiAgICAgICAgICAgICAgOiB7XG4gICAgICAgICAgICAgICAgICB2YWx1ZTogYXR0cmlidXRlLnVzZXJJbnB1dCxcbiAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZTogYXR0cmlidXRlLmxhYmVsXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICB9fVxuICAgICAgPC9zcGFuPlxuICAgICAgPGRpdiBjbGFzcz1cImN4LXJlYWQtb25seS1sYWJlbFwiPlxuICAgICAgICA8c3BhbiBhcmlhLWhpZGRlbj1cInRydWVcIj57eyBhdHRyaWJ1dGUudXNlcklucHV0IH19PC9zcGFuPlxuICAgICAgPC9kaXY+XG4gICAgPC9uZy1jb250YWluZXI+XG4gIDwvbmctdGVtcGxhdGU+XG48L2Rpdj5cbiJdfQ==