/*
 * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';
import { ICON_TYPE } from '@spartacus/storefront';
import { switchMap, tap } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "../../core/facade/configurator-commons.service";
import * as i2 from "../../core/facade/configurator-groups.service";
import * as i3 from "@spartacus/product-configurator/common";
import * as i4 from "@angular/common";
export class ConfiguratorGroupTitleComponent {
    constructor(configuratorCommonsService, configuratorGroupsService, configRouterExtractorService) {
        this.configuratorCommonsService = configuratorCommonsService;
        this.configuratorGroupsService = configuratorGroupsService;
        this.configRouterExtractorService = configRouterExtractorService;
        this.ghostStyle = true;
        this.displayedGroup$ = this.configRouterExtractorService.extractRouterData().pipe(switchMap((routerData) => this.configuratorGroupsService.getCurrentGroup(routerData.owner).pipe(tap(() => {
            this.ghostStyle = false;
        }))));
        this.iconTypes = ICON_TYPE;
    }
}
ConfiguratorGroupTitleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: ConfiguratorGroupTitleComponent, deps: [{ token: i1.ConfiguratorCommonsService }, { token: i2.ConfiguratorGroupsService }, { token: i3.ConfiguratorRouterExtractorService }], target: i0.ɵɵFactoryTarget.Component });
ConfiguratorGroupTitleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.3", type: ConfiguratorGroupTitleComponent, selector: "cx-configurator-group-title", host: { properties: { "class.ghost": "this.ghostStyle" } }, ngImport: i0, template: "<ng-container *ngIf=\"displayedGroup$ | async as group; else ghostGroup\">\n  <div class=\"cx-group-title\">\n    {{ group.description }}\n  </div> </ng-container\n><ng-template #ghostGroup>\n  <div class=\"cx-ghost-group-title\"></div>\n</ng-template>\n", dependencies: [{ kind: "directive", type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "pipe", type: i4.AsyncPipe, name: "async" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: ConfiguratorGroupTitleComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-configurator-group-title', changeDetection: ChangeDetectionStrategy.OnPush, template: "<ng-container *ngIf=\"displayedGroup$ | async as group; else ghostGroup\">\n  <div class=\"cx-group-title\">\n    {{ group.description }}\n  </div> </ng-container\n><ng-template #ghostGroup>\n  <div class=\"cx-ghost-group-title\"></div>\n</ng-template>\n" }]
        }], ctorParameters: function () { return [{ type: i1.ConfiguratorCommonsService }, { type: i2.ConfiguratorGroupsService }, { type: i3.ConfiguratorRouterExtractorService }]; }, propDecorators: { ghostStyle: [{
                type: HostBinding,
                args: ['class.ghost']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlndXJhdG9yLWdyb3VwLXRpdGxlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9wcm9kdWN0LWNvbmZpZ3VyYXRvci9ydWxlYmFzZWQvY29tcG9uZW50cy9ncm91cC10aXRsZS9jb25maWd1cmF0b3ItZ3JvdXAtdGl0bGUuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL3Byb2R1Y3QtY29uZmlndXJhdG9yL3J1bGViYXNlZC9jb21wb25lbnRzL2dyb3VwLXRpdGxlL2NvbmZpZ3VyYXRvci1ncm91cC10aXRsZS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBRUgsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFaEYsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBRWxELE9BQU8sRUFBRSxTQUFTLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7Ozs7OztBQVVoRCxNQUFNLE9BQU8sK0JBQStCO0lBZ0IxQyxZQUNZLDBCQUFzRCxFQUN0RCx5QkFBb0QsRUFDcEQsNEJBQWdFO1FBRmhFLCtCQUEwQixHQUExQiwwQkFBMEIsQ0FBNEI7UUFDdEQsOEJBQXlCLEdBQXpCLHlCQUF5QixDQUEyQjtRQUNwRCxpQ0FBNEIsR0FBNUIsNEJBQTRCLENBQW9DO1FBbEJoRCxlQUFVLEdBQUcsSUFBSSxDQUFDO1FBRTlDLG9CQUFlLEdBQ2IsSUFBSSxDQUFDLDRCQUE0QixDQUFDLGlCQUFpQixFQUFFLENBQUMsSUFBSSxDQUN4RCxTQUFTLENBQUMsQ0FBQyxVQUFVLEVBQUUsRUFBRSxDQUN2QixJQUFJLENBQUMseUJBQXlCLENBQUMsZUFBZSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQ25FLEdBQUcsQ0FBQyxHQUFHLEVBQUU7WUFDUCxJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQztRQUMxQixDQUFDLENBQUMsQ0FDSCxDQUNGLENBQ0YsQ0FBQztRQUVKLGNBQVMsR0FBRyxTQUFTLENBQUM7SUFNbkIsQ0FBQzs7NEhBcEJPLCtCQUErQjtnSEFBL0IsK0JBQStCLCtIQ3BCNUMsZ1FBT0E7MkZEYWEsK0JBQStCO2tCQUwzQyxTQUFTOytCQUNFLDZCQUE2QixtQkFFdEIsdUJBQXVCLENBQUMsTUFBTTswTUFHbkIsVUFBVTtzQkFBckMsV0FBVzt1QkFBQyxhQUFhIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIFNQRFgtRmlsZUNvcHlyaWdodFRleHQ6IDIwMjIgU0FQIFNwYXJ0YWN1cyB0ZWFtIDxzcGFydGFjdXMtdGVhbUBzYXAuY29tPlxuICpcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXG4gKi9cblxuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSG9zdEJpbmRpbmcgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbmZpZ3VyYXRvclJvdXRlckV4dHJhY3RvclNlcnZpY2UgfSBmcm9tICdAc3BhcnRhY3VzL3Byb2R1Y3QtY29uZmlndXJhdG9yL2NvbW1vbic7XG5pbXBvcnQgeyBJQ09OX1RZUEUgfSBmcm9tICdAc3BhcnRhY3VzL3N0b3JlZnJvbnQnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgc3dpdGNoTWFwLCB0YXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBDb25maWd1cmF0b3JDb21tb25zU2VydmljZSB9IGZyb20gJy4uLy4uL2NvcmUvZmFjYWRlL2NvbmZpZ3VyYXRvci1jb21tb25zLnNlcnZpY2UnO1xuaW1wb3J0IHsgQ29uZmlndXJhdG9yR3JvdXBzU2VydmljZSB9IGZyb20gJy4uLy4uL2NvcmUvZmFjYWRlL2NvbmZpZ3VyYXRvci1ncm91cHMuc2VydmljZSc7XG5pbXBvcnQgeyBDb25maWd1cmF0b3IgfSBmcm9tICcuLi8uLi9jb3JlL21vZGVsL2NvbmZpZ3VyYXRvci5tb2RlbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2N4LWNvbmZpZ3VyYXRvci1ncm91cC10aXRsZScsXG4gIHRlbXBsYXRlVXJsOiAnLi9jb25maWd1cmF0b3ItZ3JvdXAtdGl0bGUuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgQ29uZmlndXJhdG9yR3JvdXBUaXRsZUNvbXBvbmVudCB7XG4gIEBIb3N0QmluZGluZygnY2xhc3MuZ2hvc3QnKSBnaG9zdFN0eWxlID0gdHJ1ZTtcblxuICBkaXNwbGF5ZWRHcm91cCQ6IE9ic2VydmFibGU8Q29uZmlndXJhdG9yLkdyb3VwPiA9XG4gICAgdGhpcy5jb25maWdSb3V0ZXJFeHRyYWN0b3JTZXJ2aWNlLmV4dHJhY3RSb3V0ZXJEYXRhKCkucGlwZShcbiAgICAgIHN3aXRjaE1hcCgocm91dGVyRGF0YSkgPT5cbiAgICAgICAgdGhpcy5jb25maWd1cmF0b3JHcm91cHNTZXJ2aWNlLmdldEN1cnJlbnRHcm91cChyb3V0ZXJEYXRhLm93bmVyKS5waXBlKFxuICAgICAgICAgIHRhcCgoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmdob3N0U3R5bGUgPSBmYWxzZTtcbiAgICAgICAgICB9KVxuICAgICAgICApXG4gICAgICApXG4gICAgKTtcblxuICBpY29uVHlwZXMgPSBJQ09OX1RZUEU7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJvdGVjdGVkIGNvbmZpZ3VyYXRvckNvbW1vbnNTZXJ2aWNlOiBDb25maWd1cmF0b3JDb21tb25zU2VydmljZSxcbiAgICBwcm90ZWN0ZWQgY29uZmlndXJhdG9yR3JvdXBzU2VydmljZTogQ29uZmlndXJhdG9yR3JvdXBzU2VydmljZSxcbiAgICBwcm90ZWN0ZWQgY29uZmlnUm91dGVyRXh0cmFjdG9yU2VydmljZTogQ29uZmlndXJhdG9yUm91dGVyRXh0cmFjdG9yU2VydmljZVxuICApIHt9XG59XG4iLCI8bmctY29udGFpbmVyICpuZ0lmPVwiZGlzcGxheWVkR3JvdXAkIHwgYXN5bmMgYXMgZ3JvdXA7IGVsc2UgZ2hvc3RHcm91cFwiPlxuICA8ZGl2IGNsYXNzPVwiY3gtZ3JvdXAtdGl0bGVcIj5cbiAgICB7eyBncm91cC5kZXNjcmlwdGlvbiB9fVxuICA8L2Rpdj4gPC9uZy1jb250YWluZXJcbj48bmctdGVtcGxhdGUgI2dob3N0R3JvdXA+XG4gIDxkaXYgY2xhc3M9XCJjeC1naG9zdC1ncm91cC10aXRsZVwiPjwvZGl2PlxuPC9uZy10ZW1wbGF0ZT5cbiJdfQ==