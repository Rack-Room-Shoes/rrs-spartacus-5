/*
 * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { BREAKPOINT } from '@spartacus/storefront';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/storefront";
import * as i2 from "@angular/common";
import * as i3 from "../price/configurator-price.component";
import * as i4 from "@spartacus/core";
export class ConfiguratorOverviewAttributeComponent {
    constructor(breakpointService) {
        this.breakpointService = breakpointService;
    }
    extractPriceFormulaParameters() {
        return {
            quantity: this.attributeOverview.quantity,
            price: this.attributeOverview.valuePrice,
            priceTotal: this.attributeOverview.valuePriceTotal,
            isLightedUp: true,
        };
    }
    /**
     * Verifies whether the current screen size equals or is larger than breakpoint `BREAKPOINT.md`.
     *
     * @returns {Observable<boolean>} - If the given breakpoint equals or is larger than`BREAKPOINT.md` returns `true`, otherwise `false`.
     */
    isDesktop() {
        return this.breakpointService.isUp(BREAKPOINT.md);
    }
}
ConfiguratorOverviewAttributeComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: ConfiguratorOverviewAttributeComponent, deps: [{ token: i1.BreakpointService }], target: i0.ɵɵFactoryTarget.Component });
ConfiguratorOverviewAttributeComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.3", type: ConfiguratorOverviewAttributeComponent, selector: "cx-configurator-overview-attribute", inputs: { attributeOverview: "attributeOverview" }, ngImport: i0, template: "<span class=\"cx-visually-hidden\">\n  {{\n    attributeOverview.valuePrice && attributeOverview.valuePrice?.value !== 0\n      ? attributeOverview.valuePriceTotal &&\n        attributeOverview.valuePriceTotal?.value !== 0\n        ? ('configurator.a11y.valueOfAttributeFullWithPrice'\n          | cxTranslate\n            : {\n                value: attributeOverview.value,\n                attribute: attributeOverview.attribute,\n                price: attributeOverview.valuePriceTotal.formattedValue\n              })\n        : ('configurator.a11y.valueOfAttributeFullWithPrice'\n          | cxTranslate\n            : {\n                value: attributeOverview.value,\n                attribute: attributeOverview.attribute,\n                price: attributeOverview.valuePrice.formattedValue\n              })\n      : ('configurator.a11y.valueOfAttributeFull'\n        | cxTranslate\n          : {\n              value: attributeOverview.value,\n              attribute: attributeOverview.attribute\n            })\n  }}\n</span>\n<div class=\"cx-attribute-value\" aria-hidden=\"true\">\n  {{ attributeOverview.value }}\n</div>\n<ng-container *ngIf=\"isDesktop() | async; else mobile\">\n  <div class=\"cx-attribute-label\" aria-hidden=\"true\">\n    {{ attributeOverview.attribute }}\n  </div>\n  <div class=\"cx-attribute-price\" aria-hidden=\"true\">\n    <cx-configurator-price\n      [formula]=\"extractPriceFormulaParameters()\"\n    ></cx-configurator-price>\n  </div>\n</ng-container>\n<ng-template #mobile>\n  <div class=\"cx-attribute-price\" aria-hidden=\"true\">\n    <cx-configurator-price\n      [formula]=\"extractPriceFormulaParameters()\"\n    ></cx-configurator-price>\n  </div>\n  <div class=\"cx-attribute-label\" aria-hidden=\"true\">\n    {{ attributeOverview.attribute }}\n  </div>\n</ng-template>\n", dependencies: [{ kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i3.ConfiguratorPriceComponent, selector: "cx-configurator-price", inputs: ["formula"] }, { kind: "pipe", type: i2.AsyncPipe, name: "async" }, { kind: "pipe", type: i4.TranslatePipe, name: "cxTranslate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: ConfiguratorOverviewAttributeComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-configurator-overview-attribute', changeDetection: ChangeDetectionStrategy.OnPush, template: "<span class=\"cx-visually-hidden\">\n  {{\n    attributeOverview.valuePrice && attributeOverview.valuePrice?.value !== 0\n      ? attributeOverview.valuePriceTotal &&\n        attributeOverview.valuePriceTotal?.value !== 0\n        ? ('configurator.a11y.valueOfAttributeFullWithPrice'\n          | cxTranslate\n            : {\n                value: attributeOverview.value,\n                attribute: attributeOverview.attribute,\n                price: attributeOverview.valuePriceTotal.formattedValue\n              })\n        : ('configurator.a11y.valueOfAttributeFullWithPrice'\n          | cxTranslate\n            : {\n                value: attributeOverview.value,\n                attribute: attributeOverview.attribute,\n                price: attributeOverview.valuePrice.formattedValue\n              })\n      : ('configurator.a11y.valueOfAttributeFull'\n        | cxTranslate\n          : {\n              value: attributeOverview.value,\n              attribute: attributeOverview.attribute\n            })\n  }}\n</span>\n<div class=\"cx-attribute-value\" aria-hidden=\"true\">\n  {{ attributeOverview.value }}\n</div>\n<ng-container *ngIf=\"isDesktop() | async; else mobile\">\n  <div class=\"cx-attribute-label\" aria-hidden=\"true\">\n    {{ attributeOverview.attribute }}\n  </div>\n  <div class=\"cx-attribute-price\" aria-hidden=\"true\">\n    <cx-configurator-price\n      [formula]=\"extractPriceFormulaParameters()\"\n    ></cx-configurator-price>\n  </div>\n</ng-container>\n<ng-template #mobile>\n  <div class=\"cx-attribute-price\" aria-hidden=\"true\">\n    <cx-configurator-price\n      [formula]=\"extractPriceFormulaParameters()\"\n    ></cx-configurator-price>\n  </div>\n  <div class=\"cx-attribute-label\" aria-hidden=\"true\">\n    {{ attributeOverview.attribute }}\n  </div>\n</ng-template>\n" }]
        }], ctorParameters: function () { return [{ type: i1.BreakpointService }]; }, propDecorators: { attributeOverview: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlndXJhdG9yLW92ZXJ2aWV3LWF0dHJpYnV0ZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvcHJvZHVjdC1jb25maWd1cmF0b3IvcnVsZWJhc2VkL2NvbXBvbmVudHMvb3ZlcnZpZXctYXR0cmlidXRlL2NvbmZpZ3VyYXRvci1vdmVydmlldy1hdHRyaWJ1dGUuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL3Byb2R1Y3QtY29uZmlndXJhdG9yL3J1bGViYXNlZC9jb21wb25lbnRzL292ZXJ2aWV3LWF0dHJpYnV0ZS9jb25maWd1cmF0b3Itb3ZlcnZpZXctYXR0cmlidXRlLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0dBSUc7QUFFSCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxRSxPQUFPLEVBQUUsVUFBVSxFQUFxQixNQUFNLHVCQUF1QixDQUFDOzs7Ozs7QUFVdEUsTUFBTSxPQUFPLHNDQUFzQztJQUdqRCxZQUFzQixpQkFBb0M7UUFBcEMsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUFtQjtJQUFHLENBQUM7SUFFOUQsNkJBQTZCO1FBQzNCLE9BQU87WUFDTCxRQUFRLEVBQUUsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFFBQVE7WUFDekMsS0FBSyxFQUFFLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxVQUFVO1lBQ3hDLFVBQVUsRUFBRSxJQUFJLENBQUMsaUJBQWlCLENBQUMsZUFBZTtZQUNsRCxXQUFXLEVBQUUsSUFBSTtTQUNsQixDQUFDO0lBQ0osQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxTQUFTO1FBQ1AsT0FBTyxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUNwRCxDQUFDOzttSUFyQlUsc0NBQXNDO3VIQUF0QyxzQ0FBc0MsOEhDakJuRCwyeURBa0RBOzJGRGpDYSxzQ0FBc0M7a0JBTGxELFNBQVM7K0JBQ0Usb0NBQW9DLG1CQUU3Qix1QkFBdUIsQ0FBQyxNQUFNO3dHQUd0QyxpQkFBaUI7c0JBQXpCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogU1BEWC1GaWxlQ29weXJpZ2h0VGV4dDogMjAyMiBTQVAgU3BhcnRhY3VzIHRlYW0gPHNwYXJ0YWN1cy10ZWFtQHNhcC5jb20+XG4gKlxuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjBcbiAqL1xuXG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQlJFQUtQT0lOVCwgQnJlYWtwb2ludFNlcnZpY2UgfSBmcm9tICdAc3BhcnRhY3VzL3N0b3JlZnJvbnQnO1xuaW1wb3J0IHsgQ29uZmlndXJhdG9yIH0gZnJvbSAnLi4vLi4vY29yZS9tb2RlbC9jb25maWd1cmF0b3IubW9kZWwnO1xuaW1wb3J0IHsgQ29uZmlndXJhdG9yUHJpY2VDb21wb25lbnRPcHRpb25zIH0gZnJvbSAnLi4vcHJpY2UvY29uZmlndXJhdG9yLXByaWNlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2N4LWNvbmZpZ3VyYXRvci1vdmVydmlldy1hdHRyaWJ1dGUnLFxuICB0ZW1wbGF0ZVVybDogJy4vY29uZmlndXJhdG9yLW92ZXJ2aWV3LWF0dHJpYnV0ZS5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBDb25maWd1cmF0b3JPdmVydmlld0F0dHJpYnV0ZUNvbXBvbmVudCB7XG4gIEBJbnB1dCgpIGF0dHJpYnV0ZU92ZXJ2aWV3OiBDb25maWd1cmF0b3IuQXR0cmlidXRlT3ZlcnZpZXc7XG5cbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGJyZWFrcG9pbnRTZXJ2aWNlOiBCcmVha3BvaW50U2VydmljZSkge31cblxuICBleHRyYWN0UHJpY2VGb3JtdWxhUGFyYW1ldGVycygpOiBDb25maWd1cmF0b3JQcmljZUNvbXBvbmVudE9wdGlvbnMge1xuICAgIHJldHVybiB7XG4gICAgICBxdWFudGl0eTogdGhpcy5hdHRyaWJ1dGVPdmVydmlldy5xdWFudGl0eSxcbiAgICAgIHByaWNlOiB0aGlzLmF0dHJpYnV0ZU92ZXJ2aWV3LnZhbHVlUHJpY2UsXG4gICAgICBwcmljZVRvdGFsOiB0aGlzLmF0dHJpYnV0ZU92ZXJ2aWV3LnZhbHVlUHJpY2VUb3RhbCxcbiAgICAgIGlzTGlnaHRlZFVwOiB0cnVlLFxuICAgIH07XG4gIH1cblxuICAvKipcbiAgICogVmVyaWZpZXMgd2hldGhlciB0aGUgY3VycmVudCBzY3JlZW4gc2l6ZSBlcXVhbHMgb3IgaXMgbGFyZ2VyIHRoYW4gYnJlYWtwb2ludCBgQlJFQUtQT0lOVC5tZGAuXG4gICAqXG4gICAqIEByZXR1cm5zIHtPYnNlcnZhYmxlPGJvb2xlYW4+fSAtIElmIHRoZSBnaXZlbiBicmVha3BvaW50IGVxdWFscyBvciBpcyBsYXJnZXIgdGhhbmBCUkVBS1BPSU5ULm1kYCByZXR1cm5zIGB0cnVlYCwgb3RoZXJ3aXNlIGBmYWxzZWAuXG4gICAqL1xuICBpc0Rlc2t0b3AoKTogT2JzZXJ2YWJsZTxib29sZWFuPiB7XG4gICAgcmV0dXJuIHRoaXMuYnJlYWtwb2ludFNlcnZpY2UuaXNVcChCUkVBS1BPSU5ULm1kKTtcbiAgfVxufVxuIiwiPHNwYW4gY2xhc3M9XCJjeC12aXN1YWxseS1oaWRkZW5cIj5cbiAge3tcbiAgICBhdHRyaWJ1dGVPdmVydmlldy52YWx1ZVByaWNlICYmIGF0dHJpYnV0ZU92ZXJ2aWV3LnZhbHVlUHJpY2U/LnZhbHVlICE9PSAwXG4gICAgICA/IGF0dHJpYnV0ZU92ZXJ2aWV3LnZhbHVlUHJpY2VUb3RhbCAmJlxuICAgICAgICBhdHRyaWJ1dGVPdmVydmlldy52YWx1ZVByaWNlVG90YWw/LnZhbHVlICE9PSAwXG4gICAgICAgID8gKCdjb25maWd1cmF0b3IuYTExeS52YWx1ZU9mQXR0cmlidXRlRnVsbFdpdGhQcmljZSdcbiAgICAgICAgICB8IGN4VHJhbnNsYXRlXG4gICAgICAgICAgICA6IHtcbiAgICAgICAgICAgICAgICB2YWx1ZTogYXR0cmlidXRlT3ZlcnZpZXcudmFsdWUsXG4gICAgICAgICAgICAgICAgYXR0cmlidXRlOiBhdHRyaWJ1dGVPdmVydmlldy5hdHRyaWJ1dGUsXG4gICAgICAgICAgICAgICAgcHJpY2U6IGF0dHJpYnV0ZU92ZXJ2aWV3LnZhbHVlUHJpY2VUb3RhbC5mb3JtYXR0ZWRWYWx1ZVxuICAgICAgICAgICAgICB9KVxuICAgICAgICA6ICgnY29uZmlndXJhdG9yLmExMXkudmFsdWVPZkF0dHJpYnV0ZUZ1bGxXaXRoUHJpY2UnXG4gICAgICAgICAgfCBjeFRyYW5zbGF0ZVxuICAgICAgICAgICAgOiB7XG4gICAgICAgICAgICAgICAgdmFsdWU6IGF0dHJpYnV0ZU92ZXJ2aWV3LnZhbHVlLFxuICAgICAgICAgICAgICAgIGF0dHJpYnV0ZTogYXR0cmlidXRlT3ZlcnZpZXcuYXR0cmlidXRlLFxuICAgICAgICAgICAgICAgIHByaWNlOiBhdHRyaWJ1dGVPdmVydmlldy52YWx1ZVByaWNlLmZvcm1hdHRlZFZhbHVlXG4gICAgICAgICAgICAgIH0pXG4gICAgICA6ICgnY29uZmlndXJhdG9yLmExMXkudmFsdWVPZkF0dHJpYnV0ZUZ1bGwnXG4gICAgICAgIHwgY3hUcmFuc2xhdGVcbiAgICAgICAgICA6IHtcbiAgICAgICAgICAgICAgdmFsdWU6IGF0dHJpYnV0ZU92ZXJ2aWV3LnZhbHVlLFxuICAgICAgICAgICAgICBhdHRyaWJ1dGU6IGF0dHJpYnV0ZU92ZXJ2aWV3LmF0dHJpYnV0ZVxuICAgICAgICAgICAgfSlcbiAgfX1cbjwvc3Bhbj5cbjxkaXYgY2xhc3M9XCJjeC1hdHRyaWJ1dGUtdmFsdWVcIiBhcmlhLWhpZGRlbj1cInRydWVcIj5cbiAge3sgYXR0cmlidXRlT3ZlcnZpZXcudmFsdWUgfX1cbjwvZGl2PlxuPG5nLWNvbnRhaW5lciAqbmdJZj1cImlzRGVza3RvcCgpIHwgYXN5bmM7IGVsc2UgbW9iaWxlXCI+XG4gIDxkaXYgY2xhc3M9XCJjeC1hdHRyaWJ1dGUtbGFiZWxcIiBhcmlhLWhpZGRlbj1cInRydWVcIj5cbiAgICB7eyBhdHRyaWJ1dGVPdmVydmlldy5hdHRyaWJ1dGUgfX1cbiAgPC9kaXY+XG4gIDxkaXYgY2xhc3M9XCJjeC1hdHRyaWJ1dGUtcHJpY2VcIiBhcmlhLWhpZGRlbj1cInRydWVcIj5cbiAgICA8Y3gtY29uZmlndXJhdG9yLXByaWNlXG4gICAgICBbZm9ybXVsYV09XCJleHRyYWN0UHJpY2VGb3JtdWxhUGFyYW1ldGVycygpXCJcbiAgICA+PC9jeC1jb25maWd1cmF0b3ItcHJpY2U+XG4gIDwvZGl2PlxuPC9uZy1jb250YWluZXI+XG48bmctdGVtcGxhdGUgI21vYmlsZT5cbiAgPGRpdiBjbGFzcz1cImN4LWF0dHJpYnV0ZS1wcmljZVwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPlxuICAgIDxjeC1jb25maWd1cmF0b3ItcHJpY2VcbiAgICAgIFtmb3JtdWxhXT1cImV4dHJhY3RQcmljZUZvcm11bGFQYXJhbWV0ZXJzKClcIlxuICAgID48L2N4LWNvbmZpZ3VyYXRvci1wcmljZT5cbiAgPC9kaXY+XG4gIDxkaXYgY2xhc3M9XCJjeC1hdHRyaWJ1dGUtbGFiZWxcIiBhcmlhLWhpZGRlbj1cInRydWVcIj5cbiAgICB7eyBhdHRyaWJ1dGVPdmVydmlldy5hdHRyaWJ1dGUgfX1cbiAgPC9kaXY+XG48L25nLXRlbXBsYXRlPlxuIl19