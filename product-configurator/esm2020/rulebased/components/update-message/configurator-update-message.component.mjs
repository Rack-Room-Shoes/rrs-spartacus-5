/*
 * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { distinctUntilChanged, switchMap } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "../../core/facade/configurator-commons.service";
import * as i2 from "@spartacus/product-configurator/common";
import * as i3 from "../config/configurator-message.config";
import * as i4 from "@spartacus/storefront";
import * as i5 from "@angular/common";
import * as i6 from "@spartacus/core";
export class ConfiguratorUpdateMessageComponent {
    constructor(configuratorCommonsService, configRouterExtractorService, config) {
        this.configuratorCommonsService = configuratorCommonsService;
        this.configRouterExtractorService = configRouterExtractorService;
        this.config = config;
        this.hasPendingChanges$ = this.configRouterExtractorService
            .extractRouterData()
            .pipe(switchMap((routerData) => this.configuratorCommonsService.hasPendingChanges(routerData.owner)), distinctUntilChanged() // avoid subsequent emissions of the same value from the source observable
        );
    }
}
ConfiguratorUpdateMessageComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: ConfiguratorUpdateMessageComponent, deps: [{ token: i1.ConfiguratorCommonsService }, { token: i2.ConfiguratorRouterExtractorService }, { token: i3.ConfiguratorMessageConfig }], target: i0.ɵɵFactoryTarget.Component });
ConfiguratorUpdateMessageComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.3", type: ConfiguratorUpdateMessageComponent, selector: "cx-configurator-update-message", ngImport: i0, template: "<div aria-live=\"polite\" aria-atomic=\"false\">\n  <div class=\"cx-update-msg\" [class.visible]=\"hasPendingChanges$ | async\">\n    <cx-spinner></cx-spinner>\n    <strong>{{ 'configurator.header.updateMessage' | cxTranslate }}</strong>\n  </div>\n</div>\n", dependencies: [{ kind: "component", type: i4.SpinnerComponent, selector: "cx-spinner" }, { kind: "pipe", type: i5.AsyncPipe, name: "async" }, { kind: "pipe", type: i6.TranslatePipe, name: "cxTranslate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: ConfiguratorUpdateMessageComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-configurator-update-message', changeDetection: ChangeDetectionStrategy.OnPush, template: "<div aria-live=\"polite\" aria-atomic=\"false\">\n  <div class=\"cx-update-msg\" [class.visible]=\"hasPendingChanges$ | async\">\n    <cx-spinner></cx-spinner>\n    <strong>{{ 'configurator.header.updateMessage' | cxTranslate }}</strong>\n  </div>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.ConfiguratorCommonsService }, { type: i2.ConfiguratorRouterExtractorService }, { type: i3.ConfiguratorMessageConfig }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlndXJhdG9yLXVwZGF0ZS1tZXNzYWdlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9wcm9kdWN0LWNvbmZpZ3VyYXRvci9ydWxlYmFzZWQvY29tcG9uZW50cy91cGRhdGUtbWVzc2FnZS9jb25maWd1cmF0b3ItdXBkYXRlLW1lc3NhZ2UuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL3Byb2R1Y3QtY29uZmlndXJhdG9yL3J1bGViYXNlZC9jb21wb25lbnRzL3VwZGF0ZS1tZXNzYWdlL2NvbmZpZ3VyYXRvci11cGRhdGUtbWVzc2FnZS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBRUgsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUduRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7Ozs7Ozs7O0FBU2pFLE1BQU0sT0FBTyxrQ0FBa0M7SUFVN0MsWUFDWSwwQkFBc0QsRUFDdEQsNEJBQWdFLEVBQ2hFLE1BQWlDO1FBRmpDLCtCQUEwQixHQUExQiwwQkFBMEIsQ0FBNEI7UUFDdEQsaUNBQTRCLEdBQTVCLDRCQUE0QixDQUFvQztRQUNoRSxXQUFNLEdBQU4sTUFBTSxDQUEyQjtRQVo3Qyx1QkFBa0IsR0FBd0IsSUFBSSxDQUFDLDRCQUE0QjthQUN4RSxpQkFBaUIsRUFBRTthQUNuQixJQUFJLENBQ0gsU0FBUyxDQUFDLENBQUMsVUFBVSxFQUFFLEVBQUUsQ0FDdkIsSUFBSSxDQUFDLDBCQUEwQixDQUFDLGlCQUFpQixDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FDcEUsRUFDRCxvQkFBb0IsRUFBRSxDQUFDLDBFQUEwRTtTQUNsRyxDQUFDO0lBTUQsQ0FBQzs7K0hBZE8sa0NBQWtDO21IQUFsQyxrQ0FBa0Msc0VDbEIvQyxtUUFNQTsyRkRZYSxrQ0FBa0M7a0JBTDlDLFNBQVM7K0JBQ0UsZ0NBQWdDLG1CQUV6Qix1QkFBdUIsQ0FBQyxNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIFNQRFgtRmlsZUNvcHlyaWdodFRleHQ6IDIwMjIgU0FQIFNwYXJ0YWN1cyB0ZWFtIDxzcGFydGFjdXMtdGVhbUBzYXAuY29tPlxuICpcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXG4gKi9cblxuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29uZmlndXJhdG9yUm91dGVyRXh0cmFjdG9yU2VydmljZSB9IGZyb20gJ0BzcGFydGFjdXMvcHJvZHVjdC1jb25maWd1cmF0b3IvY29tbW9uJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IGRpc3RpbmN0VW50aWxDaGFuZ2VkLCBzd2l0Y2hNYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBDb25maWd1cmF0b3JDb21tb25zU2VydmljZSB9IGZyb20gJy4uLy4uL2NvcmUvZmFjYWRlL2NvbmZpZ3VyYXRvci1jb21tb25zLnNlcnZpY2UnO1xuaW1wb3J0IHsgQ29uZmlndXJhdG9yTWVzc2FnZUNvbmZpZyB9IGZyb20gJy4uL2NvbmZpZy9jb25maWd1cmF0b3ItbWVzc2FnZS5jb25maWcnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjeC1jb25maWd1cmF0b3ItdXBkYXRlLW1lc3NhZ2UnLFxuICB0ZW1wbGF0ZVVybDogJy4vY29uZmlndXJhdG9yLXVwZGF0ZS1tZXNzYWdlLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIENvbmZpZ3VyYXRvclVwZGF0ZU1lc3NhZ2VDb21wb25lbnQge1xuICBoYXNQZW5kaW5nQ2hhbmdlcyQ6IE9ic2VydmFibGU8Ym9vbGVhbj4gPSB0aGlzLmNvbmZpZ1JvdXRlckV4dHJhY3RvclNlcnZpY2VcbiAgICAuZXh0cmFjdFJvdXRlckRhdGEoKVxuICAgIC5waXBlKFxuICAgICAgc3dpdGNoTWFwKChyb3V0ZXJEYXRhKSA9PlxuICAgICAgICB0aGlzLmNvbmZpZ3VyYXRvckNvbW1vbnNTZXJ2aWNlLmhhc1BlbmRpbmdDaGFuZ2VzKHJvdXRlckRhdGEub3duZXIpXG4gICAgICApLFxuICAgICAgZGlzdGluY3RVbnRpbENoYW5nZWQoKSAvLyBhdm9pZCBzdWJzZXF1ZW50IGVtaXNzaW9ucyBvZiB0aGUgc2FtZSB2YWx1ZSBmcm9tIHRoZSBzb3VyY2Ugb2JzZXJ2YWJsZVxuICAgICk7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJvdGVjdGVkIGNvbmZpZ3VyYXRvckNvbW1vbnNTZXJ2aWNlOiBDb25maWd1cmF0b3JDb21tb25zU2VydmljZSxcbiAgICBwcm90ZWN0ZWQgY29uZmlnUm91dGVyRXh0cmFjdG9yU2VydmljZTogQ29uZmlndXJhdG9yUm91dGVyRXh0cmFjdG9yU2VydmljZSxcbiAgICBwcm90ZWN0ZWQgY29uZmlnOiBDb25maWd1cmF0b3JNZXNzYWdlQ29uZmlnXG4gICkge31cbn1cbiIsIjxkaXYgYXJpYS1saXZlPVwicG9saXRlXCIgYXJpYS1hdG9taWM9XCJmYWxzZVwiPlxuICA8ZGl2IGNsYXNzPVwiY3gtdXBkYXRlLW1zZ1wiIFtjbGFzcy52aXNpYmxlXT1cImhhc1BlbmRpbmdDaGFuZ2VzJCB8IGFzeW5jXCI+XG4gICAgPGN4LXNwaW5uZXI+PC9jeC1zcGlubmVyPlxuICAgIDxzdHJvbmc+e3sgJ2NvbmZpZ3VyYXRvci5oZWFkZXIudXBkYXRlTWVzc2FnZScgfCBjeFRyYW5zbGF0ZSB9fTwvc3Ryb25nPlxuICA8L2Rpdj5cbjwvZGl2PlxuIl19