/*
 * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';
import { ConfiguratorRouter, } from '@spartacus/product-configurator/common';
import { map, switchMap, tap } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/product-configurator/common";
import * as i2 from "../../core/facade/configurator-commons.service";
import * as i3 from "@angular/common";
import * as i4 from "@angular/router";
import * as i5 from "@spartacus/core";
export class ConfiguratorTabBarComponent {
    constructor(configRouterExtractorService, configuratorCommonsService) {
        this.configRouterExtractorService = configRouterExtractorService;
        this.configuratorCommonsService = configuratorCommonsService;
        this.ghostStyle = true;
        this.routerData$ = this.configRouterExtractorService.extractRouterData();
        this.configuration$ = this.routerData$.pipe(switchMap((routerData) => this.configuratorCommonsService.getConfiguration(routerData.owner).pipe(tap(() => {
            this.ghostStyle = false;
        }))));
        this.isOverviewPage$ = this.routerData$.pipe(map((routerData) => routerData.pageType === ConfiguratorRouter.PageType.OVERVIEW));
    }
}
ConfiguratorTabBarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: ConfiguratorTabBarComponent, deps: [{ token: i1.ConfiguratorRouterExtractorService }, { token: i2.ConfiguratorCommonsService }], target: i0.ɵɵFactoryTarget.Component });
ConfiguratorTabBarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.3", type: ConfiguratorTabBarComponent, selector: "cx-configurator-tab-bar", host: { properties: { "class.ghost": "this.ghostStyle" } }, ngImport: i0, template: "<ng-container *ngIf=\"routerData$ | async as routerData\">\n  <ng-container *ngIf=\"configuration$ | async; else ghostTabBar\">\n    <ng-container *ngIf=\"!routerData.displayOnly\">\n      <div class=\"cx-tab-bar\">\n        <a\n          tabindex=\"0\"\n          [class.active]=\"!(isOverviewPage$ | async)\"\n          [routerLink]=\"\n            {\n              cxRoute: 'configure' + routerData.owner.configuratorType,\n              params: {\n                entityKey: routerData.owner.id,\n                ownerType: routerData.owner.type\n              }\n            } | cxUrl\n          \"\n          [attr.aria-label]=\"\n            !(isOverviewPage$ | async)\n              ? ('configurator.a11y.configurationPage' | cxTranslate)\n              : ('configurator.a11y.configurationPageLink' | cxTranslate)\n          \"\n          >{{ 'configurator.tabBar.configuration' | cxTranslate }}</a\n        >\n        <a\n          tabindex=\"0\"\n          [class.active]=\"isOverviewPage$ | async\"\n          [routerLink]=\"\n            {\n              cxRoute: 'configureOverview' + routerData.owner.configuratorType,\n              params: {\n                entityKey: routerData.owner.id,\n                ownerType: routerData.owner.type\n              }\n            } | cxUrl\n          \"\n          [attr.aria-label]=\"\n            (isOverviewPage$ | async)\n              ? ('configurator.a11y.overviewPage' | cxTranslate)\n              : ('configurator.a11y.overviewPageLink' | cxTranslate)\n          \"\n          >{{ 'configurator.tabBar.overview' | cxTranslate }}</a\n        >\n      </div>\n    </ng-container>\n  </ng-container>\n  <ng-template #ghostTabBar>\n    <div class=\"cx-ghost-tab-bar\"></div>\n  </ng-template>\n</ng-container>\n", dependencies: [{ kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i4.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["target", "queryParams", "fragment", "queryParamsHandling", "state", "relativeTo", "preserveFragment", "skipLocationChange", "replaceUrl", "routerLink"] }, { kind: "pipe", type: i3.AsyncPipe, name: "async" }, { kind: "pipe", type: i5.TranslatePipe, name: "cxTranslate" }, { kind: "pipe", type: i5.UrlPipe, name: "cxUrl" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: ConfiguratorTabBarComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-configurator-tab-bar', changeDetection: ChangeDetectionStrategy.OnPush, template: "<ng-container *ngIf=\"routerData$ | async as routerData\">\n  <ng-container *ngIf=\"configuration$ | async; else ghostTabBar\">\n    <ng-container *ngIf=\"!routerData.displayOnly\">\n      <div class=\"cx-tab-bar\">\n        <a\n          tabindex=\"0\"\n          [class.active]=\"!(isOverviewPage$ | async)\"\n          [routerLink]=\"\n            {\n              cxRoute: 'configure' + routerData.owner.configuratorType,\n              params: {\n                entityKey: routerData.owner.id,\n                ownerType: routerData.owner.type\n              }\n            } | cxUrl\n          \"\n          [attr.aria-label]=\"\n            !(isOverviewPage$ | async)\n              ? ('configurator.a11y.configurationPage' | cxTranslate)\n              : ('configurator.a11y.configurationPageLink' | cxTranslate)\n          \"\n          >{{ 'configurator.tabBar.configuration' | cxTranslate }}</a\n        >\n        <a\n          tabindex=\"0\"\n          [class.active]=\"isOverviewPage$ | async\"\n          [routerLink]=\"\n            {\n              cxRoute: 'configureOverview' + routerData.owner.configuratorType,\n              params: {\n                entityKey: routerData.owner.id,\n                ownerType: routerData.owner.type\n              }\n            } | cxUrl\n          \"\n          [attr.aria-label]=\"\n            (isOverviewPage$ | async)\n              ? ('configurator.a11y.overviewPage' | cxTranslate)\n              : ('configurator.a11y.overviewPageLink' | cxTranslate)\n          \"\n          >{{ 'configurator.tabBar.overview' | cxTranslate }}</a\n        >\n      </div>\n    </ng-container>\n  </ng-container>\n  <ng-template #ghostTabBar>\n    <div class=\"cx-ghost-tab-bar\"></div>\n  </ng-template>\n</ng-container>\n" }]
        }], ctorParameters: function () { return [{ type: i1.ConfiguratorRouterExtractorService }, { type: i2.ConfiguratorCommonsService }]; }, propDecorators: { ghostStyle: [{
                type: HostBinding,
                args: ['class.ghost']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlndXJhdG9yLXRhYi1iYXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL3Byb2R1Y3QtY29uZmlndXJhdG9yL3J1bGViYXNlZC9jb21wb25lbnRzL3RhYi1iYXIvY29uZmlndXJhdG9yLXRhYi1iYXIuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL3Byb2R1Y3QtY29uZmlndXJhdG9yL3J1bGViYXNlZC9jb21wb25lbnRzL3RhYi1iYXIvY29uZmlndXJhdG9yLXRhYi1iYXIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUVILE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2hGLE9BQU8sRUFDTCxrQkFBa0IsR0FFbkIsTUFBTSx3Q0FBd0MsQ0FBQztBQUdoRCxPQUFPLEVBQUUsR0FBRyxFQUFFLFNBQVMsRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7Ozs7OztBQVNyRCxNQUFNLE9BQU8sMkJBQTJCO0lBd0J0QyxZQUNZLDRCQUFnRSxFQUNoRSwwQkFBc0Q7UUFEdEQsaUNBQTRCLEdBQTVCLDRCQUE0QixDQUFvQztRQUNoRSwrQkFBMEIsR0FBMUIsMEJBQTBCLENBQTRCO1FBekJ0QyxlQUFVLEdBQUcsSUFBSSxDQUFDO1FBRTlDLGdCQUFXLEdBQ1QsSUFBSSxDQUFDLDRCQUE0QixDQUFDLGlCQUFpQixFQUFFLENBQUM7UUFFeEQsbUJBQWMsR0FDWixJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FDbkIsU0FBUyxDQUFDLENBQUMsVUFBVSxFQUFFLEVBQUUsQ0FDdkIsSUFBSSxDQUFDLDBCQUEwQixDQUFDLGdCQUFnQixDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQ3JFLEdBQUcsQ0FBQyxHQUFHLEVBQUU7WUFDUCxJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQztRQUMxQixDQUFDLENBQUMsQ0FDSCxDQUNGLENBQ0YsQ0FBQztRQUVKLG9CQUFlLEdBQXdCLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUMxRCxHQUFHLENBQ0QsQ0FBQyxVQUFVLEVBQUUsRUFBRSxDQUNiLFVBQVUsQ0FBQyxRQUFRLEtBQUssa0JBQWtCLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FDL0QsQ0FDRixDQUFDO0lBS0MsQ0FBQzs7d0hBM0JPLDJCQUEyQjs0R0FBM0IsMkJBQTJCLDJIQ3RCeEMsK3VEQWlEQTsyRkQzQmEsMkJBQTJCO2tCQUx2QyxTQUFTOytCQUNFLHlCQUF5QixtQkFFbEIsdUJBQXVCLENBQUMsTUFBTTtrS0FHbkIsVUFBVTtzQkFBckMsV0FBVzt1QkFBQyxhQUFhIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIFNQRFgtRmlsZUNvcHlyaWdodFRleHQ6IDIwMjIgU0FQIFNwYXJ0YWN1cyB0ZWFtIDxzcGFydGFjdXMtdGVhbUBzYXAuY29tPlxuICpcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXG4gKi9cblxuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSG9zdEJpbmRpbmcgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIENvbmZpZ3VyYXRvclJvdXRlcixcbiAgQ29uZmlndXJhdG9yUm91dGVyRXh0cmFjdG9yU2VydmljZSxcbn0gZnJvbSAnQHNwYXJ0YWN1cy9wcm9kdWN0LWNvbmZpZ3VyYXRvci9jb21tb24nO1xuaW1wb3J0IHt9IGZyb20gJ0BzcGFydGFjdXMvc3RvcmVmcm9udCc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBtYXAsIHN3aXRjaE1hcCwgdGFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgQ29uZmlndXJhdG9yQ29tbW9uc1NlcnZpY2UgfSBmcm9tICcuLi8uLi9jb3JlL2ZhY2FkZS9jb25maWd1cmF0b3ItY29tbW9ucy5zZXJ2aWNlJztcbmltcG9ydCB7IENvbmZpZ3VyYXRvciB9IGZyb20gJy4uLy4uL2NvcmUvbW9kZWwvY29uZmlndXJhdG9yLm1vZGVsJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY3gtY29uZmlndXJhdG9yLXRhYi1iYXInLFxuICB0ZW1wbGF0ZVVybDogJy4vY29uZmlndXJhdG9yLXRhYi1iYXIuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgQ29uZmlndXJhdG9yVGFiQmFyQ29tcG9uZW50IHtcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5naG9zdCcpIGdob3N0U3R5bGUgPSB0cnVlO1xuXG4gIHJvdXRlckRhdGEkOiBPYnNlcnZhYmxlPENvbmZpZ3VyYXRvclJvdXRlci5EYXRhPiA9XG4gICAgdGhpcy5jb25maWdSb3V0ZXJFeHRyYWN0b3JTZXJ2aWNlLmV4dHJhY3RSb3V0ZXJEYXRhKCk7XG5cbiAgY29uZmlndXJhdGlvbiQ6IE9ic2VydmFibGU8Q29uZmlndXJhdG9yLkNvbmZpZ3VyYXRpb24+ID1cbiAgICB0aGlzLnJvdXRlckRhdGEkLnBpcGUoXG4gICAgICBzd2l0Y2hNYXAoKHJvdXRlckRhdGEpID0+XG4gICAgICAgIHRoaXMuY29uZmlndXJhdG9yQ29tbW9uc1NlcnZpY2UuZ2V0Q29uZmlndXJhdGlvbihyb3V0ZXJEYXRhLm93bmVyKS5waXBlKFxuICAgICAgICAgIHRhcCgoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmdob3N0U3R5bGUgPSBmYWxzZTtcbiAgICAgICAgICB9KVxuICAgICAgICApXG4gICAgICApXG4gICAgKTtcblxuICBpc092ZXJ2aWV3UGFnZSQ6IE9ic2VydmFibGU8Ym9vbGVhbj4gPSB0aGlzLnJvdXRlckRhdGEkLnBpcGUoXG4gICAgbWFwKFxuICAgICAgKHJvdXRlckRhdGEpID0+XG4gICAgICAgIHJvdXRlckRhdGEucGFnZVR5cGUgPT09IENvbmZpZ3VyYXRvclJvdXRlci5QYWdlVHlwZS5PVkVSVklFV1xuICAgIClcbiAgKTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcm90ZWN0ZWQgY29uZmlnUm91dGVyRXh0cmFjdG9yU2VydmljZTogQ29uZmlndXJhdG9yUm91dGVyRXh0cmFjdG9yU2VydmljZSxcbiAgICBwcm90ZWN0ZWQgY29uZmlndXJhdG9yQ29tbW9uc1NlcnZpY2U6IENvbmZpZ3VyYXRvckNvbW1vbnNTZXJ2aWNlXG4gICkge31cbn1cbiIsIjxuZy1jb250YWluZXIgKm5nSWY9XCJyb3V0ZXJEYXRhJCB8IGFzeW5jIGFzIHJvdXRlckRhdGFcIj5cbiAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImNvbmZpZ3VyYXRpb24kIHwgYXN5bmM7IGVsc2UgZ2hvc3RUYWJCYXJcIj5cbiAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiIXJvdXRlckRhdGEuZGlzcGxheU9ubHlcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJjeC10YWItYmFyXCI+XG4gICAgICAgIDxhXG4gICAgICAgICAgdGFiaW5kZXg9XCIwXCJcbiAgICAgICAgICBbY2xhc3MuYWN0aXZlXT1cIiEoaXNPdmVydmlld1BhZ2UkIHwgYXN5bmMpXCJcbiAgICAgICAgICBbcm91dGVyTGlua109XCJcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgY3hSb3V0ZTogJ2NvbmZpZ3VyZScgKyByb3V0ZXJEYXRhLm93bmVyLmNvbmZpZ3VyYXRvclR5cGUsXG4gICAgICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgICAgIGVudGl0eUtleTogcm91dGVyRGF0YS5vd25lci5pZCxcbiAgICAgICAgICAgICAgICBvd25lclR5cGU6IHJvdXRlckRhdGEub3duZXIudHlwZVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IHwgY3hVcmxcbiAgICAgICAgICBcIlxuICAgICAgICAgIFthdHRyLmFyaWEtbGFiZWxdPVwiXG4gICAgICAgICAgICAhKGlzT3ZlcnZpZXdQYWdlJCB8IGFzeW5jKVxuICAgICAgICAgICAgICA/ICgnY29uZmlndXJhdG9yLmExMXkuY29uZmlndXJhdGlvblBhZ2UnIHwgY3hUcmFuc2xhdGUpXG4gICAgICAgICAgICAgIDogKCdjb25maWd1cmF0b3IuYTExeS5jb25maWd1cmF0aW9uUGFnZUxpbmsnIHwgY3hUcmFuc2xhdGUpXG4gICAgICAgICAgXCJcbiAgICAgICAgICA+e3sgJ2NvbmZpZ3VyYXRvci50YWJCYXIuY29uZmlndXJhdGlvbicgfCBjeFRyYW5zbGF0ZSB9fTwvYVxuICAgICAgICA+XG4gICAgICAgIDxhXG4gICAgICAgICAgdGFiaW5kZXg9XCIwXCJcbiAgICAgICAgICBbY2xhc3MuYWN0aXZlXT1cImlzT3ZlcnZpZXdQYWdlJCB8IGFzeW5jXCJcbiAgICAgICAgICBbcm91dGVyTGlua109XCJcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgY3hSb3V0ZTogJ2NvbmZpZ3VyZU92ZXJ2aWV3JyArIHJvdXRlckRhdGEub3duZXIuY29uZmlndXJhdG9yVHlwZSxcbiAgICAgICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICAgICAgZW50aXR5S2V5OiByb3V0ZXJEYXRhLm93bmVyLmlkLFxuICAgICAgICAgICAgICAgIG93bmVyVHlwZTogcm91dGVyRGF0YS5vd25lci50eXBlXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gfCBjeFVybFxuICAgICAgICAgIFwiXG4gICAgICAgICAgW2F0dHIuYXJpYS1sYWJlbF09XCJcbiAgICAgICAgICAgIChpc092ZXJ2aWV3UGFnZSQgfCBhc3luYylcbiAgICAgICAgICAgICAgPyAoJ2NvbmZpZ3VyYXRvci5hMTF5Lm92ZXJ2aWV3UGFnZScgfCBjeFRyYW5zbGF0ZSlcbiAgICAgICAgICAgICAgOiAoJ2NvbmZpZ3VyYXRvci5hMTF5Lm92ZXJ2aWV3UGFnZUxpbmsnIHwgY3hUcmFuc2xhdGUpXG4gICAgICAgICAgXCJcbiAgICAgICAgICA+e3sgJ2NvbmZpZ3VyYXRvci50YWJCYXIub3ZlcnZpZXcnIHwgY3hUcmFuc2xhdGUgfX08L2FcbiAgICAgICAgPlxuICAgICAgPC9kaXY+XG4gICAgPC9uZy1jb250YWluZXI+XG4gIDwvbmctY29udGFpbmVyPlxuICA8bmctdGVtcGxhdGUgI2dob3N0VGFiQmFyPlxuICAgIDxkaXYgY2xhc3M9XCJjeC1naG9zdC10YWItYmFyXCI+PC9kaXY+XG4gIDwvbmctdGVtcGxhdGU+XG48L25nLWNvbnRhaW5lcj5cbiJdfQ==