/*
 * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { ICON_TYPE } from '@spartacus/storefront';
import { switchMap } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "../../core/facade/configurator-commons.service";
import * as i2 from "@spartacus/product-configurator/common";
import * as i3 from "@angular/common";
import * as i4 from "@spartacus/storefront";
import * as i5 from "@spartacus/core";
export class ConfiguratorConflictAndErrorMessagesComponent {
    constructor(configuratorCommonsService, configRouterExtractorService) {
        this.configuratorCommonsService = configuratorCommonsService;
        this.configRouterExtractorService = configRouterExtractorService;
        this.iconTypes = ICON_TYPE;
        this.configuration$ = this.configRouterExtractorService
            .extractRouterData()
            .pipe(switchMap((routerData) => this.configuratorCommonsService.getConfiguration(routerData.owner)));
        this.showWarnings = false;
        this.showErrors = false;
    }
    toggleWarnings() {
        this.showWarnings = !this.showWarnings;
    }
    toggleErrors() {
        this.showErrors = !this.showErrors;
    }
}
ConfiguratorConflictAndErrorMessagesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: ConfiguratorConflictAndErrorMessagesComponent, deps: [{ token: i1.ConfiguratorCommonsService }, { token: i2.ConfiguratorRouterExtractorService }], target: i0.ɵɵFactoryTarget.Component });
ConfiguratorConflictAndErrorMessagesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.3", type: ConfiguratorConflictAndErrorMessagesComponent, selector: "cx-configuration-conflict-and-error-messages", ngImport: i0, template: "<ng-container *ngIf=\"configuration$ | async as configuration\">\n  <ng-container *ngIf=\"configuration?.warningMessages?.length > 0\">\n    <div\n      aria-live=\"assertive\"\n      aria-atomic=\"true\"\n      class=\"alert-message alert-message-invalid-warning\"\n    >\n      <span class=\"alert-icon\">\n        <cx-icon type=\"WARNING\"></cx-icon>\n      </span>\n      <span\n        class=\"cx-warning-text\"\n        *ngIf=\"configuration?.warningMessages?.length > 1\"\n      >\n        {{ 'configurator.header.multipleWarnings' | cxTranslate }}</span\n      >\n      <button\n        (click)=\"toggleWarnings()\"\n        *ngIf=\"configuration?.warningMessages?.length > 1\"\n        class=\"cx-warning-toggle\"\n        [attr.aria-expanded]=\"showWarnings\"\n      >\n        {{ 'configurator.header.reviewWarnings' | cxTranslate }}\n\n        <ng-container *ngIf=\"!showWarnings\">\n          <cx-icon type=\"CARET_DOWN\"></cx-icon>\n        </ng-container>\n\n        <ng-container *ngIf=\"showWarnings\">\n          <cx-icon type=\"CARET_UP\"></cx-icon>\n        </ng-container>\n      </button>\n      <div\n        class=\"cx-warning-messages\"\n        [class.inline]=\"configuration?.warningMessages?.length === 1\"\n      >\n        <div\n          class=\"cx-warning-message\"\n          [class.open]=\"\n            showWarnings || configuration?.warningMessages?.length === 1\n          \"\n          *ngFor=\"let warningMessage of configuration.warningMessages\"\n        >\n          {{ warningMessage }}\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"configuration?.errorMessages?.length > 0\">\n    <div\n      aria-live=\"assertive\"\n      aria-atomic=\"true\"\n      role=\"alert\"\n      class=\"alert-message alert-message-error\"\n    >\n      <span class=\"alert-icon\">\n        <cx-icon type=\"ERROR\"></cx-icon>\n      </span>\n      <span\n        class=\"cx-error-text\"\n        *ngIf=\"configuration?.errorMessages?.length > 1\"\n      >\n        {{ 'configurator.header.multipleErrors' | cxTranslate }}</span\n      >\n      <button\n        (click)=\"toggleErrors()\"\n        *ngIf=\"configuration?.errorMessages?.length > 1\"\n        class=\"cx-error-toggle\"\n        [attr.aria-expanded]=\"showErrors\"\n      >\n        {{ 'configurator.header.reviewErrors' | cxTranslate }}\n        <ng-container *ngIf=\"!showErrors\">\n          <cx-icon type=\"CARET_DOWN\"></cx-icon>\n        </ng-container>\n\n        <ng-container *ngIf=\"showErrors\">\n          <cx-icon type=\"CARET_UP\"></cx-icon>\n        </ng-container>\n      </button>\n      <div\n        class=\"cx-error-messages\"\n        [class.inline]=\"configuration?.errorMessages?.length === 1\"\n      >\n        <div\n          class=\"cx-error-message\"\n          [class.open]=\"\n            showErrors || configuration?.errorMessages?.length === 1\n          \"\n          *ngFor=\"let errorMessage of configuration.errorMessages\"\n        >\n          {{ errorMessage }}\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</ng-container>\n", dependencies: [{ kind: "directive", type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i4.IconComponent, selector: "cx-icon,[cxIcon]", inputs: ["cxIcon", "type"] }, { kind: "pipe", type: i3.AsyncPipe, name: "async" }, { kind: "pipe", type: i5.TranslatePipe, name: "cxTranslate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: ConfiguratorConflictAndErrorMessagesComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-configuration-conflict-and-error-messages', changeDetection: ChangeDetectionStrategy.OnPush, template: "<ng-container *ngIf=\"configuration$ | async as configuration\">\n  <ng-container *ngIf=\"configuration?.warningMessages?.length > 0\">\n    <div\n      aria-live=\"assertive\"\n      aria-atomic=\"true\"\n      class=\"alert-message alert-message-invalid-warning\"\n    >\n      <span class=\"alert-icon\">\n        <cx-icon type=\"WARNING\"></cx-icon>\n      </span>\n      <span\n        class=\"cx-warning-text\"\n        *ngIf=\"configuration?.warningMessages?.length > 1\"\n      >\n        {{ 'configurator.header.multipleWarnings' | cxTranslate }}</span\n      >\n      <button\n        (click)=\"toggleWarnings()\"\n        *ngIf=\"configuration?.warningMessages?.length > 1\"\n        class=\"cx-warning-toggle\"\n        [attr.aria-expanded]=\"showWarnings\"\n      >\n        {{ 'configurator.header.reviewWarnings' | cxTranslate }}\n\n        <ng-container *ngIf=\"!showWarnings\">\n          <cx-icon type=\"CARET_DOWN\"></cx-icon>\n        </ng-container>\n\n        <ng-container *ngIf=\"showWarnings\">\n          <cx-icon type=\"CARET_UP\"></cx-icon>\n        </ng-container>\n      </button>\n      <div\n        class=\"cx-warning-messages\"\n        [class.inline]=\"configuration?.warningMessages?.length === 1\"\n      >\n        <div\n          class=\"cx-warning-message\"\n          [class.open]=\"\n            showWarnings || configuration?.warningMessages?.length === 1\n          \"\n          *ngFor=\"let warningMessage of configuration.warningMessages\"\n        >\n          {{ warningMessage }}\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"configuration?.errorMessages?.length > 0\">\n    <div\n      aria-live=\"assertive\"\n      aria-atomic=\"true\"\n      role=\"alert\"\n      class=\"alert-message alert-message-error\"\n    >\n      <span class=\"alert-icon\">\n        <cx-icon type=\"ERROR\"></cx-icon>\n      </span>\n      <span\n        class=\"cx-error-text\"\n        *ngIf=\"configuration?.errorMessages?.length > 1\"\n      >\n        {{ 'configurator.header.multipleErrors' | cxTranslate }}</span\n      >\n      <button\n        (click)=\"toggleErrors()\"\n        *ngIf=\"configuration?.errorMessages?.length > 1\"\n        class=\"cx-error-toggle\"\n        [attr.aria-expanded]=\"showErrors\"\n      >\n        {{ 'configurator.header.reviewErrors' | cxTranslate }}\n        <ng-container *ngIf=\"!showErrors\">\n          <cx-icon type=\"CARET_DOWN\"></cx-icon>\n        </ng-container>\n\n        <ng-container *ngIf=\"showErrors\">\n          <cx-icon type=\"CARET_UP\"></cx-icon>\n        </ng-container>\n      </button>\n      <div\n        class=\"cx-error-messages\"\n        [class.inline]=\"configuration?.errorMessages?.length === 1\"\n      >\n        <div\n          class=\"cx-error-message\"\n          [class.open]=\"\n            showErrors || configuration?.errorMessages?.length === 1\n          \"\n          *ngFor=\"let errorMessage of configuration.errorMessages\"\n        >\n          {{ errorMessage }}\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</ng-container>\n" }]
        }], ctorParameters: function () { return [{ type: i1.ConfiguratorCommonsService }, { type: i2.ConfiguratorRouterExtractorService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlndXJhdG9yLWNvbmZsaWN0LWFuZC1lcnJvci1tZXNzYWdlcy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvcHJvZHVjdC1jb25maWd1cmF0b3IvcnVsZWJhc2VkL2NvbXBvbmVudHMvY29uZmlndXJhdG9yLWNvbmZsaWN0LWFuZC1lcnJvci1tZXNzYWdlcy9jb25maWd1cmF0b3ItY29uZmxpY3QtYW5kLWVycm9yLW1lc3NhZ2VzLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9wcm9kdWN0LWNvbmZpZ3VyYXRvci9ydWxlYmFzZWQvY29tcG9uZW50cy9jb25maWd1cmF0b3ItY29uZmxpY3QtYW5kLWVycm9yLW1lc3NhZ2VzL2NvbmZpZ3VyYXRvci1jb25mbGljdC1hbmQtZXJyb3ItbWVzc2FnZXMuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7R0FJRztBQUVILE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFbkUsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBRWxELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7Ozs7OztBQVMzQyxNQUFNLE9BQU8sNkNBQTZDO0lBdUJ4RCxZQUNZLDBCQUFzRCxFQUN0RCw0QkFBZ0U7UUFEaEUsK0JBQTBCLEdBQTFCLDBCQUEwQixDQUE0QjtRQUN0RCxpQ0FBNEIsR0FBNUIsNEJBQTRCLENBQW9DO1FBeEI1RSxjQUFTLEdBQUcsU0FBUyxDQUFDO1FBQ3RCLG1CQUFjLEdBQ1osSUFBSSxDQUFDLDRCQUE0QjthQUM5QixpQkFBaUIsRUFBRTthQUNuQixJQUFJLENBQ0gsU0FBUyxDQUFDLENBQUMsVUFBVSxFQUFFLEVBQUUsQ0FDdkIsSUFBSSxDQUFDLDBCQUEwQixDQUFDLGdCQUFnQixDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FDbkUsQ0FDRixDQUFDO1FBRU4saUJBQVksR0FBRyxLQUFLLENBQUM7UUFNckIsZUFBVSxHQUFHLEtBQUssQ0FBQztJQVNoQixDQUFDO0lBYkosY0FBYztRQUNaLElBQUksQ0FBQyxZQUFZLEdBQUcsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDO0lBQ3pDLENBQUM7SUFJRCxZQUFZO1FBQ1YsSUFBSSxDQUFDLFVBQVUsR0FBRyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDckMsQ0FBQzs7MElBckJVLDZDQUE2Qzs4SEFBN0MsNkNBQTZDLG9GQ25CMUQsbWlHQWdHQTsyRkQ3RWEsNkNBQTZDO2tCQUx6RCxTQUFTOytCQUNFLDhDQUE4QyxtQkFFdkMsdUJBQXVCLENBQUMsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBTUERYLUZpbGVDb3B5cmlnaHRUZXh0OiAyMDIyIFNBUCBTcGFydGFjdXMgdGVhbSA8c3BhcnRhY3VzLXRlYW1Ac2FwLmNvbT5cbiAqXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuICovXG5cbmltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbmZpZ3VyYXRvclJvdXRlckV4dHJhY3RvclNlcnZpY2UgfSBmcm9tICdAc3BhcnRhY3VzL3Byb2R1Y3QtY29uZmlndXJhdG9yL2NvbW1vbic7XG5pbXBvcnQgeyBJQ09OX1RZUEUgfSBmcm9tICdAc3BhcnRhY3VzL3N0b3JlZnJvbnQnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgc3dpdGNoTWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgQ29uZmlndXJhdG9yQ29tbW9uc1NlcnZpY2UgfSBmcm9tICcuLi8uLi9jb3JlL2ZhY2FkZS9jb25maWd1cmF0b3ItY29tbW9ucy5zZXJ2aWNlJztcbmltcG9ydCB7IENvbmZpZ3VyYXRvciB9IGZyb20gJy4uLy4uL2NvcmUvbW9kZWwvY29uZmlndXJhdG9yLm1vZGVsJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY3gtY29uZmlndXJhdGlvbi1jb25mbGljdC1hbmQtZXJyb3ItbWVzc2FnZXMnLFxuICB0ZW1wbGF0ZVVybDogJy4vY29uZmlndXJhdG9yLWNvbmZsaWN0LWFuZC1lcnJvci1tZXNzYWdlcy5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBDb25maWd1cmF0b3JDb25mbGljdEFuZEVycm9yTWVzc2FnZXNDb21wb25lbnQge1xuICBpY29uVHlwZXMgPSBJQ09OX1RZUEU7XG4gIGNvbmZpZ3VyYXRpb24kOiBPYnNlcnZhYmxlPENvbmZpZ3VyYXRvci5Db25maWd1cmF0aW9uPiA9XG4gICAgdGhpcy5jb25maWdSb3V0ZXJFeHRyYWN0b3JTZXJ2aWNlXG4gICAgICAuZXh0cmFjdFJvdXRlckRhdGEoKVxuICAgICAgLnBpcGUoXG4gICAgICAgIHN3aXRjaE1hcCgocm91dGVyRGF0YSkgPT5cbiAgICAgICAgICB0aGlzLmNvbmZpZ3VyYXRvckNvbW1vbnNTZXJ2aWNlLmdldENvbmZpZ3VyYXRpb24ocm91dGVyRGF0YS5vd25lcilcbiAgICAgICAgKVxuICAgICAgKTtcblxuICBzaG93V2FybmluZ3MgPSBmYWxzZTtcblxuICB0b2dnbGVXYXJuaW5ncygpOiB2b2lkIHtcbiAgICB0aGlzLnNob3dXYXJuaW5ncyA9ICF0aGlzLnNob3dXYXJuaW5ncztcbiAgfVxuXG4gIHNob3dFcnJvcnMgPSBmYWxzZTtcblxuICB0b2dnbGVFcnJvcnMoKTogdm9pZCB7XG4gICAgdGhpcy5zaG93RXJyb3JzID0gIXRoaXMuc2hvd0Vycm9ycztcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByb3RlY3RlZCBjb25maWd1cmF0b3JDb21tb25zU2VydmljZTogQ29uZmlndXJhdG9yQ29tbW9uc1NlcnZpY2UsXG4gICAgcHJvdGVjdGVkIGNvbmZpZ1JvdXRlckV4dHJhY3RvclNlcnZpY2U6IENvbmZpZ3VyYXRvclJvdXRlckV4dHJhY3RvclNlcnZpY2VcbiAgKSB7fVxufVxuIiwiPG5nLWNvbnRhaW5lciAqbmdJZj1cImNvbmZpZ3VyYXRpb24kIHwgYXN5bmMgYXMgY29uZmlndXJhdGlvblwiPlxuICA8bmctY29udGFpbmVyICpuZ0lmPVwiY29uZmlndXJhdGlvbj8ud2FybmluZ01lc3NhZ2VzPy5sZW5ndGggPiAwXCI+XG4gICAgPGRpdlxuICAgICAgYXJpYS1saXZlPVwiYXNzZXJ0aXZlXCJcbiAgICAgIGFyaWEtYXRvbWljPVwidHJ1ZVwiXG4gICAgICBjbGFzcz1cImFsZXJ0LW1lc3NhZ2UgYWxlcnQtbWVzc2FnZS1pbnZhbGlkLXdhcm5pbmdcIlxuICAgID5cbiAgICAgIDxzcGFuIGNsYXNzPVwiYWxlcnQtaWNvblwiPlxuICAgICAgICA8Y3gtaWNvbiB0eXBlPVwiV0FSTklOR1wiPjwvY3gtaWNvbj5cbiAgICAgIDwvc3Bhbj5cbiAgICAgIDxzcGFuXG4gICAgICAgIGNsYXNzPVwiY3gtd2FybmluZy10ZXh0XCJcbiAgICAgICAgKm5nSWY9XCJjb25maWd1cmF0aW9uPy53YXJuaW5nTWVzc2FnZXM/Lmxlbmd0aCA+IDFcIlxuICAgICAgPlxuICAgICAgICB7eyAnY29uZmlndXJhdG9yLmhlYWRlci5tdWx0aXBsZVdhcm5pbmdzJyB8IGN4VHJhbnNsYXRlIH19PC9zcGFuXG4gICAgICA+XG4gICAgICA8YnV0dG9uXG4gICAgICAgIChjbGljayk9XCJ0b2dnbGVXYXJuaW5ncygpXCJcbiAgICAgICAgKm5nSWY9XCJjb25maWd1cmF0aW9uPy53YXJuaW5nTWVzc2FnZXM/Lmxlbmd0aCA+IDFcIlxuICAgICAgICBjbGFzcz1cImN4LXdhcm5pbmctdG9nZ2xlXCJcbiAgICAgICAgW2F0dHIuYXJpYS1leHBhbmRlZF09XCJzaG93V2FybmluZ3NcIlxuICAgICAgPlxuICAgICAgICB7eyAnY29uZmlndXJhdG9yLmhlYWRlci5yZXZpZXdXYXJuaW5ncycgfCBjeFRyYW5zbGF0ZSB9fVxuXG4gICAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCIhc2hvd1dhcm5pbmdzXCI+XG4gICAgICAgICAgPGN4LWljb24gdHlwZT1cIkNBUkVUX0RPV05cIj48L2N4LWljb24+XG4gICAgICAgIDwvbmctY29udGFpbmVyPlxuXG4gICAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJzaG93V2FybmluZ3NcIj5cbiAgICAgICAgICA8Y3gtaWNvbiB0eXBlPVwiQ0FSRVRfVVBcIj48L2N4LWljb24+XG4gICAgICAgIDwvbmctY29udGFpbmVyPlxuICAgICAgPC9idXR0b24+XG4gICAgICA8ZGl2XG4gICAgICAgIGNsYXNzPVwiY3gtd2FybmluZy1tZXNzYWdlc1wiXG4gICAgICAgIFtjbGFzcy5pbmxpbmVdPVwiY29uZmlndXJhdGlvbj8ud2FybmluZ01lc3NhZ2VzPy5sZW5ndGggPT09IDFcIlxuICAgICAgPlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgY2xhc3M9XCJjeC13YXJuaW5nLW1lc3NhZ2VcIlxuICAgICAgICAgIFtjbGFzcy5vcGVuXT1cIlxuICAgICAgICAgICAgc2hvd1dhcm5pbmdzIHx8IGNvbmZpZ3VyYXRpb24/Lndhcm5pbmdNZXNzYWdlcz8ubGVuZ3RoID09PSAxXG4gICAgICAgICAgXCJcbiAgICAgICAgICAqbmdGb3I9XCJsZXQgd2FybmluZ01lc3NhZ2Ugb2YgY29uZmlndXJhdGlvbi53YXJuaW5nTWVzc2FnZXNcIlxuICAgICAgICA+XG4gICAgICAgICAge3sgd2FybmluZ01lc3NhZ2UgfX1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPC9uZy1jb250YWluZXI+XG4gIDxuZy1jb250YWluZXIgKm5nSWY9XCJjb25maWd1cmF0aW9uPy5lcnJvck1lc3NhZ2VzPy5sZW5ndGggPiAwXCI+XG4gICAgPGRpdlxuICAgICAgYXJpYS1saXZlPVwiYXNzZXJ0aXZlXCJcbiAgICAgIGFyaWEtYXRvbWljPVwidHJ1ZVwiXG4gICAgICByb2xlPVwiYWxlcnRcIlxuICAgICAgY2xhc3M9XCJhbGVydC1tZXNzYWdlIGFsZXJ0LW1lc3NhZ2UtZXJyb3JcIlxuICAgID5cbiAgICAgIDxzcGFuIGNsYXNzPVwiYWxlcnQtaWNvblwiPlxuICAgICAgICA8Y3gtaWNvbiB0eXBlPVwiRVJST1JcIj48L2N4LWljb24+XG4gICAgICA8L3NwYW4+XG4gICAgICA8c3BhblxuICAgICAgICBjbGFzcz1cImN4LWVycm9yLXRleHRcIlxuICAgICAgICAqbmdJZj1cImNvbmZpZ3VyYXRpb24/LmVycm9yTWVzc2FnZXM/Lmxlbmd0aCA+IDFcIlxuICAgICAgPlxuICAgICAgICB7eyAnY29uZmlndXJhdG9yLmhlYWRlci5tdWx0aXBsZUVycm9ycycgfCBjeFRyYW5zbGF0ZSB9fTwvc3BhblxuICAgICAgPlxuICAgICAgPGJ1dHRvblxuICAgICAgICAoY2xpY2spPVwidG9nZ2xlRXJyb3JzKClcIlxuICAgICAgICAqbmdJZj1cImNvbmZpZ3VyYXRpb24/LmVycm9yTWVzc2FnZXM/Lmxlbmd0aCA+IDFcIlxuICAgICAgICBjbGFzcz1cImN4LWVycm9yLXRvZ2dsZVwiXG4gICAgICAgIFthdHRyLmFyaWEtZXhwYW5kZWRdPVwic2hvd0Vycm9yc1wiXG4gICAgICA+XG4gICAgICAgIHt7ICdjb25maWd1cmF0b3IuaGVhZGVyLnJldmlld0Vycm9ycycgfCBjeFRyYW5zbGF0ZSB9fVxuICAgICAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiIXNob3dFcnJvcnNcIj5cbiAgICAgICAgICA8Y3gtaWNvbiB0eXBlPVwiQ0FSRVRfRE9XTlwiPjwvY3gtaWNvbj5cbiAgICAgICAgPC9uZy1jb250YWluZXI+XG5cbiAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cInNob3dFcnJvcnNcIj5cbiAgICAgICAgICA8Y3gtaWNvbiB0eXBlPVwiQ0FSRVRfVVBcIj48L2N4LWljb24+XG4gICAgICAgIDwvbmctY29udGFpbmVyPlxuICAgICAgPC9idXR0b24+XG4gICAgICA8ZGl2XG4gICAgICAgIGNsYXNzPVwiY3gtZXJyb3ItbWVzc2FnZXNcIlxuICAgICAgICBbY2xhc3MuaW5saW5lXT1cImNvbmZpZ3VyYXRpb24/LmVycm9yTWVzc2FnZXM/Lmxlbmd0aCA9PT0gMVwiXG4gICAgICA+XG4gICAgICAgIDxkaXZcbiAgICAgICAgICBjbGFzcz1cImN4LWVycm9yLW1lc3NhZ2VcIlxuICAgICAgICAgIFtjbGFzcy5vcGVuXT1cIlxuICAgICAgICAgICAgc2hvd0Vycm9ycyB8fCBjb25maWd1cmF0aW9uPy5lcnJvck1lc3NhZ2VzPy5sZW5ndGggPT09IDFcbiAgICAgICAgICBcIlxuICAgICAgICAgICpuZ0Zvcj1cImxldCBlcnJvck1lc3NhZ2Ugb2YgY29uZmlndXJhdGlvbi5lcnJvck1lc3NhZ2VzXCJcbiAgICAgICAgPlxuICAgICAgICAgIHt7IGVycm9yTWVzc2FnZSB9fVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICA8L25nLWNvbnRhaW5lcj5cbjwvbmctY29udGFpbmVyPlxuIl19