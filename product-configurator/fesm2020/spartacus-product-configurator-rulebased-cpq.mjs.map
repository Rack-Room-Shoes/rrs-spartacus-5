{"version":3,"file":"spartacus-product-configurator-rulebased-cpq.mjs","sources":["../../../feature-libs/product-configurator/rulebased/cpq/occ/converters/cpq-configurator-occ.converters.ts","../../../feature-libs/product-configurator/rulebased/cpq/occ/converters/occ-configurator-cpq-add-to-cart-serializer.ts","../../../feature-libs/product-configurator/rulebased/cpq/occ/converters/occ-configurator-cpq-update-cart-entry-serializer.ts","../../../feature-libs/product-configurator/rulebased/cpq/occ/converters/index.ts","../../../feature-libs/product-configurator/rulebased/cpq/occ/cpq-configurator-occ.models.ts","../../../feature-libs/product-configurator/rulebased/cpq/occ/default-occ-configurator-cpq-config.ts","../../../feature-libs/product-configurator/rulebased/cpq/occ/cpq-configurator-occ.module.ts","../../../feature-libs/product-configurator/rulebased/cpq/occ/cpq-configurator-occ.service.ts","../../../feature-libs/product-configurator/rulebased/cpq/occ/model/occ-cpq-configurator-endpoints.model.ts","../../../feature-libs/product-configurator/rulebased/cpq/occ/model/index.ts","../../../feature-libs/product-configurator/rulebased/cpq/occ/index.ts","../../../feature-libs/product-configurator/rulebased/cpq/rest/cpq.models.ts","../../../feature-libs/product-configurator/rulebased/cpq/rest/converters/cpq-configurator-normalizer-utils.service.ts","../../../feature-libs/product-configurator/rulebased/cpq/rest/converters/cpq-configurator-normalizer.ts","../../../feature-libs/product-configurator/rulebased/cpq/rest/converters/cpq-configurator-overview-normalizer.ts","../../../feature-libs/product-configurator/rulebased/cpq/rest/cpq-configurator-utils.ts","../../../feature-libs/product-configurator/rulebased/cpq/rest/converters/cpq-configurator-serializer.ts","../../../feature-libs/product-configurator/rulebased/cpq/rest/converters/cpq-configurator-value-serializer.ts","../../../feature-libs/product-configurator/rulebased/cpq/rest/converters/cpq-configurator.converters.ts","../../../feature-libs/product-configurator/rulebased/cpq/rest/converters/index.ts","../../../feature-libs/product-configurator/rulebased/cpq/rest/cpq-configurator-endpoint.config.ts","../../../feature-libs/product-configurator/rulebased/cpq/rest/cpq-configurator-endpoint.service.ts","../../../feature-libs/product-configurator/rulebased/cpq/rest/cpq-configurator-rest.service.ts","../../../feature-libs/product-configurator/rulebased/cpq/rest/cpq-configurator-rest.adapter.ts","../../../feature-libs/product-configurator/rulebased/cpq/rest/default-cpq-configurator-endpoint.config.ts","../../../feature-libs/product-configurator/rulebased/cpq/rest/cpq-configurator-rest.module.ts","../../../feature-libs/product-configurator/rulebased/cpq/rest/index.ts","../../../feature-libs/product-configurator/rulebased/cpq/rulebased-cpq-configurator.module.ts","../../../feature-libs/product-configurator/rulebased/cpq/public_api.ts","../../../feature-libs/product-configurator/rulebased/cpq/spartacus-product-configurator-rulebased-cpq.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { Converter } from '@spartacus/core';\nimport { Configurator } from '@spartacus/product-configurator/rulebased';\nimport { OccCpqConfigurator } from '../cpq-configurator-occ.models';\n\nexport const CPQ_CONFIGURATOR_ADD_TO_CART_SERIALIZER = new InjectionToken<\n  Converter<\n    Configurator.AddToCartParameters,\n    OccCpqConfigurator.AddToCartParameters\n  >\n>('CpqConfiguratorAddToCartSerializer');\n\nexport const CPQ_CONFIGURATOR_UPDATE_CART_ENTRY_SERIALIZER = new InjectionToken<\n  Converter<\n    Configurator.AddToCartParameters,\n    OccCpqConfigurator.UpdateConfigurationForCartEntryParameters\n  >\n>('CpqConfiguratorUpdateCartEntrySerializer');\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Converter } from '@spartacus/core';\nimport { Configurator } from '@spartacus/product-configurator/rulebased';\nimport { OccCpqConfigurator } from '../cpq-configurator-occ.models';\n\n@Injectable({ providedIn: 'root' })\nexport class OccConfiguratorCpqAddToCartSerializer\n  implements\n    Converter<\n      Configurator.AddToCartParameters,\n      OccCpqConfigurator.AddToCartParameters\n    >\n{\n  convert(\n    source: Configurator.AddToCartParameters,\n    target?: OccCpqConfigurator.AddToCartParameters\n  ): OccCpqConfigurator.AddToCartParameters {\n    const resultTarget: OccCpqConfigurator.AddToCartParameters = {\n      ...target,\n      userId: source.userId,\n      cartId: source.cartId,\n      product: { code: source.productCode },\n      quantity: source.quantity,\n      configId: source.configId,\n    };\n\n    return resultTarget;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Converter } from '@spartacus/core';\nimport { Configurator } from '@spartacus/product-configurator/rulebased';\nimport { OccCpqConfigurator } from '../cpq-configurator-occ.models';\n\n@Injectable({ providedIn: 'root' })\nexport class OccConfiguratorCpqUpdateCartEntrySerializer\n  implements\n    Converter<\n      Configurator.UpdateConfigurationForCartEntryParameters,\n      OccCpqConfigurator.UpdateConfigurationForCartEntryParameters\n    >\n{\n  convert(\n    source: Configurator.UpdateConfigurationForCartEntryParameters,\n    target?: OccCpqConfigurator.UpdateConfigurationForCartEntryParameters\n  ): OccCpqConfigurator.UpdateConfigurationForCartEntryParameters {\n    const resultTarget: OccCpqConfigurator.UpdateConfigurationForCartEntryParameters =\n      {\n        ...target,\n        userId: source.userId,\n        cartId: source.cartId,\n        entryNumber: source.cartEntryNumber,\n        configId: source.configuration.configId,\n      };\n\n    return resultTarget;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './cpq-configurator-occ.converters';\nexport * from './occ-configurator-cpq-add-to-cart-serializer';\nexport * from './occ-configurator-cpq-update-cart-entry-serializer';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * An interface representing the models used for the communication with the OCC part of the CPQ configurator\n */\nexport namespace OccCpqConfigurator {\n  export interface AddToCartParameters {\n    userId?: string;\n    cartId?: string;\n    product?: AddToCartProductData;\n    quantity?: number;\n    configId?: string;\n  }\n\n  export interface AddToCartProductData {\n    code?: string;\n  }\n\n  export interface UpdateConfigurationForCartEntryParameters {\n    userId?: string;\n    cartId?: string;\n    configId: string;\n    entryNumber: string;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { OccConfig } from '@spartacus/core';\n\nexport function defaultOccCpqConfiguratorConfigFactory(): OccConfig {\n  return {\n    backend: {\n      occ: {\n        endpoints: {\n          getCpqAccessData: 'users/current/access/cpqconfigurator',\n          addCpqConfigurationToCart:\n            'users/${userId}/carts/${cartId}/entries/cpqconfigurator',\n          readCpqConfigurationForCartEntry:\n            'users/${userId}/carts/${cartId}/entries/${cartEntryNumber}/cpqconfigurator',\n          readCpqConfigurationForOrderEntry:\n            'users/${userId}/orders/${orderId}/entries/${orderEntryNumber}/cpqconfigurator',\n          updateCpqConfigurationForCartEntry:\n            'users/${userId}/carts/${cartId}/entries/${cartEntryNumber}/cpqconfigurator',\n        },\n      },\n    },\n  };\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OccConfiguratorCpqUpdateCartEntrySerializer } from './converters';\nimport {\n  CPQ_CONFIGURATOR_ADD_TO_CART_SERIALIZER,\n  CPQ_CONFIGURATOR_UPDATE_CART_ENTRY_SERIALIZER,\n} from './converters/cpq-configurator-occ.converters';\nimport { OccConfiguratorCpqAddToCartSerializer } from './converters/occ-configurator-cpq-add-to-cart-serializer';\nimport { defaultOccCpqConfiguratorConfigFactory } from './default-occ-configurator-cpq-config';\nimport { provideDefaultConfigFactory } from '@spartacus/core';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfigFactory(defaultOccCpqConfiguratorConfigFactory),\n    {\n      provide: CPQ_CONFIGURATOR_ADD_TO_CART_SERIALIZER,\n      useExisting: OccConfiguratorCpqAddToCartSerializer,\n      multi: true,\n    },\n    {\n      provide: CPQ_CONFIGURATOR_UPDATE_CART_ENTRY_SERIALIZER,\n      useExisting: OccConfiguratorCpqUpdateCartEntrySerializer,\n      multi: true,\n    },\n  ],\n})\nexport class CpqConfiguratorOccModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {\n  CartModification,\n  CART_MODIFICATION_NORMALIZER,\n} from '@spartacus/cart/base/root';\nimport { ConverterService, OccEndpointsService } from '@spartacus/core';\nimport { CommonConfigurator } from '@spartacus/product-configurator/common';\nimport { Configurator } from '@spartacus/product-configurator/rulebased';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {\n  CPQ_CONFIGURATOR_ADD_TO_CART_SERIALIZER,\n  CPQ_CONFIGURATOR_UPDATE_CART_ENTRY_SERIALIZER,\n} from './converters/cpq-configurator-occ.converters';\n\n@Injectable({ providedIn: 'root' })\nexport class CpqConfiguratorOccService {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpointsService: OccEndpointsService,\n    protected converterService: ConverterService\n  ) {}\n\n  addToCart(\n    parameters: Configurator.AddToCartParameters\n  ): Observable<CartModification> {\n    const url = this.occEndpointsService.buildUrl('addCpqConfigurationToCart', {\n      urlParams: {\n        userId: parameters.userId,\n        cartId: parameters.cartId,\n      },\n    });\n\n    const occAddToCartParameters = this.converterService.convert(\n      parameters,\n      CPQ_CONFIGURATOR_ADD_TO_CART_SERIALIZER\n    );\n\n    return this.http\n      .post<CartModification>(url, occAddToCartParameters)\n      .pipe(this.converterService.pipeable(CART_MODIFICATION_NORMALIZER));\n  }\n\n  updateCartEntry(\n    parameters: Configurator.UpdateConfigurationForCartEntryParameters\n  ): Observable<CartModification> {\n    const url = this.occEndpointsService.buildUrl(\n      'updateCpqConfigurationForCartEntry',\n      {\n        urlParams: {\n          userId: parameters.userId,\n          cartId: parameters.cartId,\n          cartEntryNumber: parameters.cartEntryNumber,\n        },\n      }\n    );\n\n    const occUpdateCartEntryParameters = this.converterService.convert(\n      parameters,\n      CPQ_CONFIGURATOR_UPDATE_CART_ENTRY_SERIALIZER\n    );\n\n    return this.http\n      .put<CartModification>(url, occUpdateCartEntryParameters)\n      .pipe(this.converterService.pipeable(CART_MODIFICATION_NORMALIZER));\n  }\n\n  getConfigIdForCartEntry(\n    parameters: CommonConfigurator.ReadConfigurationFromCartEntryParameters\n  ): Observable<string> {\n    const url = this.occEndpointsService.buildUrl(\n      'readCpqConfigurationForCartEntry',\n      {\n        urlParams: {\n          userId: parameters.userId,\n          cartId: parameters.cartId,\n          cartEntryNumber: parameters.cartEntryNumber,\n        },\n      }\n    );\n\n    return this.http.get<{ configId: string }>(url).pipe(\n      map((response) => {\n        return response.configId;\n      })\n    );\n  }\n\n  getConfigIdForOrderEntry(\n    parameters: CommonConfigurator.ReadConfigurationFromOrderEntryParameters\n  ): Observable<string> {\n    const url = this.occEndpointsService.buildUrl(\n      'readCpqConfigurationForOrderEntry',\n      {\n        urlParams: {\n          userId: parameters.userId,\n          orderId: parameters.orderId,\n          orderEntryNumber: parameters.orderEntryNumber,\n        },\n      }\n    );\n\n    return this.http.get<{ configId: string }>(url).pipe(\n      map((response) => {\n        return response.configId;\n      })\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { OccEndpoint } from '@spartacus/core';\ndeclare module '@spartacus/core' {\n  interface OccEndpoints {\n    /**\n     * Endpoint to get Cpq token\n     *\n     * @member {string}\n     */\n    getCpqAccessData?: string | OccEndpoint;\n    /**\n     * Endpoint to add a cpq configuration to the current cart\n     *\n     * @member {string}\n     */\n    addCpqConfigurationToCart?: string | OccEndpoint;\n    /**\n     * Endpoint for updating a cpq configuration attached to the given cart entry\n     */\n    updateCpqConfigurationForCartEntry?: string | OccEndpoint;\n    /**\n     * Endpoint for reading a CPQ configuration attached to the given cart entry\n     */\n    readCpqConfigurationForCartEntry?: string | OccEndpoint;\n    /**\n     * Endpoint for reading a CPQ configuration attached to a given order entry\n     */\n    readCpqConfigurationForOrderEntry?: string | OccEndpoint;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Imported for side effects (module augmentation)\nimport './occ-cpq-configurator-endpoints.model';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './converters/index';\nexport * from './cpq-configurator-occ.models';\nexport * from './cpq-configurator-occ.module';\nexport * from './cpq-configurator-occ.service';\nexport * from './model/index';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n *\n * An interface representing the models used for the communication with the CPQ configurator\n */\nexport namespace Cpq {\n  /**\n   * Response of create configuration requests\n   */\n  export interface ConfigurationCreatedResponseData {\n    /**\n     * CPQ configuration ID of the newly created configuration\n     */\n    configurationId: string;\n  }\n\n  /**\n   * An interface representing the CPQ configuration.\n   */\n  export interface Configuration {\n    productSystemId: string;\n    productName?: string;\n    completed?: boolean;\n    incompleteMessages?: string[];\n    incompleteAttributes?: string[];\n    invalidMessages?: string[];\n    failedValidations?: string[];\n    errorMessages?: string[];\n    conflictMessages?: string[];\n    numberOfConflicts?: number;\n    currencyISOCode: string;\n    currencySign?: string;\n    responder?: Cpq.Responder;\n    tabs?: Tab[];\n    attributes?: Attribute[]; // attributes of current selected tab\n  }\n\n  /**\n   *\n   * An interface representing the CPQ configuration responder.\n   */\n  export interface Responder {\n    totalPrice?: string;\n    baseProductPrice?: string;\n  }\n\n  /**\n   *\n   * An interface representing the CPQ configuration tab.\n   */\n  export interface Tab {\n    id: number;\n    name?: string;\n    displayName?: string;\n    isIncomplete?: boolean;\n    isSelected?: boolean;\n    attributes?: Attribute[]; // used for overview - has to be populated explicitly\n  }\n\n  /**\n   *\n   * An interface representing the CPQ configuration attribute.\n   */\n  export interface Attribute {\n    pA_ID: number;\n    stdAttrCode: number;\n    name?: string;\n    description?: string;\n    label?: string;\n    displayAs?: number;\n    dataType?: Cpq.DataType;\n    required?: boolean;\n    incomplete?: boolean;\n    isEnabled?: boolean;\n    isLineItem?: boolean;\n    hasConflict?: boolean;\n    userInput?: string;\n    quantity?: string;\n    values?: Value[];\n  }\n\n  /**\n   *\n   * An interface representing the CPQ configuration attribute value.\n   */\n  export interface Value {\n    paV_ID: number;\n    valueCode?: string;\n    valueDisplay?: string;\n    description?: string;\n    productSystemId?: string;\n    selected?: boolean;\n    price?: string;\n    quantity?: string;\n  }\n\n  /**\n   *\n   * An interface representing the structure for update of CPQ configuration attribute.\n   */\n  export interface UpdateAttribute {\n    configurationId: string;\n    standardAttributeCode: string;\n    changeAttributeValue: ChangeAttributeValue;\n    tabId: string;\n  }\n\n  /**\n   *\n   * An interface representing the update request body structure for update of CPQ configuration attribute.\n   */\n  export interface ChangeAttributeValue {\n    attributeValueIds?: string;\n    userInput?: string;\n    quantity?: number;\n  }\n  /**\n   *\n   * An interface representing the structure for update quantity of CPQ configuration attribute value.\n   */\n  export interface UpdateValue {\n    configurationId: string;\n    standardAttributeCode: string;\n    attributeValueId: string;\n    quantity: number;\n    tabId: string;\n  }\n\n  /**\n   *\n   * An enum representing possible displayAs value.\n   */\n  export enum DisplayAs {\n    RADIO_BUTTON = 1,\n    CHECK_BOX = 2,\n    DROPDOWN = 3,\n    LIST_BOX = 4,\n    LIST_BOX_MULTI = 5,\n    READ_ONLY = 71,\n    INPUT = 95,\n    AUTO_COMPLETE_CUSTOM = 102,\n  }\n\n  export enum DataType {\n    INPUT_STRING = 'String',\n    INPUT_NUMBER = 'Number',\n    QTY_ATTRIBUTE_LEVEL = 'Quantity',\n    QTY_VALUE_LEVEL = 'Attr.Quantity',\n    N_A = 'N/A',\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  formatCurrency,\n  getCurrencySymbol,\n  getLocaleId,\n} from '@angular/common';\nimport { Injectable, isDevMode } from '@angular/core';\nimport { LanguageService } from '@spartacus/core';\nimport { Configurator } from '@spartacus/product-configurator/rulebased';\nimport { Cpq } from '../cpq.models';\n\n/**\n * Utilities for CPQ configuration\n */\n@Injectable({ providedIn: 'root' })\nexport class CpqConfiguratorNormalizerUtilsService {\n  constructor(protected languageService: LanguageService) {}\n\n  /**\n   * Converts quantity to be shown in the overview page\n   *\n   * @param {Cpq.Value} value - CPQ Value\n   * @param {Cpq.Attribute} attribute - CPQ Attribute\n   * @returns {number} - Quantity\n   */\n  convertQuantity(\n    value: Cpq.Value,\n    attribute: Cpq.Attribute\n  ): number | undefined {\n    if (!value.selected) {\n      return undefined;\n    }\n    const configuratorDataType: Configurator.DataType =\n      this.convertDataType(attribute);\n    let quantity;\n    switch (configuratorDataType) {\n      case Configurator.DataType.USER_SELECTION_QTY_ATTRIBUTE_LEVEL:\n        quantity = Number(attribute.quantity);\n        break;\n      case Configurator.DataType.USER_SELECTION_QTY_VALUE_LEVEL:\n        quantity = Number(value.quantity);\n        break;\n      default:\n        quantity = undefined;\n    }\n    return quantity;\n  }\n\n  /**\n   * Converts value price\n   *\n   * @param { Cpq.Value} value - CPQ Value\n   * @param {string} currency - Currency code ISO\n   * @returns {Configurator.PriceDetails}\n   */\n  convertValuePrice(\n    value: Cpq.Value,\n    currency: string\n  ): Configurator.PriceDetails | undefined {\n    let price;\n    if (value.price) {\n      price = {\n        currencyIso: currency,\n        value: parseFloat(value.price),\n      };\n      this.formatPriceForLocale(price, this.getLanguage());\n    }\n    return price;\n  }\n\n  /**\n   * Calculates total value price\n   *\n   * @param {number} quantity - Quantity\n   * @param {Configurator.PriceDetails} valuePrice - PriceDetails of the single value price\n   * @returns {Configurator.PriceDetails } - total value price\n   */\n  calculateValuePriceTotal(\n    quantity: number,\n    valuePrice?: Configurator.PriceDetails\n  ): Configurator.PriceDetails | undefined {\n    let valuePriceTotal;\n    if (valuePrice) {\n      const calculationQuantity: number = quantity ? quantity : 1;\n      valuePriceTotal = {\n        currencyIso: valuePrice.currencyIso,\n        value: calculationQuantity * valuePrice.value,\n      };\n      this.formatPriceForLocale(valuePriceTotal, this.getLanguage());\n    }\n    return valuePriceTotal;\n  }\n\n  /**\n   * Calculates total attribute price\n   *\n   * @param {Configurator.Attribute} attribute - Configurator Attribute\n   * @param {string} currency - Currency\n   * @returns {Configurator.PriceDetails} - total attribute price\n   */\n  calculateAttributePriceTotal(\n    attribute: Configurator.Attribute,\n    currency: string\n  ): Configurator.PriceDetails {\n    const priceTotal = attribute.values\n      ?.filter((entry) => entry.selected && entry.valuePriceTotal)\n      .reduce((total, item) => total + (item.valuePriceTotal?.value ?? 0), 0);\n    const attributePriceTotal: Configurator.PriceDetails = {\n      currencyIso: currency,\n      value: priceTotal ?? 0,\n    };\n    this.formatPriceForLocale(attributePriceTotal, this.getLanguage());\n    return attributePriceTotal;\n  }\n\n  /**\n   * Formats price for given PriceDetails object and Locale\n   *\n   * @param {Configurator.PriceDetails} price - Price details\n   * @param {string} availableLocale - Original locale\n   */\n  protected formatPriceForLocale(\n    price: Configurator.PriceDetails,\n    availableLocale: string\n  ): void {\n    const currencySymbol: string = getCurrencySymbol(\n      price.currencyIso,\n      'narrow',\n      availableLocale\n    );\n    price.formattedValue = formatCurrency(\n      price.value,\n      availableLocale,\n      currencySymbol,\n      price.currencyIso\n    );\n  }\n\n  /**\n   * Converts the CPQ Attribute data type into the Configurator Attribute data type\n   *\n   * @param {Cpq.Attribute} cpqAttribute - CPQ Attribute\n   * @returns {Configurator.DataType} Data type of the configurator attribute\n   */\n  convertDataType(cpqAttribute: Cpq.Attribute): Configurator.DataType {\n    let dataType: Configurator.DataType;\n    switch (cpqAttribute.dataType) {\n      case Cpq.DataType.INPUT_STRING: {\n        dataType = Configurator.DataType.INPUT_STRING;\n        break;\n      }\n      case Cpq.DataType.INPUT_NUMBER: {\n        dataType = Configurator.DataType.INPUT_NUMBER;\n        break;\n      }\n      case Cpq.DataType.N_A: {\n        dataType = Configurator.DataType.USER_SELECTION_NO_QTY;\n        break;\n      }\n      case Cpq.DataType.QTY_ATTRIBUTE_LEVEL: {\n        dataType = Configurator.DataType.USER_SELECTION_QTY_ATTRIBUTE_LEVEL;\n        break;\n      }\n      case Cpq.DataType.QTY_VALUE_LEVEL: {\n        if (\n          cpqAttribute.displayAs === Cpq.DisplayAs.RADIO_BUTTON ||\n          cpqAttribute.displayAs === Cpq.DisplayAs.DROPDOWN\n        ) {\n          dataType = Configurator.DataType.USER_SELECTION_NO_QTY;\n        } else if (\n          cpqAttribute.displayAs === Cpq.DisplayAs.CHECK_BOX &&\n          !cpqAttribute.isLineItem\n        ) {\n          dataType = Configurator.DataType.USER_SELECTION_NO_QTY;\n        } else {\n          dataType = Configurator.DataType.USER_SELECTION_QTY_VALUE_LEVEL;\n        }\n        break;\n      }\n      default: {\n        dataType = Configurator.DataType.NOT_IMPLEMENTED;\n      }\n    }\n    return dataType;\n  }\n\n  /**\n   * Converts price summary\n   *\n   * @param {cpqConfiguration: Cpq.Configuration} cpqConfiguration - CPQ configuration\n   * @returns {Configurator.PriceSummary} - price summary\n   */\n  convertPriceSummary(\n    cpqConfiguration: Cpq.Configuration\n  ): Configurator.PriceSummary {\n    const priceSummary: Configurator.PriceSummary = {};\n    if (cpqConfiguration.currencyISOCode) {\n      const currency: string = cpqConfiguration.currencyISOCode;\n      if (\n        cpqConfiguration?.responder?.totalPrice &&\n        cpqConfiguration?.currencySign\n      ) {\n        const currencySign: string = cpqConfiguration?.currencySign;\n        const totalPriceAsString: string =\n          cpqConfiguration.responder.totalPrice.replace(currencySign, '');\n        const totalPrice: Configurator.PriceDetails = {\n          currencyIso: currency,\n          value: parseFloat(totalPriceAsString),\n        };\n        this.formatPriceForLocale(totalPrice, this.getLanguage());\n        priceSummary.currentTotal = totalPrice;\n      }\n      if (cpqConfiguration?.responder?.baseProductPrice) {\n        const basePriceAsString: string =\n          cpqConfiguration.responder.baseProductPrice;\n        const basePrice: Configurator.PriceDetails = {\n          currencyIso: currency,\n          value: parseFloat(basePriceAsString),\n        };\n        this.formatPriceForLocale(basePrice, this.getLanguage());\n        priceSummary.basePrice = basePrice;\n      }\n      if (priceSummary.currentTotal && priceSummary.basePrice) {\n        const selectedOptionsPrice: Configurator.PriceDetails = {\n          currencyIso: currency,\n          value: priceSummary.currentTotal.value - priceSummary.basePrice.value,\n        };\n        this.formatPriceForLocale(selectedOptionsPrice, this.getLanguage());\n        priceSummary.selectedOptions = selectedOptionsPrice;\n      }\n    }\n    return priceSummary;\n  }\n\n  /**\n   * Verifies whether at least one value of a CPQ Attribute has an assigned product\n   *\n   * @param {Cpq.Value[]} attributeValues - CPQ Attribute values\n   * @returns {boolean} - true, if at least one value of a CPQ Attribute has an assigned product\n   */\n  hasAnyProducts(attributeValues: Cpq.Value[]): boolean {\n    return attributeValues.some((value: Cpq.Value) => value?.productSystemId);\n  }\n\n  /**\n   * Convert attribute label\n   *\n   * @param {attribute: Cpq.Attribute} attribute - CPQ Attribute\n   * @returns {string} - attribute label\n   */\n  convertAttributeLabel(attribute: Cpq.Attribute): string {\n    return attribute.label\n      ? attribute.label\n      : attribute.name\n      ? attribute.name\n      : '';\n  }\n\n  /**\n   * Gets the current language.\n   *\n   * @return {string} - current language\n   */\n  protected getLanguage(): string {\n    const lang = this.getActiveLanguage();\n    try {\n      getLocaleId(lang);\n      return lang;\n    } catch {\n      this.reportMissingLocaleData(lang);\n      return 'en';\n    }\n  }\n\n  /**\n   * Gets the active language.\n   *\n   * @return {string} - active language\n   */\n  protected getActiveLanguage(): string {\n    let result;\n    this.languageService\n      .getActive()\n      .subscribe((lang) => (result = lang))\n      .unsubscribe();\n\n    return result ?? 'en';\n  }\n\n  /**\n   * Logs the message for the missing local data.\n   *\n   * @param {string} lang - Active language\n   */\n  protected reportMissingLocaleData(lang: string): void {\n    if (isDevMode()) {\n      console.warn(\n        `CpqConfiguratorNormalizerUtilsService: No locale data registered for '${lang}' (see https://angular.io/api/common/registerLocaleData).`\n      );\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Converter, TranslationService } from '@spartacus/core';\nimport { ConfiguratorModelUtils } from '@spartacus/product-configurator/common';\nimport { Configurator } from '@spartacus/product-configurator/rulebased';\nimport { take } from 'rxjs/operators';\nimport { Cpq } from '../cpq.models';\nimport { CpqConfiguratorNormalizerUtilsService } from './cpq-configurator-normalizer-utils.service';\n\n@Injectable()\nexport class CpqConfiguratorNormalizer\n  implements Converter<Cpq.Configuration, Configurator.Configuration>\n{\n  constructor(\n    protected cpqConfiguratorNormalizerUtilsService: CpqConfiguratorNormalizerUtilsService,\n    protected translation: TranslationService\n  ) {}\n\n  convert(\n    source: Cpq.Configuration,\n    target?: Configurator.Configuration\n  ): Configurator.Configuration {\n    const resultTarget: Configurator.Configuration = {\n      ...target,\n      configId: '', //will later be populated with final value\n      complete: !source.incompleteAttributes?.length,\n      consistent:\n        !source.invalidMessages?.length &&\n        !source.failedValidations?.length &&\n        !source.incompleteMessages?.length &&\n        !source.errorMessages?.length,\n      totalNumberOfIssues: this.generateTotalNumberOfIssues(source),\n      productCode: source.productSystemId,\n      priceSummary:\n        this.cpqConfiguratorNormalizerUtilsService.convertPriceSummary(source),\n      groups: [],\n      flatGroups: [],\n      owner: ConfiguratorModelUtils.createInitialOwner(),\n      interactionState: {},\n      errorMessages: this.generateErrorMessages(source),\n      warningMessages: this.generateWarningMessages(source),\n    };\n    source.tabs?.forEach((tab) =>\n      this.convertGroup(\n        tab,\n        source.attributes ?? [],\n        source.currencyISOCode,\n        resultTarget.groups,\n        resultTarget.flatGroups\n      )\n    );\n\n    if (!resultTarget.groups || resultTarget.groups.length === 0) {\n      this.convertGenericGroup(\n        source.attributes ?? [],\n        source.incompleteAttributes ?? [],\n        source.currencyISOCode,\n        resultTarget.groups,\n        resultTarget.flatGroups\n      );\n    }\n\n    return resultTarget;\n  }\n\n  protected generateTotalNumberOfIssues(source: Cpq.Configuration): number {\n    let numberOfIssues: number =\n      (source.incompleteAttributes?.length ?? 0) +\n      (source.incompleteMessages?.length ?? 0) +\n      (source.invalidMessages?.length ?? 0) +\n      (source.failedValidations?.length ?? 0) +\n      (source.errorMessages?.length ?? 0);\n    return numberOfIssues;\n  }\n\n  protected generateWarningMessages(source: Cpq.Configuration): string[] {\n    let warnMsgs: string[] = [];\n    warnMsgs = warnMsgs.concat(source.failedValidations ?? []);\n    warnMsgs = warnMsgs.concat(source.incompleteMessages ?? []);\n    return warnMsgs;\n  }\n\n  protected generateErrorMessages(source: Cpq.Configuration): string[] {\n    let errorMsgs: string[] = [];\n    errorMsgs = errorMsgs.concat(source.errorMessages ?? []);\n    errorMsgs = errorMsgs.concat(source.invalidMessages ?? []);\n    return errorMsgs;\n  }\n\n  protected convertGroup(\n    source: Cpq.Tab,\n    sourceAttributes: Cpq.Attribute[],\n    currency: string,\n    groupList: Configurator.Group[],\n    flatGroupList: Configurator.Group[]\n  ) {\n    const attributes: Configurator.Attribute[] = [];\n    if (source.isSelected) {\n      sourceAttributes.forEach((sourceAttribute) =>\n        this.convertAttribute(sourceAttribute, source.id, currency, attributes)\n      );\n    }\n\n    const group: Configurator.Group = {\n      id: source.id.toString(),\n      name: source.name,\n      description: source.displayName,\n      configurable: true,\n      complete: !source.isIncomplete,\n      consistent: true,\n      groupType: Configurator.GroupType.ATTRIBUTE_GROUP,\n      attributes: attributes,\n      subGroups: [],\n    };\n\n    flatGroupList.push(group);\n    groupList.push(group);\n  }\n\n  protected convertGenericGroup(\n    sourceAttributes: Cpq.Attribute[],\n    incompleteAttributes: string[],\n    currency: string,\n    groupList: Configurator.Group[],\n    flatGroupList: Configurator.Group[]\n  ) {\n    const attributes: Configurator.Attribute[] = [];\n    sourceAttributes.forEach((sourceAttribute) =>\n      this.convertAttribute(sourceAttribute, 0, currency, attributes)\n    );\n    const group: Configurator.Group = {\n      id: '0',\n      name: '_GEN',\n      configurable: true,\n      complete: incompleteAttributes && incompleteAttributes.length > 0,\n      consistent: true,\n      groupType: Configurator.GroupType.ATTRIBUTE_GROUP,\n      attributes: attributes,\n      subGroups: [],\n    };\n\n    this.translation\n      .translate('configurator.group.general')\n      .pipe(take(1))\n      .subscribe((generalText) => (group.description = generalText));\n\n    groupList.push(group);\n    flatGroupList.push(group);\n  }\n\n  protected convertAttribute(\n    sourceAttribute: Cpq.Attribute,\n    groupId: number,\n    currency: string,\n    attributeList: Configurator.Attribute[]\n  ): void {\n    const attribute: Configurator.Attribute = {\n      attrCode: sourceAttribute.stdAttrCode,\n      name: sourceAttribute.pA_ID.toString(),\n      description: sourceAttribute.description,\n      label:\n        this.cpqConfiguratorNormalizerUtilsService.convertAttributeLabel(\n          sourceAttribute\n        ),\n      required: sourceAttribute.required,\n      isLineItem: sourceAttribute.isLineItem,\n      uiType: this.convertAttributeType(sourceAttribute),\n      dataType:\n        this.cpqConfiguratorNormalizerUtilsService.convertDataType(\n          sourceAttribute\n        ),\n      quantity: Number(sourceAttribute.quantity),\n      groupId: groupId.toString(),\n      userInput: sourceAttribute.userInput,\n      hasConflicts: sourceAttribute.hasConflict,\n      selectedSingleValue: undefined,\n      images: [],\n    };\n\n    if (\n      sourceAttribute.values &&\n      sourceAttribute.displayAs !== Cpq.DisplayAs.INPUT\n    ) {\n      const values: Configurator.Value[] = [];\n      sourceAttribute.values.forEach((value) =>\n        this.convertValue(value, sourceAttribute, currency, values)\n      );\n      attribute.values = values;\n      this.setSelectedSingleValue(attribute);\n    }\n    attribute.attributePriceTotal =\n      this.cpqConfiguratorNormalizerUtilsService.calculateAttributePriceTotal(\n        attribute,\n        currency\n      );\n    this.compileAttributeIncomplete(attribute);\n    attributeList.push(attribute);\n  }\n\n  protected setSelectedSingleValue(attribute: Configurator.Attribute) {\n    const selectedValues = attribute.values\n      ?.map((entry) => entry)\n      .filter((entry) => entry.selected);\n    if (selectedValues && selectedValues.length === 1) {\n      attribute.selectedSingleValue = selectedValues[0].valueCode;\n    }\n  }\n\n  protected convertValueDisplay(\n    sourceValue: Cpq.Value,\n    sourceAttribute: Cpq.Attribute,\n    value: Configurator.Value\n  ): void {\n    sourceAttribute?.displayAs === Cpq.DisplayAs.DROPDOWN &&\n    sourceValue?.selected &&\n    sourceValue.paV_ID === 0\n      ? this.translation\n          .translate('configurator.attribute.dropDownSelectMsg')\n          .pipe(take(1))\n          .subscribe((text) => (value.valueDisplay = text))\n      : value.valueDisplay;\n  }\n\n  protected convertValue(\n    sourceValue: Cpq.Value,\n    sourceAttribute: Cpq.Attribute,\n    currency: string,\n    values: Configurator.Value[]\n  ): void {\n    if (this.hasValueToBeIgnored(sourceAttribute, sourceValue)) {\n      return;\n    }\n    const value: Configurator.Value = {\n      valueCode: sourceValue.paV_ID.toString(),\n      name: sourceValue.valueCode,\n      valueDisplay: sourceValue.valueDisplay,\n      description: sourceValue.description,\n      productSystemId: sourceValue.productSystemId,\n      selected: sourceValue.selected,\n      quantity: this.cpqConfiguratorNormalizerUtilsService.convertQuantity(\n        sourceValue,\n        sourceAttribute\n      ),\n      valuePrice: this.cpqConfiguratorNormalizerUtilsService.convertValuePrice(\n        sourceValue,\n        currency\n      ),\n      images: [],\n    };\n\n    this.convertValueDisplay(sourceValue, sourceAttribute, value);\n    value.valuePriceTotal =\n      this.cpqConfiguratorNormalizerUtilsService.calculateValuePriceTotal(\n        value.quantity ?? 1,\n        value.valuePrice\n      );\n\n    values.push(value);\n  }\n\n  protected convertAttributeTypeOld(\n    displayAs: Cpq.DisplayAs,\n    displayAsProduct = false\n  ): Configurator.UiType {\n    let uiType: Configurator.UiType;\n    switch (displayAs) {\n      case Cpq.DisplayAs.RADIO_BUTTON: {\n        if (displayAsProduct) {\n          uiType = Configurator.UiType.RADIOBUTTON_PRODUCT;\n        } else {\n          uiType = Configurator.UiType.RADIOBUTTON;\n        }\n\n        break;\n      }\n\n      case Cpq.DisplayAs.DROPDOWN: {\n        if (displayAsProduct) {\n          uiType = Configurator.UiType.DROPDOWN_PRODUCT;\n        } else {\n          uiType = Configurator.UiType.DROPDOWN;\n        }\n\n        break;\n      }\n\n      case Cpq.DisplayAs.CHECK_BOX: {\n        if (displayAsProduct) {\n          uiType = Configurator.UiType.CHECKBOXLIST_PRODUCT;\n        } else {\n          uiType = Configurator.UiType.CHECKBOXLIST;\n        }\n\n        break;\n      }\n\n      case Cpq.DisplayAs.INPUT: {\n        uiType = Configurator.UiType.STRING;\n        break;\n      }\n\n      case Cpq.DisplayAs.READ_ONLY: {\n        uiType = Configurator.UiType.READ_ONLY;\n        break;\n      }\n\n      default: {\n        uiType = Configurator.UiType.NOT_IMPLEMENTED;\n      }\n    }\n    return uiType;\n  }\n\n  protected convertAttributeType(\n    sourceAttribute: Cpq.Attribute\n  ): Configurator.UiType {\n    const displayAs = sourceAttribute.displayAs;\n\n    const displayAsProduct: boolean =\n      sourceAttribute?.values &&\n      this.cpqConfiguratorNormalizerUtilsService.hasAnyProducts(\n        sourceAttribute?.values\n      )\n        ? true\n        : false;\n    const isEnabled: boolean = sourceAttribute.isEnabled ?? false;\n\n    if (\n      !isEnabled &&\n      (displayAs === Cpq.DisplayAs.RADIO_BUTTON ||\n        displayAs === Cpq.DisplayAs.DROPDOWN ||\n        displayAs === Cpq.DisplayAs.CHECK_BOX ||\n        displayAs === Cpq.DisplayAs.INPUT)\n    ) {\n      return Configurator.UiType.READ_ONLY;\n    }\n\n    let uiType: Configurator.UiType;\n    switch (displayAs) {\n      case Cpq.DisplayAs.RADIO_BUTTON: {\n        if (displayAsProduct) {\n          uiType = Configurator.UiType.RADIOBUTTON_PRODUCT;\n        } else {\n          uiType = Configurator.UiType.RADIOBUTTON;\n        }\n\n        break;\n      }\n\n      case Cpq.DisplayAs.DROPDOWN: {\n        if (displayAsProduct) {\n          uiType = Configurator.UiType.DROPDOWN_PRODUCT;\n        } else {\n          uiType = Configurator.UiType.DROPDOWN;\n        }\n\n        break;\n      }\n\n      case Cpq.DisplayAs.CHECK_BOX: {\n        if (displayAsProduct) {\n          uiType = Configurator.UiType.CHECKBOXLIST_PRODUCT;\n        } else {\n          uiType = Configurator.UiType.CHECKBOXLIST;\n        }\n\n        break;\n      }\n\n      case Cpq.DisplayAs.INPUT: {\n        if (sourceAttribute?.dataType === Cpq.DataType.INPUT_STRING) {\n          uiType = Configurator.UiType.STRING;\n        } else {\n          uiType = Configurator.UiType.NOT_IMPLEMENTED;\n        }\n        break;\n      }\n\n      default: {\n        uiType = Configurator.UiType.NOT_IMPLEMENTED;\n      }\n    }\n    return uiType;\n  }\n\n  protected compileAttributeIncomplete(attribute: Configurator.Attribute) {\n    //Default value for incomplete is false\n    attribute.incomplete = false;\n\n    switch (attribute.uiType) {\n      case Configurator.UiType.RADIOBUTTON:\n      case Configurator.UiType.RADIOBUTTON_PRODUCT:\n      case Configurator.UiType.DROPDOWN:\n      case Configurator.UiType.DROPDOWN_PRODUCT:\n      case Configurator.UiType.SINGLE_SELECTION_IMAGE: {\n        if (\n          !attribute.selectedSingleValue ||\n          attribute.selectedSingleValue === '0'\n        ) {\n          attribute.incomplete = true;\n        }\n        break;\n      }\n      case Configurator.UiType.NUMERIC:\n      case Configurator.UiType.STRING: {\n        if (!attribute.userInput) {\n          attribute.incomplete = true;\n        }\n        break;\n      }\n\n      case Configurator.UiType.CHECKBOXLIST:\n      case Configurator.UiType.CHECKBOXLIST_PRODUCT:\n      case Configurator.UiType.CHECKBOX:\n      case Configurator.UiType.MULTI_SELECTION_IMAGE: {\n        const isOneValueSelected =\n          attribute.values?.find((value) => value.selected) !== undefined\n            ? true\n            : false;\n\n        if (!isOneValueSelected) {\n          attribute.incomplete = true;\n        }\n        break;\n      }\n    }\n  }\n\n  protected hasValueToBeIgnored(\n    attribute: Cpq.Attribute,\n    value: Cpq.Value\n  ): boolean {\n    const selectedValues = attribute.values\n      ?.map((entry) => entry)\n      .filter((entry) => entry.selected && entry.paV_ID !== 0);\n    return (\n      (attribute.displayAs === Cpq.DisplayAs.DROPDOWN &&\n        attribute.required &&\n        selectedValues &&\n        selectedValues.length > 0 &&\n        value.paV_ID === 0) ??\n      false\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Converter, TranslationService } from '@spartacus/core';\nimport { Configurator } from '@spartacus/product-configurator/rulebased';\nimport { take } from 'rxjs/operators';\nimport { Cpq } from '../cpq.models';\nimport { CpqConfiguratorNormalizerUtilsService } from './cpq-configurator-normalizer-utils.service';\n\nconst INITIAL_OV_VALUE_ATTRIBUTE_NAME = '';\n\n@Injectable()\nexport class CpqConfiguratorOverviewNormalizer\n  implements Converter<Cpq.Configuration, Configurator.Overview>\n{\n  protected readonly NO_OPTION_SELECTED = 0;\n\n  constructor(\n    protected cpqConfiguratorNormalizerUtilsService: CpqConfiguratorNormalizerUtilsService,\n    protected translation: TranslationService\n  ) {}\n\n  convert(\n    source: Cpq.Configuration,\n    target?: Configurator.Overview\n  ): Configurator.Overview {\n    const resultTarget: Configurator.Overview = {\n      ...target,\n      configId: '',\n      productCode: source.productSystemId,\n      priceSummary:\n        this.cpqConfiguratorNormalizerUtilsService.convertPriceSummary(source),\n      groups: source.tabs\n        ?.flatMap((tab) => this.convertTab(tab, source.currencyISOCode))\n        .filter((tab) => tab.attributes && tab.attributes.length > 0),\n      totalNumberOfIssues: this.calculateTotalNumberOfIssues(source),\n    };\n    return resultTarget;\n  }\n\n  protected convertTab(\n    tab: Cpq.Tab,\n    currency: string\n  ): Configurator.GroupOverview {\n    let ovAttributes: Configurator.AttributeOverview[] = [];\n    tab.attributes?.forEach((attr) => {\n      ovAttributes = ovAttributes.concat(this.convertAttribute(attr, currency));\n    });\n    const groupOverview: Configurator.GroupOverview = {\n      id: tab.id.toString(),\n      groupDescription: tab.displayName,\n      attributes: ovAttributes,\n    };\n    if (groupOverview.id === '0') {\n      this.translation\n        .translate('configurator.group.general')\n        .pipe(take(1))\n        .subscribe(\n          (generalText) => (groupOverview.groupDescription = generalText)\n        );\n    }\n    return groupOverview;\n  }\n\n  protected convertAttribute(\n    attr: Cpq.Attribute,\n    currency: string\n  ): Configurator.AttributeOverview[] {\n    const attributeOverviewType: Configurator.AttributeOverviewType =\n      attr?.values &&\n      this.cpqConfiguratorNormalizerUtilsService.hasAnyProducts(attr?.values)\n        ? Configurator.AttributeOverviewType.BUNDLE\n        : Configurator.AttributeOverviewType.GENERAL;\n    const ovAttr: Configurator.AttributeOverview[] = [];\n    this.convertAttributeValue(attr, currency).forEach((ovValue) => {\n      ovAttr.push({\n        ...ovValue,\n        type: attributeOverviewType,\n        attribute:\n          this.cpqConfiguratorNormalizerUtilsService.convertAttributeLabel(\n            attr\n          ),\n        attributeId: attr.stdAttrCode.toString(),\n      });\n    });\n    return ovAttr;\n  }\n\n  protected convertAttributeValue(\n    attr: Cpq.Attribute,\n    currency: string\n  ): Configurator.AttributeOverview[] {\n    const ovValues: Configurator.AttributeOverview[] = [];\n    switch (attr.displayAs) {\n      case Cpq.DisplayAs.INPUT:\n        if (attr?.dataType === Cpq.DataType.INPUT_STRING) {\n          if (attr.userInput && attr.userInput.length > 0) {\n            ovValues.push(this.extractValueUserInput(attr, currency));\n          }\n        } else {\n          ovValues.push({\n            attribute: INITIAL_OV_VALUE_ATTRIBUTE_NAME,\n            value: 'NOT_IMPLEMENTED',\n          });\n        }\n        break;\n      case Cpq.DisplayAs.RADIO_BUTTON:\n      case Cpq.DisplayAs.DROPDOWN:\n        const selectedValue = attr.values?.find(\n          (val) => val.selected && val.paV_ID !== this.NO_OPTION_SELECTED\n        );\n        if (selectedValue) {\n          ovValues.push(this.extractValue(selectedValue, attr, currency));\n        }\n        break;\n      case Cpq.DisplayAs.CHECK_BOX:\n        attr.values\n          ?.filter((val) => val.selected)\n          ?.forEach((valueSelected) => {\n            ovValues.push(this.extractValue(valueSelected, attr, currency));\n          });\n        break;\n      default:\n        ovValues.push({\n          attribute: INITIAL_OV_VALUE_ATTRIBUTE_NAME,\n          value: 'NOT_IMPLEMENTED',\n        });\n    }\n    return ovValues;\n  }\n\n  protected extractValue(\n    valueSelected: Cpq.Value,\n    attr: Cpq.Attribute,\n    currency: string\n  ): Configurator.AttributeOverview {\n    const ovValue: Configurator.AttributeOverview = {\n      attribute: INITIAL_OV_VALUE_ATTRIBUTE_NAME,\n      value: valueSelected.valueDisplay ?? valueSelected.paV_ID.toString(),\n      valueId: valueSelected.paV_ID.toString(),\n      productCode: valueSelected.productSystemId,\n      quantity: this.cpqConfiguratorNormalizerUtilsService.convertQuantity(\n        valueSelected,\n        attr\n      ),\n      valuePrice: this.cpqConfiguratorNormalizerUtilsService.convertValuePrice(\n        valueSelected,\n        currency\n      ),\n    };\n    ovValue.valuePriceTotal =\n      this.cpqConfiguratorNormalizerUtilsService.calculateValuePriceTotal(\n        ovValue.quantity ?? 1,\n        ovValue.valuePrice\n      );\n    return ovValue;\n  }\n\n  protected extractValueUserInput(\n    attr: Cpq.Attribute,\n    currency: string\n  ): Configurator.AttributeOverview {\n    const value = attr.values ? attr.values[0] : undefined;\n    const ovValue: Configurator.AttributeOverview = {\n      attribute: INITIAL_OV_VALUE_ATTRIBUTE_NAME,\n      value: attr.userInput ?? attr.stdAttrCode.toString(),\n      valueId: value?.paV_ID.toString(),\n      quantity: 1,\n    };\n    if (value) {\n      ovValue.valuePrice =\n        this.cpqConfiguratorNormalizerUtilsService.convertValuePrice(\n          value,\n          currency\n        );\n      ovValue.valuePriceTotal =\n        this.cpqConfiguratorNormalizerUtilsService.calculateValuePriceTotal(\n          ovValue.quantity ?? 1,\n          ovValue.valuePrice\n        );\n    }\n    return ovValue;\n  }\n\n  protected calculateTotalNumberOfIssues(source: Cpq.Configuration): number {\n    let numberOfIssues: number =\n      (source.incompleteAttributes?.length ?? 0) +\n      (source.incompleteMessages?.length ?? 0) +\n      (source.invalidMessages?.length ?? 0) +\n      (source.failedValidations?.length ?? 0) +\n      (source.errorMessages?.length ?? 0);\n    return numberOfIssues;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Configurator } from '@spartacus/product-configurator/rulebased';\n\ninterface CpqUpdateInformation {\n  standardAttributeCode: string;\n  tabId: string;\n}\nexport class CpqConfiguratorUtils {\n  /**\n   * Collects information that we need to fire a CPQ update\n   *\n   * @param {Configurator.Attribute} attribute Configurator attribute\n   * @returns {CpqUpdateInformation} Update information\n   */\n  static getUpdateInformation(\n    attribute: Configurator.Attribute\n  ): CpqUpdateInformation {\n    //attribute code cannot be made mandatory because of VC,\n    //but in the CPQ context it is mandatory. The same is true of the group id\n\n    const attributeCode = attribute.attrCode;\n    const groupId = attribute.groupId;\n    if (attributeCode && groupId) {\n      return {\n        standardAttributeCode: attributeCode.toString(),\n        tabId: groupId,\n      };\n    } else {\n      throw new Error(\n        'Attribute code of group id not present: ' + JSON.stringify(attribute)\n      );\n    }\n  }\n  /**\n   * Finds first changed attribute\n   * @param {Configurator.Configuration} source Configuration\n   * @returns {Configurator.Attribute} First attribute of first group\n   */\n  static findFirstChangedAttribute(\n    source: Configurator.Configuration\n  ): Configurator.Attribute {\n    const firstGroup: Configurator.Group = source.groups[0];\n    if (firstGroup.attributes) {\n      return firstGroup.attributes[0];\n    } else {\n      throw new Error('No changed attributes found');\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Converter } from '@spartacus/core';\nimport { Configurator } from '@spartacus/product-configurator/rulebased';\nimport { Cpq } from '../cpq.models';\nimport { CpqConfiguratorUtils } from './../cpq-configurator-utils';\n\nconst VALUE_SEPARATOR = ',';\n\n@Injectable()\nexport class CpqConfiguratorSerializer\n  implements Converter<Configurator.Configuration, Cpq.UpdateAttribute>\n{\n  convert(source: Configurator.Configuration): Cpq.UpdateAttribute {\n    const attribute: Configurator.Attribute =\n      CpqConfiguratorUtils.findFirstChangedAttribute(source);\n    let updateAttribute: Cpq.UpdateAttribute;\n    if (source.updateType === Configurator.UpdateType.ATTRIBUTE_QUANTITY) {\n      updateAttribute = this.convertQuantity(attribute, source.configId);\n    } else {\n      updateAttribute = this.convertAttribute(attribute, source.configId);\n    }\n    return updateAttribute;\n  }\n\n  protected convertQuantity(\n    attribute: Configurator.Attribute,\n    configId: string\n  ): Cpq.UpdateAttribute {\n    const updateInformation =\n      CpqConfiguratorUtils.getUpdateInformation(attribute);\n\n    const updateAttribute: Cpq.UpdateAttribute = {\n      configurationId: configId,\n      standardAttributeCode: updateInformation.standardAttributeCode,\n      changeAttributeValue: { quantity: attribute.quantity },\n      tabId: updateInformation.tabId,\n    };\n    return updateAttribute;\n  }\n\n  protected convertAttribute(\n    attribute: Configurator.Attribute,\n    configurationId: string\n  ): Cpq.UpdateAttribute {\n    const updateInformation =\n      CpqConfiguratorUtils.getUpdateInformation(attribute);\n    const updateAttribute: Cpq.UpdateAttribute = {\n      configurationId: configurationId,\n      standardAttributeCode: updateInformation.standardAttributeCode,\n      changeAttributeValue: {},\n      tabId: updateInformation.tabId,\n    };\n\n    if (\n      attribute.uiType === Configurator.UiType.DROPDOWN ||\n      attribute.uiType === Configurator.UiType.DROPDOWN_PRODUCT ||\n      attribute.uiType === Configurator.UiType.RADIOBUTTON ||\n      attribute.uiType === Configurator.UiType.RADIOBUTTON_PRODUCT ||\n      attribute.uiType === Configurator.UiType.SINGLE_SELECTION_IMAGE\n    ) {\n      updateAttribute.changeAttributeValue.attributeValueIds =\n        this.processSelectedSingleValue(attribute.selectedSingleValue);\n    } else if (\n      attribute.uiType === Configurator.UiType.CHECKBOXLIST ||\n      attribute.uiType === Configurator.UiType.CHECKBOXLIST_PRODUCT ||\n      attribute.uiType === Configurator.UiType.CHECKBOX ||\n      attribute.uiType === Configurator.UiType.MULTI_SELECTION_IMAGE\n    ) {\n      updateAttribute.changeAttributeValue.attributeValueIds =\n        this.prepareValueIds(attribute);\n    } else if (\n      attribute.uiType === Configurator.UiType.STRING ||\n      attribute.uiType === Configurator.UiType.NUMERIC\n    ) {\n      updateAttribute.changeAttributeValue.userInput = attribute.userInput;\n      if (!updateAttribute.changeAttributeValue?.userInput) {\n        updateAttribute.changeAttributeValue.userInput = ' ';\n      }\n    }\n    return updateAttribute;\n  }\n\n  protected processSelectedSingleValue(singleValue?: string): string {\n    let processedValue = singleValue;\n    if (!processedValue) {\n      // Is required to remove the value\n      processedValue = VALUE_SEPARATOR;\n    }\n    return processedValue;\n  }\n\n  protected prepareValueIds(attribute: Configurator.Attribute): string {\n    let valueIds = '';\n    const selectedValues = attribute.values?.filter((value) => value.selected);\n\n    if (selectedValues && selectedValues.length > 0) {\n      selectedValues.forEach((value) => {\n        valueIds += value.valueCode + VALUE_SEPARATOR;\n      });\n    } else {\n      // Is required to remove the value\n      valueIds = VALUE_SEPARATOR;\n    }\n    return valueIds;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Converter } from '@spartacus/core';\nimport { Configurator } from '@spartacus/product-configurator/rulebased';\nimport { Cpq } from '../cpq.models';\nimport { CpqConfiguratorUtils } from './../cpq-configurator-utils';\n\n@Injectable()\nexport class CpqConfiguratorValueSerializer\n  implements Converter<Configurator.Configuration, Cpq.UpdateValue>\n{\n  convert(source: Configurator.Configuration): Cpq.UpdateValue {\n    const attribute: Configurator.Attribute =\n      CpqConfiguratorUtils.findFirstChangedAttribute(source);\n    const updateValue: Cpq.UpdateValue = this.convertAttribute(\n      attribute,\n      source.configId\n    );\n    return updateValue;\n  }\n\n  protected convertAttribute(\n    attribute: Configurator.Attribute,\n    configurationId: string\n  ): Cpq.UpdateValue {\n    const updateInfo = CpqConfiguratorUtils.getUpdateInformation(attribute);\n    const value = this.findFirstChangedValue(attribute);\n    const updateAttribute: Cpq.UpdateValue = {\n      configurationId: configurationId,\n      standardAttributeCode: updateInfo.standardAttributeCode,\n      attributeValueId: value.valueCode,\n      quantity: value.quantity ?? 1,\n      tabId: updateInfo.tabId,\n    };\n\n    return updateAttribute;\n  }\n\n  protected findFirstChangedValue(\n    attribute: Configurator.Attribute\n  ): Configurator.Value {\n    if (attribute.values && attribute.values.length > 0) {\n      return attribute.values[0];\n    } else {\n      throw new Error('No values present');\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { Converter } from '@spartacus/core';\nimport { Configurator } from '@spartacus/product-configurator/rulebased';\nimport { Cpq } from '../cpq.models';\n\nexport const CPQ_CONFIGURATOR_NORMALIZER = new InjectionToken<\n  Converter<Cpq.Configuration, Configurator.Configuration>\n>('CpqConfiguratorNormalizer');\n\nexport const CPQ_CONFIGURATOR_SERIALIZER = new InjectionToken<\n  Converter<Configurator.Configuration, Cpq.UpdateAttribute>\n>('CpqConfiguratorSerializer');\n\nexport const CPQ_CONFIGURATOR_QUANTITY_SERIALIZER = new InjectionToken<\n  Converter<Configurator.Configuration, Cpq.UpdateValue>\n>('CpqConfiguratorValueSerializer');\n\nexport const CPQ_CONFIGURATOR_OVERVIEW_NORMALIZER = new InjectionToken<\n  Converter<Cpq.Configuration, Configurator.Overview>\n>('CpqConfiguratorOverviewNormalizer');\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './cpq-configurator-normalizer';\nexport * from './cpq-configurator-normalizer-utils.service';\nexport * from './cpq-configurator-overview-normalizer';\nexport * from './cpq-configurator-serializer';\nexport * from './cpq-configurator-value-serializer';\nexport * from './cpq-configurator.converters';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\ninterface CpqConfiguratorBackendConfig {\n  cpq?: {\n    endpoints: {\n      configurationInit: string;\n      configurationDisplay: string;\n      attributeUpdate: string;\n      valueUpdate: string;\n    };\n    prefix: string;\n  };\n}\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class CpqConfiguratorEndpointConfig {\n  backend?: CpqConfiguratorBackendConfig;\n}\n\ndeclare module '@spartacus/core' {\n  interface BackendConfig extends CpqConfiguratorBackendConfig {}\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { StringTemplate } from '@spartacus/core';\nimport { MARKER_HEADER_CPQ_CONFIGURATOR } from '@spartacus/product-configurator/rulebased/root';\nimport { CpqConfiguratorEndpointConfig } from './cpq-configurator-endpoint.config';\n\n@Injectable({ providedIn: 'root' })\nexport class CpqConfiguratorEndpointService {\n  constructor(protected config: CpqConfiguratorEndpointConfig) {}\n\n  /**\n   * header attribute to a mark cpq related requests, so that they can be picked up by the {@link CpqConfiguratorRestInterceptor}\n   */\n  readonly CPQ_MARKER_HEADER = {\n    headers: new HttpHeaders({\n      [MARKER_HEADER_CPQ_CONFIGURATOR]: 'x',\n    }),\n  };\n\n  buildUrl(\n    endpointName: string,\n    urlParams?: Object,\n    queryParams?: [{ name: string; value: string }]\n  ): string {\n    const endpoints = this.config.backend?.cpq?.endpoints;\n    let endpoint;\n    switch (endpointName) {\n      case 'configurationInit':\n        endpoint = endpoints?.configurationInit;\n        break;\n      case 'configurationDisplay':\n        endpoint = endpoints?.configurationDisplay;\n        break;\n      case 'attributeUpdate':\n        endpoint = endpoints?.attributeUpdate;\n        break;\n      case 'valueUpdate':\n        endpoint = endpoints?.valueUpdate;\n    }\n\n    if (!endpoint) {\n      endpoint = 'configurations';\n      console.warn(\n        `${endpointName} endpoint configuration missing for cpq backend, please provide it via key: \"backend.cpq.endpoints.${endpointName}\"`\n      );\n    }\n    let url = this.config.backend?.cpq?.prefix + endpoint;\n    url = urlParams ? StringTemplate.resolve(url, urlParams) : url;\n    url = queryParams ? this.appendQueryParameters(url, queryParams) : url;\n    return url;\n  }\n\n  protected appendQueryParameters(\n    url: string,\n    parameters: [{ name: string; value: string }]\n  ): string {\n    let urlWithParameters = url + '?';\n    parameters.forEach((param, idx: number) => {\n      urlWithParameters = idx > 0 ? urlWithParameters + '&' : urlWithParameters;\n      urlWithParameters = `${urlWithParameters}${param.name}=${param.value}`;\n    });\n    return urlWithParameters;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ConverterService } from '@spartacus/core';\nimport { Configurator } from '@spartacus/product-configurator/rulebased';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport {\n  CPQ_CONFIGURATOR_NORMALIZER,\n  CPQ_CONFIGURATOR_OVERVIEW_NORMALIZER,\n  CPQ_CONFIGURATOR_QUANTITY_SERIALIZER,\n  CPQ_CONFIGURATOR_SERIALIZER,\n} from './converters/cpq-configurator.converters';\nimport { CpqConfiguratorEndpointService } from './cpq-configurator-endpoint.service';\nimport { Cpq } from './cpq.models';\n\n@Injectable({ providedIn: 'root' })\nexport class CpqConfiguratorRestService {\n  constructor(\n    protected http: HttpClient,\n    protected converterService: ConverterService,\n    protected endpointService: CpqConfiguratorEndpointService\n  ) {}\n\n  /**\n   * Creates a new runtime configuration for the given product id\n   * and read this default configuration from the CPQ system.\n   *\n   * @param {string} productSystemId - Product system ID\n   * @returns {Observable<Configurator.Configuration>} - Created configuration\n   */\n  createConfiguration(\n    productSystemId: string\n  ): Observable<Configurator.Configuration> {\n    return this.callConfigurationInit(productSystemId).pipe(\n      switchMap((configCreatedResponse) => {\n        return this.callConfigurationDisplay(\n          configCreatedResponse.configurationId\n        ).pipe(\n          this.converterService.pipeable(CPQ_CONFIGURATOR_NORMALIZER),\n          map((resultConfiguration) => {\n            return {\n              ...resultConfiguration,\n              configId: configCreatedResponse.configurationId,\n            };\n          })\n        );\n      })\n    );\n  }\n\n  /**\n   * Retrieves a configuration from the CPQ system by its configuration ID and for a certain tab.\n   *\n   * @param {string} configId - Configuration ID\n   * @param {string} tabId - Tab ID\n   * @returns {Observable<Configurator.Configuration>} - Retrieved configuration\n   */\n  readConfiguration(\n    configId: string,\n    tabId?: string\n  ): Observable<Configurator.Configuration> {\n    return this.callConfigurationDisplay(configId, tabId).pipe(\n      this.converterService.pipeable(CPQ_CONFIGURATOR_NORMALIZER),\n      map((resultConfiguration) => {\n        return {\n          ...resultConfiguration,\n          configId: configId,\n        };\n      })\n    );\n  }\n\n  /**\n   * Retrieves an overview for a certain configuration by its configuration ID.\n   *\n   * @param {string} configId - Configuration ID\n   * @returns {Observable<Configurator.Overview>} - Retrieved overview\n   */\n  readConfigurationOverview(\n    configId: string\n  ): Observable<Configurator.Overview> {\n    return this.getConfigurationWithAllTabsAndAttributes(configId).pipe(\n      this.converterService.pipeable(CPQ_CONFIGURATOR_OVERVIEW_NORMALIZER),\n      map((resultConfiguration) => {\n        return {\n          ...resultConfiguration,\n          configId: configId,\n        };\n      })\n    );\n  }\n\n  /**\n   * This method is actually a workaround until CPQ provides and API to fetch\n   * all selected attributes / attribute values grouped by all tabs.\n   * It will fire a request for each tab to collect all required data.\n   */\n  protected getConfigurationWithAllTabsAndAttributes(\n    configId: string\n  ): Observable<Cpq.Configuration> {\n    return this.callConfigurationDisplay(configId).pipe(\n      switchMap((currentTab) => {\n        const tabRequests: Observable<Cpq.Configuration>[] = [];\n        if (currentTab.tabs && currentTab.tabs.length > 0) {\n          // prepare requests for remaining tabs\n          currentTab.tabs.forEach((tab) => {\n            if (tab.isSelected) {\n              // details of the currently selected tab are already fetched\n              tabRequests.push(of(currentTab));\n            } else {\n              tabRequests.push(\n                this.callConfigurationDisplay(configId, tab.id.toString())\n              );\n            }\n          });\n        } else {\n          // tabs are not defined in model, general tab is used\n          tabRequests.push(of(currentTab));\n        }\n        // fire requests for remaining tabs and wait until all are finished\n        return forkJoin(tabRequests);\n      }),\n      map(this.mergeTabResults)\n    );\n  }\n\n  protected mergeTabResults(\n    tabReqResultList: Cpq.Configuration[]\n  ): Cpq.Configuration {\n    const config = {\n      // first tab will be the current tab. It might not contain all error messages (bug in CPQ). So we just use the last tab.\n      // this whole logic will be obsolete, as soon as CPQ provides and API to fetch everything.\n      ...tabReqResultList[tabReqResultList.length - 1],\n    };\n    config.attributes = undefined;\n    config.tabs = [];\n    tabReqResultList.forEach((tabReqResult) => {\n      let tab: Cpq.Tab;\n      const currentTab = tabReqResult.tabs?.find((tabEl) => tabEl.isSelected);\n      if (currentTab && tabReqResult.tabs && tabReqResult.tabs.length > 0) {\n        tab = {\n          ...currentTab,\n        };\n      } else {\n        tab = {\n          id: 0,\n        };\n      }\n      tab.attributes = tabReqResult.attributes;\n      config.tabs?.push(tab);\n    });\n    return config;\n  }\n\n  /**\n   * Updates an attribute of the runtime configuration for the given configuration id and attribute code\n   * and read this default configuration from the CPQ system.\n   *\n   * @param {Configurator.Configuration} configuration - Configuration\n   * @returns {Observable<Configurator.Configuration>} - Updated configuration\n   */\n  updateAttribute(\n    configuration: Configurator.Configuration\n  ): Observable<Configurator.Configuration> {\n    const updateAttribute: Cpq.UpdateAttribute = this.converterService.convert(\n      configuration,\n      CPQ_CONFIGURATOR_SERIALIZER\n    );\n    return this.callUpdateAttribute(updateAttribute).pipe(\n      switchMap(() => {\n        return this.callConfigurationDisplay(\n          configuration.configId,\n          updateAttribute.tabId\n        ).pipe(\n          this.converterService.pipeable(CPQ_CONFIGURATOR_NORMALIZER),\n          map((resultConfiguration) => {\n            return {\n              ...resultConfiguration,\n              configId: configuration.configId,\n            };\n          })\n        );\n      })\n    );\n  }\n\n  /**\n   * Updates a quantity for an attribute of the runtime configuration for the given configuration id and attribute code\n   * and read this default configuration from the CPQ system.\n   *\n   * @param {Configurator.Configuration} configuration - Configuration\n   * @returns {Observable<Configurator.Configuration>} - Updated configuration\n   */\n  updateValueQuantity(\n    configuration: Configurator.Configuration\n  ): Observable<Configurator.Configuration> {\n    const updateValue: Cpq.UpdateValue = this.converterService.convert(\n      configuration,\n      CPQ_CONFIGURATOR_QUANTITY_SERIALIZER\n    );\n    return this.callUpdateValue(updateValue).pipe(\n      switchMap(() => {\n        return this.callConfigurationDisplay(\n          configuration.configId,\n          updateValue.tabId\n        ).pipe(\n          this.converterService.pipeable(CPQ_CONFIGURATOR_NORMALIZER),\n          map((resultConfiguration) => {\n            return {\n              ...resultConfiguration,\n              configId: configuration.configId,\n            };\n          })\n        );\n      })\n    );\n  }\n\n  protected callUpdateValue(updateValue: Cpq.UpdateValue): Observable<any> {\n    return this.http.patch<Cpq.ConfigurationCreatedResponseData>(\n      this.endpointService.buildUrl('valueUpdate', {\n        configId: updateValue.configurationId,\n        attributeCode: updateValue.standardAttributeCode,\n        valueCode: updateValue.attributeValueId,\n      }),\n      {\n        Quantity: updateValue.quantity,\n      },\n      this.endpointService.CPQ_MARKER_HEADER\n    );\n  }\n\n  protected callConfigurationInit(\n    productSystemId: string\n  ): Observable<Cpq.ConfigurationCreatedResponseData> {\n    return this.http.post<Cpq.ConfigurationCreatedResponseData>(\n      this.endpointService.buildUrl('configurationInit'),\n      {\n        ProductSystemId: productSystemId,\n      },\n      this.endpointService.CPQ_MARKER_HEADER\n    );\n  }\n\n  protected callConfigurationDisplay(\n    configId: string,\n    tabId?: string\n  ): Observable<Cpq.Configuration> {\n    return this.http.get<Cpq.Configuration>(\n      this.endpointService.buildUrl(\n        'configurationDisplay',\n        { configId: configId },\n        tabId ? [{ name: 'tabId', value: tabId }] : undefined\n      ),\n      this.endpointService.CPQ_MARKER_HEADER\n    );\n  }\n\n  protected callUpdateAttribute(\n    updateAttribute: Cpq.UpdateAttribute\n  ): Observable<any> {\n    return this.http.patch<any>(\n      this.endpointService.buildUrl('attributeUpdate', {\n        configId: updateAttribute.configurationId,\n        attributeCode: updateAttribute.standardAttributeCode,\n      }),\n      updateAttribute.changeAttributeValue,\n      this.endpointService.CPQ_MARKER_HEADER\n    );\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { CartModification } from '@spartacus/cart/base/root';\nimport {\n  CommonConfigurator,\n  ConfiguratorType,\n} from '@spartacus/product-configurator/common';\nimport {\n  Configurator,\n  RulebasedConfiguratorAdapter,\n} from '@spartacus/product-configurator/rulebased';\nimport { Observable, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { CpqConfiguratorOccService } from './../occ/cpq-configurator-occ.service';\nimport { CpqConfiguratorRestService } from './cpq-configurator-rest.service';\n\n@Injectable()\nexport class CpqConfiguratorRestAdapter\n  implements RulebasedConfiguratorAdapter\n{\n  constructor(\n    protected cpqRestService: CpqConfiguratorRestService,\n    protected cpqOccService: CpqConfiguratorOccService\n  ) {}\n\n  getConfiguratorType(): string {\n    return ConfiguratorType.CPQ;\n  }\n\n  createConfiguration(\n    owner: CommonConfigurator.Owner\n  ): Observable<Configurator.Configuration> {\n    // no error handling for missing owner id needed, as it's a\n    // mandatory attribute in owner\n    return this.cpqRestService.createConfiguration(owner.id).pipe(\n      map((configResponse) => {\n        configResponse.owner = owner;\n        return configResponse;\n      })\n    );\n  }\n\n  readConfiguration(\n    configId: string,\n    groupId: string,\n    owner: CommonConfigurator.Owner\n  ): Observable<Configurator.Configuration> {\n    return this.cpqRestService.readConfiguration(configId, groupId).pipe(\n      map((configResponse) => {\n        configResponse.owner = owner;\n        return configResponse;\n      })\n    );\n  }\n\n  updateConfiguration(\n    configuration: Configurator.Configuration\n  ): Observable<Configurator.Configuration> {\n    const updateMethod =\n      configuration.updateType === Configurator.UpdateType.VALUE_QUANTITY\n        ? this.cpqRestService.updateValueQuantity\n        : this.cpqRestService.updateAttribute;\n    return updateMethod.call(this.cpqRestService, configuration).pipe(\n      map((configResponse: Configurator.Configuration) => {\n        configResponse.owner = configuration.owner;\n        return configResponse;\n      })\n    );\n  }\n\n  addToCart(\n    parameters: Configurator.AddToCartParameters\n  ): Observable<CartModification> {\n    return this.cpqOccService.addToCart(parameters);\n  }\n\n  readConfigurationForCartEntry(\n    parameters: CommonConfigurator.ReadConfigurationFromCartEntryParameters\n  ): Observable<Configurator.Configuration> {\n    return this.cpqOccService.getConfigIdForCartEntry(parameters).pipe(\n      switchMap((configId) => {\n        return this.cpqRestService.readConfiguration(configId).pipe(\n          map((configResponse) => {\n            configResponse.owner = parameters.owner;\n            return configResponse;\n          })\n        );\n      })\n    );\n  }\n\n  updateConfigurationForCartEntry(\n    parameters: Configurator.UpdateConfigurationForCartEntryParameters\n  ): Observable<CartModification> {\n    return this.cpqOccService.updateCartEntry(parameters);\n  }\n\n  readConfigurationForOrderEntry(\n    parameters: CommonConfigurator.ReadConfigurationFromOrderEntryParameters\n  ): Observable<Configurator.Configuration> {\n    return this.cpqOccService.getConfigIdForOrderEntry(parameters).pipe(\n      switchMap((configId) => {\n        return this.cpqRestService.readConfiguration(configId).pipe(\n          map((configResponse) => {\n            configResponse.owner = parameters.owner;\n            return configResponse;\n          })\n        );\n      })\n    );\n  }\n\n  readPriceSummary(\n    configuration: Configurator.Configuration\n  ): Observable<Configurator.Configuration> {\n    return of(configuration); // so that UI does not run into exception\n  }\n\n  getConfigurationOverview(\n    configId: string\n  ): Observable<Configurator.Overview> {\n    return this.cpqRestService.readConfigurationOverview(configId);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CpqConfiguratorEndpointConfig } from './cpq-configurator-endpoint.config';\n\nexport const defaultCpqConfiguratorEndpointConfig: CpqConfiguratorEndpointConfig =\n  {\n    backend: {\n      cpq: {\n        endpoints: {\n          configurationInit: 'configurations',\n          configurationDisplay: 'configurations/${configId}/display',\n          attributeUpdate:\n            'configurations/${configId}/attributes/${attributeCode}',\n          valueUpdate:\n            'configurations/${configId}/attributes/${attributeCode}/attributeValues/${valueCode}',\n        },\n        prefix: '/api/configuration/v1/',\n      },\n    },\n  };\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { RulebasedConfiguratorConnector } from '@spartacus/product-configurator/rulebased';\nimport { CpqConfiguratorNormalizer } from './converters/cpq-configurator-normalizer';\nimport { CpqConfiguratorOverviewNormalizer } from './converters/cpq-configurator-overview-normalizer';\nimport { CpqConfiguratorSerializer } from './converters/cpq-configurator-serializer';\nimport { CpqConfiguratorValueSerializer } from './converters/cpq-configurator-value-serializer';\nimport {\n  CPQ_CONFIGURATOR_NORMALIZER,\n  CPQ_CONFIGURATOR_OVERVIEW_NORMALIZER,\n  CPQ_CONFIGURATOR_QUANTITY_SERIALIZER,\n  CPQ_CONFIGURATOR_SERIALIZER,\n} from './converters/cpq-configurator.converters';\nimport { CpqConfiguratorRestAdapter } from './cpq-configurator-rest.adapter';\nimport { defaultCpqConfiguratorEndpointConfig } from './default-cpq-configurator-endpoint.config';\n\n@NgModule({\n  imports: [CommonModule],\n\n  providers: [\n    {\n      provide: RulebasedConfiguratorConnector.CONFIGURATOR_ADAPTER_LIST,\n      useClass: CpqConfiguratorRestAdapter,\n      multi: true,\n    },\n    {\n      provide: CPQ_CONFIGURATOR_NORMALIZER,\n      useClass: CpqConfiguratorNormalizer,\n      multi: true,\n    },\n    {\n      provide: CPQ_CONFIGURATOR_SERIALIZER,\n      useClass: CpqConfiguratorSerializer,\n      multi: true,\n    },\n    {\n      provide: CPQ_CONFIGURATOR_QUANTITY_SERIALIZER,\n      useClass: CpqConfiguratorValueSerializer,\n      multi: true,\n    },\n    {\n      provide: CPQ_CONFIGURATOR_OVERVIEW_NORMALIZER,\n      useClass: CpqConfiguratorOverviewNormalizer,\n      multi: true,\n    },\n    provideDefaultConfig(defaultCpqConfiguratorEndpointConfig),\n  ],\n})\nexport class CpqConfiguratorRestModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './converters/index';\nexport * from './cpq-configurator-endpoint.config';\nexport * from './cpq-configurator-endpoint.service';\nexport * from './cpq-configurator-rest.adapter';\nexport * from './cpq-configurator-rest.module';\nexport * from './cpq-configurator-rest.service';\nexport * from './cpq-configurator-utils';\nexport * from './cpq.models';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { CpqConfiguratorOccModule } from './occ/cpq-configurator-occ.module';\nimport { CpqConfiguratorRestModule } from './rest/cpq-configurator-rest.module';\n\n/**\n * Exposes the CPQ flavor of rulebase configurator, which connects to CPQ directly via\n * REST APIs and to commerce via OCC\n */\n@NgModule({\n  imports: [CpqConfiguratorOccModule, CpqConfiguratorRestModule],\n})\nexport class RulebasedCpqConfiguratorModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\n * Public API Surface of the rulebased cpq entry point\n */\n\nexport * from './occ/index';\nexport * from './rest/index';\nexport * from './rulebased-cpq-configurator.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1","i1.CpqConfiguratorNormalizerUtilsService","i1.CpqConfiguratorEndpointConfig","i3.CpqConfiguratorEndpointService","i1.CpqConfiguratorRestService","i2.CpqConfiguratorOccService"],"mappings":"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"}