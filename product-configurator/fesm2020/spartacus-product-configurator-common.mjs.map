{"version":3,"file":"spartacus-product-configurator-common.mjs","sources":["../../../feature-libs/product-configurator/common/core/model/common-configurator.model.ts","../../../feature-libs/product-configurator/common/shared/utils/configurator-model-utils.ts","../../../feature-libs/product-configurator/common/shared/utils/common-configurator-utils.service.ts","../../../feature-libs/product-configurator/common/components/configure-cart-entry/configure-cart-entry.component.ts","../../../feature-libs/product-configurator/common/components/configure-cart-entry/configure-cart-entry.component.html","../../../feature-libs/product-configurator/common/components/configure-cart-entry/configure-cart-entry.module.ts","../../../feature-libs/product-configurator/common/components/configurator-issues-notification/configurator-issues-notification.component.ts","../../../feature-libs/product-configurator/common/components/configurator-issues-notification/configurator-issues-notification.component.html","../../../feature-libs/product-configurator/common/components/configurator-issues-notification/configurator-issues-notification.module.ts","../../../feature-libs/product-configurator/common/components/configurator-cart-entry-info/configurator-cart-entry-info.component.ts","../../../feature-libs/product-configurator/common/components/configurator-cart-entry-info/configurator-cart-entry-info.component.html","../../../feature-libs/product-configurator/common/components/configurator-cart-entry-info/configurator-cart-entry-info.module.ts","../../../feature-libs/product-configurator/common/core/model/configurator-product-scope.ts","../../../feature-libs/product-configurator/common/components/configure-product/configure-product.component.ts","../../../feature-libs/product-configurator/common/components/configure-product/configure-product.component.html","../../../feature-libs/product-configurator/common/components/configure-product/configure-product.module.ts","../../../feature-libs/product-configurator/common/components/configurator-cart-entry-bundle-info/configurator-cart-entry-bundle-info.service.ts","../../../feature-libs/product-configurator/common/components/configurator-cart-entry-bundle-info/configurator-cart-entry-bundle-info.component.ts","../../../feature-libs/product-configurator/common/components/configurator-cart-entry-bundle-info/configurator-cart-entry-bundle-info.component.html","../../../feature-libs/product-configurator/common/components/configurator-cart-entry-bundle-info/configurator-cart-entry-bundle-info.module.ts","../../../feature-libs/product-configurator/common/components/common-configurator-components.module.ts","../../../feature-libs/product-configurator/common/occ/default-occ-configurator-product-config.ts","../../../feature-libs/product-configurator/common/occ/common-configurator-occ.module.ts","../../../feature-libs/product-configurator/common/common-configurator.module.ts","../../../feature-libs/product-configurator/common/components/configurator-cart-entry-bundle-info/configurator-cart-entry-bundle-info.model.ts","../../../feature-libs/product-configurator/common/components/configurator-cart-entry-bundle-info/index.ts","../../../feature-libs/product-configurator/common/components/configurator-cart-entry-info/index.ts","../../../feature-libs/product-configurator/common/components/configurator-issues-notification/index.ts","../../../feature-libs/product-configurator/common/components/configure-cart-entry/index.ts","../../../feature-libs/product-configurator/common/components/configure-product/index.ts","../../../feature-libs/product-configurator/common/components/service/configurator-router-data.ts","../../../feature-libs/product-configurator/common/components/service/configurator-router-extractor.service.ts","../../../feature-libs/product-configurator/common/components/service/index.ts","../../../feature-libs/product-configurator/common/components/index.ts","../../../feature-libs/product-configurator/common/core/model/product-configurator.config.ts","../../../feature-libs/product-configurator/common/core/model/augmented-core.model.ts","../../../feature-libs/product-configurator/common/core/model/index.ts","../../../feature-libs/product-configurator/common/occ/index.ts","../../../feature-libs/product-configurator/common/shared/utils/index.ts","../../../feature-libs/product-configurator/common/shared/index.ts","../../../feature-libs/product-configurator/common/public_api.ts","../../../feature-libs/product-configurator/common/spartacus-product-configurator-common.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport namespace CommonConfigurator {\n  /**\n   * Specifies the owner of a product configuration\n   */\n  export interface Owner {\n    /**\n     * Type of the owner, can be product or document related\n     */\n    type: OwnerType;\n    /**\n     * Specifies an owner uniquely, is used as key in the configuration store\n     */\n    key: string;\n    /**\n     * Business identifier of the owner.\n     * Can be a product code, a cart entry number, or an order code with order entry number\n     */\n    id: string;\n    /**\n     * Configurator type. Derived from the cxRoute\n     */\n    configuratorType: string;\n  }\n\n  export interface ReadConfigurationFromCartEntryParameters {\n    userId?: string;\n    cartId?: string;\n    cartEntryNumber?: string;\n    owner: CommonConfigurator.Owner;\n  }\n\n  export interface ReadConfigurationFromOrderEntryParameters {\n    userId?: string;\n    orderId?: string;\n    orderEntryNumber?: string;\n    owner: CommonConfigurator.Owner;\n  }\n  /**\n   * Possible types of owners: Product, cart or order entry\n   */\n  export enum OwnerType {\n    PRODUCT = 'product',\n    CART_ENTRY = 'cartEntry',\n    ORDER_ENTRY = 'orderEntry',\n  }\n}\n\n/**\n * Possible configurator types\n */\nexport const enum ConfiguratorType {\n  CPQ = 'CLOUDCPQCONFIGURATOR',\n  VARIANT = 'CPQCONFIGURATOR',\n  TEXTFIELD = 'TEXTFIELD',\n}\n\n/**\n * Statuses that can occur in the generic configuration\n * status summary\n */\nexport enum OrderEntryStatus {\n  Success = 'SUCCESS',\n  Info = 'INFO',\n  Warning = 'WARNING',\n  Error = 'ERROR',\n}\n\n/**\n * Status Summary\n */\nexport interface StatusSummary {\n  numberOfIssues?: number;\n  status?: OrderEntryStatus;\n}\n\n/**\n * Configuration information attached to a cart or order entry.\n * Does not reflect the entire configuration but gives only a summary,\n * in order to better identify different configurations in a cart or order.\n */\nexport interface ConfigurationInfo {\n  configurationLabel?: string;\n  configurationValue?: string;\n  configuratorType?: string;\n  status?: string;\n}\n\n/**\n *\n * An enum representing ConfigurationInfo fields.\n */\nexport enum ConfigurationInfoFields {\n  KEY = 'KEY',\n  NAME = 'NAME',\n  QTY = 'QTY',\n  FORMATTED_PRICE = 'FORMATTED_PRICE',\n  PRICE_VALUE = 'PRICE_VALUE',\n}\n\n/**\n *\n * An enum representing ConfigurationInfo special fields.\n */\nexport enum ConfigurationInfoSpecialFields {\n  VERSION = 'CI#@#VERSION',\n  CURRENCY = 'CI#@#CURRENCY',\n  LINE_ITEM = 'LI',\n  LINE_ITEM_DELIMITER = '#',\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n  CommonConfigurator,\n  ConfiguratorType,\n} from '../../core/model/common-configurator.model';\n\nconst initialIndicator = 'INITIAL';\nexport class ConfiguratorModelUtils {\n  /**\n   * Compiles a unique key for a configuration owner from id and type\n   * @param owner Specifies the owner of a product configuration\n   * @returns Owner key\n   */\n  static getOwnerKey(\n    ownerType?: CommonConfigurator.OwnerType,\n    ownerId?: string\n  ): string {\n    if (!ownerId || !ownerType) {\n      throw new Error('We expect an owner ID and an owner type');\n    }\n    return ownerType + '/' + ownerId;\n  }\n\n  /**\n   * Creates an initial owner object\n   * @returns Initial owner\n   */\n  static createInitialOwner(): CommonConfigurator.Owner {\n    return {\n      key: initialIndicator,\n      configuratorType: initialIndicator,\n      id: initialIndicator,\n      type: CommonConfigurator.OwnerType.PRODUCT,\n    };\n  }\n  /**\n   * Checks if an owner is an initial one\n   * @param owner Owner\n   * @returns Is owner initial?\n   */\n  static isInitialOwner(owner: CommonConfigurator.Owner): boolean {\n    return owner.configuratorType === initialIndicator;\n  }\n\n  /**\n   * Creates a configuration owner object based on its essential attributes\n   * @param ownerType Owner type (Does it refer to product, cart or order?)\n   * @param ownerId Owner identifier\n   * @param configuratorType Configurator type\n   * @returns Owner\n   */\n  static createOwner(\n    ownerType: CommonConfigurator.OwnerType,\n    ownerId: string,\n    configuratorType: string = ConfiguratorType.VARIANT\n  ): CommonConfigurator.Owner {\n    return {\n      type: ownerType,\n      id: ownerId,\n      configuratorType: configuratorType,\n      key: ConfiguratorModelUtils.getOwnerKey(ownerType, ownerId),\n    };\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n  Cart,\n  CartItemContext,\n  OrderEntry,\n  PromotionLocation,\n} from '@spartacus/cart/base/root';\nimport { OCC_USER_ID_ANONYMOUS, UserIdService } from '@spartacus/core';\nimport {\n  BREAKPOINT,\n  LayoutConfig,\n  LayoutSlotConfig,\n  SlotConfig,\n  SlotGroup,\n} from '@spartacus/storefront';\nimport { EMPTY, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {\n  CommonConfigurator,\n  ConfiguratorType,\n  OrderEntryStatus,\n} from '../../core/model/common-configurator.model';\nimport { ConfiguratorModelUtils } from './configurator-model-utils';\n\n/**\n * Utilities for generic configuration\n */\n@Injectable({ providedIn: 'root' })\nexport class CommonConfiguratorUtilsService {\n  constructor(protected userIdService: UserIdService) {}\n  /**\n   * Compiles a unique key for a configuration owner and sets it into the 'key'\n   * attribute\n   * @param {CommonConfigurator.Owner }owner - Specifies the owner of a product configuration\n   */\n  setOwnerKey(owner: CommonConfigurator.Owner) {\n    owner.key = ConfiguratorModelUtils.getOwnerKey(owner.type, owner.id);\n  }\n\n  /**\n   * Composes owner ID from document ID and entry number\n   * @param {string} documentId - ID of document the entry is part of, like the order or quote code\n   * @param {string} entryNumber - Entry number\n   * @returns {string} - owner ID\n   */\n  getComposedOwnerId(documentId: string, entryNumber: number): string {\n    return documentId + '+' + entryNumber;\n  }\n\n  /**\n   * Decomposes an owner ID into documentId and entryNumber\n   * @param {string} ownerId - ID of owner\n   * @returns {any} object containing documentId and entryNumber\n   */\n  decomposeOwnerId(ownerId: string): any {\n    const parts: string[] = ownerId.split('+');\n    if (parts.length !== 2) {\n      throw new Error(\n        'We only expect 2 parts in ownerId, separated by +, but was: ' + ownerId\n      );\n    }\n    const result = { documentId: parts[0], entryNumber: parts[1] };\n    return result;\n  }\n  /**\n   * Gets cart ID (which can be either its guid or its code)\n   * @param {Cart} cart - Cart\n   * @returns {string} - Cart identifier\n   */\n  getCartId(cart?: Cart): string {\n    const cartId =\n      cart?.user?.uid === OCC_USER_ID_ANONYMOUS ? cart.guid : cart?.code;\n    if (!cartId) {\n      throw new Error('Cart ID is not defined');\n    }\n    return cartId;\n  }\n\n  /**\n   * Verifies whether the item has any issues.\n   *\n   * @param {OrderEntry} cartItem - Cart item\n   * @returns {boolean} - whether there are any issues\n   */\n  hasIssues(cartItem: OrderEntry): boolean {\n    return this.getNumberOfIssues(cartItem) > 0;\n  }\n\n  /**\n   * Retrieves the number of issues at the cart item.\n   *\n   * @param {OrderEntry} cartItem - Cart item\n   * @returns {number} - the number of issues at the cart item\n   */\n  getNumberOfIssues(cartItem: OrderEntry): number {\n    let numberOfIssues = 0;\n    cartItem?.statusSummaryList?.forEach((statusSummary) => {\n      if (statusSummary.status === OrderEntryStatus.Error) {\n        const numberOfIssuesFromStatus = statusSummary.numberOfIssues;\n        numberOfIssues = numberOfIssuesFromStatus\n          ? numberOfIssuesFromStatus\n          : 0;\n      }\n    });\n    return numberOfIssues;\n  }\n\n  /**\n   * Verifies whether the configurator type is an attribute based one.\n   *\n   * @param {string} configuratorType - Configurator type\n   * @returns {boolean} - 'True' if the expected configurator type, otherwise 'false'\n   */\n  isAttributeBasedConfigurator(configuratorType: string | undefined): boolean {\n    if (configuratorType) {\n      return (\n        configuratorType === ConfiguratorType.VARIANT ||\n        configuratorType === ConfiguratorType.TEXTFIELD\n      );\n    }\n    return false;\n  }\n\n  /**\n   * Verifies whether the configurator type is a bundle based one.\n   *\n   * @param {string} configuratorType - Configurator type\n   * @returns {boolean} - 'True' if the expected configurator type, otherwise 'fasle'\n   */\n  isBundleBasedConfigurator(configuratorType: string | undefined): boolean {\n    if (configuratorType) {\n      return configuratorType === ConfiguratorType.CPQ;\n    }\n    return false;\n  }\n\n  /**\n   * Determines whether we are in the context of an active cart\n   * @param cartItemContext Cart item context\n   * @returns Item part of an active cart?\n   */\n  isActiveCartContext(\n    cartItemContext: CartItemContext | undefined\n  ): Observable<boolean> {\n    return (cartItemContext?.location$ ?? EMPTY).pipe(\n      map(\n        (location) =>\n          location !== PromotionLocation.SaveForLater &&\n          location !== PromotionLocation.SavedCart\n      )\n    );\n  }\n\n  /**\n   * Reads slots from layout config, taking the breakpoint into account\n   * @param layoutConfig Layout config\n   * @param templateName Page template name\n   * @param sectionName Section name like 'header'\n   * @param breakPoint Current breakpoint\n   * @returns Array of slots\n   */\n  getSlotsFromLayoutConfiguration(\n    layoutConfig: LayoutConfig,\n    templateName: string,\n    sectionName: string,\n    breakPoint: BREAKPOINT.lg | BREAKPOINT.md | BREAKPOINT.sm | BREAKPOINT.xs\n  ): string[] {\n    const slots = layoutConfig.layoutSlots;\n    if (slots) {\n      const slotsForTemplate: LayoutSlotConfig = <LayoutSlotConfig>(\n        slots[templateName]\n      );\n      const slotGroupForSection: SlotGroup = <SlotGroup>(\n        slotsForTemplate[sectionName]\n      );\n      const slotConfigForBreakpoint: SlotConfig = <SlotConfig>(\n        slotGroupForSection[breakPoint]\n      );\n      return <string[]>slotConfigForBreakpoint['slots'];\n    } else {\n      return [];\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { OrderEntry } from '@spartacus/cart/base/root';\nimport { CommonConfigurator } from '../../core/model/common-configurator.model';\nimport { CommonConfiguratorUtilsService } from '../../shared/utils/common-configurator-utils.service';\n\n@Component({\n  selector: 'cx-configure-cart-entry',\n  templateUrl: './configure-cart-entry.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfigureCartEntryComponent {\n  @Input() cartEntry: OrderEntry;\n  @Input() readOnly: boolean;\n  @Input() msgBanner: boolean;\n  @Input() disabled: boolean;\n\n  /**\n   * Verifies whether the entry has any issues.\n   *\n   * @returns - whether there are any issues\n   */\n  hasIssues(): boolean {\n    return this.commonConfigUtilsService.hasIssues(this.cartEntry);\n  }\n\n  /**\n   * Verifies whether the cart entry has an order code and returns a corresponding owner type.\n   *\n   * @returns - an owner type\n   */\n  getOwnerType(): CommonConfigurator.OwnerType {\n    return this.cartEntry.orderCode !== undefined\n      ? CommonConfigurator.OwnerType.ORDER_ENTRY\n      : CommonConfigurator.OwnerType.CART_ENTRY;\n  }\n\n  /**\n   * Verifies whether the cart entry has an order code, retrieves a composed owner ID\n   * and concatenates a corresponding entry number.\n   *\n   * @returns - an entry key\n   */\n  getEntityKey(): string {\n    const entryNumber = this.cartEntry.entryNumber;\n    if (entryNumber === undefined) {\n      throw new Error('No entryNumber present in entry');\n    }\n\n    return this.cartEntry.orderCode\n      ? this.commonConfigUtilsService.getComposedOwnerId(\n          this.cartEntry.orderCode,\n          entryNumber\n        )\n      : entryNumber.toString();\n  }\n\n  /**\n   * Retrieves a corresponding route depending whether the configuration is read only or not.\n   *\n   * @returns - a route\n   */\n  getRoute(): string {\n    const configuratorType = this.cartEntry.product?.configuratorType;\n    return this.readOnly\n      ? 'configureOverview' + configuratorType\n      : 'configure' + configuratorType;\n  }\n\n  /**\n   * Retrieves the state of the configuration.\n   *\n   *  @returns - 'true' if the configuration is read only, otherwise 'false'\n   */\n  getDisplayOnly(): boolean {\n    return this.readOnly;\n  }\n\n  /**\n   * Verifies whether the link to the configuration is disabled.\n   *\n   *  @returns - 'true' if the the configuration is not read only, otherwise 'false'\n   */\n  isDisabled() {\n    return this.readOnly ? false : this.disabled;\n  }\n\n  /**\n   * Retrieves the additional resolve issues accessibility description.\n   *\n   * @returns - If there is a 'resolve issues' link, the ID to the element with additional description will be returned.\n   */\n  getResolveIssuesA11yDescription(): string | undefined {\n    const errorMsgId = 'cx-error-msg-' + this.cartEntry.entryNumber;\n    return !this.readOnly && this.msgBanner ? errorMsgId : undefined;\n  }\n\n  constructor(\n    protected commonConfigUtilsService: CommonConfiguratorUtilsService\n  ) {}\n}\n","<ng-container *ngIf=\"cartEntry\">\n  <label *ngIf=\"isDisabled()\" class=\"disabled-link\">\n    <ng-container *ngIf=\"isDisabled(); then configureText\"> </ng-container>\n  </label>\n\n  <a\n    *ngIf=\"!isDisabled()\"\n    class=\"link cx-action-link\"\n    [routerLink]=\"\n      {\n        cxRoute: getRoute(),\n        params: {\n          ownerType: getOwnerType(),\n          entityKey: getEntityKey(),\n          displayOnly: getDisplayOnly()\n        }\n      } | cxUrl\n    \"\n    [queryParams]=\"{ forceReload: true, resolveIssues: hasIssues() }\"\n    cxAutoFocus\n    attr.aria-describedby=\"{{ getResolveIssuesA11yDescription() }}\"\n  >\n    <ng-container *ngIf=\"!isDisabled(); then configureText\"> </ng-container>\n  </a>\n</ng-container>\n\n<ng-template #configureText>\n  <ng-container *ngIf=\"readOnly\">\n    {{ 'configurator.header.displayConfiguration' | cxTranslate }}</ng-container\n  >\n  <ng-container *ngIf=\"!readOnly && !msgBanner\">\n    {{ 'configurator.header.editConfiguration' | cxTranslate }}\n  </ng-container>\n\n  <ng-container *ngIf=\"!readOnly && msgBanner\">\n    {{ 'configurator.header.resolveIssues' | cxTranslate }}\n  </ng-container>\n</ng-template>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { IconModule } from '@spartacus/storefront';\nimport { ConfigureCartEntryComponent } from './configure-cart-entry.component';\n\n@NgModule({\n  imports: [CommonModule, UrlModule, I18nModule, IconModule, RouterModule],\n  declarations: [ConfigureCartEntryComponent],\n  exports: [ConfigureCartEntryComponent],\n})\nexport class ConfigureCartEntryModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Component, Optional } from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { CartItemContext, OrderEntry } from '@spartacus/cart/base/root';\nimport { ICON_TYPE } from '@spartacus/storefront';\nimport { EMPTY, Observable } from 'rxjs';\nimport { CommonConfiguratorUtilsService } from '../../shared/utils/common-configurator-utils.service';\n\n@Component({\n  selector: 'cx-configurator-issues-notification',\n  templateUrl: './configurator-issues-notification.component.html',\n})\nexport class ConfiguratorIssuesNotificationComponent {\n  iconTypes = ICON_TYPE;\n\n  constructor(\n    protected commonConfigUtilsService: CommonConfiguratorUtilsService,\n    @Optional() protected cartItemContext: CartItemContext\n  ) {}\n\n  readonly orderEntry$: Observable<OrderEntry> =\n    this.cartItemContext?.item$ ?? EMPTY;\n\n  readonly quantityControl$: Observable<UntypedFormControl> =\n    this.cartItemContext?.quantityControl$ ?? EMPTY;\n\n  readonly readonly$: Observable<boolean> =\n    this.cartItemContext?.readonly$ ?? EMPTY;\n\n  // TODO: remove the logic below when configurable products support \"Saved Cart\" and \"Save For Later\"\n  readonly shouldShowButton$: Observable<boolean> =\n    this.commonConfigUtilsService.isActiveCartContext(this.cartItemContext);\n\n  /**\n   * Verifies whether the item has any issues.\n   *\n   * @param item - Cart item\n   * @returns - whether there are any issues\n   */\n  hasIssues(item: OrderEntry): boolean {\n    return this.commonConfigUtilsService.hasIssues(item);\n  }\n\n  /**\n   * Retrieves the number of issues at the cart item.\n   *\n   * @param item - Cart item\n   * @returns - the number of issues at the cart item\n   */\n  getNumberOfIssues(item: OrderEntry): number {\n    return this.commonConfigUtilsService.getNumberOfIssues(item);\n  }\n\n  /**\n   * Retrieves the unique id for the error message.\n   *\n   * @param item - Cart item\n   * @returns - Unique id for error message\n   */\n  getErrorMessageId(item: OrderEntry): string {\n    return 'cx-error-msg-' + item.entryNumber;\n  }\n}\n","<ng-container *ngIf=\"orderEntry$ | async as orderEntry\">\n  <ng-container *ngIf=\"hasIssues(orderEntry) && !(readonly$ | async)\">\n    <cx-icon [type]=\"iconTypes.ERROR\"></cx-icon>\n    <div id=\"{{ getErrorMessageId(orderEntry) }}\">\n      {{\n        'configurator.notificationBanner.numberOfIssues'\n          | cxTranslate: { count: getNumberOfIssues(orderEntry) }\n      }}\n      <cx-configure-cart-entry\n        class=\"cx-error-msg-action\"\n        *ngIf=\"\n          (shouldShowButton$ | async) &&\n            orderEntry?.product?.configurable &&\n            quantityControl$ | async as quantityControl\n        \"\n        [cartEntry]=\"orderEntry\"\n        [readOnly]=\"readonly$ | async\"\n        [msgBanner]=\"true\"\n        [disabled]=\"quantityControl.disabled\"\n      ></cx-configure-cart-entry>\n    </div>\n  </ng-container>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CartOutlets } from '@spartacus/cart/base/root';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport {\n  IconModule,\n  OutletPosition,\n  provideOutlet,\n} from '@spartacus/storefront';\nimport { ConfigureCartEntryModule } from '../configure-cart-entry/configure-cart-entry.module';\nimport { ConfiguratorIssuesNotificationComponent } from './configurator-issues-notification.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    UrlModule,\n    I18nModule,\n    IconModule,\n    ConfigureCartEntryModule,\n  ],\n  declarations: [ConfiguratorIssuesNotificationComponent],\n  providers: [\n    provideOutlet({\n      id: CartOutlets.ITEM_CONFIGURATOR_ISSUES,\n      position: OutletPosition.REPLACE,\n      component: ConfiguratorIssuesNotificationComponent,\n    }),\n  ],\n  exports: [ConfiguratorIssuesNotificationComponent],\n})\nexport class ConfiguratorIssuesNotificationModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Component, Optional } from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { CartItemContext, OrderEntry } from '@spartacus/cart/base/root';\nimport { EMPTY, Observable } from 'rxjs';\nimport { CommonConfiguratorUtilsService } from '../../shared/utils/common-configurator-utils.service';\n\n@Component({\n  selector: 'cx-configurator-cart-entry-info',\n  templateUrl: './configurator-cart-entry-info.component.html',\n})\nexport class ConfiguratorCartEntryInfoComponent {\n  constructor(\n    @Optional() protected cartItemContext: CartItemContext,\n    protected commonConfigUtilsService: CommonConfiguratorUtilsService\n  ) {}\n\n  readonly orderEntry$: Observable<OrderEntry> =\n    this.cartItemContext?.item$ ?? EMPTY;\n\n  readonly quantityControl$: Observable<UntypedFormControl> =\n    this.cartItemContext?.quantityControl$ ?? EMPTY;\n\n  readonly readonly$: Observable<boolean> =\n    this.cartItemContext?.readonly$ ?? EMPTY;\n\n  // TODO: remove the logic below when configurable products support \"Saved Cart\" and \"Save For Later\"\n  readonly shouldShowButton$: Observable<boolean> =\n    this.commonConfigUtilsService.isActiveCartContext(this.cartItemContext);\n\n  /**\n   * Verifies whether the configuration infos have any entries and the first entry has a status.\n   * Only in this case we want to display the configuration summary\n   *\n   * @param {OrderEntry} item - Cart item\n   * @returns {boolean} - whether the status of configuration infos entry has status\n   */\n  hasStatus(item: OrderEntry): boolean {\n    const configurationInfos = item.configurationInfos;\n\n    return configurationInfos\n      ? configurationInfos.length > 0 && configurationInfos[0].status !== 'NONE'\n      : false;\n  }\n\n  /**\n   * Verifies whether the configurator type is attribute based one.\n   *\n   * @param {OrderEntry} item - Order entry item\n   * @returns {boolean} - 'True' if the expected configurator type, otherwise 'fasle'\n   */\n  isAttributeBasedConfigurator(item: OrderEntry): boolean {\n    const configurationInfos = item.configurationInfos;\n\n    return configurationInfos\n      ? this.commonConfigUtilsService.isAttributeBasedConfigurator(\n          configurationInfos[0]?.configuratorType\n        )\n      : false;\n  }\n\n  getHiddenConfigurationInfoId(index: number): string {\n    return 'cx-configuration-hidden-info-' + index.toString();\n  }\n}\n","<ng-container *ngIf=\"orderEntry$ | async as orderEntry\">\n  <ng-container *ngIf=\"isAttributeBasedConfigurator(orderEntry)\">\n    <ng-container *ngIf=\"hasStatus(orderEntry)\">\n      <span\n        *ngIf=\"orderEntry.configurationInfos.length > 0\"\n        class=\"cx-intro cx-visually-hidden\"\n      >\n        {{ 'configurator.a11y.cartEntryInfoIntro' | cxTranslate }}\n      </span>\n      <div\n        *ngFor=\"let info of orderEntry.configurationInfos; let i = index\"\n        class=\"cx-configuration-info\"\n        attr.aria-describedby=\"{{ getHiddenConfigurationInfoId(i) }}\"\n      >\n        <span\n          id=\"{{ getHiddenConfigurationInfoId(i) }}\"\n          class=\"cx-visually-hidden\"\n        >\n          {{\n            'configurator.a11y.cartEntryInfo'\n              | cxTranslate\n                : {\n                    attribute: info.configurationLabel,\n                    value: info.configurationValue\n                  }\n          }}\n        </span>\n        <div class=\"cx-label\" aria-hidden=\"true\">\n          {{ info?.configurationLabel }}:\n        </div>\n        <div class=\"cx-value\" aria-hidden=\"true\">\n          {{ info?.configurationValue }}\n        </div>\n      </div>\n    </ng-container>\n\n    <cx-configure-cart-entry\n      *ngIf=\"\n        (shouldShowButton$ | async) &&\n          orderEntry?.product?.configurable &&\n          quantityControl$ | async as quantityControl\n      \"\n      [cartEntry]=\"orderEntry\"\n      [readOnly]=\"readonly$ | async\"\n      [msgBanner]=\"false\"\n      [disabled]=\"quantityControl.disabled\"\n    ></cx-configure-cart-entry>\n  </ng-container>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CartOutlets } from '@spartacus/cart/base/root';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport {\n  IconModule,\n  OutletPosition,\n  provideOutlet,\n} from '@spartacus/storefront';\nimport { ConfiguratorIssuesNotificationModule } from '../configurator-issues-notification/configurator-issues-notification.module';\nimport { ConfigureCartEntryModule } from '../configure-cart-entry/configure-cart-entry.module';\nimport { ConfiguratorCartEntryInfoComponent } from './configurator-cart-entry-info.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    UrlModule,\n    I18nModule,\n    IconModule,\n    ConfiguratorIssuesNotificationModule,\n    ConfigureCartEntryModule,\n  ],\n  declarations: [ConfiguratorCartEntryInfoComponent],\n\n  providers: [\n    provideOutlet({\n      id: CartOutlets.ITEM_DETAILS,\n      position: OutletPosition.AFTER,\n      component: ConfiguratorCartEntryInfoComponent,\n    }),\n  ],\n})\nexport class ConfiguratorCartEntryInfoModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport enum ConfiguratorProductScope {\n  CONFIGURATOR = 'configurator',\n  CONFIGURATOR_PRODUCT_CARD = 'configuratorProductCard',\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component, Optional } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport {\n  CurrentProductService,\n  ProductListItemContext,\n} from '@spartacus/storefront';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CommonConfigurator } from '../../core/model/common-configurator.model';\nimport { ConfiguratorProductScope } from '../../core/model/configurator-product-scope';\n\n@Component({\n  selector: 'cx-configure-product',\n  templateUrl: './configure-product.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfigureProductComponent {\n  nonConfigurable: Product = { configurable: false };\n  product$: Observable<Product> = (this.productListItemContext\n    ? this.productListItemContext.product$\n    : this.currentProductService\n    ? this.currentProductService.getProduct(\n        ConfiguratorProductScope.CONFIGURATOR\n      )\n    : of(null)\n  ).pipe(\n    //needed because also currentProductService might return null\n    map((product) => (product ? product : this.nonConfigurable))\n  );\n\n  ownerTypeProduct: CommonConfigurator.OwnerType =\n    CommonConfigurator.OwnerType.PRODUCT;\n\n  constructor(\n    @Optional() protected productListItemContext: ProductListItemContext, // when on PLP\n    @Optional() protected currentProductService: CurrentProductService // when on PDP\n  ) {}\n}\n","<ng-container *ngIf=\"product$ | async as product\">\n  <ng-container *ngIf=\"product.configurable\">\n    <a\n      [routerLink]=\"\n        {\n          cxRoute: 'configure' + product.configuratorType,\n          params: {\n            ownerType: ownerTypeProduct,\n            entityKey: product.code\n          }\n        } | cxUrl\n      \"\n      class=\"btn btn-primary btn-block\"\n      cxAutoFocus\n      [attr.aria-label]=\"'configurator.a11y.configureProduct' | cxTranslate\"\n      >{{ 'configurator.header.toconfig' | cxTranslate }}</a\n    >\n  </ng-container>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ConfigModule,\n  I18nModule,\n  UrlModule,\n} from '@spartacus/core';\nimport {\n  IconModule,\n  OutletPosition,\n  ProductListOutlets,\n  provideOutlet,\n} from '@spartacus/storefront';\nimport { ConfigureProductComponent } from './configure-product.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ConfigureProductComponent: {\n          component: ConfigureProductComponent,\n        },\n      },\n    }),\n    UrlModule,\n    I18nModule,\n    IconModule,\n  ],\n  providers: [\n    provideOutlet({\n      id: ProductListOutlets.ITEM_ACTIONS,\n      position: OutletPosition.AFTER,\n      component: ConfigureProductComponent,\n    }),\n  ],\n  declarations: [ConfigureProductComponent],\n  exports: [ConfigureProductComponent],\n})\nexport class ConfigureProductModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable, isDevMode } from '@angular/core';\nimport { OrderEntry } from '@spartacus/cart/base/root';\nimport {\n  ConfigurationInfo,\n  ConfigurationInfoFields,\n  ConfigurationInfoSpecialFields,\n} from '../../core/model/common-configurator.model';\nimport { LineItem } from './configurator-cart-entry-bundle-info.model';\n\n/**\n * Service for mapping of the CPQ line items from order entry\n */\n@Injectable({ providedIn: 'root' })\nexport class ConfiguratorCartEntryBundleInfoService {\n  /**\n   * Retrieves the CPQ line items for an order entry\n   *\n   * @param {OrderEntry} entry - Order entry\n   * @returns {LineItem[]} - Line item array\n   */\n  retrieveLineItems(entry: OrderEntry): LineItem[] {\n    let lineItems: LineItem[] = [];\n    if (entry.configurationInfos) {\n      const configurationInfos: ConfigurationInfo[] =\n        entry.configurationInfos.filter(\n          (configurationInfo) =>\n            configurationInfo &&\n            (configurationInfo.configurationLabel ||\n              configurationInfo.configurationValue)\n        );\n      const firstLabel = configurationInfos[0]?.configurationLabel;\n      const firstValue = configurationInfos[0]?.configurationValue;\n\n      if (firstLabel !== ConfigurationInfoSpecialFields.VERSION) {\n        configurationInfos.forEach((configurationInfo) =>\n          lineItems.push(this.prepareLineItem(configurationInfo))\n        );\n      } else if (\n        firstLabel === ConfigurationInfoSpecialFields.VERSION &&\n        Number(firstValue) >= 2\n      ) {\n        lineItems = this.processConfigurationInfos(configurationInfos);\n      } else {\n        this.logWarning('Wrong ConfigurationInfo version');\n      }\n    }\n    return lineItems;\n  }\n\n  protected prepareLineItem(configurationInfo: ConfigurationInfo): LineItem {\n    const quantityAndPrice: string[] = configurationInfo.configurationValue\n      ? configurationInfo.configurationValue.split('x')\n      : [];\n    return {\n      name: configurationInfo.configurationLabel\n        ? this.removeDelimiter(configurationInfo.configurationLabel)\n        : '',\n      formattedQuantity:\n        quantityAndPrice.length >= 1 ? quantityAndPrice[0].trim() : '',\n      formattedPrice:\n        quantityAndPrice.length >= 2 ? quantityAndPrice[1].trim() : '',\n    };\n  }\n\n  protected removeDelimiter(label: string): string {\n    let preparedLabel: string = label.trim();\n\n    const lastCharacter: string = preparedLabel.charAt(\n      preparedLabel.length - 1\n    );\n    if (lastCharacter === ':') {\n      preparedLabel = preparedLabel.substr(0, preparedLabel.length - 1);\n    }\n\n    return preparedLabel;\n  }\n\n  protected processConfigurationInfos(\n    configurationInfos: ConfigurationInfo[]\n  ): LineItem[] {\n    const lineItemMap: Map<number, LineItem> = new Map();\n    configurationInfos.forEach((configurationInfo) =>\n      this.processConfigurationInfoEntry(lineItemMap, configurationInfo)\n    );\n    // sort\n    const lineItemMapSorted: Map<number, LineItem> = new Map<number, LineItem>(\n      Array.from(lineItemMap).sort((a, b) => {\n        return a[0] - b[0];\n      })\n    );\n    // convert to array\n    const lineItems: LineItem[] = Array.from(lineItemMapSorted.values());\n    return lineItems;\n  }\n\n  protected processConfigurationInfoEntry(\n    lineItemMap: Map<number, LineItem>,\n    configurationInfo: ConfigurationInfo\n  ): void {\n    if (configurationInfo.configurationLabel) {\n      const configurationInfoSplit: string[] =\n        configurationInfo.configurationLabel.split(\n          ConfigurationInfoSpecialFields.LINE_ITEM_DELIMITER\n        );\n      if (\n        configurationInfoSplit[0] === ConfigurationInfoSpecialFields.LINE_ITEM\n      ) {\n        const configurationInfoValue: string =\n          configurationInfo.configurationValue\n            ? configurationInfo.configurationValue\n            : '';\n        this.addLineItemData(\n          lineItemMap,\n          configurationInfoSplit,\n          configurationInfoValue\n        );\n      }\n    }\n  }\n\n  protected addLineItemData(\n    lineItemMap: Map<number, LineItem>,\n    configurationInfoSplit: string[],\n    configurationInfoValue: string\n  ): void {\n    if (configurationInfoSplit.length === 3) {\n      const lineItemNumber: number = Number(configurationInfoSplit[1]);\n      let lineItem: LineItem;\n      switch (configurationInfoSplit[2]) {\n        case ConfigurationInfoFields.NAME:\n          lineItem = this.getOrCreateLineItem(lineItemMap, lineItemNumber);\n          lineItem.name = configurationInfoValue;\n          break;\n        case ConfigurationInfoFields.QTY:\n          lineItem = this.getOrCreateLineItem(lineItemMap, lineItemNumber);\n          lineItem.formattedQuantity = configurationInfoValue;\n          break;\n        case ConfigurationInfoFields.FORMATTED_PRICE:\n          lineItem = this.getOrCreateLineItem(lineItemMap, lineItemNumber);\n          lineItem.formattedPrice = configurationInfoValue;\n          break;\n        case ConfigurationInfoFields.KEY:\n        case ConfigurationInfoFields.PRICE_VALUE:\n          break;\n        default: {\n          this.logWarning('Wrong LineItem format');\n        }\n      }\n    } else {\n      this.logWarning('Wrong LineItem format');\n    }\n  }\n\n  protected getOrCreateLineItem(\n    lineItemMap: Map<number, LineItem>,\n    lineItemNumber: number\n  ): LineItem {\n    const lineItem: LineItem = lineItemMap.get(lineItemNumber) ?? {\n      name: '',\n      formattedQuantity: '',\n      formattedPrice: '',\n    };\n    if (!lineItemMap.get(lineItemNumber)) {\n      lineItemMap.set(lineItemNumber, lineItem);\n    }\n    return lineItem;\n  }\n\n  protected logWarning(text: string): void {\n    if (isDevMode()) {\n      console.warn(text);\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Component, Optional } from '@angular/core';\nimport { UntypedFormControl } from '@angular/forms';\nimport { CartItemContext, OrderEntry } from '@spartacus/cart/base/root';\nimport { TranslationService } from '@spartacus/core';\nimport { BREAKPOINT, BreakpointService } from '@spartacus/storefront';\nimport { EMPTY, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { CommonConfiguratorUtilsService } from '../../shared/utils/common-configurator-utils.service';\nimport { LineItem } from './configurator-cart-entry-bundle-info.model';\nimport { ConfiguratorCartEntryBundleInfoService } from './configurator-cart-entry-bundle-info.service';\n\n/**\n * Requires default change detection strategy, as the disabled state of the quantity from control may change,\n * which would not be proper detected with onPush strategy.\n */\n@Component({\n  selector: 'cx-configurator-cart-entry-bundle-info',\n  templateUrl: './configurator-cart-entry-bundle-info.component.html',\n})\nexport class ConfiguratorCartEntryBundleInfoComponent {\n  constructor(\n    protected commonConfigUtilsService: CommonConfiguratorUtilsService,\n    protected configCartEntryBundleInfoService: ConfiguratorCartEntryBundleInfoService,\n    protected breakpointService: BreakpointService,\n    protected translation: TranslationService,\n    @Optional() protected cartItemContext?: CartItemContext\n  ) {}\n\n  readonly orderEntry$: Observable<OrderEntry> =\n    this.cartItemContext?.item$ ?? EMPTY;\n\n  readonly quantityControl$: Observable<UntypedFormControl> =\n    this.cartItemContext?.quantityControl$ ?? EMPTY;\n\n  readonly readonly$: Observable<boolean> =\n    this.cartItemContext?.readonly$ ?? EMPTY;\n\n  hideItems = true;\n\n  lineItems$: Observable<LineItem[]> = this.orderEntry$.pipe(\n    map((entry) =>\n      this.configCartEntryBundleInfoService.retrieveLineItems(entry)\n    )\n  );\n\n  numberOfLineItems$: Observable<number> = this.lineItems$.pipe(\n    map((items) => items.length)\n  );\n\n  /**\n   * Toggles the state of the items list.\n   */\n  toggleItems(): void {\n    this.hideItems = !this.hideItems;\n  }\n\n  /**\n   * Verifies whether the configurator type is a bundle based one.\n   *\n   * @param {OrderEntry} entry - Order entry\n   * @returns {boolean} - 'true' if the expected configurator type, otherwise 'false'\n   */\n  isBundleBasedConfigurator(entry: OrderEntry): boolean {\n    const configInfos = entry.configurationInfos;\n    return configInfos\n      ? this.commonConfigUtilsService.isBundleBasedConfigurator(\n          configInfos[0]?.configuratorType\n        )\n      : false;\n  }\n\n  /**\n   * Verifies whether the current screen size equals or is larger than breakpoint `BREAKPOINT.md`.\n   *\n   * @deprecated since 5.0 - method not used anymore\n   * @returns {Observable<boolean>} - If the given breakpoint equals or is larger than`BREAKPOINT.md` returns `true`, otherwise `false`.\n   */\n  isDesktop(): Observable<boolean> {\n    return this.breakpointService.isUp(BREAKPOINT.md);\n  }\n\n  // TODO: remove the logic below when configurable products support \"Saved Cart\" and \"Save For Later\"\n  readonly shouldShowButton$: Observable<boolean> =\n    this.commonConfigUtilsService.isActiveCartContext(this.cartItemContext);\n\n  getButtonText(translatedText?: string): string {\n    if (!translatedText) {\n      translatedText = '';\n    }\n    if (this.hideItems) {\n      this.translation\n        .translate('configurator.header.show')\n        .pipe(take(1))\n        .subscribe((text) => (translatedText += text));\n    } else {\n      this.translation\n        .translate('configurator.header.hide')\n        .pipe(take(1))\n        .subscribe((text) => (translatedText += text));\n    }\n\n    return translatedText;\n  }\n\n  getItemsMsg(items: number): string {\n    let translatedText = '';\n    this.translation\n      .translate('configurator.a11y.cartEntryBundleInfo', { items: items })\n      .pipe(take(1))\n      .subscribe((text) => (translatedText = text));\n\n    return this.getButtonText(translatedText);\n  }\n\n  getHiddenItemInfo(item: LineItem): string {\n    let translatedText = '';\n\n    if (item.name && item.formattedPrice && item.formattedQuantity) {\n      this.translation\n        .translate('configurator.a11y.cartEntryBundle', {\n          name: item.name,\n          price: item.formattedPrice,\n          quantity: item.formattedQuantity,\n        })\n        .pipe(take(1))\n        .subscribe((text) => (translatedText = text));\n    } else if (item.name && item.formattedPrice) {\n      this.translation\n        .translate('configurator.a11y.cartEntryBundleNameWithPrice', {\n          name: item.name,\n          price: item.formattedPrice,\n        })\n        .pipe(take(1))\n        .subscribe((text) => (translatedText = text));\n    } else if (item.name && item.formattedQuantity) {\n      this.translation\n        .translate('configurator.a11y.cartEntryBundleNameWithQuantity', {\n          name: item.name,\n          quantity: item.formattedQuantity,\n        })\n        .pipe(take(1))\n        .subscribe((text) => (translatedText = text));\n    } else {\n      this.translation\n        .translate('configurator.a11y.cartEntryBundleName', {\n          name: item.name,\n        })\n        .pipe(take(1))\n        .subscribe((text) => (translatedText = text));\n    }\n\n    return translatedText;\n  }\n\n  getHiddenItemInfoId(index: number): string {\n    return 'cx-item-hidden-info-' + index.toString();\n  }\n}\n","<ng-container *ngIf=\"orderEntry$ | async as orderEntry\">\n  <ng-container *ngIf=\"isBundleBasedConfigurator(orderEntry)\">\n    <ng-container *ngIf=\"numberOfLineItems$ | async as numberOfItems\">\n      <div class=\"cx-number-items\">\n        {{\n          'configurator.header.items' | cxTranslate: { count: numberOfItems }\n        }}\n      </div>\n      <button\n        (click)=\"toggleItems()\"\n        [attr.aria-expanded]=\"!this.hideItems\"\n        [attr.aria-label]=\"getItemsMsg(numberOfItems)\"\n      >\n        <div class=\"cx-toggle-hide-items\">\n          {{ getButtonText() }}\n        </div>\n      </button>\n\n      <div class=\"cx-item-infos\" [class.open]=\"!hideItems\">\n        <div\n          *ngFor=\"let lineItem of lineItems$ | async; let i = index\"\n          class=\"cx-item-info\"\n          attr.aria-describedby=\"{{ getHiddenItemInfoId(i) }}\"\n        >\n          <span id=\"{{ getHiddenItemInfoId(i) }}\" class=\"cx-visually-hidden\">\n            {{ getHiddenItemInfo(lineItem) }}\n          </span>\n          <div class=\"cx-item-name\" aria-hidden=\"true\">\n            {{ lineItem?.name }}\n          </div>\n          <div class=\"cx-item-quantity\" aria-hidden=\"true\">\n            <ng-container *ngIf=\"lineItem?.formattedQuantity\">\n              <span class=\"cx-identifier\">{{\n                'configurator.attribute.quantity' | cxTranslate\n              }}</span>\n              <span class=\"cx-item\">{{\n                lineItem?.formattedQuantity | cxNumeric\n              }}</span>\n            </ng-container>\n          </div>\n          <div class=\"cx-item-price\" aria-hidden=\"true\">\n            <ng-container *ngIf=\"lineItem?.formattedPrice\">\n              <span class=\"cx-identifier\">{{\n                'configurator.overviewForm.itemPrice' | cxTranslate\n              }}</span>\n              <span class=\"cx-item\">{{ lineItem?.formattedPrice }}</span>\n            </ng-container>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n    <cx-configure-cart-entry\n      *ngIf=\"\n        (shouldShowButton$ | async) &&\n          orderEntry?.product?.configurable &&\n          quantityControl$ | async as quantityControl\n      \"\n      [cartEntry]=\"orderEntry\"\n      [readOnly]=\"readonly$ | async\"\n      [msgBanner]=\"false\"\n      [disabled]=\"quantityControl.disabled\"\n    ></cx-configure-cart-entry>\n  </ng-container>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CartOutlets } from '@spartacus/cart/base/root';\nimport { I18nModule } from '@spartacus/core';\nimport { OutletPosition, provideOutlet } from '@spartacus/storefront';\nimport { ConfigureCartEntryModule } from '../configure-cart-entry/configure-cart-entry.module';\nimport { ConfiguratorCartEntryBundleInfoComponent } from './configurator-cart-entry-bundle-info.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, ConfigureCartEntryModule],\n  declarations: [ConfiguratorCartEntryBundleInfoComponent],\n\n  providers: [\n    provideOutlet({\n      id: CartOutlets.ITEM_BUNDLE_DETAILS,\n      position: OutletPosition.AFTER,\n      component: ConfiguratorCartEntryBundleInfoComponent,\n    }),\n  ],\n})\nexport class ConfiguratorCartEntryBundleInfoModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { ConfiguratorCartEntryInfoModule } from './configurator-cart-entry-info/configurator-cart-entry-info.module';\nimport { ConfiguratorIssuesNotificationModule } from './configurator-issues-notification/configurator-issues-notification.module';\nimport { ConfigureCartEntryModule } from './configure-cart-entry/configure-cart-entry.module';\nimport { ConfigureProductModule } from './configure-product/configure-product.module';\nimport { ConfiguratorCartEntryBundleInfoModule } from './configurator-cart-entry-bundle-info/configurator-cart-entry-bundle-info.module';\n\n@NgModule({\n  imports: [\n    ConfiguratorIssuesNotificationModule,\n    ConfiguratorCartEntryInfoModule,\n    ConfiguratorCartEntryBundleInfoModule,\n    ConfigureCartEntryModule,\n    ConfigureProductModule,\n  ],\n})\nexport class CommonConfiguratorComponentsModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { OccConfig } from '@spartacus/core';\nimport { ConfiguratorProductScope } from '../core/model/configurator-product-scope';\n\nexport const defaultOccConfiguratorProductConfig: OccConfig = {\n  backend: {\n    occ: {\n      endpoints: {\n        product: {\n          configurator:\n            'products/${productCode}?fields=code,configurable,configuratorType',\n          configuratorProductCard:\n            'products/${productCode}?fields=code,description,images(DEFAULT)',\n        },\n      },\n    },\n    loadingScopes: {\n      product: {\n        list: {\n          include: [ConfiguratorProductScope.CONFIGURATOR],\n        },\n      },\n    },\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { defaultOccConfiguratorProductConfig } from './default-occ-configurator-product-config';\n\n@NgModule({\n  providers: [provideDefaultConfig(defaultOccConfiguratorProductConfig)],\n})\nexport class CommonConfiguratorOccModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonConfiguratorComponentsModule } from './components/common-configurator-components.module';\nimport { CommonConfiguratorOccModule } from './occ/common-configurator-occ.module';\n\n@NgModule({\n  imports: [CommonConfiguratorOccModule, CommonConfiguratorComponentsModule],\n})\nexport class CommonConfiguratorModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * An interface representing the CPQ Line item from order entry.\n */\nexport interface LineItem {\n  name?: string;\n  formattedQuantity?: string;\n  formattedPrice?: string;\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-cart-entry-bundle-info.component';\nexport * from './configurator-cart-entry-bundle-info.module';\nexport * from './configurator-cart-entry-bundle-info.model';\nexport * from './configurator-cart-entry-bundle-info.service';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-cart-entry-info.component';\nexport * from './configurator-cart-entry-info.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-issues-notification.component';\nexport * from './configurator-issues-notification.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configure-cart-entry.component';\nexport * from './configure-cart-entry.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configure-product.component';\nexport * from './configure-product.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonConfigurator } from '../../core/model/common-configurator.model';\nexport namespace ConfiguratorRouter {\n  export enum PageType {\n    CONFIGURATION = 'configuration',\n    OVERVIEW = 'overview',\n  }\n  export interface Data {\n    pageType?: PageType;\n    isOwnerCartEntry?: boolean;\n    owner: CommonConfigurator.Owner;\n    displayOnly?: boolean;\n    forceReload?: boolean;\n    resolveIssues?: boolean;\n    skipConflicts?: boolean;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { RouterState, RoutingService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { CommonConfigurator } from '../../core/model/common-configurator.model';\nimport { CommonConfiguratorUtilsService } from '../../shared/utils/common-configurator-utils.service';\nimport { ConfiguratorModelUtils } from '../../shared/utils/configurator-model-utils';\nimport { ConfiguratorRouter } from './configurator-router-data';\n\n/**\n * Service to extract the configuration owner key from the current route\n */\n@Injectable({ providedIn: 'root' })\nexport class ConfiguratorRouterExtractorService {\n  protected readonly ROUTE_FRAGMENT_CONFIGURE = 'configure';\n  protected readonly ROUTE_FRAGMENT_OVERVIEW = 'configureOverview';\n  constructor(\n    protected configUtilsService: CommonConfiguratorUtilsService,\n    protected routingService: RoutingService\n  ) {}\n\n  extractRouterData(): Observable<ConfiguratorRouter.Data> {\n    return this.routingService.getRouterState().pipe(\n      filter((routingData) => routingData.state.params.entityKey),\n      //we don't need to cover the intermediate router states where a future route is already known.\n      //only changes to the URL are relevant. Otherwise we get wrong hits where e.g. the config form fires although\n      //the OV already loads\n      filter((routingData) => routingData.nextState === undefined),\n      map((routingData) => {\n        const owner = this.createOwnerFromRouterState(routingData);\n        const semanticRoute = routingData.state.semanticRoute;\n        const routerData: ConfiguratorRouter.Data = {\n          owner: owner,\n          isOwnerCartEntry:\n            owner.type === CommonConfigurator.OwnerType.CART_ENTRY,\n          displayOnly: routingData.state.params.displayOnly,\n          resolveIssues:\n            routingData.state.queryParams?.resolveIssues === 'true',\n          skipConflicts:\n            routingData.state.queryParams?.skipConflicts === 'true',\n          forceReload: routingData.state.queryParams?.forceReload === 'true',\n          pageType:\n            semanticRoute &&\n            semanticRoute.includes(this.ROUTE_FRAGMENT_OVERVIEW)\n              ? ConfiguratorRouter.PageType.OVERVIEW\n              : ConfiguratorRouter.PageType.CONFIGURATION,\n        };\n\n        return routerData;\n      })\n    );\n  }\n\n  createOwnerFromRouterState(\n    routerState: RouterState\n  ): CommonConfigurator.Owner {\n    const owner: CommonConfigurator.Owner =\n      ConfiguratorModelUtils.createInitialOwner();\n    const params = routerState.state.params;\n    if (params.ownerType) {\n      const entityKey = params.entityKey;\n      owner.type = params.ownerType;\n\n      owner.id = entityKey;\n    } else {\n      owner.type = CommonConfigurator.OwnerType.PRODUCT;\n      owner.id = params.rootProduct;\n    }\n    const semanticRoute = routerState.state.semanticRoute;\n    if (semanticRoute) {\n      const configuratorType =\n        this.getConfiguratorTypeFromSemanticRoute(semanticRoute);\n      owner.configuratorType = configuratorType;\n    }\n    this.configUtilsService.setOwnerKey(owner);\n    return owner;\n  }\n\n  /**\n   * Compiles the configurator type from the semantic route\n   * @param semanticRoute Consists of a prefix that indicates if target is interactive configuration or overview and\n   *                      the commerce configurator type as postfix.\n   *                      Example: configureTEXTFIELD or configureOverviewCPQCONFIGURATOR\n   * @returns Configurator type\n   */\n  protected getConfiguratorTypeFromSemanticRoute(\n    semanticRoute: string\n  ): string {\n    if (semanticRoute.startsWith(this.ROUTE_FRAGMENT_OVERVIEW)) {\n      return semanticRoute.split(this.ROUTE_FRAGMENT_OVERVIEW)[1];\n    } else if (semanticRoute.startsWith(this.ROUTE_FRAGMENT_CONFIGURE)) {\n      return semanticRoute.split(this.ROUTE_FRAGMENT_CONFIGURE)[1];\n    } else {\n      throw new Error('Not able to detemine configurator type');\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './configurator-router-data';\nexport * from './configurator-router-extractor.service';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './common-configurator-components.module';\nexport * from './configurator-cart-entry-bundle-info/index';\nexport * from './configurator-cart-entry-info/index';\nexport * from './configurator-issues-notification/index';\nexport * from './configure-cart-entry/index';\nexport * from './configure-product/index';\nexport * from './service/index';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport '@spartacus/core';\n\nexport interface ProductConfiguratorConfig {}\n\ndeclare module '@spartacus/core' {\n  interface Config {\n    productConfigurator?: ProductConfiguratorConfig;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ConfigurationInfo, StatusSummary } from './common-configurator.model';\ndeclare module '@spartacus/core' {\n  interface Product {\n    configurable?: boolean;\n    configuratorType?: string;\n  }\n}\ndeclare module '@spartacus/cart/base/root' {\n  interface OrderEntry {\n    statusSummaryList?: StatusSummary[];\n    configurationInfos?: ConfigurationInfo[];\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './common-configurator.model';\nexport * from './configurator-product-scope';\nexport * from './product-configurator.config';\n// Imported for side effects (module augmentation)\nimport './augmented-core.model';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './common-configurator-occ.module';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './common-configurator-utils.service';\nexport * from './configurator-model-utils';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './utils/index';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\n * Public API Surface of common configuration\n */\nexport * from './common-configurator.module';\nexport * from './components/index';\nexport * from './core/model/index';\nexport * from './occ/index';\nexport * from './shared/index';\n\n/** AUGMENTABLE_TYPES_START */\nexport { ProductConfiguratorConfig } from './core/model/product-configurator.config';\n/** AUGMENTABLE_TYPES_END */\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1","i1.CommonConfiguratorUtilsService","i2","i3","i4","i5.ConfigureCartEntryComponent","i6","i2.CommonConfiguratorUtilsService","i4.ConfigureCartEntryComponent","i5","i2.ConfiguratorCartEntryBundleInfoService","i7.ConfigureCartEntryComponent"],"mappings":"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"}