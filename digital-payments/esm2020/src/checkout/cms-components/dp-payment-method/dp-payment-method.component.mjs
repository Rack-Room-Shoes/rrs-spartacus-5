/*
 * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>
 *
 * SPDX-License-Identifier: Apache-2.0
 */
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { CheckoutPaymentMethodComponent as CorePaymentMethodComponent, } from '@spartacus/checkout/base/components';
import { DP_CARD_REGISTRATION_STATUS } from '../../../utils/dp-constants';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/core";
import * as i2 from "@spartacus/checkout/base/core";
import * as i3 from "@angular/router";
import * as i4 from "@spartacus/cart/base/root";
import * as i5 from "@spartacus/checkout/base/components";
import * as i6 from "@angular/common";
import * as i7 from "./dp-payment-form/dp-payment-form.component";
import * as i8 from "@spartacus/storefront";
import * as i9 from "./dp-payment-callback/dp-payment-callback.component";
export class DpPaymentMethodComponent extends CorePaymentMethodComponent {
    // TODO:#checkout - handle breaking changes
    constructor(userPaymentService, checkoutDeliveryAddressFacade, checkoutPaymentFacade, activatedRoute, translationService, activeCartFacade, checkoutStepService, globalMessageService) {
        super(userPaymentService, checkoutDeliveryAddressFacade, checkoutPaymentFacade, activatedRoute, translationService, activeCartFacade, checkoutStepService, globalMessageService);
        this.userPaymentService = userPaymentService;
        this.checkoutDeliveryAddressFacade = checkoutDeliveryAddressFacade;
        this.checkoutPaymentFacade = checkoutPaymentFacade;
        this.activatedRoute = activatedRoute;
        this.translationService = translationService;
        this.activeCartFacade = activeCartFacade;
        this.checkoutStepService = checkoutStepService;
        this.globalMessageService = globalMessageService;
        this.showCallbackScreen = false;
        this.showCallbackScreen = this.isDpCallback();
    }
    isDpCallback() {
        const queryParams = this.activatedRoute.snapshot.queryParamMap.get(DP_CARD_REGISTRATION_STATUS);
        return !!queryParams;
    }
    hideCallbackScreen() {
        this.showCallbackScreen = false;
    }
    paymentDetailsAdded(paymentDetails) {
        this.savePaymentMethod(paymentDetails);
        this.next();
    }
}
DpPaymentMethodComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: DpPaymentMethodComponent, deps: [{ token: i1.UserPaymentService }, { token: i2.CheckoutDeliveryAddressService }, { token: i2.CheckoutPaymentService }, { token: i3.ActivatedRoute }, { token: i1.TranslationService }, { token: i4.ActiveCartFacade }, { token: i5.CheckoutStepService }, { token: i1.GlobalMessageService }], target: i0.ɵɵFactoryTarget.Component });
DpPaymentMethodComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.3", type: DpPaymentMethodComponent, selector: "cx-payment-method", usesInheritance: true, ngImport: i0, template: "<!-- Copied from core module except #newPaymentForm -->\n<ng-container *ngIf=\"cards$ | async as cards\">\n  <h3 class=\"cx-checkout-title d-none d-lg-block d-xl-block\">\n    {{ 'paymentForm.payment' | cxTranslate }}\n  </h3>\n  <ng-container *ngIf=\"!showCallbackScreen; else loadingPaymentDetails\">\n    <ng-container *ngIf=\"!(isUpdating$ | async); else loading\">\n      <div\n        role=\"status\"\n        [attr.aria-label]=\"'common.loaded' | cxTranslate\"\n      ></div>\n      <ng-container\n        *ngIf=\"\n          cards?.length && !newPaymentFormManuallyOpened;\n          else newPaymentForm\n        \"\n      >\n        <p class=\"cx-checkout-text\">\n          {{ 'paymentForm.choosePaymentMethod' | cxTranslate }}\n        </p>\n        <div class=\"cx-checkout-btns row\">\n          <div class=\"col-md-12 col-lg-6\">\n            <button\n              class=\"btn btn-block btn-action\"\n              (click)=\"showNewPaymentForm()\"\n            >\n              {{ 'paymentForm.addNewPayment' | cxTranslate }}\n            </button>\n          </div>\n        </div>\n\n        <div class=\"cx-checkout-body row\">\n          <div\n            class=\"cx-payment-card col-md-12 col-lg-6\"\n            *ngFor=\"let card of cards; let i = index\"\n          >\n            <div class=\"cx-payment-card-inner\">\n              <cx-card\n                [border]=\"true\"\n                [fitToContainer]=\"true\"\n                [content]=\"card.content\"\n                (sendCard)=\"selectPaymentMethod(card.paymentMethod)\"\n              ></cx-card>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row cx-checkout-btns\">\n          <div class=\"col-md-12 col-lg-6\">\n            <button class=\"btn btn-block btn-action\" (click)=\"back()\">\n              {{ backBtnText | cxTranslate }}\n            </button>\n          </div>\n          <div class=\"col-md-12 col-lg-6\">\n            <button\n              class=\"btn btn-block btn-primary\"\n              [disabled]=\"!(selectedMethod$ | async)?.id\"\n              (click)=\"next()\"\n            >\n              {{ 'common.continue' | cxTranslate }}\n            </button>\n          </div>\n        </div>\n      </ng-container>\n    </ng-container>\n\n    <ng-template #newPaymentForm>\n      <cx-dp-payment-form\n        (setPaymentDetails)=\"setPaymentDetails($event)\"\n        (closeForm)=\"hideNewPaymentForm()\"\n      ></cx-dp-payment-form>\n    </ng-template>\n  </ng-container>\n\n  <ng-template #loading>\n    <div class=\"cx-spinner\"><cx-spinner></cx-spinner></div>\n  </ng-template>\n\n  <ng-template #loadingPaymentDetails>\n    <cx-dp-payment-callback\n      (paymentDetailsAdded)=\"paymentDetailsAdded($event)\"\n      (closeCallback)=\"hideCallbackScreen()\"\n    ></cx-dp-payment-callback>\n  </ng-template>\n</ng-container>\n", dependencies: [{ kind: "directive", type: i6.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i6.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i7.DpPaymentFormComponent, selector: "cx-dp-payment-form", outputs: ["closeForm"] }, { kind: "component", type: i8.CardComponent, selector: "cx-card", inputs: ["border", "editMode", "isDefault", "content", "fitToContainer", "truncateText", "charactersLimit", "index"], outputs: ["deleteCard", "setDefaultCard", "sendCard", "editCard", "cancelCard"] }, { kind: "component", type: i8.SpinnerComponent, selector: "cx-spinner" }, { kind: "component", type: i9.DpPaymentCallbackComponent, selector: "cx-dp-payment-callback", outputs: ["closeCallback", "paymentDetailsAdded"] }, { kind: "pipe", type: i6.AsyncPipe, name: "async" }, { kind: "pipe", type: i1.TranslatePipe, name: "cxTranslate" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.3", ngImport: i0, type: DpPaymentMethodComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cx-payment-method', changeDetection: ChangeDetectionStrategy.OnPush, template: "<!-- Copied from core module except #newPaymentForm -->\n<ng-container *ngIf=\"cards$ | async as cards\">\n  <h3 class=\"cx-checkout-title d-none d-lg-block d-xl-block\">\n    {{ 'paymentForm.payment' | cxTranslate }}\n  </h3>\n  <ng-container *ngIf=\"!showCallbackScreen; else loadingPaymentDetails\">\n    <ng-container *ngIf=\"!(isUpdating$ | async); else loading\">\n      <div\n        role=\"status\"\n        [attr.aria-label]=\"'common.loaded' | cxTranslate\"\n      ></div>\n      <ng-container\n        *ngIf=\"\n          cards?.length && !newPaymentFormManuallyOpened;\n          else newPaymentForm\n        \"\n      >\n        <p class=\"cx-checkout-text\">\n          {{ 'paymentForm.choosePaymentMethod' | cxTranslate }}\n        </p>\n        <div class=\"cx-checkout-btns row\">\n          <div class=\"col-md-12 col-lg-6\">\n            <button\n              class=\"btn btn-block btn-action\"\n              (click)=\"showNewPaymentForm()\"\n            >\n              {{ 'paymentForm.addNewPayment' | cxTranslate }}\n            </button>\n          </div>\n        </div>\n\n        <div class=\"cx-checkout-body row\">\n          <div\n            class=\"cx-payment-card col-md-12 col-lg-6\"\n            *ngFor=\"let card of cards; let i = index\"\n          >\n            <div class=\"cx-payment-card-inner\">\n              <cx-card\n                [border]=\"true\"\n                [fitToContainer]=\"true\"\n                [content]=\"card.content\"\n                (sendCard)=\"selectPaymentMethod(card.paymentMethod)\"\n              ></cx-card>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row cx-checkout-btns\">\n          <div class=\"col-md-12 col-lg-6\">\n            <button class=\"btn btn-block btn-action\" (click)=\"back()\">\n              {{ backBtnText | cxTranslate }}\n            </button>\n          </div>\n          <div class=\"col-md-12 col-lg-6\">\n            <button\n              class=\"btn btn-block btn-primary\"\n              [disabled]=\"!(selectedMethod$ | async)?.id\"\n              (click)=\"next()\"\n            >\n              {{ 'common.continue' | cxTranslate }}\n            </button>\n          </div>\n        </div>\n      </ng-container>\n    </ng-container>\n\n    <ng-template #newPaymentForm>\n      <cx-dp-payment-form\n        (setPaymentDetails)=\"setPaymentDetails($event)\"\n        (closeForm)=\"hideNewPaymentForm()\"\n      ></cx-dp-payment-form>\n    </ng-template>\n  </ng-container>\n\n  <ng-template #loading>\n    <div class=\"cx-spinner\"><cx-spinner></cx-spinner></div>\n  </ng-template>\n\n  <ng-template #loadingPaymentDetails>\n    <cx-dp-payment-callback\n      (paymentDetailsAdded)=\"paymentDetailsAdded($event)\"\n      (closeCallback)=\"hideCallbackScreen()\"\n    ></cx-dp-payment-callback>\n  </ng-template>\n</ng-container>\n" }]
        }], ctorParameters: function () { return [{ type: i1.UserPaymentService }, { type: i2.CheckoutDeliveryAddressService }, { type: i2.CheckoutPaymentService }, { type: i3.ActivatedRoute }, { type: i1.TranslationService }, { type: i4.ActiveCartFacade }, { type: i5.CheckoutStepService }, { type: i1.GlobalMessageService }]; } });
//# sourceMappingURL=data:application/json;base64,