{"version":3,"file":"spartacus-digital-payments.mjs","sources":["../../../integration-libs/digital-payments/src/checkout/adapters/config/occ-digital-payments-endpoint.config.ts","../../../integration-libs/digital-payments/src/checkout/adapters/converters.ts","../../../integration-libs/digital-payments/src/checkout/adapters/digital-payments.adapter.ts","../../../integration-libs/digital-payments/src/checkout/adapters/occ-digital-payment-details.normalizer.ts","../../../integration-libs/digital-payments/src/checkout/adapters/occ-digital-payment-request.normalizer.ts","../../../integration-libs/digital-payments/src/utils/dp-constants.ts","../../../integration-libs/digital-payments/src/checkout/adapters/occ-digital-payments.adapter.ts","../../../integration-libs/digital-payments/src/checkout/facade/dp-checkout-payment.service.ts","../../../integration-libs/digital-payments/src/checkout/facade/index.ts","../../../integration-libs/digital-payments/src/checkout/facade/dp-local-storage.service.ts","../../../integration-libs/digital-payments/src/checkout/cms-components/dp-payment-method/dp-payment-callback/dp-payment-callback.component.ts","../../../integration-libs/digital-payments/src/checkout/cms-components/dp-payment-method/dp-payment-callback/dp-payment-callback.component.html","../../../integration-libs/digital-payments/src/checkout/cms-components/dp-payment-method/dp-payment-callback/dp-payment-callback.module.ts","../../../integration-libs/digital-payments/src/checkout/cms-components/dp-payment-method/dp-payment-form/dp-payment-form.component.ts","../../../integration-libs/digital-payments/src/checkout/cms-components/dp-payment-method/dp-payment-form/dp-payment-form.component.html","../../../integration-libs/digital-payments/src/checkout/cms-components/dp-payment-method/dp-payment-form/dp-payment-form.module.ts","../../../integration-libs/digital-payments/src/checkout/cms-components/dp-payment-method/dp-payment-method.component.ts","../../../integration-libs/digital-payments/src/checkout/cms-components/dp-payment-method/dp-payment-method.component.html","../../../integration-libs/digital-payments/src/checkout/cms-components/dp-payment-method/dp-payment-method.module.ts","../../../integration-libs/digital-payments/src/checkout/dp-checkout.module.ts","../../../integration-libs/digital-payments/src/checkout/models/dp-checkout.model.ts","../../../integration-libs/digital-payments/src/checkout/index.ts","../../../integration-libs/digital-payments/src/digital-payments.module.ts","../../../integration-libs/digital-payments/public_api.ts","../../../integration-libs/digital-payments/spartacus-digital-payments.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { OccConfig } from '@spartacus/core';\nimport { DigitalPaymentsOccEndpoints } from './index';\n\nconst occDigitalPaymentsEndpoints: DigitalPaymentsOccEndpoints = {\n  paymentRequest:\n    'users/${userId}/carts/${cartId}/payment/digitalPayments/request',\n  paymentDetails:\n    'users/${userId}/carts/${cartId}/payment/digitalPayments/response',\n};\nexport const occDigitalPaymentsConfig: OccConfig = {\n  backend: {\n    occ: {\n      endpoints: {\n        ...occDigitalPaymentsEndpoints,\n      },\n    },\n  },\n};\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { PaymentDetails } from '@spartacus/cart/base/root';\nimport { Converter } from '@spartacus/core';\nimport { DpPaymentRequest } from '../models';\n\nexport const DP_DETAILS_NORMALIZER = new InjectionToken<\n  Converter<any, PaymentDetails>\n>('DpDetailsNormalizer');\n\nexport const DP_REQUEST_NORMALIZER = new InjectionToken<\n  Converter<any, DpPaymentRequest>\n>('DpRequestNormalizer');\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { PaymentDetails } from '@spartacus/cart/base/root';\nimport { Observable } from 'rxjs';\nimport { DpPaymentRequest } from '../models';\n\nexport abstract class DigitalPaymentsAdapter {\n  abstract createPaymentRequest(\n    userId?: string,\n    cartId?: string\n  ): Observable<DpPaymentRequest>;\n  abstract createPaymentDetails(\n    sessionId: string,\n    signature: string,\n    userId?: string,\n    cartId?: string\n  ): Observable<PaymentDetails>;\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { PaymentDetails } from '@spartacus/cart/base/root';\nimport { Converter, Occ } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OccDpDetailsNormalizer\n  implements Converter<Occ.PaymentDetails, PaymentDetails>\n{\n  convert(source: Occ.PaymentDetails, target: PaymentDetails): PaymentDetails {\n    if (target === undefined) {\n      target = { ...(source as any) };\n    }\n    return target;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { Converter } from '@spartacus/core';\nimport { DpPaymentRequest } from '../models';\nimport { OccDpPaymentRequest } from './occ.models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OccDpRequestNormalizer\n  implements Converter<OccDpPaymentRequest, DpPaymentRequest>\n{\n  convert(\n    source: OccDpPaymentRequest,\n    target: DpPaymentRequest\n  ): DpPaymentRequest {\n    if (target === undefined) {\n      target = { ...(source as any) };\n    }\n    target.url = source.postUrl;\n    target.sessionId = source?.parameters?.entry?.find(\n      (it: any) => it.key === 'session_id'\n    )?.value;\n    target.signature = source?.parameters?.entry?.find(\n      (it: any) => it.key === 'signature'\n    )?.value;\n    return target;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport const CURRENT_CART = 'current';\nexport const DP_CARD_REGISTRATION_STATUS = 'x-card-registration-status';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { PaymentDetails } from '@spartacus/cart/base/root';\nimport {\n  ConverterService,\n  HttpParamsURIEncoder,\n  Occ,\n  OccEndpointsService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CURRENT_CART } from '../../utils/dp-constants';\nimport { DpPaymentRequest } from '../models/dp-checkout.model';\nimport { DP_DETAILS_NORMALIZER, DP_REQUEST_NORMALIZER } from './converters';\nimport { DigitalPaymentsAdapter } from './digital-payments.adapter';\nimport { OccDpPaymentRequest } from './occ.models';\n\n@Injectable()\nexport class OccDigitalPaymentsAdapter implements DigitalPaymentsAdapter {\n  private readonly paramEncoder = new HttpParamsURIEncoder();\n\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  createPaymentRequest(\n    userId: string,\n    cartId = CURRENT_CART\n  ): Observable<DpPaymentRequest> {\n    const url = this.occEndpoints.buildUrl('paymentRequest', {\n      urlParams: { userId, cartId },\n    });\n    return this.http\n      .post<OccDpPaymentRequest>(url, null)\n      .pipe(this.converter.pipeable(DP_REQUEST_NORMALIZER));\n  }\n\n  createPaymentDetails(\n    sessionId: string,\n    signature: string,\n    userId: string,\n    cartId = CURRENT_CART\n  ): Observable<PaymentDetails> {\n    let params = new HttpParams({ encoder: this.paramEncoder });\n    params = params.append('sid', sessionId);\n    params = params.append('sign', signature);\n    const url = this.occEndpoints.buildUrl('paymentDetails', {\n      urlParams: { userId, cartId },\n    });\n    return this.http\n      .post<Occ.PaymentDetails>(url, null, { params: params })\n      .pipe(this.converter.pipeable(DP_DETAILS_NORMALIZER));\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Injectable } from '@angular/core';\nimport { PaymentDetails } from '@spartacus/cart/base/root';\nimport {\n  Command,\n  CommandService,\n  CommandStrategy,\n  Query,\n  QueryService,\n  UserIdService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { DigitalPaymentsAdapter } from '../adapters/digital-payments.adapter';\nimport { DpPaymentRequest } from '../models/dp-checkout.model';\n@Injectable({\n  providedIn: 'root',\n})\nexport class DpCheckoutPaymentService {\n  constructor(\n    protected dpAdapter: DigitalPaymentsAdapter,\n    protected command: CommandService,\n    protected query: QueryService,\n    protected userIdService: UserIdService\n  ) {}\n\n  protected RequestUrlQuery: Query<DpPaymentRequest> = this.query.create(() =>\n    this.userIdService\n      .takeUserId()\n      .pipe(switchMap((userId) => this.dpAdapter.createPaymentRequest(userId)))\n  );\n\n  getCardRegistrationDetails(): Observable<DpPaymentRequest | undefined> {\n    return this.RequestUrlQuery.get();\n  }\n\n  protected createPaymentDetailsCommand: Command<\n    {\n      sessionId: string;\n      signature: string;\n    },\n    PaymentDetails\n  > = this.command.create(\n    (payload) =>\n      this.userIdService\n        .takeUserId()\n        .pipe(\n          switchMap((userId) =>\n            this.dpAdapter.createPaymentDetails(\n              payload.sessionId,\n              payload.signature,\n              userId\n            )\n          )\n        ),\n    {\n      strategy: CommandStrategy.Queue,\n    }\n  );\n\n  createPaymentDetails(\n    sessionId: string,\n    signature: string\n  ): Observable<PaymentDetails> {\n    return this.createPaymentDetailsCommand.execute({ sessionId, signature });\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './dp-checkout-payment.service';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { of, Subscription } from 'rxjs';\nimport { DpPaymentRequest } from './../models/dp-checkout.model';\nimport { StatePersistenceService } from '@spartacus/core';\nimport { Injectable, OnDestroy } from '@angular/core';\n\nconst KEY = 'digital-payment.checkout.request';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DpLocalStorageService implements OnDestroy {\n  constructor(protected statePersistenceService: StatePersistenceService) {}\n  protected subscription = new Subscription();\n\n  syncCardRegistrationState(request: DpPaymentRequest): void {\n    this.subscription.add(\n      this.statePersistenceService.syncWithStorage<\n        DpPaymentRequest | undefined\n      >({\n        key: KEY,\n        state$: of(request),\n      })\n    );\n  }\n\n  readCardRegistrationState(): DpPaymentRequest {\n    const paymentRequest = this.statePersistenceService.readStateFromStorage({\n      key: KEY,\n    }) as DpPaymentRequest;\n\n    this.clearDpStorage();\n    return paymentRequest;\n  }\n\n  protected clearDpStorage() {\n    this.statePersistenceService.syncWithStorage({\n      key: KEY,\n      state$: of({}),\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { DpLocalStorageService } from './../../../facade/dp-local-storage.service';\nimport { DP_CARD_REGISTRATION_STATUS } from '../../../../utils/dp-constants';\nimport { ActivatedRoute } from '@angular/router';\nimport { GlobalMessageService, GlobalMessageType } from '@spartacus/core';\nimport { DpCheckoutPaymentService } from '../../../facade';\nimport { Component, OnInit, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'cx-dp-payment-callback',\n  templateUrl: './dp-payment-callback.component.html',\n})\nexport class DpPaymentCallbackComponent implements OnInit {\n  @Output()\n  closeCallback = new EventEmitter<any>();\n  @Output()\n  paymentDetailsAdded = new EventEmitter<any>();\n\n  constructor(\n    protected dpPaymentService: DpCheckoutPaymentService,\n    protected dpStorageService: DpLocalStorageService,\n    protected globalMsgService: GlobalMessageService,\n    protected route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    const dpResponse = this.route.snapshot.queryParamMap.get(\n      DP_CARD_REGISTRATION_STATUS\n    );\n    if (dpResponse?.toLowerCase() === 'successful') {\n      this.fetchPaymentDetails();\n    } else {\n      this.globalMsgService.add(\n        { key: 'dpPaymentForm.cancelledOrFailed' },\n        GlobalMessageType.MSG_TYPE_WARNING\n      );\n      this.closeCallback.emit();\n    }\n  }\n\n  private fetchPaymentDetails() {\n    const paymentRequest = this.dpStorageService.readCardRegistrationState();\n\n    if (paymentRequest?.sessionId && paymentRequest?.signature) {\n      this.dpPaymentService\n        .createPaymentDetails(\n          paymentRequest.sessionId,\n          paymentRequest.signature\n        )\n        .subscribe((details) => {\n          if (details?.id) {\n            this.paymentDetailsAdded.emit(details);\n          } else if (details) {\n            this.globalMsgService.add(\n              { key: 'dpPaymentForm.error.paymentFetch' },\n              GlobalMessageType.MSG_TYPE_ERROR\n            );\n            this.closeCallback.emit();\n          }\n        });\n    } else {\n      this.globalMsgService.add(\n        { key: 'dpPaymentForm.error.unknown' },\n        GlobalMessageType.MSG_TYPE_ERROR\n      );\n      this.closeCallback.emit();\n    }\n  }\n}\n","<div class=\"text-center\">{{ 'dpPaymentForm.callback' | cxTranslate }}</div>\n<div class=\"cx-spinner\"><cx-spinner></cx-spinner></div>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { I18nModule } from '@spartacus/core';\nimport { SpinnerModule } from '@spartacus/storefront';\nimport { DpPaymentCallbackComponent } from './dp-payment-callback.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule, SpinnerModule, I18nModule],\n  declarations: [DpPaymentCallbackComponent],\n  exports: [DpPaymentCallbackComponent],\n})\nexport class DpPaymentCallbackModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { DpLocalStorageService } from '../../../facade/dp-local-storage.service';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  WindowRef,\n} from '@spartacus/core';\nimport { DpCheckoutPaymentService } from '../../../facade';\nimport { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'cx-dp-payment-form',\n  templateUrl: './dp-payment-form.component.html',\n})\nexport class DpPaymentFormComponent implements OnInit {\n  @Output()\n  closeForm = new EventEmitter<any>();\n\n  constructor(\n    private dpPaymentService: DpCheckoutPaymentService,\n    private dpStorageService: DpLocalStorageService,\n    private globalMsgService: GlobalMessageService,\n    private winRef: WindowRef\n  ) {}\n\n  ngOnInit(): void {\n    this.dpPaymentService.getCardRegistrationDetails().subscribe((request) => {\n      if (request?.url) {\n        this.dpStorageService.syncCardRegistrationState(request);\n        this.redirect(request.url);\n      } else if (request) {\n        this.globalMsgService.add(\n          { key: 'dpPaymentForm.error.redirect' },\n          GlobalMessageType.MSG_TYPE_ERROR\n        );\n        this.closeForm.emit();\n      }\n    });\n  }\n\n  redirect(url: string) {\n    const window = this.winRef.nativeWindow;\n\n    if (window?.location) {\n      window.location.href = url;\n    }\n  }\n}\n","<div class=\"text-center\">{{ 'dpPaymentForm.redirect' | cxTranslate }}</div>\n<div class=\"cx-spinner\"><cx-spinner></cx-spinner></div>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { SpinnerModule } from '@spartacus/storefront';\nimport { DpPaymentFormComponent } from './dp-payment-form.component';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule } from '@spartacus/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    I18nModule,\n    SpinnerModule,\n  ],\n\n  declarations: [DpPaymentFormComponent],\n  exports: [DpPaymentFormComponent],\n})\nexport class DpPaymentFormModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ActiveCartFacade, PaymentDetails } from '@spartacus/cart/base/root';\nimport {\n  CheckoutPaymentMethodComponent as CorePaymentMethodComponent,\n  CheckoutStepService,\n} from '@spartacus/checkout/base/components';\nimport {\n  CheckoutDeliveryAddressService,\n  CheckoutPaymentService,\n} from '@spartacus/checkout/base/core';\nimport {\n  GlobalMessageService,\n  TranslationService,\n  UserPaymentService,\n} from '@spartacus/core';\nimport { DP_CARD_REGISTRATION_STATUS } from '../../../utils/dp-constants';\n\n@Component({\n  selector: 'cx-payment-method',\n  templateUrl: './dp-payment-method.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DpPaymentMethodComponent extends CorePaymentMethodComponent {\n  showCallbackScreen = false;\n\n  isDpCallback(): boolean {\n    const queryParams = this.activatedRoute.snapshot.queryParamMap.get(\n      DP_CARD_REGISTRATION_STATUS\n    );\n\n    return !!queryParams;\n  }\n\n  hideCallbackScreen(): void {\n    this.showCallbackScreen = false;\n  }\n\n  paymentDetailsAdded(paymentDetails: PaymentDetails) {\n    this.savePaymentMethod(paymentDetails);\n    this.next();\n  }\n\n  // TODO:#checkout - handle breaking changes\n  constructor(\n    protected userPaymentService: UserPaymentService,\n    protected checkoutDeliveryAddressFacade: CheckoutDeliveryAddressService,\n    protected checkoutPaymentFacade: CheckoutPaymentService,\n    protected activatedRoute: ActivatedRoute,\n    protected translationService: TranslationService,\n    protected activeCartFacade: ActiveCartFacade,\n    protected checkoutStepService: CheckoutStepService,\n    protected globalMessageService: GlobalMessageService\n  ) {\n    super(\n      userPaymentService,\n      checkoutDeliveryAddressFacade,\n      checkoutPaymentFacade,\n      activatedRoute,\n      translationService,\n      activeCartFacade,\n      checkoutStepService,\n      globalMessageService\n    );\n\n    this.showCallbackScreen = this.isDpCallback();\n  }\n}\n","<!-- Copied from core module except #newPaymentForm -->\n<ng-container *ngIf=\"cards$ | async as cards\">\n  <h3 class=\"cx-checkout-title d-none d-lg-block d-xl-block\">\n    {{ 'paymentForm.payment' | cxTranslate }}\n  </h3>\n  <ng-container *ngIf=\"!showCallbackScreen; else loadingPaymentDetails\">\n    <ng-container *ngIf=\"!(isUpdating$ | async); else loading\">\n      <div\n        role=\"status\"\n        [attr.aria-label]=\"'common.loaded' | cxTranslate\"\n      ></div>\n      <ng-container\n        *ngIf=\"\n          cards?.length && !newPaymentFormManuallyOpened;\n          else newPaymentForm\n        \"\n      >\n        <p class=\"cx-checkout-text\">\n          {{ 'paymentForm.choosePaymentMethod' | cxTranslate }}\n        </p>\n        <div class=\"cx-checkout-btns row\">\n          <div class=\"col-md-12 col-lg-6\">\n            <button\n              class=\"btn btn-block btn-action\"\n              (click)=\"showNewPaymentForm()\"\n            >\n              {{ 'paymentForm.addNewPayment' | cxTranslate }}\n            </button>\n          </div>\n        </div>\n\n        <div class=\"cx-checkout-body row\">\n          <div\n            class=\"cx-payment-card col-md-12 col-lg-6\"\n            *ngFor=\"let card of cards; let i = index\"\n          >\n            <div class=\"cx-payment-card-inner\">\n              <cx-card\n                [border]=\"true\"\n                [fitToContainer]=\"true\"\n                [content]=\"card.content\"\n                (sendCard)=\"selectPaymentMethod(card.paymentMethod)\"\n              ></cx-card>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row cx-checkout-btns\">\n          <div class=\"col-md-12 col-lg-6\">\n            <button class=\"btn btn-block btn-action\" (click)=\"back()\">\n              {{ backBtnText | cxTranslate }}\n            </button>\n          </div>\n          <div class=\"col-md-12 col-lg-6\">\n            <button\n              class=\"btn btn-block btn-primary\"\n              [disabled]=\"!(selectedMethod$ | async)?.id\"\n              (click)=\"next()\"\n            >\n              {{ 'common.continue' | cxTranslate }}\n            </button>\n          </div>\n        </div>\n      </ng-container>\n    </ng-container>\n\n    <ng-template #newPaymentForm>\n      <cx-dp-payment-form\n        (setPaymentDetails)=\"setPaymentDetails($event)\"\n        (closeForm)=\"hideNewPaymentForm()\"\n      ></cx-dp-payment-form>\n    </ng-template>\n  </ng-container>\n\n  <ng-template #loading>\n    <div class=\"cx-spinner\"><cx-spinner></cx-spinner></div>\n  </ng-template>\n\n  <ng-template #loadingPaymentDetails>\n    <cx-dp-payment-callback\n      (paymentDetailsAdded)=\"paymentDetailsAdded($event)\"\n      (closeCallback)=\"hideCallbackScreen()\"\n    ></cx-dp-payment-callback>\n  </ng-template>\n</ng-container>\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CheckoutPaymentMethodModule as CorePaymentMethodModule } from '@spartacus/checkout/base/components';\nimport { ConfigModule, I18nModule } from '@spartacus/core';\nimport { CardModule, SpinnerModule } from '@spartacus/storefront';\nimport { DpPaymentCallbackModule } from './dp-payment-callback/dp-payment-callback.module';\nimport { DpPaymentFormModule } from './dp-payment-form/dp-payment-form.module';\nimport { DpPaymentMethodComponent } from './dp-payment-method.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DpPaymentFormModule,\n    RouterModule,\n    CardModule,\n    SpinnerModule,\n    I18nModule,\n    DpPaymentCallbackModule,\n\n    ConfigModule.withConfig({\n      cmsComponents: {\n        CheckoutPaymentDetails: {\n          component: DpPaymentMethodComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [DpPaymentMethodComponent],\n  exports: [DpPaymentMethodComponent],\n})\nexport class DpPaymentMethodModule extends CorePaymentMethodModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { occDigitalPaymentsConfig } from './adapters/config/occ-digital-payments-endpoint.config';\nimport {\n  DP_DETAILS_NORMALIZER,\n  DP_REQUEST_NORMALIZER,\n} from './adapters/converters';\nimport { DigitalPaymentsAdapter } from './adapters/digital-payments.adapter';\nimport { OccDpDetailsNormalizer } from './adapters/occ-digital-payment-details.normalizer';\nimport { OccDpRequestNormalizer } from './adapters/occ-digital-payment-request.normalizer';\nimport { OccDigitalPaymentsAdapter } from './adapters/occ-digital-payments.adapter';\nimport { DpPaymentMethodModule } from './cms-components/dp-payment-method/dp-payment-method.module';\nimport { DpCheckoutPaymentService } from './facade/dp-checkout-payment.service';\n\n@NgModule({\n  imports: [DpPaymentMethodModule],\n  providers: [\n    {\n      provide: DigitalPaymentsAdapter,\n      useClass: OccDigitalPaymentsAdapter,\n    },\n    {\n      provide: DP_DETAILS_NORMALIZER,\n      useExisting: OccDpDetailsNormalizer,\n      multi: true,\n    },\n    {\n      provide: DP_REQUEST_NORMALIZER,\n      useExisting: OccDpRequestNormalizer,\n      multi: true,\n    },\n    DpCheckoutPaymentService,\n    provideDefaultConfig(occDigitalPaymentsConfig),\n  ],\n})\nexport class DpCheckoutModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport interface DpPaymentRequest {\n  url?: string;\n  sessionId?: string;\n  signature?: string;\n}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from './dp-checkout.module';\nexport * from './facade/index';\nexport * from './models/dp-checkout.model';\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { NgModule } from '@angular/core';\nimport { DpCheckoutModule } from './checkout/dp-checkout.module';\n\n@NgModule({\n  imports: [DpCheckoutModule],\n})\nexport class DigitalPaymentsModule {}\n","/*\n * SPDX-FileCopyrightText: 2022 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\n * Public API Surface for Digital-Payments\n */\nexport * from './src/checkout/index';\nexport * from './src/digital-payments.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1.DigitalPaymentsAdapter","i1","i1.DpCheckoutPaymentService","i2.DpLocalStorageService","i3","i5","i4","CorePaymentMethodComponent","i2","i7.DpPaymentFormComponent","i9.DpPaymentCallbackComponent","CorePaymentMethodModule"],"mappings":"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"}